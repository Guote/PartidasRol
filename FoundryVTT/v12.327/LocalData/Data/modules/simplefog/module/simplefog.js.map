{"version":3,"file":"simplefog.js","sources":["../../src/module/helpers.js","../../src/module/apps/SimplefogConfig.js","../../src/libs/hexagons.js","../../src/module/apps/BrushControls.js","../../src/module/ClockwiseSweep.js","../../src/module/layers/MaskLayer.js","../../src/module/layers/SimplefogLayer.js","../../src/module/settings.js","../../src/module/simplefog.js"],"sourcesContent":["// ======================================\n// PIXI UTILITY\n// =======================================\n\n/**\n * Converts web colors to base 16\n * @param n {Hex}               Web format color, f.x. #FF0000\n * @return {Hex}                Base 16 format color, f.x. 0xFF0000\n */\nexport function webToHex(n) {\n\treturn n.replace(\"#\", \"0x\");\n}\n\n/**\n * Converts a base16 color into a web color\n * @param n {Hex}               Base 16 Color, f.x. 0xFF0000\n * @return {Hex}                Web format color, f.x. #FF0000\n */\nexport function hexToWeb(n) {\n\treturn `${n}`.replace(\"0x\", \"#\");\n}\n\n/**\n * Converts a hexadecimal color to an integer percentage\n * @param n {Hex}               Base 16 Color, f.x. 0x000000\n * @return {Integer}             f.x 0\n */\nexport function hexToPercent(n) {\n\treturn Math.ceil((n / 0xffffff) * 100);\n}\n\n/**\n * Converts an integer percent (0-100) to a hexadecimal greyscale color\n * @param n {Number}            0-100 numeric input\n * @return {Hex}                Base 16 format color, f.x. 0xFFFFFF\n */\nexport function percentToHex(n) {\n\tlet c = Math.ceil(n * 2.55).toString(16);\n\tif (c.length === 1) c = `0${c}`;\n\tc = `0x${c}${c}${c}`;\n\treturn c;\n}\n\n/**\n * Converts an object containing coordinate pair arrays into a single array of points for PIXI\n * @param hex {Object}  An object containing a set of [x,y] pairs\n */\nexport function hexObjsToArr(hex) {\n\tconst a = [];\n\thex.forEach((point) => {\n\t\ta.push(point.x);\n\t\ta.push(point.y);\n\t});\n\t// Append first point to end of array to complete the shape\n\ta.push(hex[0].x);\n\ta.push(hex[0].y);\n\treturn a;\n}\n","import { hexToWeb, webToHex } from \"../helpers.js\";\n\nexport default class SimplefogConfig extends FormApplication {\n\tstatic get defaultOptions() {\n\t\treturn foundry.utils.mergeObject(super.defaultOptions, {\n\t\t\tclasses: [\"form\"],\n\t\t\tcloseOnSubmit: false,\n\t\t\tsubmitOnChange: true,\n\t\t\tsubmitOnClose: true,\n\t\t\tpopOut: true,\n\t\t\teditable: game.user.isGM,\n\t\t\twidth: 500,\n\t\t\ttemplate: \"modules/simplefog/templates/scene-config.html\",\n\t\t\tid: \"simplefog-scene-config\",\n\t\t\ttitle: game.i18n.localize(\"Simple Fog Options\"),\n\t\t});\n\t}\n\n\t/* -------------------------------------------- */\n\n\t/**\n\t * Obtain module metadata and merge it with game settings which track current module visibility\n\t * @return {Object}   The data provided to the template when rendering the form\n\t */\n\tgetData() {\n\t\t// Return data to the template\n\t\treturn {\n\t\t\tgmColorAlpha: Math.round(canvas.simplefog.getSetting(\"gmColorAlpha\") * 100),\n\t\t\tgmColorTint: hexToWeb(canvas.simplefog.getSetting(\"gmColorTint\")),\n\t\t\tplayerColorAlpha: Math.round(canvas.simplefog.getSetting(\"playerColorAlpha\") * 100),\n\t\t\tplayerColorTint: hexToWeb(canvas.simplefog.getSetting(\"playerColorTint\")),\n\t\t\ttransition: canvas.simplefog.getSetting(\"transition\"),\n\t\t\ttransitionSpeed: canvas.simplefog.getSetting(\"transitionSpeed\"),\n\t\t\tblurEnable: canvas.simplefog.getSetting(\"blurEnable\"),\n\t\t\tblurRadius: canvas.simplefog.getSetting(\"blurRadius\"),\n\t\t\tblurQuality: canvas.simplefog.getSetting(\"blurQuality\"),\n\t\t\tautoVisibility: canvas.simplefog.getSetting(\"autoVisibility\"),\n\t\t\tautoVisGM: canvas.simplefog.getSetting(\"autoVisGM\"),\n\t\t\tvThreshold: Math.round(canvas.simplefog.getSetting(\"vThreshold\") * 100),\n\t\t\tfogImageOverlayFilePath: canvas.simplefog.getSetting(\"fogImageOverlayFilePath\"),\n\t\t\tfogImageOverlayGMAlpha: Math.round(canvas.simplefog.getSetting(\"fogImageOverlayGMAlpha\") * 100),\n\t\t\tfogImageOverlayPlayerAlpha: Math.round(canvas.simplefog.getSetting(\"fogImageOverlayPlayerAlpha\") * 100),\n\t\t\tfogImageOverlayZIndex: canvas.simplefog.getSetting(\"fogImageOverlayZIndex\"),\n\t\t\tfogImageOverlayZIndexOptions: {\n\t\t\t\t4000: \"Color Tint Above Overlay Image\",\n\t\t\t\t6000: \"Overlay Image Above Color Tint\",\n\t\t\t},\n\t\t\tversionNotification: canvas.simplefog.getSetting(\"versionNotification\"),\n\t\t};\n\t}\n\n\t/* -------------------------------------------- */\n\t/*  Event Listeners and Handlers                */\n\t/* -------------------------------------------- */\n\n\t/**\n\t * This method is called upon form submission after form data is validated\n\t * @param event {Event}       The initial triggering submission event\n\t * @param formData {Object}   The object of validated form data with which to update the object\n\t * @private\n\t */\n\tasync _updateObject(event, formData) {\n\t\tObject.entries(formData).forEach(async ([key, val]) => {\n\t\t\t// If setting is an opacity slider, convert from 1-100 to 0-1\n\t\t\tif (\n\t\t\t\t[\n\t\t\t\t\t\"gmColorAlpha\",\n\t\t\t\t\t\"playerColorAlpha\",\n\t\t\t\t\t\"vThreshold\",\n\t\t\t\t\t\"fogImageOverlayGMAlpha\",\n\t\t\t\t\t\"fogImageOverlayPlayerAlpha\",\n\t\t\t\t].includes(key)\n\t\t\t) val /= 100;\n\t\t\t// If setting is a color value, convert webcolor to hex before saving\n\t\t\tif ([\"gmColorTint\", \"playerColorTint\"].includes(key)) val = webToHex(val);\n\t\t\t// Save settings to scene\n\t\t\tawait canvas.simplefog.setSetting(key, val);\n\t\t\t// If saveDefaults button clicked, also save to user's defaults\n\t\t\tif (event.submitter?.name === \"saveDefaults\") {\n\t\t\t\tcanvas.simplefog.setUserSetting(key, val);\n\t\t\t}\n\t\t});\n\n\t\t// If save button was clicked, close app\n\t\tif ([\"submit\", \"saveDefaults\"].includes(event.submitter?.name)) {\n\t\t\tthis.close();\n\t\t}\n\n\t\t// Update sight layer\n\t\tcanvas.perception.update({\n\t\t\trefreshLighting: true,\n\t\t\trefreshVision: true,\n\t\t\trefreshOcclusion: true\n\t\t});\n\t}\n}\n","/* eslint-disable */\n// Generated code -- CC0 -- No Rights Reserved -- http://www.redblobgames.com/grids/hexagons/\nexport class Point {\n\tconstructor(x, y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n}\nexport class Hex {\n\tconstructor(q, r, s) {\n\t\tthis.q = q;\n\t\tthis.r = r;\n\t\tthis.s = s;\n\t\tif (Math.round(q + r + s) !== 0) throw \"q + r + s must be 0\";\n\t}\n\tadd(b) {\n\t\treturn new Hex(this.q + b.q, this.r + b.r, this.s + b.s);\n\t}\n\tsubtract(b) {\n\t\treturn new Hex(this.q - b.q, this.r - b.r, this.s - b.s);\n\t}\n\tscale(k) {\n\t\treturn new Hex(this.q * k, this.r * k, this.s * k);\n\t}\n\trotateLeft() {\n\t\treturn new Hex(-this.s, -this.q, -this.r);\n\t}\n\trotateRight() {\n\t\treturn new Hex(-this.r, -this.s, -this.q);\n\t}\n\tstatic direction(direction) {\n\t\treturn Hex.directions[direction];\n\t}\n\tneighbor(direction) {\n\t\treturn this.add(Hex.direction(direction));\n\t}\n\tdiagonalNeighbor(direction) {\n\t\treturn this.add(Hex.diagonals[direction]);\n\t}\n\tlen() {\n\t\treturn (Math.abs(this.q) + Math.abs(this.r) + Math.abs(this.s)) / 2;\n\t}\n\tdistance(b) {\n\t\treturn this.subtract(b).len();\n\t}\n\tround() {\n\t\tvar qi = Math.round(this.q);\n\t\tvar ri = Math.round(this.r);\n\t\tvar si = Math.round(this.s);\n\t\tvar q_diff = Math.abs(qi - this.q);\n\t\tvar r_diff = Math.abs(ri - this.r);\n\t\tvar s_diff = Math.abs(si - this.s);\n\t\tif (q_diff > r_diff && q_diff > s_diff) {\n\t\t\tqi = -ri - si;\n\t\t} else if (r_diff > s_diff) {\n\t\t\tri = -qi - si;\n\t\t} else {\n\t\t\tsi = -qi - ri;\n\t\t}\n\t\treturn new Hex(qi, ri, si);\n\t}\n\tlerp(b, t) {\n\t\treturn new Hex(this.q * (1.0 - t) + b.q * t, this.r * (1.0 - t) + b.r * t, this.s * (1.0 - t) + b.s * t);\n\t}\n\tlinedraw(b) {\n\t\tvar N = this.distance(b);\n\t\tvar a_nudge = new Hex(this.q + 1e-6, this.r + 1e-6, this.s - 2e-6);\n\t\tvar b_nudge = new Hex(b.q + 1e-6, b.r + 1e-6, b.s - 2e-6);\n\t\tvar results = [];\n\t\tvar step = 1.0 / Math.max(N, 1);\n\t\tfor (var i = 0; i <= N; i++) {\n\t\t\tresults.push(a_nudge.lerp(b_nudge, step * i).round());\n\t\t}\n\t\treturn results;\n\t}\n}\nHex.directions = [\n\tnew Hex(1, 0, -1),\n\tnew Hex(1, -1, 0),\n\tnew Hex(0, -1, 1),\n\tnew Hex(-1, 0, 1),\n\tnew Hex(-1, 1, 0),\n\tnew Hex(0, 1, -1),\n];\nHex.diagonals = [\n\tnew Hex(2, -1, -1),\n\tnew Hex(1, -2, 1),\n\tnew Hex(-1, -1, 2),\n\tnew Hex(-2, 1, 1),\n\tnew Hex(-1, 2, -1),\n\tnew Hex(1, 1, -2),\n];\nexport class OffsetCoord {\n\tconstructor(col, row) {\n\t\tthis.col = col;\n\t\tthis.row = row;\n\t}\n\tstatic qoffsetFromCube(offset, h) {\n\t\tvar col = h.q;\n\t\tvar row = h.r + (h.q + offset * (h.q & 1)) / 2;\n\t\tif (offset !== OffsetCoord.EVEN && offset !== OffsetCoord.ODD) {\n\t\t\tthrow \"offset must be EVEN (+1) or ODD (-1)\";\n\t\t}\n\t\treturn new OffsetCoord(col, row);\n\t}\n\tstatic qoffsetToCube(offset, h) {\n\t\tvar q = h.col;\n\t\tvar r = h.row - (h.col + offset * (h.col & 1)) / 2;\n\t\tvar s = -q - r;\n\t\tif (offset !== OffsetCoord.EVEN && offset !== OffsetCoord.ODD) {\n\t\t\tthrow \"offset must be EVEN (+1) or ODD (-1)\";\n\t\t}\n\t\treturn new Hex(q, r, s);\n\t}\n\tstatic roffsetFromCube(offset, h) {\n\t\tvar col = h.q + (h.r + offset * (h.r & 1)) / 2;\n\t\tvar row = h.r;\n\t\tif (offset !== OffsetCoord.EVEN && offset !== OffsetCoord.ODD) {\n\t\t\tthrow \"offset must be EVEN (+1) or ODD (-1)\";\n\t\t}\n\t\treturn new OffsetCoord(col, row);\n\t}\n\tstatic roffsetToCube(offset, h) {\n\t\tvar q = h.col - (h.row + offset * (h.row & 1)) / 2;\n\t\tvar r = h.row;\n\t\tvar s = -q - r;\n\t\tif (offset !== OffsetCoord.EVEN && offset !== OffsetCoord.ODD) {\n\t\t\tthrow \"offset must be EVEN (+1) or ODD (-1)\";\n\t\t}\n\t\treturn new Hex(q, r, s);\n\t}\n}\nOffsetCoord.EVEN = 1;\nOffsetCoord.ODD = -1;\nexport class DoubledCoord {\n\tconstructor(col, row) {\n\t\tthis.col = col;\n\t\tthis.row = row;\n\t}\n\tstatic qdoubledFromCube(h) {\n\t\tvar col = h.q;\n\t\tvar row = 2 * h.r + h.q;\n\t\treturn new DoubledCoord(col, row);\n\t}\n\tqdoubledToCube() {\n\t\tvar q = this.col;\n\t\tvar r = (this.row - this.col) / 2;\n\t\tvar s = -q - r;\n\t\treturn new Hex(q, r, s);\n\t}\n\tstatic rdoubledFromCube(h) {\n\t\tvar col = 2 * h.q + h.r;\n\t\tvar row = h.r;\n\t\treturn new DoubledCoord(col, row);\n\t}\n\trdoubledToCube() {\n\t\tvar q = (this.col - this.row) / 2;\n\t\tvar r = this.row;\n\t\tvar s = -q - r;\n\t\treturn new Hex(q, r, s);\n\t}\n}\nexport class Orientation {\n\tconstructor(f0, f1, f2, f3, b0, b1, b2, b3, start_angle) {\n\t\tthis.f0 = f0;\n\t\tthis.f1 = f1;\n\t\tthis.f2 = f2;\n\t\tthis.f3 = f3;\n\t\tthis.b0 = b0;\n\t\tthis.b1 = b1;\n\t\tthis.b2 = b2;\n\t\tthis.b3 = b3;\n\t\tthis.start_angle = start_angle;\n\t}\n}\nexport class Layout {\n\tconstructor(orientation, size, origin) {\n\t\tthis.orientation = orientation;\n\t\tthis.size = size;\n\t\tthis.origin = origin;\n\t}\n\thexToPixel(h) {\n\t\tvar M = this.orientation;\n\t\tvar size = this.size;\n\t\tvar origin = this.origin;\n\t\tvar x = (M.f0 * h.q + M.f1 * h.r) * size.x;\n\t\tvar y = (M.f2 * h.q + M.f3 * h.r) * size.y;\n\t\treturn new Point(x + origin.x, y + origin.y);\n\t}\n\tpixelToHex(p) {\n\t\tvar M = this.orientation;\n\t\tvar size = this.size;\n\t\tvar origin = this.origin;\n\t\tvar pt = new Point((p.x - origin.x) / size.x, (p.y - origin.y) / size.y);\n\t\tvar q = M.b0 * pt.x + M.b1 * pt.y;\n\t\tvar r = M.b2 * pt.x + M.b3 * pt.y;\n\t\treturn new Hex(q, r, -q - r);\n\t}\n\thexCornerOffset(corner) {\n\t\tvar M = this.orientation;\n\t\tvar size = this.size;\n\t\tvar angle = (2.0 * Math.PI * (M.start_angle - corner)) / 6.0;\n\t\treturn new Point(size.x * Math.cos(angle), size.y * Math.sin(angle));\n\t}\n\tpolygonCorners(h) {\n\t\tvar corners = [];\n\t\tvar center = this.hexToPixel(h);\n\t\tfor (var i = 0; i < 6; i++) {\n\t\t\tvar offset = this.hexCornerOffset(i);\n\t\t\tcorners.push(new Point(center.x + offset.x, center.y + offset.y));\n\t\t}\n\t\treturn corners;\n\t}\n}\nLayout.pointy = new Orientation(\n\tMath.sqrt(3.0),\n\tMath.sqrt(3.0) / 2.0,\n\t0.0,\n\t3.0 / 2.0,\n\tMath.sqrt(3.0) / 3.0,\n\t-1.0 / 3.0,\n\t0.0,\n\t2.0 / 3.0,\n\t0.5\n);\nLayout.flat = new Orientation(\n\t3.0 / 2.0,\n\t0.0,\n\tMath.sqrt(3.0) / 2.0,\n\tMath.sqrt(3.0),\n\t2.0 / 3.0,\n\t0.0,\n\t-1.0 / 3.0,\n\tMath.sqrt(3.0) / 3.0,\n\t0.0\n);\n","import { hexToPercent, percentToHex } from \"../helpers.js\";\n\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\nexport class BrushControls extends HandlebarsApplicationMixin(ApplicationV2) {\n\tstatic DEFAULT_OPTIONS = {\n\t\tid: \"simplefog-filter-config\",\n\t\ttag: \"aside\",\n\t\tposition: {\n\t\t\twidth: 320,\n\t\t\theight: \"auto\"\n\t\t},\n\t\twindow: {\n\t\t\ttitle: \"Brush Controls\",\n\t\t\ticon: \"fas fa-cloud\",\n\t\t\tminimizable: false\n\t\t},\n\t\tactions: {\n\t\t\tbrushSize: BrushControls.brushSize,\n\t\t\tbrushOpacity: BrushControls.brushOpacity,\n\t\t\tbrushOpacityToggle: BrushControls.brushOpacityToggle\n\t\t},\n\t};\n\n\t/** @override */\n\tstatic PARTS = {\n\t\tlist: {\n\t\t\tid: \"list\",\n\t\t\ttemplate: \"modules/simplefog/templates/brush-controls.html\",\n\t\t}\n\t};\n\n\t/* -------------------------------------------- */\n\n\t/** @inheritDoc */\n\tasync _renderFrame(options) {\n\t\tconst frame = await super._renderFrame(options);\n\t\tthis.window.close.remove(); // Prevent closing\n\t\treturn frame;\n\t}\n\n\t/* -------------------------------------------- */\n\n\t/** @inheritDoc */\n\tasync close(options={}) {\n\t\tif ( !options.closeKey ) return super.close(options);\n\t\treturn this;\n\t}\n\n\t/* -------------------------------------------- */\n\n\t/** @inheritDoc */\n\t_onFirstRender(context, options) {\n\t\tsuper._onFirstRender(context, options);\n\t\tconst left = ui.nav?.element[0].getBoundingClientRect().left;\n\t\tconst top = ui.controls?.element[0].getBoundingClientRect().top;\n\t\toptions.position = {...options.position, left, top};\n\t\tcanvas.scene.apps[this.id] = this;\n\t}\n\n\t/* -------------------------------------------- */\n\n\t/** @inheritDoc */\n\t_onRender(context, options) {\n\t\tsuper._onRender(context, options);\n\t\tthis.element.querySelector(\"input[name='brushSize']\")\n\t\t\t?.addEventListener(\"change\", BrushControls.brushSize.bind(this));\n\t\tthis.element.querySelector(\"input[name='brushOpacity']\")\n\t\t\t.addEventListener(\"change\", BrushControls.brushOpacity.bind(this));\n\t}\n\n\t/* -------------------------------------------- */\n\n\t/** @override */\n\t_onClose(options) {\n\t\tsuper._onClose(options);\n\t\tdelete canvas.scene.apps[this.id];\n\t}\n\n\t/* -------------------------------------------- */\n\n\t/** @override */\n\tasync _prepareContext(_options) {\n\t\tconst displayContainer = canvas.simplefog.activeTool === \"brush\";\n\t\treturn {\n\t\t\tdisplayContainer,\n\t\t\tbrushSize: canvas.simplefog.getUserSetting(\"brushSize\"),\n\t\t\tbrushOpacity: hexToPercent(canvas.simplefog.getUserSetting(\"brushOpacity\")),\n\t\t};\n\t}\n\n\t/* -------------------------------------------- */\n\n\tstatic async brushSize(event, target) {\n\t\tevent?.preventDefault();\n\t\ttarget ??= event?.target.closest(\"[data-action]\") ?? this.element.querySelector(\"input[name='brushSize']\");\n\t\tconst value = Number(target.value);\n\t\tawait canvas.simplefog.setUserSetting(\"brushSize\", value);\n\t\ttarget.parentNode.querySelector(\".range-value\").innerText = `${value}px`;\n\t\tcanvas.simplefog.setPreviewTint();\n\t}\n\n\tstatic async brushOpacity(event, target) {\n\t\tevent?.preventDefault();\n\t\ttarget ??= event?.target.closest(\"[data-action]\") ?? this.element.querySelector(\"input[name='brushOpacity']\");\n\t\tconst value = Number(target.value);\n\t\tawait canvas.simplefog.setUserSetting(\"brushOpacity\", percentToHex(value));\n\t\ttarget.parentNode.querySelector(\".range-value\").innerText = `${value}%`;\n\t\tcanvas.simplefog.setPreviewTint();\n\t}\n\n\tstatic async brushOpacityToggle(event, target) {\n\t\tevent?.preventDefault();\n\t\tconst bc = canvas.simplefog.brushControls;\n\t\tconst slider = bc.element.querySelector(\"input[name=brushOpacity]\");\n\t\tslider.value = Number(event.target.dataset.value);\n\t\tBrushControls.brushOpacity.call(bc);\n\t}\n}\n","// CWSP which ignores open doors\n\nexport class CWSPNoDoors extends ClockwiseSweepPolygon {\n\t_testEdgeInclusion(edge, edgeTypes, bounds) {\n\t\tconst { type, boundaryShapes, useThreshold, wallDirectionMode, externalRadius } = this.config;\n\n\t\t// Only include edges of the appropriate type\n\t\tconst m = edgeTypes[edge.type];\n\t\tif ( !m ) return false;\n\t\tif ( m === 2 ) return true;\n\n\t\t// Test for inclusion in the overall bounding box\n\t\tif ( !bounds.lineSegmentIntersects(edge.a, edge.b, { inside: true }) ) return false;\n\n\t\t// Specific boundary shapes may impose additional requirements\n\t\tfor ( const shape of boundaryShapes ) {\n\t\t\tif ( shape._includeEdge && !shape._includeEdge(edge.a, edge.b) ) return false;\n\t\t}\n\n\t\t// Ignore edges which do not block this polygon type\n\t\tconst isOpenDoor = edge.type === \"wall\" && edge.object.isOpen;\n\t\tif ( (this.config.shiftKey || !isOpenDoor) && edge[type] === CONST.WALL_SENSE_TYPES.NONE ) return false;\n\n\t\t// Ignore edges which are collinear with the origin\n\t\tconst side = edge.orientPoint(this.origin);\n\t\tif ( !side ) return false;\n\n\t\t// Ignore one-directional walls which are facing away from the origin\n\t\tconst wdm = PointSourcePolygon.WALL_DIRECTION_MODES;\n\t\tif ( edge.direction && (wallDirectionMode !== wdm.BOTH) ) {\n\t\t\tif ( (wallDirectionMode === wdm.NORMAL) === (side === edge.direction) ) return false;\n\t\t}\n\n\t\t// Ignore threshold walls which do not satisfy their required proximity\n\t\tif ( useThreshold ) return !edge.applyThreshold(type, this.origin, externalRadius);\n\t\treturn true;\n\t}\n}\n","/* MaskLayer extends CanvasLayer\n *\n * Creates an interactive layer which has an alpha channel mask\n * that can be rendered to and history for syncing between players\n * and replaying the mask / undo etc.\n */\n\nexport default class MaskLayer extends InteractionLayer {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.lock = false;\n\t\tthis.historyBuffer = [];\n\t\tthis.pointer = 0;\n\t\tthis.gridLayout = {};\n\t\tthis.dragStart = { x: 0, y: 0 };\n\t\t// Not actually used, just to prevent foundry from complaining\n\t\tthis.history = [];\n\t\tthis.BRUSH_TYPES = {\n\t\t\tELLIPSE: 0,\n\t\t\tBOX: 1,\n\t\t\tROUNDED_RECT: 2,\n\t\t\tPOLYGON: 3,\n\t\t};\n\t\tthis.DEFAULTS = {\n\t\t\tvisible: false,\n\t\t\tblurEnable: true,\n\t\t\tblurQuality: 2,\n\t\t\tblurRadius: 5,\n\t\t\tgmColorAlpha: 0.6,\n\t\t\tgmColorTint: \"0x000000\",\n\t\t\tplayerColorAlpha: 1,\n\t\t\tplayerColorTint: \"0x000000\",\n\t\t\tfogImageOverlayFilePath: \"\",\n\t\t\tfogImageOverlayGMAlpha: 0.6,\n\t\t\tfogImageOverlayPlayerAlpha: 1,\n\t\t\tfogImageOverlayZIndex: 6000,\n\t\t\tlayerZindex: 220,\n\t\t};\n\t}\n\n\tstatic get layerOptions() {\n\t\treturn foundry.utils.mergeObject(super.layerOptions, {\n\t\t\tbaseClass: MaskLayer,\n\t\t\tzIndex: game.settings.get(\"simplefog\", \"zIndex\"),\n\t\t});\n\t}\n\n\t/* -------------------------------------------- */\n\t/*  Getters and setters for layer props         */\n\t/* -------------------------------------------- */\n\n\t// Tint & Alpha have special cases because they can differ between GM & Players\n\t// And alpha can be animated for transition effects\n\n\tgetColorAlpha() {\n\t\tlet alpha;\n\t\tif (game.user.isGM) alpha = this.getSetting(\"gmColorAlpha\");\n\t\telse alpha = this.getSetting(\"playerColorAlpha\");\n\t\tif (!alpha) {\n\t\t\tif (game.user.isGM) alpha = this.DEFAULTS.gmColorAlpha;\n\t\t\telse alpha = this.DEFAULTS.playerColorAlpha;\n\t\t}\n\t\treturn alpha;\n\t}\n\n\t/**\n\t * Sets the scene's alpha for the primary layer.\n\t * @param alpha {Number} 0-1 opacity representation\n\t * @param skip {Boolean} Optional override to skip using animated transition\n\t */\n\tasync setColorAlpha(alpha, skip = false) {\n\t\t// If skip is false, do not transition and just set alpha immediately\n\t\tif (skip || !this.getSetting(\"transition\")) {\n\t\t\tthis.fogColorLayer.alpha = alpha;\n\t\t}\n\t\t// Loop until transition is complete\n\t\telse {\n\t\t\tconst start = this.fogColorLayer.alpha;\n\t\t\tconst dist = start - alpha;\n\t\t\tconst fps = game.settings.get(\"core\", \"maxFPS\");\n\t\t\tconst speed = this.getSetting(\"transitionSpeed\");\n\t\t\tconst frame = 1000 / fps;\n\t\t\tconst rate = dist / ((fps * speed) / 1000);\n\t\t\tlet f = (fps * speed) / 1000;\n\t\t\twhile (f > 0) {\n\t\t\t\t// Delay 1 frame before updating again\n\t\t\t\t// eslint-disable-next-line no-promise-executor-return\n\t\t\t\tawait new Promise((resolve) => setTimeout(resolve, frame));\n\t\t\t\tthis.fogColorLayer.alpha -= rate;\n\t\t\t\tf -= 1;\n\t\t\t}\n\t\t\t// Reset target alpha in case loop overshot a bit\n\t\t\tthis.fogColorLayer.alpha = alpha;\n\t\t}\n\t}\n\n\tgetTint() {\n\t\tlet tint;\n\t\tif (game.user.isGM) tint = this.getSetting(\"gmColorTint\");\n\t\telse tint = this.getSetting(\"playerColorTint\");\n\t\tif (!tint) {\n\t\t\tif (game.user.isGM) tint = this.gmColorTintDefault;\n\t\t\telse tint = this.playerColorTintDefault;\n\t\t}\n\t\treturn tint;\n\t}\n\n\tsetColorTint(tint) {\n\t\tthis.fogColorLayer.tint = tint;\n\t}\n\n\tstatic getMaskTexture() {\n\t\tconst d = canvas.dimensions;\n\t\tlet res = 1.0;\n\t\tif (d.width * d.height > 16000 ** 2) res = 0.25;\n\t\telse if (d.width * d.height > 8000 ** 2) res = 0.5;\n\n\t\t// Create the mask elements\n\t\tconst tex = PIXI.RenderTexture.create({\n\t\t\twidth: canvas.dimensions.width,\n\t\t\theight: canvas.dimensions.height,\n\t\t\tresolution: res,\n\t\t});\n\t\treturn tex;\n\t}\n\n\t/* -------------------------------------------- */\n\t/*  Player Fog Image Overlay                    */\n\t/* -------------------------------------------- */\n\tgetFogImageOverlayTexture(fogImageOverlayFilePath) {\n\t\tif (fogImageOverlayFilePath) {\n\t\t\treturn getTexture(fogImageOverlayFilePath);\n\t\t}\n\t}\n\n\tsetFogImageOverlayTexture(fogImageOverlayFilePath) {\n\t\tif (fogImageOverlayFilePath) {\n\t\t\tconst texture = getTexture(fogImageOverlayFilePath);\n\t\t\tthis.fogImageOverlayLayer.texture = texture;\n\t\t} else {\n\t\t\tthis.fogImageOverlayLayer.texture = undefined;\n\t\t}\n\t}\n\n\tgetFogImageOverlayAlpha() {\n\t\tlet alpha;\n\t\tif (game.user.isGM) alpha = this.getSetting(\"fogImageOverlayGMAlpha\");\n\t\telse alpha = this.getSetting(\"fogImageOverlayPlayerAlpha\");\n\t\tif (!alpha) {\n\t\t\tif (game.user.isGM) alpha = this.DEFAULTS.fogImageOverlayGMAlpha;\n\t\t\telse alpha = this.DEFAULTS.fogImageOverlayAlpha;\n\t\t}\n\t\treturn alpha;\n\t}\n\n\tasync setFogImageOverlayAlpha(alpha, skip = false) {\n\t\tif (!skip && this.getSetting(\"transition\")) {\n\t\t\tconst start = this.fogImageOverlayLayer.alpha;\n\t\t\tconst dist = start - alpha;\n\t\t\tconst fps = game.settings.get(\"core\", \"maxFPS\");\n\t\t\tconst speed = this.getSetting(\"transitionSpeed\");\n\t\t\tconst frame = 1000 / fps;\n\t\t\tconst rate = dist / ((fps * speed) / 1000);\n\t\t\tlet f = (fps * speed) / 1000;\n\t\t\twhile (f > 0) {\n\t\t\t\t// Delay 1 frame before updating again\n\t\t\t\t// eslint-disable-next-line no-promise-executor-return\n\t\t\t\tawait new Promise((resolve) => setTimeout(resolve, frame));\n\t\t\t\tthis.fogImageOverlayLayer.alpha -= rate;\n\t\t\t\tf -= 1;\n\t\t\t}\n\t\t}\n\t\tthis.fogImageOverlayLayer.alpha = alpha;\n\t}\n\n\t/**\n\t * Gets and sets various layer wide properties\n\t * Some properties have different values depending on if user is a GM or player\n\t */\n\n\tgetSetting(name) {\n\t\treturn canvas.scene.getFlag(\"simplefog\", name)\n\t\t\t?? this.getUserSetting(name)\n\t\t\t?? this.DEFAULTS[name];\n\t}\n\n\tasync setSetting(name, value) {\n\t\treturn await canvas.scene.setFlag(\"simplefog\", name, value);\n\t}\n\n\tgetUserSetting(name) {\n\t\treturn game.user.getFlag(\"simplefog\", name) ?? this.DEFAULTS[name];\n\t}\n\n\tasync setUserSetting(name, value) {\n\t\treturn await game.user.setFlag(\"simplefog\", name, value);\n\t}\n\n\t/**\n\t * Renders the history stack to the mask\n\t * @param history {Array}       A collection of history events\n\t * @param start {Number}        The position in the history stack to begin rendering from\n\t * @param start {Number}        The position in the history stack to stop rendering\n\t */\n\trenderStack({\n\t\thistory = canvas.scene.getFlag(\"simplefog\", \"history\"),\n\t\tstart = this.pointer,\n\t\tstop = canvas.scene.getFlag(\"simplefog\", \"history.pointer\"),\n\t\tisInit = false\n\t}) {\n\t\thistory ||= { events: [], pointer: 0 };\n\t\t// If history is blank, do nothing\n\t\tif (history === undefined && !isInit) {\n\t\t\tthis.visible = game.settings.get(\"simplefog\", \"autoEnableSceneFog\");\n\t\t\treturn;\n\t\t}\n\t\t// If history is zero, reset scene fog\n\t\tif (history.events.length === 0) this.resetMask(false);\n\t\tif (start === undefined) start = 0;\n\t\tif (stop === undefined) stop = history.events.length;\n\t\t// If pointer preceeds the stop, reset and start from 0\n\t\tif (stop <= this.pointer) {\n\t\t\tthis.resetMask(false);\n\t\t\tstart = 0;\n\t\t}\n\n\t\t// Render all ops starting from pointer\n\t\tfor (let i = start; i < stop; i += 1) {\n\t\t\tfor (let j = 0; j < history.events[i].length; j += 1) {\n\t\t\t\tthis.renderBrush(history.events[i][j], false);\n\t\t\t}\n\t\t}\n\t\t// Update local pointer\n\t\tthis.pointer = stop;\n\t\t// Prevent calling update when no lights loaded\n\t\tif (!canvas.sight?.light?.los?.geometry) return;\n\t\t// Update sight layer\n\t\tcanvas.perception.update({\n\t\t\trefreshLighting: true,\n\t\t\trefreshVision: true,\n\t\t\trefreshOcclusion: true\n\t\t});\n\t}\n\n\t/**\n\t * Add buffered history stack to scene flag and clear buffer\n\t */\n\tasync commitHistory() {\n\t\t// Do nothing if no history to be committed, otherwise get history\n\t\tif (this.historyBuffer.length === 0) return;\n\t\tif (this.lock) return;\n\t\tthis.lock = true;\n\t\tlet history = canvas.scene.getFlag(\"simplefog\", \"history\");\n\t\t// If history storage doesnt exist, create it\n\t\tif (!history) {\n\t\t\thistory = {\n\t\t\t\tevents: [],\n\t\t\t\tpointer: 0,\n\t\t\t};\n\t\t}\n\t\t// If pointer is less than history length (f.x. user undo), truncate history\n\t\thistory.events = history.events.slice(0, history.pointer);\n\t\t// Push the new history buffer to the scene\n\t\thistory.events.push(this.historyBuffer);\n\t\thistory.pointer = history.events.length;\n\t\tawait canvas.scene.unsetFlag(\"simplefog\", \"history\");\n\t\tawait this.setSetting(\"history\", history);\n\t\t// Clear the history buffer\n\t\tthis.historyBuffer = [];\n\t\tthis.lock = false;\n\t}\n\n\t/**\n\t * Resets the mask of the layer\n\t * @param save {Boolean} If true, also resets the layer history\n\t */\n\tasync resetMask(save = true) {\n\t\t// Fill fog layer with solid\n\t\tthis.setFill();\n\t\t// If save, also unset history and reset pointer\n\t\tif (save) {\n\t\t\tawait canvas.scene.unsetFlag(\"simplefog\", \"history\");\n\t\t\tawait canvas.scene.setFlag(\"simplefog\", \"history\", {\n\t\t\t\tevents: [],\n\t\t\t\tpointer: 0,\n\t\t\t});\n\t\t\tthis.pointer = 0;\n\t\t}\n\t}\n\n\t/**\n\t * Resets the mask of the layer\n\t * @param save {Boolean} If true, also resets the layer history\n\t */\n\tasync blankMask() {\n\t\tawait this.resetMask();\n\t\tthis.renderBrush({\n\t\t\tshape: this.BRUSH_TYPES.BOX,\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: this.width,\n\t\t\theight: this.height,\n\t\t\tfill: 0x000000,\n\t\t});\n\t\tthis.commitHistory();\n\t}\n\n\t/**\n\t * Steps the history buffer back X steps and redraws\n\t * @param steps {Integer} Number of steps to undo, default 1\n\t */\n\tasync undo(steps = 1) {\n\t\t// Grab existing history\n\t\t// Todo: this could probably just grab and set the pointer for a slight performance improvement\n\t\tlet history = canvas.scene.getFlag(\"simplefog\", \"history\");\n\t\tif (!history) {\n\t\t\thistory = {\n\t\t\t\tevents: [],\n\t\t\t\tpointer: 0,\n\t\t\t};\n\t\t}\n\t\tlet newpointer = this.pointer - steps;\n\t\tif (newpointer < 0) newpointer = 0;\n\t\t// Set new pointer & update history\n\t\thistory.pointer = newpointer;\n\t\tawait canvas.scene.unsetFlag(\"simplefog\", \"history\");\n\t\tawait canvas.scene.setFlag(\"simplefog\", \"history\", history);\n\t}\n\n\t/* -------------------------------------------- */\n\t/*  Shapes, sprites and PIXI objs               */\n\t/* -------------------------------------------- */\n\n\t/**\n\t * Creates a PIXI graphic using the given brush parameters\n\t * @param data {Object}       A collection of brush parameters\n\t * @returns {Object}          PIXI.Graphics() instance\n\t *\n\t * @example\n\t * const myBrush = this.brush({\n\t *      shape: \"ellipse\",\n\t *      x: 0,\n\t *      y: 0,\n\t *      fill: 0x000000,\n\t *      width: 50,\n\t *      height: 50,\n\t *      alpha: 1,\n\t *      visible: true\n\t * });\n\t */\n\tbrush(data) {\n\t\t// Get new graphic & begin filling\n\t\tconst { alpha = 1, fill, height, shape, vertices, visible = true, width, x, y, zIndex } = data;\n\t\tconst brush = new PIXI.Graphics();\n\t\tbrush.beginFill(fill);\n\t\t// Draw the shape depending on type of brush\n\t\tswitch (shape) {\n\t\t\tcase this.BRUSH_TYPES.ELLIPSE:\n\t\t\t\tbrush.drawEllipse(0, 0, width, height);\n\t\t\t\tbreak;\n\t\t\tcase this.BRUSH_TYPES.BOX:\n\t\t\t\tbrush.drawRect(0, 0, width, height);\n\t\t\t\tbreak;\n\t\t\tcase this.BRUSH_TYPES.ROUNDED_RECT:\n\t\t\t\tbrush.drawRoundedRect(0, 0, width, height, 10);\n\t\t\t\tbreak;\n\t\t\tcase this.BRUSH_TYPES.POLYGON:\n\t\t\t\tbrush.drawPolygon(vertices);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\t// End fill and set the basic props\n\t\tbrush.endFill();\n\t\tbrush.alpha = alpha;\n\t\tbrush.visible = visible;\n\t\tbrush.x = x;\n\t\tbrush.y = y;\n\t\tbrush.zIndex = zIndex;\n\t\treturn brush;\n\t}\n\n\t/**\n\t * Gets a brush using the given parameters, renders it to mask and saves the event to history\n\t * @param data {Object}       A collection of brush parameters\n\t * @param save {Boolean}      If true, will add the operation to the history buffer\n\t */\n\trenderBrush(data, save = true) {\n\t\tconst brush = this.brush(data);\n\t\tthis.composite(brush);\n\t\tbrush.destroy();\n\t\tif (save) this.historyBuffer.push(data);\n\t}\n\n\t/**\n\t * Renders the given brush to the layer mask\n\t * @param data {Object}       PIXI Object to be used as brush\n\t */\n\tcomposite(brush) {\n\t\tconst opt = {\n\t\t\trenderTexture: this.maskTexture,\n\t\t\tclear: false,\n\t\t\ttransform: null,\n\t\t\tskipUpdateTransform: false\n\t\t};\n\t\tcanvas.app.renderer.render(brush, opt);\n\t}\n\n\t/**\n\t * Returns a blank PIXI Sprite of canvas dimensions\n\t */\n\tstatic getCanvasSprite() {\n\t\tconst sprite = new PIXI.Sprite(PIXI.Texture.WHITE);\n\t\tconst d = canvas.dimensions;\n\t\tsprite.width = d.width;\n\t\tsprite.height = d.height;\n\t\tsprite.x = 0;\n\t\tsprite.y = 0;\n\t\tsprite.zIndex = 5000;\n\t\treturn sprite;\n\t}\n\n\t/**\n\t * Fills the mask layer with solid white\n\t */\n\tsetFill() {\n\t\tconst fill = new PIXI.Graphics();\n\t\tfill.beginFill(0xffffff);\n\t\tfill.drawRect(0, 0, canvas.dimensions.width, canvas.dimensions.height);\n\t\tfill.endFill();\n\t\tthis.composite(fill);\n\t\tfill.destroy();\n\t}\n\n\t/**\n\t * Toggles visibility of primary layer\n\t */\n\ttoggle() {\n\t\tconst v = this.getSetting(\"visible\");\n\t\tthis.visible = !v;\n\t\tthis.setSetting(\"visible\", !v);\n\n\t\t// If first time, set autofog to opposite so it doesn't reapply it.\n\t\tlet history = canvas.scene.getFlag(\"simplefog\", \"history\");\n\n\t\tif (history === undefined) {\n\t\t\tthis.setSetting(\"autoFog\", !v);\n\t\t}\n\t}\n\n\tasync _draw() {\n\t\t// Check if masklayer is flagged visible\n\t\tlet v = this.getSetting(\"visible\");\n\t\tif (v === undefined) v = false;\n\t\tthis.visible = v;\n\n\t\t// The layer is the primary sprite to be displayed\n\t\tthis.fogColorLayer = MaskLayer.getCanvasSprite();\n\t\tthis.setColorTint(this.getTint());\n\t\tthis.setColorAlpha(this.getColorAlpha(), true);\n\n\t\tthis.blur = new PIXI.filters.BlurFilter();\n\t\tthis.blur.padding = 0;\n\t\tthis.blur.repeatEdgePixels = true;\n\t\tthis.blur.blur = this.getSetting(\"blurRadius\");\n\t\tthis.blur.quality = this.getSetting(\"blurQuality\");\n\n\t\t// Filters\n\t\tif (this.getSetting(\"blurEnable\")) {\n\t\t\tthis.fogColorLayer.filters = [this.blur];\n\t\t} else {\n\t\t\tthis.fogColorLayer.filters = [];\n\t\t}\n\n\t\t// So you can hit escape on the keyboard and it will bring up the menu\n\t\tthis._controlled = {};\n\n\t\tthis.maskTexture = MaskLayer.getMaskTexture();\n\t\tthis.maskSprite = new PIXI.Sprite(this.maskTexture);\n\n\t\tthis.fogColorLayer.mask = this.maskSprite;\n\t\tthis.setFill();\n\n\t\t// Allow zIndex prop to function for items on this layer\n\t\tthis.sortableChildren = true;\n\n\t\t// Render entire history stack\n\t\tthis.renderStack({ start: 0, isInit: true });\n\n\t\t// apply image overlay to fog layer after we renderStack to prevent revealing the map\n\t\tconst fogImageOverlayFilePath = this.getSetting(\"fogImageOverlayFilePath\");\n\t\tconst texture = this.getFogImageOverlayTexture(fogImageOverlayFilePath);\n\t\tthis.fogImageOverlayLayer = new PIXI.Sprite(texture);\n\t\tthis.fogImageOverlayLayer.position.set(canvas.dimensions.sceneRect.x, canvas.dimensions.sceneRect.y);\n\t\tthis.fogImageOverlayLayer.width = canvas.dimensions.sceneRect.width;\n\t\tthis.fogImageOverlayLayer.height = canvas.dimensions.sceneRect.height;\n\t\tthis.fogImageOverlayLayer.mask = this.maskSprite;\n\t\tthis.fogImageOverlayLayer.zIndex = this.getSetting(\"fogImageOverlayZIndex\");\n\t\tthis.setFogImageOverlayAlpha(this.getFogImageOverlayAlpha(), true);\n\n\t\tthis.addChild(this.fogImageOverlayLayer);\n\t\tthis.addChild(this.fogColorLayer);\n\t\tthis.addChild(this.fogColorLayer.mask);\n\t}\n}\n","/* SimplefogLayer extends MaskLayer\n *\n * Implements tools for manipulating the MaskLayer\n */\n\nimport { Layout } from \"../../libs/hexagons.js\";\nimport { BrushControls } from \"../apps/BrushControls.js\";\nimport { CWSPNoDoors } from \"../ClockwiseSweep.js\";\nimport { hexObjsToArr, hexToPercent } from \"../helpers.js\";\nimport MaskLayer from \"./MaskLayer.js\";\n\nexport default class SimplefogLayer extends MaskLayer {\n\tconstructor() {\n\t\tsuper();\n\n\t\t// Register event listerenrs\n\t\tHooks.on(\"ready\", () => {\n\t\t\tthis._registerMouseListeners();\n\t\t});\n\n\t\tthis.DEFAULTS = Object.assign(this.DEFAULTS, {\n\t\t\ttransition: true,\n\t\t\ttransitionSpeed: 800,\n\t\t\tpreviewColor: \"0x00FFFF\",\n\t\t\thandlefill: \"0xff6400\",\n\t\t\thandlesize: 20,\n\t\t\tpreviewAlpha: 0.4,\n\t\t\tbrushSize: 50,\n\t\t\tbrushOpacity: 1,\n\t\t\tautoVisibility: false,\n\t\t\tautoVisGM: false,\n\t\t\tvThreshold: 1,\n\t\t\thotKeyTool: \"Brush\",\n\t\t});\n\n\t\t// React to changes to current scene\n\t\tHooks.on(\"updateScene\", (scene, data) => this._updateScene(scene, data));\n\t}\n\n\tstatic get layerOptions() {\n\t\treturn foundry.utils.mergeObject(super.layerOptions, {\n\t\t\tname: \"simplefog\",\n\t\t\tbaseClass: SimplefogLayer,\n\t\t});\n\t}\n\n\tget activeTool() {\n\t\treturn this.#activeTool;\n\t}\n\n\tset activeTool(tool) {\n\t\tthis.#activeTool = tool;\n\t}\n\n\tget brushControls() {\n\t\treturn this.#brushControls ??= new BrushControls();\n\t}\n\n\t#activeTool;\n\n\t#brushControls;\n\n\t#gridType;\n\n\t#lastPosition;\n\n\t#previewTint = 0xff0000;\n\n\t#rightclick;\n\n\t_activate() {\n\t\tsuper._activate();\n\t\tthis._changeTool();\n\t}\n\n\t\t/* -------------------------------------------- */\n\n\t\t/** @inheritDoc */\n\t_deactivate() {\n\t\tsuper._deactivate();\n\t\tthis.brushControls.close({animate: false});\n\t\tthis.clearActiveTool();\n\t}\n\n\t_changeTool() {\n\t\tthis.clearActiveTool();\n\t\tthis.activeTool = ui.controls.activeTool;\n\t\tthis.setPreviewTint();\n\t\tif (this.activeTool === \"brush\") {\n\t\t\tthis.ellipsePreview.visible = true;\n\t\t\tthis._pointerMoveBrush(canvas.mousePosition);\n\t\t} else if (this.activeTool === \"grid\") {\n\t\t\tthis._initGrid();\n\t\t\tthis._pointerMoveGrid(canvas.mousePosition);\n\t\t} else if (this.activeTool === \"room\") {\n\t\t\tthis._pointerMoveRoom(canvas.mousePosition);\n\t\t\tcanvas.walls.objects.visible = true;\n\t\t\tcanvas.walls.placeables.forEach((l) => l.renderFlags.set({refreshState: true}));\n\t\t}\n\t\tthis.brushControls.render({ force: true });\n\t}\n\n\t/* -------------------------------------------- */\n\t/*  Event Listeners and Handlers                */\n\t/* -------------------------------------------- */\n\n\t/**\n\t * React to updates of canvas.scene flags\n\t */\n\t_updateScene(scene, data) {\n\t\t// Check if update applies to current viewed scene\n\t\tif (!scene._view) return;\n\t\t// React to visibility change\n\t\tif (foundry.utils.hasProperty(data, \"flags.simplefog.visible\")) {\n\t\t\tcanvas.simplefog.visible = data.flags.simplefog.visible;\n\t\t}\n\t\t// React to composite history change\n\t\tif (foundry.utils.hasProperty(data, \"flags.simplefog.blurEnable\")) {\n\t\t\tif (this.fogColorLayer !== undefined) {\n\t\t\t\tif (this.getSetting(\"blurEnable\")) {\n\t\t\t\t\tthis.fogColorLayer.filters = [this.blur];\n\t\t\t\t} else {\n\t\t\t\t\tthis.fogColorLayer.filters = [];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (foundry.utils.hasProperty(data, \"flags.simplefog.blurRadius\")) {\n\t\t\tcanvas.simplefog.blur.blur = this.getSetting(\"blurRadius\");\n\t\t}\n\t\t// React to composite history change\n\t\tif (foundry.utils.hasProperty(data, \"flags.simplefog.blurQuality\")) {\n\t\t\tcanvas.simplefog.blur.quality = this.getSetting(\"blurQuality\");\n\t\t}\n\t\t// React to composite history change\n\t\tif (foundry.utils.hasProperty(data, \"flags.simplefog.history\")) {\n\t\t\tcanvas.simplefog.renderStack({ history: data.flags.simplefog.history });\n\n\t\t\tcanvas.perception.update({\n\t\t\t\trefreshLighting: true,\n\t\t\t\trefreshVision: true,\n\t\t\t\trefreshOcclusion: true\n\t\t\t});\n\t\t}\n\t\t// React to autoVisibility setting changes\n\t\tif (\n\t\t\tfoundry.utils.hasProperty(data, \"flags.simplefog.autoVisibility\")\n\t\t\t|| foundry.utils.hasProperty(data, \"flags.simplefog.vThreshold\")\n\t\t) {\n\t\t\tcanvas.perception.update({\n\t\t\t\trefreshLighting: true,\n\t\t\t\trefreshVision: true,\n\t\t\t\trefreshOcclusion: true\n\t\t\t});\n\t\t}\n\t\t// React to alpha/tint changes\n\t\tif (!game.user.isGM && foundry.utils.hasProperty(data, \"flags.simplefog.playerColorAlpha\")) {\n\t\t\tcanvas.simplefog.setColorAlpha(data.flags.simplefog.playerColorAlpha);\n\t\t}\n\t\tif (game.user.isGM && foundry.utils.hasProperty(data, \"flags.simplefog.gmColorAlpha\")) {\n\t\t\tcanvas.simplefog.setColorAlpha(data.flags.simplefog.gmColorAlpha);\n\t\t}\n\t\tif (!game.user.isGM && foundry.utils.hasProperty(data, \"flags.simplefog.playerColorTint\")) {\n\t\t\tcanvas.simplefog.setColorTint(data.flags.simplefog.playerColorTint);\n\t\t}\n\t\tif (game.user.isGM && foundry.utils.hasProperty(data, \"flags.simplefog.gmColorTint\")) {\n\t\t\tcanvas.simplefog.setColorTint(data.flags.simplefog.gmColorTint);\n\t\t}\n\n\t\t// React to Image Overylay file changes\n\t\tif (foundry.utils.hasProperty(data, \"flags.simplefog.fogImageOverlayFilePath\")) {\n\t\t\tcanvas.simplefog.setFogImageOverlayTexture(data.flags.simplefog.fogImageOverlayFilePath);\n\t\t}\n\n\t\tif (game.user.isGM && foundry.utils.hasProperty(data, \"flags.simplefog.fogImageOverlayGMAlpha\")) {\n\t\t\tcanvas.simplefog.setFogImageOverlayAlpha(data.flags.simplefog.fogImageOverlayGMAlpha);\n\t\t}\n\t\tif (!game.user.isGM && foundry.utils.hasProperty(data, \"flags.simplefog.fogImageOverlayPlayerAlpha\")) {\n\t\t\tcanvas.simplefog.setFogImageOverlayAlpha(data.flags.simplefog.fogImageOverlayPlayerAlpha);\n\t\t}\n\t\tif (foundry.utils.hasProperty(data, \"flags.simplefog.fogImageOverlayZIndex\")) {\n\t\t\tcanvas.simplefog.fogImageOverlayLayer.zIndex = data.flags.simplefog.fogImageOverlayZIndex;\n\t\t}\n\t}\n\n\t/**\n\t * Adds the mouse listeners to the layer\n\t */\n\t_registerMouseListeners() {\n\t\tthis.addListener(\"pointerup\", this._pointerUp);\n\t\tthis.addListener(\"pointermove\", this._pointerMove);\n\t}\n\n\thighlightConfig(x, y) {\n\t\treturn { x, y, color: this.#previewTint, alpha: this.DEFAULTS.previewAlpha };\n\t}\n\n\tsetPreviewTint() {\n\t\tconst vt = this.getSetting(\"vThreshold\");\n\t\tconst bo = hexToPercent(this.getUserSetting(\"brushOpacity\")) / 100;\n\t\tthis.#previewTint = 0xff0000;\n\t\tif (bo < vt) this.#previewTint = 0x00ff00;\n\t\tthis.ellipsePreview.tint = this.#previewTint;\n\t\tthis.boxPreview.tint = this.#previewTint;\n\t\tthis.polygonPreview.tint = this.#previewTint;\n\t\tif (this.activeTool === \"grid\" && this.#lastPosition) {\n\t\t\tconst { x, y } = this.#lastPosition;\n\t\t\tcanvas.interface.grid.clearHighlightLayer(\"simplefog\");\n\t\t\tcanvas.interface.grid.highlightPosition(\"simplefog\", this.highlightConfig(x, y));\n\t\t}\n\t}\n\n\t/**\n\t * Sets the active tool & shows preview for brush & grid tools\n\t * @param {Number}  Size in pixels\n\t */\n\tasync setBrushSize(s) {\n\t\tawait this.setUserSetting(\"brushSize\", s);\n\t\tconst p = { x: this.ellipsePreview.x, y: this.ellipsePreview.y };\n\t\tthis._pointerMoveBrush(p);\n\t}\n\n\t/**\n\t * Aborts any active drawing tools\n\t */\n\tclearActiveTool() {\n\t\tcanvas.interface.grid.clearHighlightLayer(\"simplefog\");\n\t\t// Box preview\n\t\tthis.boxPreview.visible = false;\n\t\t// Ellipse Preview\n\t\tthis.ellipsePreview.visible = false;\n\t\tthis.polygonPreview.clear();\n\t\tthis.polygonPreview.visible = false;\n\t\tthis.polygonHandle.visible = false;\n\t\tthis.polygon = [];\n\t\t// Cancel op flag\n\t\tthis.op = false;\n\t\t// Clear history buffer\n\t\tthis.historyBuffer = [];\n\t\tif (this.activeTool === \"room\") {\n\t\t\tcanvas.walls.objects.visible = false;\n\t\t\tcanvas.walls.placeables.forEach((l) => l.renderFlags.set({refreshState: true}));\n\t\t}\n\t}\n\n\t_onClickLeft(e) {\n\t\t// Don't allow new action if history push still in progress\n\t\tif (this.historyBuffer.length > 0) return;\n\t\tconst p = canvas.mousePosition;\n\t\tif (!canvas.dimensions.rect.contains(p.x, p.y)) return;\n\t\t// Round positions to nearest pixel\n\t\tp.x = Math.round(p.x);\n\t\tp.y = Math.round(p.y);\n\t\tthis.op = true;\n\t\t// Check active tool\n\t\tswitch (this.activeTool) {\n\t\t\tcase \"brush\":\n\t\t\t\tthis._pointerDownBrush();\n\t\t\t\tbreak;\n\t\t\tcase \"grid\":\n\t\t\t\tthis._pointerDownGrid();\n\t\t\t\tbreak;\n\t\t\tcase \"box\":\n\t\t\t\tthis._pointerDownBox(p);\n\t\t\t\tbreak;\n\t\t\tcase \"ellipse\":\n\t\t\t\tthis._pointerDownEllipse(p);\n\t\t\t\tbreak;\n\t\t\tcase \"polygon\":\n\t\t\t\tthis._pointerDownPolygon(p);\n\t\t\t\tbreak;\n\t\t\tcase \"room\":\n\t\t\t\tthis._pointerDownRoom(p, e);\n\t\t\t\tbreak;\n\t\t\tdefault: // Do nothing\n\t\t\t\tbreak;\n\t\t}\n\t\t// Call _pointermove so single click will still draw brush if mouse does not move\n\t\tthis._pointerMove(e);\n\t}\n\n\t_onClickLeft2(e) {\n\t\t// Don't allow new action if history push still in progress\n\t\tif (this.historyBuffer.length > 0) return;\n\t\tconst p = canvas.mousePosition;\n\t\tif (!canvas.dimensions.rect.contains(p.x, p.y)) return;\n\t\t// Round positions to nearest pixel\n\t\tp.x = Math.round(p.x);\n\t\tp.y = Math.round(p.y);\n\t\tthis.op = true;\n\t\t// Check active tool\n\t\tswitch (this.activeTool) {\n\t\t\tcase \"polygon\":\n\t\t\t\tthis._pointerDown2Polygon(p);\n\t\t\t\tbreak;\n\t\t\tdefault: // Do nothing\n\t\t\t\tbreak;\n\t\t}\n\t\t// Call _pointermove so single click will still draw brush if mouse does not move\n\t\tthis._pointerMove(e);\n\t}\n\n\t_onClickRight(e) {\n\t\tif (this.historyBuffer.length > 0) return;\n\t\t// Todo: Not sure why this doesnt trigger when drawing ellipse & box\n\t\tif ([\"box\", \"ellipse\"].includes(this.activeTool)) {\n\t\t\tthis.clearActiveTool();\n\t\t} else if (this.activeTool === \"polygon\") this.#rightclick = true;\n\t}\n\n\t_pointerMove(e) {\n\t\t// Get mouse position translated to canvas coords\n\t\tconst p = canvas.mousePosition;\n\t\t// Round positions to nearest pixel\n\t\tp.x = Math.round(p.x);\n\t\tp.y = Math.round(p.y);\n\t\tswitch (this.activeTool) {\n\t\t\tcase \"brush\":\n\t\t\t\tthis._pointerMoveBrush(p);\n\t\t\t\tbreak;\n\t\t\tcase \"box\":\n\t\t\t\tthis._pointerMoveBox(p, e);\n\t\t\t\tbreak;\n\t\t\tcase \"grid\":\n\t\t\t\tthis._pointerMoveGrid(p);\n\t\t\t\tbreak;\n\t\t\tcase \"ellipse\":\n\t\t\t\tthis._pointerMoveEllipse(p, e);\n\t\t\t\tbreak;\n\t\t\tcase \"polygon\":\n\t\t\t\tthis.#rightclick = false;\n\t\t\t\tbreak;\n\t\t\tcase \"room\":\n\t\t\t\tthis._pointerMoveRoom(p, e);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t_pointerUp(e) {\n\t\tif (e.data.button === 0) {\n\t\t\t// Translate click to canvas position\n\t\t\tconst p = canvas.mousePosition;\n\t\t\t// Round positions to nearest pixel\n\t\t\tp.x = Math.round(p.x);\n\t\t\tp.y = Math.round(p.y);\n\t\t\tswitch (this.op) {\n\t\t\t\tcase \"box\":\n\t\t\t\t\tthis._pointerUpBox(p, e);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ellipse\":\n\t\t\t\t\tthis._pointerUpEllipse(p, e);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault: // Do nothing\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// Reset operation\n\t\t\tthis.op = false;\n\t\t\t// Push the history buffer\n\t\t\tthis.commitHistory();\n\t\t} else if (e.data.button === 2) {\n\t\t\tif (this.activeTool === \"polygon\" && this.#rightclick) {\n\t\t\t\tthis.clearActiveTool();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Brush Tool\n\t */\n\t_pointerDownBrush() {\n\t\tthis.op = true;\n\t}\n\n\t_pointerMoveBrush(p) {\n\t\tif (!canvas.dimensions.rect.contains(p.x, p.y)) {\n\t\t\tthis.ellipsePreview.visible = false;\n\t\t\treturn;\n\t\t} else this.ellipsePreview.visible = true;\n\t\tconst size = this.getUserSetting(\"brushSize\");\n\t\tthis.ellipsePreview.width = size * 2;\n\t\tthis.ellipsePreview.height = size * 2;\n\t\tthis.ellipsePreview.x = p.x;\n\t\tthis.ellipsePreview.y = p.y;\n\t\t// If drag operation has started\n\t\tif (this.op) {\n\t\t\t// Send brush movement events to renderbrush to be drawn and added to history stack\n\t\t\tthis.renderBrush({\n\t\t\t\tshape: this.BRUSH_TYPES.ELLIPSE,\n\t\t\t\tx: p.x,\n\t\t\t\ty: p.y,\n\t\t\t\tfill: this.getUserSetting(\"brushOpacity\"),\n\t\t\t\twidth: this.getUserSetting(\"brushSize\"),\n\t\t\t\theight: this.getUserSetting(\"brushSize\"),\n\t\t\t});\n\t\t}\n\t}\n\n\t/*\n\t * Box Tool\n\t */\n\t_pointerDownBox(p) {\n\t\t// Set active drag operation\n\t\tthis.op = \"box\";\n\t\t// Set drag start coords\n\t\tthis.dragStart.x = p.x;\n\t\tthis.dragStart.y = p.y;\n\t\t// Reveal the preview shape\n\t\tthis.boxPreview.visible = true;\n\t\tthis.boxPreview.x = p.x;\n\t\tthis.boxPreview.y = p.y;\n\t}\n\n\t_pointerMoveBox(p, e) {\n\t\t// If drag operation has started\n\t\tif (this.op) {\n\t\t\t// update the preview shape\n\t\t\tconst d = this._getDragBounds(p, e);\n\t\t\tthis.boxPreview.width = d.w;\n\t\t\tthis.boxPreview.height = d.h;\n\t\t}\n\t}\n\n\t_pointerUpBox(p, e) {\n\t\t// update the preview shape\n\t\tconst d = this._getDragBounds(p, e);\n\t\tthis.renderBrush({\n\t\t\tshape: this.BRUSH_TYPES.BOX,\n\t\t\tx: this.dragStart.x,\n\t\t\ty: this.dragStart.y,\n\t\t\twidth: d.w,\n\t\t\theight: d.h,\n\t\t\tfill: this.getUserSetting(\"brushOpacity\"),\n\t\t});\n\t\tthis.boxPreview.visible = false;\n\t}\n\n\t/*\n\t * Ellipse Tool\n\t */\n\t_pointerDownEllipse(p) {\n\t\t// Set active drag operation\n\t\tthis.op = \"ellipse\";\n\t\t// Set drag start coords\n\t\tthis.dragStart.x = p.x;\n\t\tthis.dragStart.y = p.y;\n\t\t// Reveal the preview shape\n\t\tthis.ellipsePreview.x = p.x;\n\t\tthis.ellipsePreview.y = p.y;\n\t\tthis.ellipsePreview.visible = true;\n\t}\n\n\t_pointerMoveEllipse(p, e) {\n\t\t// If drag operation has started\n\t\tconst d = this._getDragBounds(p, e);\n\t\tif (this.op) {\n\t\t\t// Just update the preview shape\n\t\t\tthis.ellipsePreview.width = d.w * 2;\n\t\t\tthis.ellipsePreview.height = d.h * 2;\n\t\t}\n\t}\n\n\t_pointerUpEllipse(p, e) {\n\t\tconst d = this._getDragBounds(p, e);\n\t\tthis.renderBrush({\n\t\t\tshape: this.BRUSH_TYPES.ELLIPSE,\n\t\t\tx: this.dragStart.x,\n\t\t\ty: this.dragStart.y,\n\t\t\twidth: Math.abs(d.w),\n\t\t\theight: Math.abs(d.h),\n\t\t\tfill: this.getUserSetting(\"brushOpacity\"),\n\t\t});\n\t\tthis.ellipsePreview.visible = false;\n\t}\n\n\t/*\n\t * Polygon Tool\n\t */\n\t_pointerDownPolygon(p) {\n\t\tif (!this.polygon) this.polygon = [];\n\t\tconst x = Math.floor(p.x);\n\t\tconst y = Math.floor(p.y);\n\t\t// If this is not the first vertex...\n\t\tif (this.polygon.length) {\n\t\t\t// Check if new point is close enough to start to close the polygon\n\t\t\tconst xo = Math.abs(this.polygon[0].x - x);\n\t\t\tconst yo = Math.abs(this.polygon[0].y - y);\n\t\t\tif (xo < this.DEFAULTS.handlesize && yo < this.DEFAULTS.handlesize) {\n\t\t\t\tthis._pointerClosePolygon();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t// If this is first vertex...\n\t\telse {\n\t\t\t// Draw shape handle\n\t\t\tthis.polygonHandle.x = x - this.DEFAULTS.handlesize;\n\t\t\tthis.polygonHandle.y = y - this.DEFAULTS.handlesize;\n\t\t\tthis.polygonHandle.visible = true;\n\t\t}\n\t\tthis._pointerUpdatePolygon(x, y);\n\t}\n\n\t_pointerDown2Polygon() {\n\t\tif (!this.polygon || this.polygon.length < 3) return;\n\t\tthis._pointerClosePolygon();\n\t}\n\n\t_pointerClosePolygon() {\n\t\tconst verts = hexObjsToArr(this.polygon);\n\t\t// render the new shape to history\n\t\tthis.renderBrush({\n\t\t\tshape: this.BRUSH_TYPES.POLYGON,\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tvertices: verts,\n\t\t\tfill: this.getUserSetting(\"brushOpacity\"),\n\t\t});\n\t\t// Reset the preview shape\n\t\tthis.polygonPreview.clear();\n\t\tthis.polygonPreview.visible = false;\n\t\tthis.polygonHandle.visible = false;\n\t\tthis.polygon = [];\n\t\treturn true;\n\t}\n\n\t_pointerUpdatePolygon(x, y) {\n\t\t// If intermediate vertex, add it to array and redraw the preview\n\t\tthis.polygon.push({ x, y });\n\t\tthis.polygonPreview.clear();\n\t\tthis.polygonPreview.beginFill(0xffffff);\n\t\tthis.polygonPreview.drawPolygon(hexObjsToArr(this.polygon));\n\t\tthis.polygonPreview.endFill();\n\t\tthis.polygonPreview.visible = true;\n\t}\n\n\t_pointerDownRoom(p, e) {\n\t\tconst vertices = this._getRoomVertices(p, e);\n\t\tif (!vertices) return false;\n\n\t\tthis.renderBrush({\n\t\t\tshape: this.BRUSH_TYPES.POLYGON,\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tvertices,\n\t\t\tfill: this.getUserSetting(\"brushOpacity\"),\n\t\t});\n\t\treturn true;\n\t}\n\n\t_pointerMoveRoom(p, e) {\n\t\tif (!canvas.dimensions.rect.contains(p.x, p.y)) {\n\t\t\tthis.polygonPreview.visible = false;\n\t\t\treturn;\n\t\t} else this.polygonPreview.visible = true;\n\t\tthis.polygonPreview.clear();\n\t\tthis.polygonPreview.beginFill(0xffffff);\n\t\tthis.polygonPreview.drawPolygon(this._getRoomVertices(p, e));\n\t\tthis.polygonPreview.endFill();\n\t}\n\n\t_getRoomVertices(p, e) {\n\t\tconst sceneRect = canvas.dimensions.sceneRect;\n\t\tif (p.x < sceneRect.left || p.x > sceneRect.right || p.y < sceneRect.top || p.y > sceneRect.bottom) return [];\n\t\tconst sweep = CWSPNoDoors.create(canvas.mousePosition, { type: \"sight\", useInnerBounds: true, shiftKey: e?.shiftKey });\n\t\treturn Array.from(sweep.points);\n\t}\n\n\t/**\n\t * Grid Tool\n\t */\n\t_pointerDownGrid() {\n\t\t// Set active drag operation\n\t\tthis.op = \"grid\";\n\t\tthis._initGrid();\n\t}\n\n\t_pointerMoveGrid(p) {\n\t\tcanvas.interface.grid.clearHighlightLayer(\"simplefog\");\n\t\tif (!canvas.dimensions.rect.contains(p.x, p.y)) return;\n\t\tconst { size, type } = canvas.scene.grid;\n\t\t// Square grid\n\t\tif (type === 1) {\n\t\t\tconst { x, y } = canvas.grid.getTopLeftPoint({x: p.x, y: p.y });\n\t\t\tcanvas.interface.grid.highlightPosition(\"simplefog\", this.highlightConfig(x, y));\n\t\t\tthis.#lastPosition = { x, y };\n\t\t\tif (this.op) {\n\t\t\t\tconst coord = `${x},${y}`;\n\t\t\t\tif (!this.dupes.includes(coord)) {\n\t\t\t\t\t// Flag cell as drawn in dupes\n\t\t\t\t\tthis.dupes.push(coord);\n\t\t\t\t\tthis.renderBrush({\n\t\t\t\t\t\tshape: this.BRUSH_TYPES.BOX,\n\t\t\t\t\t\tx,\n\t\t\t\t\t\ty,\n\t\t\t\t\t\twidth: size,\n\t\t\t\t\t\theight: size,\n\t\t\t\t\t\tfill: this.getUserSetting(\"brushOpacity\"),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Hex Grid\n\t\telse if ([2, 3, 4, 5].includes(type)) {\n\t\t\tconst coords = canvas.grid.getCenterPoint({ x: p.x, y: p.y });\n\t\t\tconst cube = canvas.grid.getCube(coords);\n\t\t\tconst offset = canvas.grid.getOffset(cube);\n\t\t\tconst { x, y } = canvas.grid.getTopLeftPoint(offset);\n\t\t\tcanvas.interface.grid.highlightPosition(\"simplefog\", this.highlightConfig(x, y));\n\t\t\tthis.#lastPosition = { x, y };\n\t\t\t// If drag operation has started\n\t\t\tif (this.op) {\n\t\t\t\t// Convert pixel coord to hex coord\n\t\t\t\tconst qr = this.gridLayout.pixelToHex(p).round();\n\t\t\t\tconst coord = `${qr.q},${qr.r}`;\n\t\t\t\t// Check if this grid cell was already drawn\n\t\t\t\tif (!this.dupes.includes(coord)) {\n\t\t\t\t\t// Get current grid coord verts\n\t\t\t\t\tconst vertices = this.gridLayout.polygonCorners({ q: qr.q, r: qr.r });\n\t\t\t\t\t// Convert to array of individual verts\n\t\t\t\t\tconst vertexArray = hexObjsToArr(vertices);\n\t\t\t\t\t// Get the vert coords for the hex\n\t\t\t\t\tthis.renderBrush({\n\t\t\t\t\t\tshape: this.BRUSH_TYPES.POLYGON,\n\t\t\t\t\t\tvertices: vertexArray,\n\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\ty: 0,\n\t\t\t\t\t\tfill: this.getUserSetting(\"brushOpacity\"),\n\t\t\t\t\t});\n\t\t\t\t\t// Flag cell as drawn in dupes\n\t\t\t\t\tthis.dupes.push(coord);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/*\n\t * Returns height and width given a pointer coord and event for modifer keys\n\t */\n\t_getDragBounds(p, e) {\n\t\tlet h = p.y - this.dragStart.y;\n\t\tlet w = p.x - this.dragStart.x;\n\t\tif (e.data.originalEvent.shiftKey) {\n\t\t\tconst ws = Math.sign(w);\n\t\t\tconst hs = Math.sign(h);\n\t\t\tif (Math.abs(h) > Math.abs(w)) w = Math.abs(h) * ws;\n\t\t\telse h = Math.abs(w) * hs;\n\t\t}\n\t\treturn { w, h };\n\t}\n\n\t/*\n\t * Checks grid type, creates a dupe detection matrix & if hex grid init a layout\n\t */\n\t_initGrid() {\n\t\tconst { size, type } = canvas.scene.grid;\n\t\tthis.dupes = [];\n\t\tif (this.#gridType === type) return;\n\t\tconst legacyHex = !!canvas.scene.flags.core?.legacyHex;\n\t\tconst divisor = legacyHex ? 2 : Math.sqrt(3);\n\t\tswitch (type) {\n\t\t\t// Square grid\n\t\t\t// Pointy Hex Odd\n\t\t\tcase 2:\n\t\t\t\tthis.gridLayout = new Layout(\n\t\t\t\t\tLayout.pointy,\n\t\t\t\t\t{ x: size / divisor, y: size / divisor },\n\t\t\t\t\t{ x: 0, y: size / divisor }\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\t// Pointy Hex Even\n\t\t\tcase 3: {\n\t\t\t\tconst x = legacyHex ? (Math.sqrt(3) * size) / 4 : size / 2;\n\t\t\t\tthis.gridLayout = new Layout(\n\t\t\t\t\tLayout.pointy,\n\t\t\t\t\t{ x: size / divisor, y: size / divisor },\n\t\t\t\t\t{ x, y: size / divisor }\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// Flat Hex Odd\n\t\t\tcase 4:\n\t\t\t\tthis.gridLayout = new Layout(\n\t\t\t\t\tLayout.flat,\n\t\t\t\t\t{ x: size / divisor, y: size / divisor },\n\t\t\t\t\t{ x: size / divisor, y: 0 }\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\t// Flat Hex Even\n\t\t\tcase 5: {\n\t\t\t\tconst y = legacyHex ? (Math.sqrt(3) * size) / 4 : size / 2;\n\t\t\t\tthis.gridLayout = new Layout(\n\t\t\t\t\tLayout.flat,\n\t\t\t\t\t{ x: size / divisor, y: size / divisor },\n\t\t\t\t\t{ x: size / divisor, y }\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.#gridType = type;\n\t}\n\n\tasync _draw() {\n\t\tsuper._draw();\n\t\tthis.boxPreview = this.brush({\n\t\t\tshape: this.BRUSH_TYPES.BOX,\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tfill: 0xffffff,\n\t\t\talpha: this.DEFAULTS.previewAlpha,\n\t\t\twidth: 100,\n\t\t\theight: 100,\n\t\t\tvisible: false,\n\t\t\tzIndex: 10,\n\t\t});\n\t\tthis.ellipsePreview = this.brush({\n\t\t\tshape: this.BRUSH_TYPES.ELLIPSE,\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tfill: 0xffffff,\n\t\t\talpha: this.DEFAULTS.previewAlpha,\n\t\t\twidth: 100,\n\t\t\theight: 100,\n\t\t\tvisible: false,\n\t\t\tzIndex: 10,\n\t\t});\n\t\tthis.polygonPreview = this.brush({\n\t\t\tshape: this.BRUSH_TYPES.POLYGON,\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tvertices: [],\n\t\t\tfill: 0xffffff,\n\t\t\talpha: this.DEFAULTS.previewAlpha,\n\t\t\tvisible: false,\n\t\t\tzIndex: 10,\n\t\t});\n\t\tthis.polygonHandle = this.brush({\n\t\t\tshape: this.BRUSH_TYPES.BOX,\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tfill: this.DEFAULTS.handlefill,\n\t\t\twidth: this.DEFAULTS.handlesize * 2,\n\t\t\theight: this.DEFAULTS.handlesize * 2,\n\t\t\talpha: this.DEFAULTS.previewAlpha,\n\t\t\tvisible: false,\n\t\t\tzIndex: 15,\n\t\t});\n\n\t\tthis.addChild(this.boxPreview);\n\t\tthis.addChild(this.ellipsePreview);\n\t\tthis.addChild(this.polygonPreview);\n\t\tthis.addChild(this.polygonHandle);\n\t\tcanvas.interface.grid.addHighlightLayer(\"simplefog\");\n\t}\n}\n","export const registerSettings = function () {\n\t// Register global config settings\n\tgame.settings.register(\"simplefog\", \"confirmFogDisable\", {\n\t\tname: \"Confirm Disabling of Scene Simple Fog\",\n\t\thint: \"When enabled, a confirmation dialog will be displayed before Simple Fog can be toggled off for a scene\",\n\t\tscope: \"world\",\n\t\tconfig: true,\n\t\tdefault: true,\n\t\ttype: Boolean,\n\t});\n\tgame.settings.register(\"simplefog\", \"autoEnableSceneFog\", {\n\t\tname: \"Auto Enable Scene Fog\",\n\t\thint: \"When enabled, Simple Fog will automatically be enabled for a scene when it is first created.\",\n\t\tscope: \"world\",\n\t\tconfig: true,\n\t\tdefault: true,\n\t\ttype: Boolean,\n\t});\n\tgame.settings.register(\"simplefog\", \"toolHotKeys\", {\n\t\tname: \"Hotkey Tool\",\n\t\thint: \"Define which tool will be selected when using the keybinding.\",\n\t\tscope: \"world\",\n\t\tconfig: true,\n\t\tdefault: \"brush\",\n\t\ttype: String,\n\t\tchoices: {\n\t\t\tbrush: \"Brush\",\n\t\t\tgrid: \"Grid\",\n\t\t\tpolygon: \"Polygon\",\n\t\t\tbox: \"Box\",\n\t\t\tellipse: \"Ellipse\",\n\t\t},\n\t});\n\tgame.settings.register(\"simplefog\", \"zIndex\", {\n\t\tname: \"Simplefog Z-Index\",\n\t\thint: \"The z-index determines the order in which various layers are rendered within the Foundry canvas. A higher number will be rendered on top of lower numbered layers (and the objects on that layer). This allows for the adjustment of the z-index to allow for Simple Fog to be rendered above/below other layers; particularly ones added by other modules. Going below 200 will intermingle with Foundry layers such as the foreground image (200), tokens (100), etc... (Default: 220)\",\n\t\tscope: \"world\",\n\t\tconfig: true,\n\t\tdefault: 220,\n\t\ttype: Number,\n\t\tonChange: (value) => canvas.simplefog.zIndex = value\n\t});\n};\n","import SimplefogConfig from \"./apps/SimplefogConfig.js\";\nimport SimplefogLayer from \"./layers/SimplefogLayer.js\";\nimport { registerSettings } from \"./settings.js\";\n\nHooks.once(\"init\", async () => {\n\tregisterSettings();\n\tCONFIG.Canvas.layers.simplefog = { group: \"interface\", layerClass: SimplefogLayer };\n\n\tconst isActiveControl = () => ui.controls.activeControl === \"simplefog\";\n\tgame.keybindings.register(\"simplefog\", \"swap\", {\n\t\tname: \"Swap to Simple Fog's Controls\",\n\t\thint: \"Toggles between the Token and Simple Fog layers. Check the module's settings to define which tool will be selected by default.\",\n\t\teditable: [\n\t\t\t{\n\t\t\t\tkey: \"S\",\n\t\t\t\tmodifiers: [\"Control\"]\n\t\t\t}\n\t\t],\n\t\tonDown: () => {\n\t\t\tconst layer = isActiveControl() ? \"tokens\" : \"simplefog\";\n\t\t\tcanvas[layer].activate();\n\t\t\treturn true;\n\t\t},\n\t\trestricted: true,\n\t\tprecedence: CONST.KEYBINDING_PRECEDENCE.PRIORITY\n\t});\n\tgame.keybindings.register(\"simplefog\", \"undo\", {\n\t\tname: \"Undo Change\",\n\t\thint: \"\",\n\t\teditable: [\n\t\t\t{\n\t\t\t\tkey: \"Z\",\n\t\t\t\tmodifiers: [\"Control\"]\n\t\t\t}\n\t\t],\n\t\tonDown: () => {\n\t\t\tif (isActiveControl()) {\n\t\t\t\tcanvas.simplefog.undo();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t\trestricted: true,\n\t\tprecedence: CONST.KEYBINDING_PRECEDENCE.PRIORITY\n\t});\n\tgame.keybindings.register(\"simplefog\", \"opacity\", {\n\t\tname: \"Toggle Opacity\",\n\t\thint: \"Toggles the Brush Opacity's bar between Reveal/Hide. Only works while editing Simple Fog's layer.\",\n\t\tuneditable: [],\n\t\teditable: [\n\t\t\t{\n\t\t\t\tkey: \"T\"\n\t\t\t}\n\t\t],\n\t\tonDown: () => {\n\t\t\tif (isActiveControl()) {\n\t\t\t\tconst bc = canvas.simplefog.brushControls;\n\t\t\t\tconst handler = bc.options.actions.brushOpacity;\n\t\t\t\tconst slider = bc.element.querySelector(\"input[name=brushOpacity]\");\n\t\t\t\tslider.value = slider.value === \"100\" ? 0 : 100;\n\t\t\t\thandler.call(bc);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t\trestricted: true,\n\t});\n\tgame.keybindings.register(\"simplefog\", \"brushReduce\", {\n\t\tname: \"Reduce Brush Size\",\n\t\thint: \"Only works while the Brush is selected.\",\n\t\teditable: [\n\t\t\t{\n\t\t\t\tkey: \"BracketLeft\"\n\t\t\t}\n\t\t],\n\t\tonDown: () => {\n\t\t\tif (isActiveControl() && canvas.simplefog.activeTool === \"brush\") {\n\t\t\t\tconst bc = canvas.simplefog.brushControls;\n\t\t\t\tconst handler = bc.options.actions.brushSize;\n\t\t\t\tconst slider = bc.element.querySelector(\"input[name=brushSize]\");\n\t\t\t\tslider.value = Math.max(Number(slider.value) * 0.8, 10).toNearest(10, \"floor\");\n\t\t\t\thandler.call(bc);\n\t\t\t\tcanvas.simplefog.setBrushSize(slider.value);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t\tonUp: () => {},\n\t\trepeat: true,\n\t\trestricted: true,\n\t});\n\tgame.keybindings.register(\"simplefog\", \"brushIncrease\", {\n\t\tname: \"Increase Brush Size\",\n\t\thint: \"Only works while the Brush is selected.\",\n\t\teditable: [\n\t\t\t{\n\t\t\t\tkey: \"BracketRight\"\n\t\t\t}\n\t\t],\n\t\tonDown: () => {\n\t\t\tif (isActiveControl() && canvas.simplefog.activeTool === \"brush\") {\n\t\t\t\tconst bc = canvas.simplefog.brushControls;\n\t\t\t\tconst handler = bc.options.actions.brushSize;\n\t\t\t\tconst slider = bc.element.querySelector(\"input[name=brushSize]\");\n\t\t\t\tslider.value = Math.min(Number(slider.value) * 1.25, 500).toNearest(10, \"ceil\");\n\t\t\t\thandler.call(bc);\n\t\t\t\tcanvas.simplefog.setBrushSize(slider.value);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t\trepeat: true,\n\t\trestricted: true,\n\t});\n\tgame.keybindings.register(\"simplefog\", \"forceShape\", {\n\t\tname: \"Force Drag Shape (Hold)\",\n\t\thint: \"Forces the width and height of Rectangle and Ellipse tools to be the same.\",\n\t\tuneditable: [\n\t\t\t{\n\t\t\t\tkey: \"Shift\"\n\t\t\t}\n\t\t],\n\t\trepeat: true,\n\t\trestricted: true,\n\t\tprecedence: CONST.KEYBINDING_PRECEDENCE.DEFERRED\n\t});\n});\n\nHooks.once(\"ready\", async () => {\n\tcanvas.simplefog.zIndex = game.settings.get(\"simplefog\", \"zIndex\");\n\n\tcanvas.perception.update({\n\t\trefreshLighting: true,\n\t\trefreshVision: true,\n\t\trefreshOcclusion: true\n\t});\n});\n\nHooks.once(\"canvasInit\", () => {\n\tif (!game.user.isGM) return;\n\tObject.keys(canvas.simplefog.DEFAULTS).forEach((key) => {\n\t\t// Check for existing scene specific setting\n\t\tif (canvas.simplefog.getSetting(key) !== undefined) return;\n\t\t// Check for custom default\n\t\tconst def = canvas.simplefog.getUserSetting(key);\n\t\t// If user has custom default, set it for scene\n\t\tif (def !== undefined) canvas.simplefog.setSetting(key, def);\n\t\t// Otherwise fall back to module default\n\t\telse canvas.simplefog.setSetting(key, canvas.simplefog.DEFAULTS[key]);\n\t});\n});\n\nHooks.on(\"canvasInit\", () => {\n\tconst overlayFile = canvas.simplefog.getSetting(\"fogImageOverlayFilePath\");\n\tif (overlayFile) {\n\t\tcanvas.loadTexturesOptions.additionalSources.push(overlayFile);\n\t}\n});\n\n// from controls.js\n\n/**\n * Add control buttons\n */\nHooks.on(\"getSceneControlButtons\", (controls) => {\n\tif (!game.user.isGM) return;\n\tconst tools = [\n\t\t{\n\t\t\tname: \"simplefogtoggle\",\n\t\t\ttitle: game.i18n.localize(\"SIMPLEFOG.onoff\"),\n\t\t\ticon: \"fas fa-eye\",\n\t\t\tonClick: () => toggleSimpleFog(),\n\t\t\tactive: canvas.simplefog?.visible,\n\t\t\ttoggle: true,\n\t\t},\n\t\t{\n\t\t\tname: \"brush\",\n\t\t\ttitle: game.i18n.localize(\"SIMPLEFOG.brushTool\"),\n\t\t\ticon: \"fas fa-paint-brush\",\n\t\t\tonClick: () => canvas.simplefog?._changeTool(),\n\t\t},\n\t\t{\n\t\t\tname: \"room\",\n\t\t\ttitle: game.i18n.localize(\"SIMPLEFOG.roomTool\"),\n\t\t\ticon: \"fas fa-block-brick\",\n\t\t\tonClick: () => canvas.simplefog?._changeTool(),\n\t\t},\n\t\t{\n\t\t\tname: \"polygon\",\n\t\t\ttitle: game.i18n.localize(\"SIMPLEFOG.polygonTool\"),\n\t\t\ticon: \"fas fa-draw-polygon\",\n\t\t\tonClick: () => canvas.simplefog?._changeTool(),\n\t\t},\n\t\t{\n\t\t\tname: \"box\",\n\t\t\ttitle: game.i18n.localize(\"SIMPLEFOG.boxTool\"),\n\t\t\ticon: \"far fa-square\",\n\t\t\tonClick: () => canvas.simplefog?._changeTool(),\n\t\t},\n\t\t{\n\t\t\tname: \"ellipse\",\n\t\t\ttitle: game.i18n.localize(\"SIMPLEFOG.ellipseTool\"),\n\t\t\ticon: \"far fa-circle\",\n\t\t\tonClick: () => canvas.simplefog?._changeTool(),\n\t\t},\n\t\t{\n\t\t\tname: \"sceneConfig\",\n\t\t\ttitle: game.i18n.localize(\"SIMPLEFOG.sceneConfig\"),\n\t\t\ticon: \"fas fa-cog\",\n\t\t\tonClick: () => {\n\t\t\t\tnew SimplefogConfig().render(true);\n\t\t\t},\n\t\t\tbutton: true,\n\t\t},\n\t\t{\n\t\t\tname: \"clearfog\",\n\t\t\ttitle: game.i18n.localize(\"SIMPLEFOG.reset\"),\n\t\t\ticon: \"fas fa-trash\",\n\t\t\tonClick: () => {\n\t\t\t\tconst dg = new Dialog({\n\t\t\t\t\ttitle: game.i18n.localize(\"SIMPLEFOG.reset\"),\n\t\t\t\t\tcontent: game.i18n.localize(\"SIMPLEFOG.confirmReset\"),\n\t\t\t\t\tbuttons: {\n\t\t\t\t\t\treset: {\n\t\t\t\t\t\t\ticon: '<i class=\"fas fa-trash\"></i>',\n\t\t\t\t\t\t\tlabel: \"Reset\",\n\t\t\t\t\t\t\tcallback: () => canvas.simplefog.resetMask(),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tblank: {\n\t\t\t\t\t\t\ticon: '<i class=\"fas fa-eye\"></i>',\n\t\t\t\t\t\t\tlabel: \"Blank\",\n\t\t\t\t\t\t\tcallback: () => canvas.simplefog.blankMask(),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcancel: {\n\t\t\t\t\t\t\ticon: '<i class=\"fas fa-times\"></i>',\n\t\t\t\t\t\t\tlabel: \"Cancel\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tdefault: \"reset\",\n\t\t\t\t});\n\t\t\t\tdg.render(true);\n\t\t\t},\n\t\t\tbutton: true,\n\t\t},\n\t];\n\tlet activeTool = game.settings.get(\"simplefog\", \"toolHotKeys\");\n\tif (canvas.grid?.type) {\n\t\ttools.splice(2, 0, {\n\t\t\tname: \"grid\",\n\t\t\ttitle: game.i18n.localize(\"SIMPLEFOG.gridTool\"),\n\t\t\ticon: \"fas fa-border-none\",\n\t\t\tonClick: () => canvas.simplefog?._changeTool(),\n\t\t});\n\t} else if (activeTool === \"grid\") activeTool = \"brush\";\n\tcontrols.push({\n\t\tname: \"simplefog\",\n\t\ttitle: game.i18n.localize(\"SIMPLEFOG.sf\"),\n\t\ticon: \"fas fa-cloud\",\n\t\tlayer: \"simplefog\",\n\t\ttools,\n\t\tactiveTool,\n\t});\n});\n\n/**\n * Toggle Simple Fog\n */\nfunction toggleSimpleFog() {\n\tif (game.settings.get(\"simplefog\", \"confirmFogDisable\") && canvas.simplefog.getSetting(\"visible\")) {\n\t\tlet dg = Dialog.confirm({\n\t\t\ttitle: game.i18n.localize(\"SIMPLEFOG.disableFog\"),\n\t\t\tcontent: game.i18n.localize(\"SIMPLEFOG.confirmDisableFog\"),\n\t\t\tyes: () => toggleOffSimpleFog(),\n\t\t\tno: () => cancelToggleSimpleFog(),\n\t\t\tdefaultYes: false,\n\t\t\trejectClose: true,\n\t\t});\n\t\tdg.then(undefined, cancelToggleSimpleFog);\n\t} else {\n\t\ttoggleOffSimpleFog();\n\t}\n}\n\nfunction toggleOffSimpleFog() {\n\tcanvas.simplefog.toggle();\n\tcanvas.perception.update({\n\t\trefreshLighting: true,\n\t\trefreshVision: true,\n\t\trefreshOcclusion: true\n\t});\n}\n\nfunction cancelToggleSimpleFog(result = undefined) {\n\tui.controls.controls.find(({ name }) => name === \"simplefog\").tools[0].active = true;\n\tui.controls.render();\n}\n"],"names":[],"mappings":"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","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}