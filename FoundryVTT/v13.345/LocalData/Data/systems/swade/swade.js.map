{"version":3,"file":"swade.js","sources":["../src/module/canvas/SwadeMeasuredTemplate.ts","../src/module/constants.ts","../src/module/statusEffects.ts","../src/module/config.ts","../src/module/Logger.ts","../src/module/util.ts","../src/module/CharacterSummarizer.ts","../src/module/apps/ChoiceDialog.ts","../src/module/dice/SwadeRoll.ts","../src/module/dice/DamageRoll.ts","../src/module/dice/WildDie.ts","../src/module/dice/TraitRoll.ts","../src/module/apps/RollDialog.ts","../src/module/data/fields/AddStatsValueField.ts","../src/module/data/shared/additionalStats.ts","../src/module/data/shared/dice.ts","../src/module/data/item/common.ts","../src/module/data/item/base/base.ts","../src/module/data/item/base/physical.ts","../src/module/documents/item/SwadeItem.ts","../src/module/ItemChatCardHelper.ts","../src/module/SwadeSocketHandler.ts","../src/module/data/fields/PaceSchemaField.ts","../src/module/data/item/_migration.ts","../src/module/data/item/ability.ts","../src/module/data/item/_shims.ts","../src/module/data/item/action.ts","../src/module/data/item/ancestry.ts","../src/module/data/item/_quarantine.ts","../src/module/data/item/armor.ts","../src/module/data/item/consumable.ts","../src/module/data/fields/RequirementsField.ts","../src/module/data/item/edge.ts","../src/module/data/item/gear.ts","../src/module/data/item/hindrance.ts","../src/module/data/fields/ForeignDocumentUUIDField.ts","../src/module/data/fields/FormulaField.ts","../src/module/data/fields/FormulaDerivedValueField.ts","../src/module/data/fields/LocalDocumentField.ts","../src/module/data/fields/MappingField.ts","../src/module/data/fields/MemberField.ts","../src/module/data/item/power.ts","../src/module/data/item/shield.ts","../src/module/data/item/skill.ts","../src/module/apps/Reloadinator.ts","../src/module/data/item/weapon.ts","../src/module/data/item/index.ts","../src/module/data/actor/_migration.ts","../src/module/data/actor/_quarantine.ts","../src/module/data/actor/_shims.ts","../src/module/canvas/AuraPointSource.ts","../src/module/data/actor/base/base.ts","../src/module/data/actor/base/creature.ts","../src/module/data/actor/character.ts","../src/module/data/actor/group.ts","../src/module/data/actor/npc.ts","../src/module/data/actor/vehicle.ts","../src/module/data/actor/index.ts","../src/module/documents/actor/SwadeActor.ts","../src/module/documents/active-effect/SwadeActiveEffect.ts","../src/module/style/Accordion.ts","../src/module/apps/ActiveEffectWizard.ts","../src/module/apps/AdvanceEditor.ts","../src/module/apps/AttributeManager.ts","../src/module/apps/CompendiumTOC.ts","../src/module/apps/SettingConfigurator.ts","../src/module/apps/SwadeDocumentTweaks.ts","../src/module/canvas/SwadeToken.ts","../src/module/data/card/poker.ts","../src/module/data/card/index.ts","../src/module/models/ItemCardService.ts","../src/module/data/chat/itemCard.ts","../src/module/data/chat/index.ts","../src/module/data/combat/baseCombat.ts","../src/module/data/combat/baseCombatant.ts","../src/module/data/combat/baseCombatantGroup.ts","../src/module/data/combat/chase.ts","../src/module/data/combat/dramaticTask.ts","../src/module/data/combat/index.ts","../src/module/data/effect/base.ts","../src/module/data/effect/modifier.ts","../src/module/data/effect/index.ts","../src/module/data/journal/headquarters.ts","../src/module/data/journal/index.ts","../src/module/dice/Benny.ts","../src/module/chat.ts","../src/module/documents/SwadeUser.ts","../src/module/documents/card/SwadeCards.ts","../src/module/apps/DamageApplicator.ts","../src/module/documents/chat/SwadeChatMessage.ts","../src/module/apps/AmbushAssistant.ts","../src/module/apps/CardPicker.ts","../src/module/apps/PlayerCardDrawHerder.ts","../src/module/documents/combat/SwadeCombat.ts","../src/module/documents/combat/SwadeCombatant.ts","../src/module/effectCallbacks.ts","../src/module/handlebarsHelpers.ts","../src/module/hooks/AuraHooks.ts","../src/module/apps/ActionCardEditor.ts","../src/module/chaseUtils.ts","../src/module/models/MigrationCounter.ts","../src/module/migration/migrationUtils.ts","../src/module/migration/migration.ts","../src/module/models/ProseMirrorTableResultDropFillerPlugin.ts","../src/module/setup/compendiumArt.ts","../src/module/setup/setupHandler.ts","../src/module/style/PlayerBennyDisplay.ts","../src/module/style/UserSummary.ts","../src/module/hooks/hotbarDrop.ts","../src/module/hooks/SwadeCoreHooks.ts","../src/module/apps/DiceSettings.ts","../src/module/hooks/SwadeIntegrationHooks.ts","../src/module/keybindings.ts","../src/module/preloadTemplates.ts","../src/module/apps/CompendiumTOCSettings.ts","../src/module/settings.ts","../src/module/sheets/CharacterSheet.ts","../src/module/sheets/SwadeBaseSheetMixin.ts","../src/module/sheets/SwadeActorSheetV2.ts","../src/module/sheets/GroupSheet.ts","../src/module/apps/RequirementsEditor.ts","../src/module/sheets/SwadeItemSheetV2.ts","../src/module/sheets/SwadeBaseActorSheet.ts","../src/module/sheets/SwadeNPCSheet.ts","../src/module/sheets/SwadeTokenConfig.ts","../src/module/sheets/VehicleSheetV2.ts","../src/module/sheets/journal/JournalHeadquartersPageSheet.ts","../src/module/sidebar/SwadeChatLog.ts","../src/module/sidebar/SwadeCombatTracker.ts","../src/module/tours/SwadeTour.ts","../src/module/tours/registration.ts","../src/module/vision/InfravisionFilter.ts","../src/module/vision/DetectionModeInfravision.ts","../src/module/vision/InfravisionBackgroundVisionShader.ts","../src/swade.ts"],"sourcesContent":["import SwadeItem from '../documents/item/SwadeItem';\n\ndeclare global {\n  interface PlaceableObjectClassConfig {\n    MeasuredTemplate: typeof SwadeMeasuredTemplate;\n  }\n}\n\nexport default class SwadeMeasuredTemplate extends foundry.canvas.placeables\n  .MeasuredTemplate {\n  handlers: Record<string, (...args) => void> = {};\n  /**\n   * A factory method to create a SwadeMeasuredTemplate instance using provided preset\n   * @param preset the preset to use.\n   * @param item the item the preset is attached to.\n   * @returns SwadeTemplate | null\n   */\n  static fromPreset(preset: string, item?: SwadeItem) {\n    const existingPreview = CONFIG.SWADE.activeMeasuredTemplatePreview;\n    if (existingPreview && !existingPreview._destroyed) {\n      existingPreview.destroy({ children: true });\n    }\n\n    CONFIG.SWADE.activeMeasuredTemplatePreview = this._constructPreset(\n      preset,\n      item,\n    );\n    if (CONFIG.SWADE.activeMeasuredTemplatePreview)\n      CONFIG.SWADE.activeMeasuredTemplatePreview.drawPreview();\n  }\n\n  protected static _constructPreset(preset: string, item?: SwadeItem) {\n    // Prepare template data\n    const templateBaseData: MeasuredTemplate.CreateData = {\n      user: game.user?.id,\n      distance: 0,\n      direction: 0,\n      x: 0,\n      y: 0,\n      fillColor: game.user?.color,\n      flags: item ? { swade: { origin: item.uuid } } : {},\n    };\n\n    const presetPrototype = CONFIG.SWADE.measuredTemplatePresets.find(\n      (c) => c.button.name === preset,\n    );\n    if (!presetPrototype) return null;\n\n    //Set template data based on preset option\n    const template = new CONFIG.MeasuredTemplate.documentClass(\n      foundry.utils.mergeObject(templateBaseData, presetPrototype.data),\n      {\n        parent: canvas.scene ?? undefined,\n      },\n    );\n\n    //Return the template constructed from the item data\n    return new this(template);\n  }\n\n  /** Creates a preview of the template */\n  drawPreview() {\n    const initialLayer = canvas.activeLayer!;\n    // Draw the template and switch to the template layer\n    this.draw();\n    this.layer.activate();\n    this.layer.preview?.addChild(this);\n    // Activate interactivity\n    this.activatePreviewListeners(initialLayer);\n  }\n\n  /** Activate listeners for the template preview */\n  activatePreviewListeners(initialLayer: CanvasLayer) {\n    let moveTime = 0;\n\n    // Update placement (mouse-move)\n    this.handlers.mm = (event) => {\n      event.stopPropagation();\n      const now = Date.now(); // Apply a 20ms throttle\n      if (now - moveTime <= 20) return;\n      const center = event.data.getLocalPosition(this.layer);\n      const snapped = canvas.grid.getSnappedPoint(center, {\n        mode: CONST.GRID_SNAPPING_MODES.CENTER,\n        resolution: 2,\n      });\n      this.document.updateSource({ x: snapped?.x, y: snapped?.y });\n      this.refresh();\n      moveTime = now;\n    };\n\n    // Cancel the workflow (right-click)\n    this.handlers.rc = (event) => {\n      this.layer._onDragLeftCancel(event);\n      this._removeListenersFromCanvas();\n      initialLayer.activate();\n    };\n\n    // Confirm the workflow (left-click)\n    this.handlers.lc = (event) => {\n      this.handlers.rc(event);\n      const dest = canvas.grid.getSnappedPoint(this.document, {\n        mode: CONST.GRID_SNAPPING_MODES.CENTER,\n        resolution: 2,\n      });\n      this.document.updateSource(dest);\n      canvas.scene?.createEmbeddedDocuments('MeasuredTemplate', [\n        this.document.toObject(),\n      ]);\n    };\n\n    // Rotate the template by 3 degree increments (mouse-wheel)\n    this.handlers.mw = (event) => {\n      if (event.ctrlKey) event.preventDefault(); // Avoid zooming the browser window\n      event.stopPropagation();\n      const delta = canvas.grid!.type > CONST.GRID_TYPES.SQUARE ? 30 : 15;\n      const snap = event.shiftKey ? delta : 5;\n      this.document.updateSource({\n        direction: this.document.direction + snap * Math.sign(event.deltaY),\n      });\n      this.refresh();\n    };\n\n    // Activate listeners\n    canvas.stage!.on('mousemove', this.handlers.mm);\n    canvas.stage!.on('mousedown', this.handlers.lc);\n    canvas.app!.view.oncontextmenu = this.handlers.rc;\n    canvas.app!.view.onwheel = this.handlers.mw;\n  }\n\n  override destroy(...args) {\n    CONFIG.SWADE.activeMeasuredTemplatePreview = null;\n    this._removeListenersFromCanvas();\n    return super.destroy(...args);\n  }\n\n  /** Remove the mouse listeners from the canvas */\n  protected _removeListenersFromCanvas() {\n    canvas.stage!.off('mousemove', this.handlers.mm);\n    canvas.stage!.off('mousedown', this.handlers.lc);\n    canvas.app!.view.oncontextmenu = null;\n    canvas.app!.view.onwheel = null;\n  }\n\n  override _computeShape(): MeasuredTemplateShape {\n    const { angle, t } = this.document;\n    const gridWidth = this.document.width;\n    const { angle: direction, distance } = this.ray;\n    if (t === CONST.MEASURED_TEMPLATE_TYPES.CONE)\n      return this._getConeShape(direction, angle, distance, gridWidth);\n    return super._computeShape() as MeasuredTemplateShape;\n  }\n\n  protected _getConeShape(\n    direction: number,\n    angle: number,\n    distance: number,\n    gridWidth: number,\n  ): PIXI.Polygon {\n    // Special case to handle the base SWADE cone rather than a normal cone definition\n    if (angle === 0) {\n      const coneEndRadius = game.canvas.grid.size * gridWidth * 0.5; //Halved because gridWidth is the diameter\n      const coneLength = distance - coneEndRadius; //Calculate where the cone ends and the circle begins\n      const da = 3;\n      const c = Ray.fromAngle(0, 0, direction, coneLength);\n      const angles = Array.fromRange(180 / da)\n        .map((a) => 180 / -2 + a * da)\n        .concat([180 / 2]);\n      // Get the cone shape as a polygon\n      const rays = angles.map((a) =>\n        Ray.fromAngle(0, 0, direction + Math.toRadians(a), coneEndRadius),\n      );\n      const points = rays\n        .reduce(\n          (arr, r) => {\n            return arr.concat([c.B.x + r.B.x, c.B.y + r.B.y]);\n          },\n          [0, 0],\n        )\n        .concat([0, 0]);\n      return new PIXI.Polygon(points);\n    } else {\n      // honestly don't know why super.getConeShape() isn't working but it's not\n      return MeasuredTemplate.getConeShape(direction, angle, distance);\n    }\n  }\n\n  override highlightGrid() {\n    //return early if te object doesn't actually exist yet\n    if (!this.shape) return;\n\n    const highlightRAW = game.settings.get('swade', 'highlightTemplate');\n    //defer to the core highlighting if the setting is off\n    if (!highlightRAW) return super.highlightGrid();\n\n    const color = Number(this.document.fillColor);\n    const border = Number(this.document.borderColor);\n\n    //get the highlight layer and prep it\n    const layer = canvas.interface.grid.getHighlightLayer(this.highlightId);\n    if (!layer) return;\n    layer.clear();\n\n    //get the shape of the template and prep it\n    const shape = this.shape.clone();\n    if ('points' in shape) {\n      shape.points = shape.points.map((p, i) => {\n        if (i % 2) return this.y + p;\n        else return this.x + p;\n      });\n    } else {\n      shape.x += this.x;\n      shape.y += this.y;\n    }\n\n    //draw the actual shape\n    this._highlightGridArea(layer, { color, border, shape });\n  }\n\n  /** A re-implementation of `BaseGrid#highlightGridPosition()` to force gridless behavior */\n  private _highlightGridArea(\n    layer: GridHighlight,\n    { color, border, alpha = 0.25, shape }: IGridHighLightOptions,\n  ) {\n    layer.beginFill(color, alpha);\n    if (border) layer.lineStyle(2, border, Math.min(alpha * 1.5, 1.0));\n    layer.drawShape(shape).endFill();\n  }\n}\n\ninterface IGridHighLightOptions {\n  color: number;\n  border?: number;\n  alpha?: number;\n  shape:\n    | PIXI.Circle\n    | PIXI.Ellipse\n    | PIXI.Polygon\n    | PIXI.Rectangle\n    | PIXI.RoundedRectangle;\n}\n\ntype MeasuredTemplateShape = PIXI.Circle | PIXI.Rectangle | PIXI.Polygon;\n","import { PhysicalItem } from '../globals';\n\n/* eslint-disable @typescript-eslint/naming-convention */\nexport const constants = {\n  /** @enum */\n  ARMOR_LOCATIONS: {\n    HEAD: 'head',\n    TORSO: 'torso',\n    LEGS: 'legs',\n    ARMS: 'arms',\n  },\n  /** @enum */\n  TEMPLATE_PRESET: {\n    CONE: 'swcone',\n    SCONE: 'swscone',\n    STREAM: 'stream',\n    SBT: 'sbt',\n    MBT: 'mbt',\n    LBT: 'lbt',\n  },\n  /** @enum */\n  STATUS_EFFECT_EXPIRATION: {\n    StartOfTurnAuto: 0,\n    StartOfTurnPrompt: 1,\n    EndOfTurnAuto: 2,\n    EndOfTurnPrompt: 3,\n  },\n  /** @enum */\n  ADVANCE_TYPE: {\n    EDGE: 0,\n    SINGLE_SKILL: 1,\n    TWO_SKILLS: 2,\n    ATTRIBUTE: 3,\n    HINDRANCE: 4,\n  },\n  /** @enum */\n  RANK: {\n    NOVICE: 0,\n    SEASONED: 1,\n    VETERAN: 2,\n    HEROIC: 3,\n    LEGENDARY: 4,\n  },\n  /** @enum */\n  EQUIP_STATE: {\n    STORED: 0,\n    CARRIED: 1,\n    OFF_HAND: 2,\n    EQUIPPED: 3,\n    MAIN_HAND: 4,\n    TWO_HANDS: 5,\n  } as const,\n  /**\n   * Array position corresponds to value of EQUIP_STATE\n   * @enum\n   */\n  EQUIP_STATE_ICONS: [\n    'fas fa-archive',\n    'fas fa-shopping-bag',\n    'fas fa-hand-paper',\n    'fas fa-tshirt',\n    'fas fa-hand-paper fa-flip-horizontal',\n    'fas fa-sign-language',\n  ],\n  /** @enum */\n  RELOAD_TYPE: {\n    NONE: 'none',\n    SELF: 'self',\n    SINGLE: 'single',\n    FULL: 'full',\n    MAGAZINE: 'magazine',\n    BATTERY: 'battery',\n    PP: 'pp',\n  } as const,\n  /** @enum */\n  GRANT_ON: {\n    ADDED: 0,\n    CARRIED: 1,\n    READIED: 2,\n  } as const,\n  /** @enum */\n  CONSUMABLE_TYPE: {\n    REGULAR: 'regular',\n    MAGAZINE: 'magazine',\n    BATTERY: 'battery',\n  } as const,\n  /** @enum */\n  ABILITY_TYPE: {\n    SPECIAL: 'special',\n    ARCHETYPE: 'archetype',\n  } as const,\n  /** @enum */\n  ACTION_TYPE: {\n    TRAIT: 'trait',\n    DAMAGE: 'damage',\n    RESIST: 'resist',\n    MACRO: 'macro',\n  } as const,\n  /** @enum */\n  MACRO_ACTOR: {\n    DEFAULT: 'default',\n    SELF: 'self',\n    TARGET: 'target',\n  } as const,\n  /** @enum */\n  ROLL_RESULT: {\n    CRITFAIL: -1,\n    FAIL: 0,\n    SUCCESS: 1,\n    RAISE: 2,\n  } as const,\n  /** @enum */\n  ROLL_TYPE: {\n    ANY: 0,\n    TRAIT: 1,\n    ATTACK: 2,\n    DAMAGE: 3,\n  } as const,\n  /** @enum */\n  ADDITIONAL_STATS_TYPE: {\n    STRING: 'String',\n    NUMBER: 'Number',\n    BOOLEAN: 'Boolean',\n    DIE: 'Die',\n    SELECT: 'Selection',\n  } as const,\n  /** @enum */\n  TOUR_TAB_PARENTS: {\n    SIDEBAR: 'sidebar',\n    GAMESETTINGS: 'settings',\n    CONFIGURATOR: 'configurator',\n    ACTOR: 'actor',\n    ITEM: 'item',\n    TWEAKS: 'tweaks',\n  } as const,\n  /** @enum */\n  REQUIREMENT_TYPE: {\n    WILDCARD: 'wildCard',\n    RANK: 'rank',\n    ATTRIBUTE: 'attribute',\n    SKILL: 'skill',\n    EDGE: 'edge',\n    HINDRANCE: 'hindrance',\n    ANCESTRY: 'ancestry',\n    POWER: 'power',\n    OTHER: 'other',\n  } as const,\n  /** @enum */\n  RESERVED_SWID: {\n    DEFAULT: 'none',\n    ANY: 'any',\n  } as const,\n  /** @enum */\n  HINDRANCE_SEVERITY: {\n    MAJOR: 'major',\n    MINOR: 'minor',\n    EITHER: 'either',\n  } as const,\n  /** @enum */\n  WEAPON_RANGE_TYPE: {\n    MELEE: 0,\n    RANGED: 1,\n    MIXED: 2,\n  } as const,\n  /** @enum */\n  INIT_MESSAGE_TYPE: {\n    OFF: 'off',\n    COMPACT: 'compact',\n    LARGE: 'large',\n  } as const,\n  /** @enum */\n  ARMOR_STACKING: {\n    CORE: 'core',\n    SWPF: 'swpf',\n  } as const,\n  /**@enum */\n  SUPPLY_LEVEL: {\n    VERY_HIGH: 3,\n    HIGH: 2,\n    LOW: 1,\n    OUT: 0,\n  } as const,\n  PHYSICAL_ITEMS: [\n    'weapon',\n    'armor',\n    'shield',\n    'consumable',\n    'gear',\n  ] as PhysicalItem[],\n  CREW_ROLE: {\n    OPERATOR: 'operator',\n    GUNNER: 'gunner',\n    OTHER: 'other',\n  },\n};\n","import { constants } from './constants';\n\n/** @internal */\nexport const statusEffects: CONFIG.StatusEffect[] = [\n  {\n    img: 'systems/swade/assets/icons/status/status_shaken.svg',\n    id: 'shaken',\n    _id: 'shaken0000000000',\n    name: 'SWADE.Shaken',\n    duration: {\n      rounds: 1,\n    },\n    changes: [\n      {\n        key: 'system.status.isShaken',\n        mode: foundry.CONST.ACTIVE_EFFECT_MODES.OVERRIDE,\n        value: 'true',\n      },\n    ],\n    system: {\n      expiration: constants.STATUS_EFFECT_EXPIRATION.StartOfTurnPrompt,\n      loseTurnOnHold: true,\n    },\n  },\n  {\n    img: 'icons/svg/stoned.svg',\n    id: 'incapacitated',\n    _id: 'incapacitated000',\n    name: 'SWADE.Incap',\n    changes: [\n      {\n        key: 'system.status.isIncapacitated',\n        mode: foundry.CONST.ACTIVE_EFFECT_MODES.OVERRIDE,\n        value: 'true',\n      },\n    ],\n  },\n  {\n    img: 'icons/svg/skull.svg',\n    id: 'dead',\n    _id: 'dead000000000000',\n    name: 'COMBAT.CombatantDefeated',\n    statuses: ['incapacitated'],\n  },\n  {\n    img: 'systems/swade/assets/icons/status/status_aiming.svg',\n    id: 'aiming',\n    _id: 'aiming0000000000',\n    name: 'SWADE.Aiming',\n  },\n  {\n    img: 'systems/swade/assets/icons/status/status_enraged.svg',\n    id: 'berserk',\n    _id: 'berserk000000000',\n    name: 'SWADE.Berserk',\n    duration: {\n      rounds: 10,\n    },\n    changes: [\n      {\n        key: 'system.attributes.strength.die.sides',\n        value: '2',\n        mode: foundry.CONST.ACTIVE_EFFECT_MODES.ADD,\n      },\n      {\n        key: 'system.stats.toughness.value',\n        value: '2',\n        mode: foundry.CONST.ACTIVE_EFFECT_MODES.ADD,\n      },\n      {\n        key: 'system.wounds.ignored',\n        value: '1',\n        mode: foundry.CONST.ACTIVE_EFFECT_MODES.ADD,\n      },\n    ],\n    system: {\n      expiration: constants.STATUS_EFFECT_EXPIRATION.EndOfTurnPrompt,\n    },\n  },\n  {\n    img: 'systems/swade/assets/icons/status/status_wild_attack.svg',\n    id: 'wild-attack',\n    _id: 'wildattack000000',\n    name: 'SWADE.WildAttack',\n    duration: {\n      rounds: 0,\n    },\n    changes: [\n      {\n        key: 'system.status.isVulnerable',\n        mode: foundry.CONST.ACTIVE_EFFECT_MODES.OVERRIDE,\n        value: 'true',\n      },\n      {\n        key: 'system.stats.globalMods.attack',\n        mode: foundry.CONST.ACTIVE_EFFECT_MODES.ADD,\n        value: '2',\n      },\n      {\n        key: 'system.stats.globalMods.damage',\n        mode: foundry.CONST.ACTIVE_EFFECT_MODES.ADD,\n        value: '2',\n      },\n    ],\n    system: {\n      expiration: constants.STATUS_EFFECT_EXPIRATION.EndOfTurnAuto,\n    },\n    statuses: ['vulnerable'],\n  },\n  {\n    img: 'systems/swade/assets/icons/status/status_defending.svg',\n    id: 'defending',\n    _id: 'defending0000000',\n    name: 'SWADE.Defending',\n    duration: {\n      rounds: 1,\n    },\n    changes: [\n      {\n        key: 'system.stats.parry.value',\n        value: '4',\n        mode: foundry.CONST.ACTIVE_EFFECT_MODES.ADD,\n      },\n    ],\n    system: {\n      expiration: constants.STATUS_EFFECT_EXPIRATION.StartOfTurnAuto,\n    },\n  },\n  {\n    img: 'systems/swade/assets/icons/status/status_holding.svg',\n    id: 'holding',\n    _id: 'holding000000000',\n    name: 'SWADE.Holding',\n  },\n  {\n    img: 'systems/swade/assets/icons/status/status_bound.svg',\n    id: 'bound',\n    _id: 'bound00000000000',\n    name: 'SWADE.Bound',\n    changes: [\n      {\n        key: 'system.status.isBound',\n        mode: foundry.CONST.ACTIVE_EFFECT_MODES.OVERRIDE,\n        value: 'true',\n      },\n      {\n        key: 'system.status.isDistracted',\n        mode: foundry.CONST.ACTIVE_EFFECT_MODES.OVERRIDE,\n        value: 'true',\n      },\n    ],\n    flags: { swade: { related: { entangled: {} } } },\n    statuses: ['distracted'], // , 'entangled' // TODO: After status effect handling rework\n  },\n  {\n    img: 'systems/swade/assets/icons/status/status_entangled.svg',\n    id: 'entangled',\n    _id: 'entangled0000000',\n    name: 'SWADE.Entangled',\n    changes: [\n      {\n        key: 'system.status.isEntangled',\n        mode: foundry.CONST.ACTIVE_EFFECT_MODES.OVERRIDE,\n        value: 'true',\n      },\n      {\n        key: 'system.status.isVulnerable',\n        mode: foundry.CONST.ACTIVE_EFFECT_MODES.OVERRIDE,\n        value: 'true',\n      },\n    ],\n    statuses: ['vulnerable'],\n  },\n  {\n    img: 'systems/swade/assets/icons/status/status_frightened.svg',\n    id: 'frightened',\n    _id: 'frightened000000',\n    name: 'SWADE.Frightened',\n    changes: [\n      {\n        key: 'system.initiative.hasHesitant',\n        mode: foundry.CONST.ACTIVE_EFFECT_MODES.OVERRIDE,\n        value: 'true',\n        priority: 99, //High priority to make sure the effect overrides existing effects\n      },\n      {\n        key: 'system.initiative.hasLevelHeaded',\n        mode: foundry.CONST.ACTIVE_EFFECT_MODES.OVERRIDE,\n        value: 'false',\n        priority: 99, //High priority to make sure the effect overrides existing effects\n      },\n      {\n        key: 'system.initiative.hasImpLevelHeaded',\n        mode: foundry.CONST.ACTIVE_EFFECT_MODES.OVERRIDE,\n        value: 'false',\n        priority: 99, //High priority to make sure the effect overrides existing effects\n      },\n      {\n        key: 'system.initiative.hasQuick',\n        mode: foundry.CONST.ACTIVE_EFFECT_MODES.OVERRIDE,\n        value: 'false',\n        priority: 99, //High priority to make sure the effect overrides existing effects\n      },\n    ],\n  },\n  {\n    img: 'systems/swade/assets/icons/status/status_distracted.svg',\n    id: 'distracted',\n    _id: 'distracted000000',\n    name: 'SWADE.Distr',\n    duration: {\n      rounds: 1,\n    },\n    changes: [\n      {\n        key: 'system.status.isDistracted',\n        mode: foundry.CONST.ACTIVE_EFFECT_MODES.OVERRIDE,\n        value: 'true',\n      },\n    ],\n    system: {\n      expiration: constants.STATUS_EFFECT_EXPIRATION.EndOfTurnAuto,\n    },\n  },\n  {\n    img: 'systems/swade/assets/icons/status/status_encumbered.svg',\n    id: 'encumbered',\n    _id: 'encumbered000000',\n    name: 'SWADE.Encumbered',\n    changes: [\n      {\n        key: 'system.details.encumbrance.isEncumbered',\n        mode: foundry.CONST.ACTIVE_EFFECT_MODES.OVERRIDE,\n        value: 'true',\n      },\n    ],\n  },\n  {\n    img: 'systems/swade/assets/icons/status/status_prone.svg',\n    id: 'prone',\n    _id: 'prone00000000000',\n    name: 'SWADE.Prone',\n    changes: [\n      {\n        key: 'system.stats.parry.value',\n        value: '-2',\n        mode: foundry.CONST.ACTIVE_EFFECT_MODES.ADD,\n      },\n      {\n        key: '@Skill{Fighting}[system.die.modifier]',\n        value: '-2',\n        mode: foundry.CONST.ACTIVE_EFFECT_MODES.ADD,\n      },\n    ],\n  },\n  {\n    img: 'systems/swade/assets/icons/status/status_stunned.svg',\n    id: 'stunned',\n    _id: 'stunned000000000',\n    name: 'SWADE.Stunned',\n    duration: {\n      rounds: 1,\n    },\n    changes: [\n      {\n        key: 'system.status.isStunned',\n        mode: foundry.CONST.ACTIVE_EFFECT_MODES.OVERRIDE,\n        value: 'true',\n      },\n    ],\n    system: {\n      expiration: constants.STATUS_EFFECT_EXPIRATION.StartOfTurnPrompt,\n      loseTurnOnHold: true,\n    },\n    flags: {\n      swade: {\n        related: {\n          distracted: {},\n          prone: {},\n          vulnerable: { '-=duration': null },\n        },\n      },\n    },\n    // statuses: ['distracted', 'prone', 'vulnerable'], // TODO: After status effect handling rework\n  },\n  {\n    img: 'systems/swade/assets/icons/status/status_vulnerable.svg',\n    id: 'vulnerable',\n    _id: 'vulnerable000000',\n    name: 'SWADE.Vuln',\n    duration: {\n      rounds: 1,\n    },\n    changes: [\n      {\n        key: 'system.status.isVulnerable',\n        mode: foundry.CONST.ACTIVE_EFFECT_MODES.OVERRIDE,\n        value: 'true',\n      },\n    ],\n    system: {\n      expiration: constants.STATUS_EFFECT_EXPIRATION.EndOfTurnAuto,\n    },\n  },\n  {\n    img: 'systems/swade/assets/icons/status/status_bleeding_out.svg',\n    id: 'bleeding-out',\n    _id: 'bleedingout00000',\n    name: 'SWADE.BleedingOut',\n    duration: {\n      rounds: 1,\n    },\n    system: {\n      expiration: constants.STATUS_EFFECT_EXPIRATION.StartOfTurnPrompt,\n    },\n  },\n  {\n    img: 'systems/swade/assets/icons/status/status_diseased.svg',\n    id: 'diseased',\n    _id: 'diseased00000000',\n    name: 'SWADE.Diseased',\n  },\n  {\n    img: 'systems/swade/assets/icons/status/status_heart_attack.svg',\n    id: 'heart-attack',\n    _id: 'heartattack00000',\n    name: 'SWADE.HeartAttack',\n  },\n  {\n    img: 'systems/swade/assets/icons/status/status_on_fire.svg',\n    id: 'on-fire',\n    _id: 'onfire0000000000',\n    name: 'SWADE.OnFire',\n  },\n  {\n    img: 'systems/swade/assets/icons/status/status_poisoned.svg',\n    id: 'poisoned',\n    _id: 'poisoned00000000',\n    name: 'SWADE.Poisoned',\n  },\n  {\n    img: 'systems/swade/assets/icons/status/status_cover_shield.svg',\n    id: 'cover-shield',\n    _id: 'covershield00000',\n    name: 'SWADE.Cover.Shield',\n  },\n  {\n    img: 'systems/swade/assets/icons/status/status_cover.svg',\n    id: 'cover',\n    _id: 'cover00000000000',\n    name: 'SWADE.Cover._name',\n  },\n  {\n    img: 'systems/swade/assets/icons/status/status_reach.svg',\n    id: 'reach',\n    _id: 'reach00000000000',\n    name: 'SWADE.Reach',\n  },\n  {\n    img: 'systems/swade/assets/icons/status/status_torch.svg',\n    id: 'torch',\n    _id: 'torch00000000000',\n    name: 'SWADE.Torch',\n  },\n  {\n    img: 'systems/swade/assets/icons/status/status_burrowing.svg',\n    id: 'burrowing',\n    _id: 'burrowing0000000',\n    name: 'SWADE.Burrowing',\n    changes: [\n      {\n        key: 'system.pace.base',\n        value: 'burrow',\n        mode: foundry.CONST.ACTIVE_EFFECT_MODES.OVERRIDE,\n      },\n    ],\n  },\n  {\n    img: 'systems/swade/assets/icons/status/status_flying.svg',\n    id: 'flying',\n    _id: 'flying0000000000',\n    name: 'SWADE.Flying',\n    changes: [\n      {\n        key: 'system.pace.base',\n        value: 'fly',\n        mode: foundry.CONST.ACTIVE_EFFECT_MODES.OVERRIDE,\n      },\n    ],\n  },\n  {\n    id: 'invisible',\n    _id: 'invisible0000000',\n    name: 'EFFECT.StatusInvisible',\n    img: 'icons/svg/invisible.svg',\n  },\n  {\n    img: 'icons/svg/blind.svg',\n    id: 'blind',\n    _id: 'blind00000000000',\n    name: 'EFFECT.StatusBlind',\n  },\n  {\n    img: 'systems/swade/assets/icons/status/status_coldbodied.svg',\n    id: 'cold-bodied',\n    _id: 'coldbodied000000',\n    name: 'SWADE.ColdBodied',\n  },\n  {\n    img: 'systems/swade/assets/icons/status/status_smite.svg',\n    id: 'smite',\n    _id: 'smite00000000000',\n    name: 'SWADE.Smite',\n  },\n  {\n    img: 'systems/swade/assets/icons/status/status_protection.svg',\n    id: 'protection',\n    _id: 'protection000000',\n    name: 'SWADE.Protection',\n    duration: {\n      rounds: 5,\n    },\n    changes: [\n      {\n        key: 'system.stats.toughness.value',\n        value: '0',\n        mode: foundry.CONST.ACTIVE_EFFECT_MODES.ADD,\n      },\n      {\n        key: 'system.stats.toughness.armor',\n        value: '0',\n        mode: foundry.CONST.ACTIVE_EFFECT_MODES.ADD,\n      },\n    ],\n    system: {\n      expiration: constants.STATUS_EFFECT_EXPIRATION.EndOfTurnPrompt,\n    },\n  },\n];\n","/* eslint-disable @typescript-eslint/naming-convention */\n\nimport { AbilitySubType } from '../globals';\nimport { TemplateConfig } from '../interfaces/TemplateConfig.interface';\nimport { RollModifierGroup } from '../interfaces/additional.interface';\nimport SwadeMeasuredTemplate from './canvas/SwadeMeasuredTemplate';\nimport { constants } from './constants';\nimport { statusEffects } from './statusEffects';\n\n/** @internal */\nexport const PACKAGE_ID = 'swade';\n\n/** @internal */\nexport const SWADE: SwadeConfig = {\n  ASCII: `\n  ███████╗██╗    ██╗ █████╗ ██████╗ ███████╗\n  ██╔════╝██║    ██║██╔══██╗██╔══██╗██╔════╝\n  ███████╗██║ █╗ ██║███████║██║  ██║█████╗\n  ╚════██║██║███╗██║██╔══██║██║  ██║██╔══╝\n  ███████║╚███╔███╔╝██║  ██║██████╔╝███████╗\n  ╚══════╝ ╚══╝╚══╝ ╚═╝  ╚═╝╚═════╝ ╚══════╝`,\n\n  attributes: {\n    agility: {\n      long: 'SWADE.AttrAgi',\n      short: 'SWADE.AttrAgiShort',\n    },\n    smarts: {\n      long: 'SWADE.AttrSma',\n      short: 'SWADE.AttrSmaShort',\n    },\n    spirit: {\n      long: 'SWADE.AttrSpr',\n      short: 'SWADE.AttrSprShort',\n    },\n    strength: {\n      long: 'SWADE.AttrStr',\n      short: 'SWADE.AttrStrShort',\n    },\n    vigor: {\n      long: 'SWADE.AttrVig',\n      short: 'SWADE.AttrVigShort',\n    },\n  },\n\n  bennies: {\n    templates: {\n      refresh: 'systems/swade/templates/chat/bennies/benny-refresh.hbs',\n      refreshAll: 'systems/swade/templates/chat/bennies/benny-refresh-all.hbs',\n      add: 'systems/swade/templates/chat/bennies/benny-add.hbs',\n      spend: 'systems/swade/templates/chat/bennies/benny-spend.hbs',\n      gmadd: 'systems/swade/templates/chat/bennies/benny-gmadd.hbs',\n      joker: 'systems/swade/templates/chat/jokers-wild.hbs',\n    },\n  },\n\n  conviction: {\n    // icon: 'systems/swade/assets/bennie.webp',\n    templates: {\n      start: 'systems/swade/templates/chat/conviction/start.hbs',\n      end: 'systems/swade/templates/chat/conviction/end.hbs',\n    },\n  },\n\n  vehicles: {\n    maxHandlingPenalty: -4,\n  },\n\n  settingConfig: {\n    settings: [\n      'coreSkills',\n      'coreSkillsCompendium',\n      'enableConviction',\n      'jokersWild',\n      'vehicleMods',\n      'vehicleEnergy',\n      'vehicleEdges',\n      'vehicleSkills',\n      'enableWoundPace',\n      'ammoManagement',\n      'ammoFromInventory',\n      'npcAmmo',\n      'vehicleAmmo',\n      'noPowerPoints',\n      'alwaysGeneralPP',\n      'wealthType',\n      'currencyName',\n      'npcsUseCurrency',\n      'hardChoices',\n      'dumbLuck',\n      'grittyDamage',\n      'woundCap',\n      'unarmoredHero',\n      'heroesNeverDie',\n      'injuryTable',\n      'actionDeck',\n      'applyEncumbrance',\n      'actionDeckDiscardPile',\n      'pcStartingCurrency',\n      'npcStartingCurrency',\n      'armorStacking',\n      'staticGmBennies',\n      'gmBennies',\n      'bennyImageSheet',\n      'bennyImage3DFront',\n      'bennyImage3DBack',\n      '3dBennyFrontBump',\n      '3dBennyBackBump',\n    ],\n  },\n\n  diceConfig: { flags: {} },\n\n  statusEffects: statusEffects,\n\n  negativeStatusEffects: [\n    'shaken',\n    'incapacitated',\n    'dead',\n    'bound',\n    'entangled',\n    'frightened',\n    'distracted',\n    'encumbered',\n    'prone',\n    'stunned',\n    'vulnerable',\n    'bleeding-out',\n    'diseased',\n    'heart-attack',\n    'on-fire',\n    'poisoned',\n    'blind',\n  ],\n\n  wildCardIcons: {\n    regular: 'systems/swade/assets/ui/wildcard.svg',\n    compendium: 'systems/swade/assets/ui/wildcard-dark.svg',\n  },\n\n  measuredTemplatePresets: [\n    {\n      data: { t: CONST.MEASURED_TEMPLATE_TYPES.CONE, distance: 4, width: 2 },\n      button: {\n        name: constants.TEMPLATE_PRESET.SCONE,\n        title: 'SWADE.Templates.SmallCone.Long',\n        icon: 'fa-solid fa-location-minus fa-rotate-90',\n        visible: true,\n        button: true,\n        onClick: () => {\n          SwadeMeasuredTemplate.fromPreset(constants.TEMPLATE_PRESET.SCONE);\n        },\n      },\n    },\n    {\n      data: { t: CONST.MEASURED_TEMPLATE_TYPES.CONE, distance: 9, width: 3 },\n      button: {\n        name: constants.TEMPLATE_PRESET.CONE,\n        title: 'SWADE.Templates.Cone.Long',\n        icon: 'fa-solid fa-location-plus fa-rotate-90',\n        visible: true,\n        button: true,\n        onClick: () => {\n          SwadeMeasuredTemplate.fromPreset(constants.TEMPLATE_PRESET.CONE);\n        },\n      },\n    },\n    {\n      data: {\n        t: foundry.CONST.MEASURED_TEMPLATE_TYPES.RAY,\n        distance: 12,\n        width: 1,\n      },\n      button: {\n        name: constants.TEMPLATE_PRESET.STREAM,\n        title: 'SWADE.Templates.Stream.Long',\n        icon: 'fa-solid fa-rectangle-wide',\n        visible: true,\n        button: true,\n        onClick: () => {\n          SwadeMeasuredTemplate.fromPreset(constants.TEMPLATE_PRESET.STREAM);\n        },\n      },\n    },\n    {\n      data: { t: CONST.MEASURED_TEMPLATE_TYPES.CIRCLE, distance: 1 },\n      button: {\n        name: constants.TEMPLATE_PRESET.SBT,\n        title: 'SWADE.Templates.Small.Long',\n        icon: 'fa-solid fa-circle-1 fa-2xs',\n        visible: true,\n        button: true,\n        onClick: () => {\n          SwadeMeasuredTemplate.fromPreset(constants.TEMPLATE_PRESET.SBT);\n        },\n      },\n    },\n    {\n      data: { t: CONST.MEASURED_TEMPLATE_TYPES.CIRCLE, distance: 2 },\n      button: {\n        name: constants.TEMPLATE_PRESET.MBT,\n        title: 'SWADE.Templates.Medium.Long',\n        icon: 'fa-solid fa-circle-2 fa-sm',\n        visible: true,\n        button: true,\n        onClick: () => {\n          SwadeMeasuredTemplate.fromPreset(constants.TEMPLATE_PRESET.MBT);\n        },\n      },\n    },\n    {\n      data: { t: CONST.MEASURED_TEMPLATE_TYPES.CIRCLE, distance: 3 },\n      button: {\n        name: constants.TEMPLATE_PRESET.LBT,\n        title: 'SWADE.Templates.Large.Long',\n        icon: 'fa-solid fa-circle-3 fa-lg',\n        visible: true,\n        button: true,\n        onClick: () => {\n          SwadeMeasuredTemplate.fromPreset(constants.TEMPLATE_PRESET.LBT);\n        },\n      },\n    },\n  ],\n\n  activeMeasuredTemplatePreview: null,\n\n  abilitySheet: {\n    special: {\n      dropdown: 'SWADE.SpecialAbility',\n    },\n    ancestry: {\n      dropdown: 'SWADE.Ancestry',\n    },\n    archetype: {\n      dropdown: 'SWADE.Archetype',\n    },\n  },\n\n  prototypeRollGroups: [\n    {\n      name: 'SWADE.ModTrait',\n      modifiers: [\n        { label: 'SWADE.Running', value: -2 },\n        { label: 'SWADE.TargetVulnerable', value: '+2' },\n        { label: 'SWADE.Encumbered', value: -2 },\n        { label: 'SWADE.Unfamiliar.2', value: -2 },\n        { label: 'SWADE.Unfamiliar.4', value: -4 },\n      ],\n      rollType: constants.ROLL_TYPE.TRAIT,\n    },\n    {\n      name: 'SWADE.ModAttack',\n      modifiers: [\n        { label: 'SWADE.Aiming', value: '+2' },\n        { label: 'SWADE.Snapfire', value: -2 },\n        { label: 'SWADE.UnstablePlatform', value: -2 },\n        { label: 'SWADE.CalledShot.Hand', value: -4 },\n        { label: 'SWADE.CalledShot.HeadOrVitals', value: -4 },\n        { label: 'SWADE.CalledShot.Limbs', value: -2 },\n        { label: 'SWADE.DesperateAttack.2', value: '+2' },\n        { label: 'SWADE.DesperateAttack.4', value: '+4' },\n      ],\n      rollType: constants.ROLL_TYPE.ATTACK,\n    },\n    {\n      name: 'SWADE.ModDamage',\n      modifiers: [\n        { label: 'SWADE.CalledShot.HeadOrVitals', value: '+4' },\n        { label: 'SWADE.Weakness', value: '+4' },\n        { label: 'SWADE.Resistance', value: -4 },\n        { label: 'SWADE.DesperateAttack.2', value: -2 },\n        { label: 'SWADE.DesperateAttack.4', value: -4 },\n      ],\n      rollType: constants.ROLL_TYPE.DAMAGE,\n    },\n    {\n      name: 'SWADE.Range._name',\n      modifiers: [\n        { label: 'SWADE.Range.Medium', value: -2 },\n        { label: 'SWADE.Range.Long', value: -4 },\n        { label: 'SWADE.Range.Extreme', value: -8 },\n      ],\n      rollType: constants.ROLL_TYPE.TRAIT,\n    },\n    {\n      name: 'SWADE.Cover._name',\n      modifiers: [\n        { label: 'SWADE.Cover.Light', value: -2 },\n        { label: 'SWADE.Cover.Medium', value: -4 },\n        { label: 'SWADE.Cover.Heavy', value: -6 },\n        { label: 'SWADE.Cover.Total', value: -8 },\n      ],\n      rollType: constants.ROLL_TYPE.TRAIT,\n    },\n    {\n      name: 'SWADE.Illumination._name',\n      modifiers: [\n        { label: 'SWADE.Illumination.Dim', value: -2 },\n        { label: 'SWADE.Illumination.Dark', value: -4 },\n        { label: 'SWADE.Illumination.Pitch', value: -6 },\n      ],\n      rollType: constants.ROLL_TYPE.TRAIT,\n    },\n  ],\n\n  CONST: constants,\n\n  ranks: [\n    'SWADE.Ranks.Novice',\n    'SWADE.Ranks.Seasoned',\n    'SWADE.Ranks.Veteran',\n    'SWADE.Ranks.Heroic',\n    'SWADE.Ranks.Legendary',\n  ],\n\n  scales: [\n    'SWADE.Scales.Names.Tiny',\n    'SWADE.Scales.Names.VerySmall',\n    'SWADE.Scales.Names.Small',\n    'SWADE.Scales.Names.Normal',\n    'SWADE.Scales.Names.Large',\n    'SWADE.Scales.Names.Huge',\n    'SWADE.Scales.Names.Gargantuan',\n  ],\n\n  textSearch: {\n    actor: [\n      'system.category',\n      'system.details.archetype',\n      'system.details.appearance',\n      'system.details.notes',\n      'system.details.goals',\n      'system.details.biography.value',\n      'system.details.species.name',\n      'system.details.advances.rank',\n      'classification',\n      'description',\n    ],\n    adventure: [],\n    cards: [],\n    item: [\n      'system.description',\n      'system.notes',\n      'system.subtype',\n      'system.arcane',\n      'system.trapping',\n    ],\n    journalentry: [\n      'pages'\n    ],\n    macro: [],\n    playlist: [],\n    rolltable: [],\n    scene: [],\n  },\n\n  swid: {\n    ignoreSystem: false,\n  },\n};\n\n/** @internal */\nexport interface SwadeConfig {\n  //a piece of ASCII art for the init log message\n  ASCII: string;\n  CONST: typeof constants;\n  //An object to store localization strings\n  attributes: {\n    agility: {\n      long: string;\n      short: string;\n    };\n    smarts: {\n      long: string;\n      short: string;\n    };\n    spirit: {\n      long: string;\n      short: string;\n    };\n    strength: {\n      long: string;\n      short: string;\n    };\n    vigor: {\n      long: string;\n      short: string;\n    };\n  };\n  bennies: {\n    templates: {\n      refresh: string;\n      refreshAll: string;\n      add: string;\n      spend: string;\n      gmadd: string;\n      joker: string;\n    };\n  };\n  conviction: {\n    icon?: string;\n    templates: {\n      start: string;\n      end: string;\n    };\n  };\n  vehicles: {\n    maxHandlingPenalty: number;\n  };\n  settingConfig: {\n    settings: Array<string>;\n  };\n  diceConfig: {\n    flags: Record<string, any>;\n  };\n  swid: {\n    ignoreSystem: boolean;\n  };\n  statusEffects: CONFIG.StatusEffect[];\n  negativeStatusEffects: string[];\n  wildCardIcons: {\n    regular: string;\n    compendium: string;\n  };\n  measuredTemplatePresets: Array<TemplateConfig>;\n  activeMeasuredTemplatePreview: SwadeMeasuredTemplate | null;\n  abilitySheet: Record<AbilitySubType, { dropdown: string }>;\n  prototypeRollGroups: RollModifierGroup[];\n  ranks: string[];\n  scales: string[];\n  textSearch: {\n    scene: Array<string>;\n    rolltable: Array<string>;\n    playlist: Array<string>;\n    macro: Array<string>;\n    journalentry: Array<string>;\n    item: Array<string>;\n    cards: Array<string>;\n    adventure: Array<string>;\n    actor: Array<string>;\n  };\n}\n","import { ValueOf } from 'fvtt-types/utils';\nimport { PACKAGE_ID } from './config';\n\nexport class Logger {\n  static PACKAGE_ID = PACKAGE_ID;\n\n  static LOG_LEVEL = {\n    Debug: 0,\n    Log: 1,\n    Info: 2,\n    Warn: 3,\n    Error: 4,\n  } as const;\n\n  static log({\n    msg,\n    level,\n    options: { force, toast, permanent, localize } = {},\n  }: LogMessage) {\n    const isDebugging = game.modules\n      .get('_dev-mode')\n      //@ts-expect-error adding an API to the module data is common practice\n      ?.api?.getPackageDebugValue(Logger.PACKAGE_ID);\n    const prefix = Logger.PACKAGE_ID + ' | ';\n    switch (level) {\n      case Logger.LOG_LEVEL.Error:\n        console.error(prefix, localize ? game.i18n.localize(msg) : msg);\n        if (toast)\n          ui.notifications.error(msg.toString(), {\n            permanent,\n            localize,\n            console: false,\n          });\n        break;\n      case Logger.LOG_LEVEL.Warn:\n        console.warn(prefix, localize ? game.i18n.localize(msg) : msg);\n        if (toast)\n          ui.notifications.warn(msg.toString(), {\n            permanent,\n            localize,\n            console: false,\n          });\n        break;\n      case Logger.LOG_LEVEL.Info:\n        console.info(prefix, localize ? game.i18n.localize(msg) : msg);\n        if (toast)\n          ui.notifications.info(msg.toString(), {\n            permanent,\n            localize,\n            console: false,\n          });\n        break;\n      case Logger.LOG_LEVEL.Debug:\n        if (!force && !isDebugging) break;\n        console.debug(prefix, localize ? game.i18n.localize(msg) : msg);\n        if (toast)\n          ui.notifications.info(msg.toString(), {\n            permanent,\n            localize,\n            console: false,\n          });\n        break;\n      case Logger.LOG_LEVEL.Log:\n      default:\n        if (!force && !isDebugging) break;\n        console.log(prefix, localize ? game.i18n.localize(msg) : msg);\n        if (toast)\n          ui.notifications.info(msg.toString(), { permanent, console: false });\n        break;\n    }\n  }\n\n  static error(msg: any | string, options?: LogMessageOptions) {\n    Logger.log({ msg, level: Logger.LOG_LEVEL.Error, options });\n  }\n\n  static warn(msg: any | string, options?: LogMessageOptions) {\n    Logger.log({ msg, level: Logger.LOG_LEVEL.Warn, options });\n  }\n\n  static info(msg: any | string, options?: LogMessageOptions) {\n    Logger.log({ msg, level: Logger.LOG_LEVEL.Info, options });\n  }\n\n  static debug(msg: any | string, options?: LogMessageOptions) {\n    Logger.log({ msg, level: Logger.LOG_LEVEL.Debug, options });\n  }\n}\n\ninterface LogMessage {\n  /** The message or data to log */\n  msg: any;\n  options?: LogMessageOptions;\n  /** The log level @see {@link Logger.LOG_LEVEL} */\n  level: ValueOf<typeof Logger.LOG_LEVEL>;\n}\n\ninterface LogMessageOptions\n  extends foundry.applications.ui.Notifications.NotifyOptions {\n  force?: boolean;\n  toast?: boolean;\n}\n\nui.notifications;\n","import { DieSidesOption } from '../globals';\nimport { RollModifier } from '../interfaces/additional.interface';\nimport { Logger } from './Logger';\nimport { SWADE } from './config';\nimport { constants } from './constants';\nimport SwadeUser from './documents/SwadeUser';\nimport SwadeActor from './documents/actor/SwadeActor';\nimport SwadeItem from './documents/item/SwadeItem';\n\n/**\n * @internal\n * @param string The string to look for\n * @param localize Switch which determines if the string is a localization key\n */\nexport function notificationExists(string: string, localize = true): boolean {\n  let stringToFind = string;\n  if (localize) stringToFind = game.i18n.localize(string);\n  const active = ui.notifications.active || [];\n  return active.some((n) => n.text() === stringToFind);\n}\n\n/** @internal */\nexport async function shouldShowBennyAnimation(): Promise<boolean> {\n  const value = game.user?.getFlag('swade', 'dsnShowBennyAnimation');\n  const defaultValue = foundry.utils.getProperty(\n    SWADE,\n    'diceConfig.flags.dsnShowBennyAnimation.default',\n  ) as boolean;\n\n  if (typeof value === 'undefined') {\n    await game.user?.setFlag('swade', 'dsnShowBennyAnimation', defaultValue);\n    return defaultValue;\n  } else {\n    return value;\n  }\n}\n\n/**\n * @internal\n * @param traitName The name of the trait to be found\n * @param actor The actor to find it from\n * @returns Returns a string of the trait name in the data model if it's an attribute or an Item if it is a skill. If it can find neither an attribute nor a skill then it returns null\n */\nexport function getTrait(\n  traitName: string,\n  actor: SwadeActor,\n): SwadeItem | string | undefined {\n  let trait: SwadeItem | string | undefined = undefined;\n  for (const attr of Object.keys(SWADE.attributes)) {\n    const attributeName = game.i18n.localize(SWADE.attributes[attr].long);\n    if (attributeName === traitName) {\n      trait = attr;\n    }\n  }\n  if (!trait) {\n    trait = actor.items.find((i) => i.type === 'skill' && i.name === traitName);\n  }\n  if (!trait) {\n    trait = actor.items.find(\n      (i) => i.type === 'skill' && i.system.swid === slugify(traitName),\n    );\n  }\n  return trait;\n}\n\n/** @internal */\nexport async function reshuffleActionDeck() {\n  const deck = game.cards?.get(game.settings.get('swade', 'actionDeck'));\n  await deck?.recall({ chatNotification: false });\n  await deck?.shuffle({ chatNotification: false });\n}\n\n/**\n * @internal\n * A generic reducer function that can be used to reduce an array of trait roll modifiers into a string that can be parsed by the Foundry VTT Roll class\n * @param acc The accumulator string\n * @param cur The current trait roll modifier\n * @returns A string which contains all trait roll modifiers, reduced into a parsable string\n */\nexport function modifierReducer(acc: string, cur: RollModifier): string {\n  if (typeof cur.value === 'string' && cur.value.startsWith('@')) {\n    return (acc += '+' + cur.value);\n  }\n  return (acc += `${cur.value}[${cur.label}]`);\n}\n\n/** Normalize a given modifier value to a string for display and evaluation */\nexport function normalizeRollModifiers(mod: RollModifier): RollModifier {\n  let normalizedValue: string;\n  if (typeof mod.value === 'string') {\n    //if the modifier starts with a reserved symbol take it as is\n    if (mod.value[0].match(/[@+-]/)) {\n      normalizedValue = mod.value;\n    } else if (Number.isNumeric(mod.value)) {\n      normalizedValue = mod.value ? signedNumberString(mod.value) : '+0';\n    } else {\n      normalizedValue = '+' + mod.value;\n    }\n  } else if (typeof mod.value === 'number') {\n    normalizedValue = signedNumberString(mod.value);\n  } else {\n    throw new Error('Invalid modifier value ' + mod.value);\n  }\n  return {\n    value: normalizedValue,\n    label: mod.label,\n    ignore: mod.ignore,\n  };\n}\n\nfunction signedNumberString(value: unknown): string {\n  if (typeof value === 'number') return (value < 0 ? '' : '+') + value;\n  else return '+0';\n}\n\nexport function addUpModifiers(acc: number, cur: RollModifier) {\n  if (cur.ignore) return acc;\n  return (acc += Number(cur.value));\n}\n\n/** @internal */\nexport function firstOwner(doc) {\n  /* null docs could mean an empty lookup, null docs are not owned by anyone */\n  if (!doc) return;\n  const ownership: Ownership =\n    (doc instanceof TokenDocument ? doc.actor?.ownership : doc.ownership) ?? {};\n  const playerOwners = Object.entries(ownership)\n    .filter(([id, level]) => {\n      const user = game.users?.get(id);\n      return (\n        user?.active &&\n        !user.isGM &&\n        level === CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER\n      );\n    })\n    .map(([id, _level]) => id);\n\n  if (playerOwners.length > 0) {\n    return game.users?.get(playerOwners[0]);\n  }\n\n  /* if no online player owns this actor, fall back to first GM */\n  return firstGM();\n}\n\n/**\n * @internal\n * Players first, then GM\n */\nexport function isFirstOwner(doc) {\n  return firstOwner(doc)?.isSelf;\n}\n\n/** @internal */\nexport function firstGM() {\n  return game.users!.activeGM as SwadeUser | null;\n}\n\n/** @internal */\nexport function isFirstGM() {\n  return firstGM()?.isSelf ?? false;\n}\n\n/** @internal */\nexport function getRankFromAdvance(advance: number): number {\n  if (advance <= 3) {\n    return constants.RANK.NOVICE;\n  } else if (advance.between(4, 7)) {\n    return constants.RANK.SEASONED;\n  } else if (advance.between(8, 11)) {\n    return constants.RANK.VETERAN;\n  } else if (advance.between(12, 15)) {\n    return constants.RANK.HEROIC;\n  } else {\n    return constants.RANK.LEGENDARY;\n  }\n}\n\n/** @internal */\nexport function getScaleName(scaleMod: number): string {\n  const modMax = 6;\n\n  if (scaleMod < -modMax) {\n    return game.i18n.format('SWADE.Scales.SmallerThan', {\n      scale: getScaleName(-modMax),\n    });\n  }\n  if (scaleMod > modMax) {\n    return game.i18n.format('SWADE.Scales.LargerThan', {\n      scale: getScaleName(modMax),\n    });\n  }\n  const index = Math.floor((scaleMod + modMax) / 2);\n  return SWADE.scales[index];\n}\n\n/** @internal */\nexport function getRankFromAdvanceAsString(advance: number): string {\n  return SWADE.ranks[getRankFromAdvance(advance)];\n}\n\n/** @internal */\nexport async function copyToClipboard(textToCopy: string) {\n  await game.clipboard.copyPlainText(textToCopy);\n  ui.notifications.info('Copied to clipboard');\n}\n\n/** @internal */\nexport function getStatusEffectDataById(idToSearchFor: string) {\n  const filter = (e: any) => e.id === idToSearchFor;\n  const data =\n    CONFIG.statusEffects.find(filter) || SWADE.statusEffects.find(filter);\n  // Future deprecation - removing this would require deeper API changes\n  // foundry.utils.logCompatibilityWarning(\n  //   'You are accessing `game.swade.util.getStatusEffectDataById`. ' +\n  //     'This is now deprecated in favor of `ActiveEffect.fromStatusEffect`, which returns a temporary active effect for use',\n  //   {\n  //     since: '4.0',\n  //     until: '5.0',\n  //   },\n  // );\n  return data as CONFIG.StatusEffect | undefined;\n}\n/** @internal */\nexport function getDieSidesRange(\n  minimumSides: number,\n  maximumSides: number,\n): DieSidesOption[] {\n  const options: DieSidesOption[] = [\n    { key: 1, label: '1' },\n    { key: 4, label: 'd4' },\n    { key: 6, label: 'd6' },\n    { key: 8, label: 'd8' },\n    { key: 10, label: 'd10' },\n    { key: 12, label: 'd12' },\n    { key: 14, label: 'd12+1' },\n    { key: 16, label: 'd12+2' },\n    { key: 18, label: 'd12+3' },\n    { key: 20, label: 'd12+4' },\n    { key: 22, label: 'd12+5' },\n    { key: 24, label: 'd12+6' },\n  ];\n  return options.filter((x) => x.key >= minimumSides && x.key <= maximumSides);\n}\n\n/** @internal */\nexport function getKeyByValue(object, value) {\n  return Object.keys(object).find((key) => object[key] === value);\n}\n\n/**\n * @internal\n * @source https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze#examples\n */\nexport function deepFreeze(object) {\n  // Retrieve the property names defined on object\n  const propNames = Reflect.ownKeys(object);\n  // Freeze properties before freezing self\n  for (const name of propNames) {\n    const value = object[name];\n    if ((value && typeof value === 'object') || typeof value === 'function') {\n      deepFreeze(value);\n    }\n  }\n  return Object.freeze(object);\n}\n\n/** @internal */\nexport function isObject(value) {\n  return !!value && typeof value === 'object' && !Array.isArray(value);\n}\n\n/** Separates an array into a series of smaller arrays of a given size */\nexport function chunkArray<T>(array: T[], size: number): Array<T[]> {\n  const result: Array<T[]> = [];\n  for (let i = 0; i < array.length; i += size) {\n    const chunk = array.slice(i, i + size);\n    result.push(chunk);\n  }\n  return result;\n}\n\n/** Maps a number from a given range to an equivalent number of another range */\nexport function mapRange(\n  num: number,\n  inMin: number,\n  inMax: number,\n  outMin: number,\n  outMax: number,\n): number {\n  if (inMin === inMax || outMin === outMax) return 0;\n  const mapped = ((num - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin;\n  return Math.clamp(mapped, outMin, outMax);\n}\n\n/**\n * @param arr The array to count in\n * @param condition A function that represents a condition and returns a boolean\n * @returns the number of items in the array that fulfill the condition\n */\nexport function count<T>(arr: Array<T>, condition: (e: T) => boolean): number {\n  return arr.filter(condition).length;\n}\n\n/** Takes an input and returns the slugged string of it. */\nexport function slugify(input: unknown) {\n  const slugged = String(input)\n    .normalize('NFKD') // split accented characters into their base characters and diacritical marks\n    .replace(/[\\u0300-\\u036f]/g, '') // remove all the accents, which happen to be all in the \\u03xx UNICODE block.\n    .toLowerCase() // convert to lowercase\n    .replace(/[^a-z0-9 -]/g, '') // remove non-alphanumeric characters\n    .replace(/\\s+/g, '-') // replace spaces with hyphens\n    .replace(/-+/g, '-') // remove consecutive hyphens\n    .replace(/^-+/g, '') //remove leading hyphens\n    .replace(/-+$/g, '') //remove trailing hyphens\n    .trim(); // trim leading or trailing whitespace\n  Logger.debug([input, slugged]);\n  return slugged;\n}\n\n/**\n * Convert a template string into HTML DOM nodes\n * @param str The template string\n * @returns The template HTML\n */\nexport function stringToHTML<T extends Element = Element>(str: string): T {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(str, 'text/html');\n  return doc.body.firstElementChild as T;\n}\n\n/**\n * Utility function to create an HTML element for the purpose of storing embed content.\n * TODO: Evaluate if this is better somewhere else\n * @param objectToEmbed The object that the embed is for\n * @param template The handlebars template path to use\n * @param className The class name to attach to the outermost element for purposes of controlled styling\n */\nexport async function createEmbedElement(\n  objectToEmbed: any,\n  template: string,\n  className: string[],\n): Promise<HTMLElement | HTMLCollection | null> {\n  const content = await foundry.applications.handlebars.renderTemplate(template, objectToEmbed);\n  const elem = document.createElement('div');\n  elem.classList;\n  elem.className = className.join(' ');\n  elem.innerHTML = content;\n  return elem;\n}\n\n/**\n * Searches world items and compendium collections for all items that match the given SWID, optionally narrowing down the search by item type\n * @param swid the swid to look for\n * @param type An optional item type for narrowing the possible list of resulting items\n * @returns a list of items that has matched the swid and type\n */\nexport async function getItemsBySwid<T extends Item.SubType>(\n  swid: string,\n  type?: T,\n): Promise<SwadeItem<T>[]> {\n  //get world items first\n  let items: SwadeItem[] = game.items.filter((i) => i.system.swid === swid);\n  //filter by type if necessary\n  if (type) items = items.filter((i) => i.type === type);\n\n  //get compendium items next\n  let itemPacks = game.packs.filter((p) => p.documentName === 'Item');\n  //remove system compendium\n  if (SWADE.swid.ignoreSystem) {\n    itemPacks = itemPacks.filter((p) => p.metadata.packageName !== 'swade');\n  }\n  for (const pack of itemPacks) {\n    await pack.getIndex();\n    const index = pack.index.filter((i) => i.system?.swid === swid);\n    const ids = index.map((e) => e._id);\n    if (ids.length < 1) continue;\n    const query: Record<string, unknown> = { _id__in: ids };\n    //filter by type if necessary\n    if (type) query.type = type;\n    const documents = await pack.getDocuments(query);\n    items.push(...documents);\n  }\n  return items;\n}\n\ntype Ownership = Record<string, number>;\n","import { AdditionalStat } from '../interfaces/additional.interface';\nimport SwadeActor from './documents/actor/SwadeActor';\nimport SwadeItem from './documents/item/SwadeItem';\nimport { Logger } from './Logger';\nimport { copyToClipboard } from './util';\n\n/**\n * Produce short, plaintext summaries of the most important aspects of an Actor's character sheet.\n */\nexport default class CharacterSummarizer {\n  actor: SwadeActor;\n  summary: string;\n\n  constructor(actor: SwadeActor) {\n    this.actor = actor;\n\n    if (!CharacterSummarizer.isSupportedActorType(actor)) {\n      ui.notifications.error(\n        game.i18n.format('SWADE.CharacterSummaryTypeErr', { type: actor.type }),\n      );\n      this.summary = '';\n      return;\n    }\n    this.summary = this._makeSummary();\n  }\n\n  static isSupportedActorType(char: SwadeActor): boolean {\n    return char.type === 'character' || char.type === 'npc';\n  }\n\n  static summarizeCharacters(chars: SwadeActor[]) {\n    for (const char of chars) {\n      const s = new game.swade.CharacterSummarizer(char);\n      CharacterSummarizer._showDialog(s);\n    }\n  }\n\n  static _showDialog(summarizer: CharacterSummarizer) {\n    if (summarizer.getSummary() === '') return;\n\n    const d = new Dialog({\n      title: game.i18n.localize('SWADE.CharacterSummary'),\n      content: summarizer.getSummary(),\n      buttons: {\n        close: {\n          label: game.i18n.localize('SWADE.Ok'),\n        },\n        copyHtml: {\n          label: game.i18n.localize('SWADE.CopyHtml'),\n          callback: () => {\n            summarizer.copySummaryHtml();\n          },\n        },\n        copyMarkdown: {\n          label: game.i18n.localize('SWADE.CopyMarkdown'),\n          callback: () => {\n            summarizer.copySummaryMarkdown();\n          },\n        },\n      },\n      default: 'close',\n    });\n    d.render(true);\n  }\n\n  // Util method for calling this code from macros\n  getSummary() {\n    return this.summary;\n  }\n\n  copySummaryHtml() {\n    copyToClipboard(this.summary);\n  }\n\n  copySummaryMarkdown() {\n    // as the HTML is so simple here, just going to convert\n    // it inline.\n    const markdownSummary = this.summary\n      .replace(/<\\/?p>/g, '\\n')\n      .replace(/<br\\/?>/g, '\\n')\n      .replace(/<\\/?strong>/g, '*')\n      .replace(/<h1>/g, '# ')\n      .replace(/<\\/h1>/g, '\\n')\n      .replace(/&mdash;/g, '—');\n\n    copyToClipboard(markdownSummary);\n  }\n\n  _makeSummary() {\n    let summary = `<h1>${this.actor.name}</h1>`;\n\n    // Basic character information block\n    summary +=\n      '<p><strong>' + game.i18n.localize('SWADE.Ancestry') + '</strong>: ';\n    summary +=\n      this.actor.ancestry?.name ??\n      foundry.utils.getProperty(this.actor.system, 'details.species.name');\n    summary +=\n      '<br/><strong>' + game.i18n.localize('SWADE.Rank') + '</strong>: ';\n    summary += foundry.utils.getProperty(this.actor.system, 'advances.rank');\n    summary +=\n      ' (' + foundry.utils.getProperty(this.actor.system, 'advances.value');\n    summary += ' ' + game.i18n.localize('SWADE.Adv');\n    summary +=\n      ')<br/><strong>' + game.i18n.localize('SWADE.Bennies') + '</strong>: ';\n    summary +=\n      foundry.utils.getProperty(this.actor.system, 'bennies.max') + '</p>';\n\n    // Attributes\n    const attributes = new Array();\n    attributes.push(\n      game.i18n.localize('SWADE.AttrAgiShort') +\n        ' ' +\n        this._formatDieStat(this.actor, 'attributes.agility.die'),\n    );\n    attributes.push(\n      game.i18n.localize('SWADE.AttrSmaShort') +\n        ' ' +\n        this._formatDieStat(this.actor, 'attributes.smarts.die'),\n    );\n    attributes.push(\n      game.i18n.localize('SWADE.AttrSprShort') +\n        ' ' +\n        this._formatDieStat(this.actor, 'attributes.spirit.die'),\n    );\n    attributes.push(\n      game.i18n.localize('SWADE.AttrStrShort') +\n        ' ' +\n        this._formatDieStat(this.actor, 'attributes.strength.die'),\n    );\n    attributes.push(\n      game.i18n.localize('SWADE.AttrVigShort') +\n        ' ' +\n        this._formatDieStat(this.actor, 'attributes.vigor.die'),\n    );\n    summary += this._formatList(\n      attributes,\n      game.i18n.localize('SWADE.Attributes'),\n    );\n\n    // Speed, pace, toughness\n    summary +=\n      '<p><strong>' +\n      game.i18n.localize('SWADE.Pace') +\n      '</strong>: ' +\n      foundry.utils.getProperty(this.actor.system, 'stats.speed.value') +\n      ', ';\n    summary +=\n      '<strong>' +\n      game.i18n.localize('SWADE.Parry') +\n      '</strong>: ' +\n      foundry.utils.getProperty(this.actor.system, 'stats.parry.value') +\n      ', ';\n    summary +=\n      '<strong>' +\n      game.i18n.localize('SWADE.Tough') +\n      '</strong>: ' +\n      foundry.utils.getProperty(this.actor.system, 'stats.toughness.value');\n    summary +=\n      ' (' +\n      foundry.utils.getProperty(this.actor.system, 'stats.toughness.armor') +\n      ')</p>';\n\n    // Items - skills, powers, gear, etc\n    const skills = new Array<string>();\n    const edges = new Array<string>();\n    const hindrances = new Array<string>();\n    const weaponsAndArmour = new Array<string>();\n    const gear = new Array<string>();\n    const powers = new Array<string>();\n    const abilities = new Array<string>();\n    const consumables = new Array<string>();\n\n    for (const item of this.actor.items) {\n      switch (item.type) {\n        case 'skill':\n          skills.push(item.name + ' ' + this._formatDieStat(item, 'die'));\n          break;\n        case 'edge':\n          edges.push(item.name as string);\n          break;\n        case 'hindrance':\n          hindrances.push(item.name as string);\n          break;\n        case 'weapon':\n          weaponsAndArmour.push(\n            `${item.name} (${item.system.damage}, ${item.system.range}, ` +\n              `${game.i18n.localize('SWADE.Ap')}${item.system.ap}, ` +\n              `${game.i18n.localize('SWADE.RoF')}${item.system.rof})`,\n          );\n          break;\n        case 'armor':\n          weaponsAndArmour.push(`${item.name} (${item.system.armor})`);\n          break;\n        case 'shield':\n          weaponsAndArmour.push(\n            `${item.name} (+${item.system.parry} / ${item.system.cover})`,\n          );\n          break;\n        case 'gear':\n          gear.push(item.name as string);\n          break;\n        case 'power':\n          powers.push(item.name as string);\n          break;\n        case 'ability':\n          abilities.push(item.name as string);\n          break;\n        case 'consumable':\n          consumables.push(item.name as string);\n          break;\n        case 'action':\n          continue; //skip the rendering of actions\n        default:\n          Logger.error(`Item ${item.name} has unknown type ${item.type}`, {\n            toast: true,\n          });\n      }\n    }\n\n    summary += this._formatList(skills, game.i18n.localize('SWADE.Skills'));\n    summary += this._formatList(edges, game.i18n.localize('SWADE.Edges'));\n    summary += this._formatList(\n      hindrances,\n      game.i18n.localize('SWADE.Hindrances'),\n    );\n\n    summary += this._formatList(\n      weaponsAndArmour,\n      game.i18n.localize('SWADE.WeaponsAndArmor'),\n    );\n    summary += this._formatList(\n      consumables,\n      game.i18n.localize('SWADE.Consumable.Consumables'),\n    );\n    summary += this._formatList(gear, game.i18n.localize('SWADE.Inv'));\n    summary += this._formatList(powers, game.i18n.localize('SWADE.Pow'));\n    summary += this._formatList(\n      abilities,\n      game.i18n.localize('SWADE.SpecialAbilities'),\n    );\n\n    // Additional stats\n    const additionalStats = new Array<string>();\n    for (const key in this.actor.system.additionalStats) {\n      const stat = this.actor.system.additionalStats[key] as AdditionalStat;\n      switch (stat.dtype) {\n        case 'Selection':\n        case 'String':\n          additionalStats.push(`${stat.label}: ${stat.value}`);\n          break;\n        case 'Number':\n          if (stat.hasMaxValue) {\n            additionalStats.push(`${stat.label}: ${stat.value}/${stat.max}`);\n          } else {\n            additionalStats.push(`${stat.label}: ${stat.value}`);\n          }\n          break;\n        case 'Die':\n          additionalStats.push(\n            `${stat.label}: ${stat.value}` +\n              this._formatModifier(stat.modifier),\n          );\n          break;\n        case 'Boolean':\n          if (stat.value) {\n            additionalStats.push(\n              `${stat.label}: ${game.i18n.localize('SWADE.Yes')}`,\n            );\n          } else {\n            additionalStats.push(\n              `${stat.label}: ${game.i18n.localize('SWADE.No')}`,\n            );\n          }\n          break;\n        default:\n          Logger.error(\n            `For ${key}, cannot process additionalStat of type ${stat.dtype}`,\n            { toast: true },\n          );\n      }\n    }\n\n    summary += this._formatList(\n      additionalStats,\n      game.i18n.localize('SWADE.AddStats'),\n    );\n\n    return summary;\n  }\n\n  private _formatList(list: string[], name: string) {\n    if (list.length === 0) {\n      list.push('&mdash;');\n    }\n    list.sort((a, b) => a.localeCompare(b));\n    let val = `<p><strong>${name}</strong>: `;\n    val += list.join(', ');\n    val += '</p>';\n    return val;\n  }\n\n  private _formatDieStat(document: SwadeItem | SwadeActor, dataKey: String) {\n    const sides = foundry.utils.getProperty(\n      document.system,\n      dataKey + '.sides',\n    );\n    const modifier = foundry.utils.getProperty(\n      document.system,\n      dataKey + '.modifier',\n    );\n    const val = `d${sides}` + this._formatModifier(modifier);\n    return val;\n  }\n\n  private _formatModifier(modifier) {\n    if (modifier === undefined || modifier === null || modifier === 0) {\n      return '';\n    }\n\n    if (!!modifier && !String(modifier).match(/^[+-]/)) {\n      modifier = '+' + modifier;\n    }\n    return modifier;\n  }\n}\n","import SwadeItem from '../documents/item/SwadeItem';\nimport {\n  ChoiceSet,\n  MutationOption,\n} from '../documents/item/SwadeItem.interface';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\nexport class ChoiceDialog extends HandlebarsApplicationMixin(ApplicationV2) {\n  declare protected selection: ChoiceSet;\n\n  constructor({\n    parent,\n    choiceSet,\n    resolve,\n    ...options\n  }: ChoiceDialogConfiguration) {\n    super(options);\n    this.#callback = resolve;\n    this.#parent = parent;\n    this.selection = choiceSet;\n  }\n\n  #callback: (value: ChoiceSet) => void;\n  #parent: SwadeItem;\n  #keyDownListener;\n\n  static asPromise(\n    ctx: Omit<ChoiceDialogConfiguration, 'resolve'>,\n  ): Promise<ChoiceSet> {\n    return new Promise<ChoiceSet>((resolve) =>\n      new ChoiceDialog({ ...ctx, resolve }).render({ force: true }),\n    );\n  }\n\n  static override DEFAULT_OPTIONS = {\n    window: {\n      title: 'SWADE ChoiceDialog',\n      contentClasses: ['standard-form'],\n    },\n    classes: ['swade', 'choice-dialog', 'swade-application'],\n    tag: 'form',\n    form: {\n      handler: ChoiceDialog.onSubmit,\n    },\n    actions: {\n      close: ChoiceDialog.#onClose,\n    },\n  };\n\n  static override PARTS = {\n    form: { template: 'systems/swade/templates/apps/choice-dialog.hbs' },\n    footer: { template: 'templates/generic/form-footer.hbs' },\n  };\n\n  override async _onRender(_context, _options) {\n    if (!this.#keyDownListener) {\n      this.#keyDownListener = this.#onKeyDown.bind(this);\n      document.addEventListener('keydown', this.#keyDownListener);\n    }\n  }\n\n  static onSubmit(\n    this: ChoiceDialog,\n    _event: SubmitEvent,\n    _form: HTMLFormElement,\n    _formData: FormDataExtended,\n  ) {\n    this.customSubmit();\n  }\n\n  customSubmit() {\n    this.selection.choice = this.getSelection();\n    return this.close();\n  }\n\n  protected getSelection(): number | null {\n    const radio = this.element.querySelector(\n      'input[name=\"choiceset\"]:checked',\n    ) as HTMLInputElement;\n    if (!radio) return null;\n    return Number(radio?.value);\n  }\n\n  static #onClose(\n    this: ChoiceDialog,\n    _event: PointerEvent,\n    _target: HTMLElement,\n  ) {\n    this.close();\n  }\n\n  protected override _onClose(options) {\n    super._onClose(options);\n    this.#callback(this.selection);\n    document.removeEventListener('keydown', this.#keyDownListener);\n  }\n\n  override async _prepareContext(options) {\n    const context = foundry.utils.mergeObject(\n      await super._prepareContext(options),\n      {\n        parent: this.#parent,\n        prompt: this.selection.title,\n        choices: this.selection.choices.map((choice, index) => ({\n          ...choice,\n          value: index,\n        })),\n        buttons: [\n          {\n            type: 'submit',\n            icon: 'fa-solid fa-check-double',\n            label: 'SWADE.ButtonSubmit',\n          },\n          {\n            type: 'button',\n            icon: 'fa-solid fa-times',\n            label: 'Close',\n            action: 'close',\n          },\n        ],\n      },\n    );\n    return context;\n  }\n\n  #onKeyDown(event) {\n    // Close dialog\n    if (event.key === 'Escape') {\n      event.preventDefault();\n      event.stopPropagation();\n      return this.close();\n    }\n\n    // Confirm default choice or add a modifier\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      event.stopPropagation();\n      return this.customSubmit();\n    }\n  }\n}\n\nexport interface ChoiceDialogConfiguration {\n  parent: SwadeItem;\n  choiceSet: ChoiceSet;\n  resolve: (choiceSet: ChoiceSet) => void;\n}\nexport interface ChoiceDialogData {\n  mutationOption: MutationOption | null;\n  resolved: boolean;\n}\n","import { EmptyObject } from 'fvtt-types/utils';\nimport { RollModifier } from '../../interfaces/additional.interface';\nimport {\n  RollPart,\n  RollRenderOptions,\n  SwadeRollData,\n  SwadeRollOptions,\n} from '../../interfaces/roll.interface';\nimport { Logger } from '../Logger';\nimport SwadeUser from '../documents/SwadeUser';\nimport SwadeActor from '../documents/actor/SwadeActor';\nimport { normalizeRollModifiers } from '../util';\n\nexport class SwadeRoll<D extends SwadeRollData = EmptyObject> extends Roll<D> {\n  constructor(formula: string, data?: D, options: SwadeRollOptions = {}) {\n    super(formula, data, options);\n  }\n\n  static override CHAT_TEMPLATE =\n    'systems/swade/templates/chat/dice/swade-roll.hbs';\n\n  static fromRoll(roll: Roll) {\n    const newRoll = new this(roll.formula, roll.data, roll.options);\n    Object.assign(newRoll, roll);\n    return newRoll;\n  }\n\n  static async rerollFree(event: PointerEvent) {\n    event.preventDefault();\n    const target = event.currentTarget as HTMLButtonElement;\n    const id = target.closest<HTMLElement>('.message')!.dataset.messageId!;\n    const msg = game.messages!.get(id, { strict: true });\n    const speaker = msg['speaker'];\n    const roll = msg['rolls'][0] as SwadeRoll;\n\n    roll.rerollMode = 'free';\n    const evaluated = await roll.reroll();\n    await evaluated.toMessage(\n      {\n        speaker: speaker,\n        flavor: msg.flavor,\n        flags: msg.flags,\n        whisper: msg.whisper,\n        blind: msg.blind,\n      },\n      {\n        rollMode:\n          msg.getFlag('swade', 'rollMode') ??\n          game.settings.get('core', 'rollMode'),\n      },\n    );\n  }\n\n  static async rerollBenny(event: PointerEvent) {\n    event.preventDefault();\n    const target = event.currentTarget as HTMLButtonElement;\n    const id = target.closest<HTMLElement>('.message')!.dataset.messageId!;\n    const msg = game.messages!.get(id, { strict: true });\n    const speaker = msg['speaker'];\n    const roll = msg['rolls'][0] as SwadeRoll;\n    const actor = ChatMessage.getSpeakerActor(speaker);\n\n    const isGmBenny = !!target.dataset.gmBenny;\n    const spender: SwadeUser | SwadeActor | null =\n      isGmBenny && game.user?.isGM ? game.user : actor;\n\n    if (!spender?.bennies) {\n      return ui.notifications.warn('SWADE.NoBennies', { localize: true });\n    }\n\n    await spender?.spendBenny();\n    roll.rerollMode = 'benny';\n\n    roll.applyReroll(actor);\n\n    const evaluated = await roll.reroll();\n    await evaluated.toMessage(\n      {\n        speaker: speaker,\n        flavor: msg.flavor,\n        flags: msg.flags,\n        whisper: msg.whisper,\n        blind: msg.blind,\n      },\n      {\n        rollMode:\n          msg.getFlag('swade', 'rollMode') ??\n          game.settings.get('core', 'rollMode'),\n      },\n    );\n  }\n\n  set rerollMode(mode: 'free' | 'benny') {\n    this.options['rerollMode'] = mode;\n  }\n\n  get rerollMode() {\n    return this.options['rerollMode'];\n  }\n\n  set modifiers(mods: RollModifier[]) {\n    this.options['modifiers'] = mods;\n  }\n\n  get modifiers() {\n    const mods = this.options['modifiers'] ?? [];\n    return mods.map(normalizeRollModifiers);\n  }\n\n  setRerollable(rerollable: boolean) {\n    this.options['rerollable'] = rerollable;\n  }\n\n  setMessageId(messageId: string) {\n    this.options['messageId'] = messageId;\n  }\n\n  setRollType(rollType: string) {\n    this.options['rollType'] = rollType;\n  }\n\n  get messageId() {\n    return this.options['messageId'];\n  }\n\n  get isRerollable() {\n    return this.options['rerollable'] ?? false;\n  }\n\n  get isCritfail(): boolean | undefined {\n    return false;\n  }\n\n  get isCritFailConfirmationRoll() {\n    return this.options['critfailConfirmationRoll'];\n  }\n\n  get rollType() {\n    return this.options['rollType'];\n  }\n\n  async getRenderData(\n    flavor?: string,\n    isPrivate = false,\n    displayResult = true,\n  ): Promise<Record<string, unknown>> {\n    if (!this._evaluated) await this.evaluate();\n    const chatData = {\n      isPrivate: isPrivate,\n      displayResult: displayResult,\n      flavor: isPrivate ? null : flavor,\n      user: game.user?.id,\n      tooltip: isPrivate ? '' : await this.getTooltip(),\n      total: this.total,\n      formulaParts: this._formatFormulaParts(),\n      rerollable: this.isRerollable,\n    };\n    return chatData;\n  }\n\n  override async toMessage<const Create extends boolean | null | undefined>(\n    messageData: SwadeRoll.MessageData = {},\n    {\n      rollMode = 'publicroll',\n      create = true,\n    }: Roll.ToMessageOptions<Create> = {},\n  ): Promise<Roll.ToMessageReturn<Create>> {\n    // Perform the roll, if it has not yet been rolled\n    if (!this._evaluated) await this.evaluate();\n    const existingRolls: SwadeRoll[] = messageData.rolls ?? [];\n    messageData = foundry.utils.mergeObject(\n      {\n        user: game.user!.id,\n        sound: CONFIG.sounds.dice,\n        'flags.swade.rollMode': rollMode,\n      },\n      messageData,\n    );\n\n    messageData.rolls = [...existingRolls, this];\n    // Either create the message or just return the chat data\n    const cls = getDocumentClass('ChatMessage');\n    const msg = new cls(messageData);\n\n    // Either create or return the data\n    if (create) return cls.create(msg.toObject(), { rollMode });\n    if (rollMode) msg.applyRollMode(rollMode);\n    return msg.toObject();\n  }\n\n  protected async _getToMessageContent(\n    messageData: ChatMessage.CreateData,\n  ): Promise<string> {\n    return messageData.content ?? '';\n  }\n\n  override async render({\n    flavor,\n    template = (this.constructor as typeof SwadeRoll).CHAT_TEMPLATE,\n    isPrivate = false,\n    displayResult = true,\n  }: RollRenderOptions = {}) {\n    const data = await this.getRenderData(flavor, isPrivate, displayResult);\n    return foundry.applications.handlebars.renderTemplate(template, data);\n  }\n\n  getRerollLabel(): string | undefined {\n    if (this.rerollMode === 'benny') {\n      return game.i18n.localize('SWADE.RerollWithBenny');\n    }\n    if (this.rerollMode === 'free') {\n      return game.i18n.localize('SWADE.FreeReroll');\n    }\n  }\n\n  /**\n   * Applies reroll bonuses to the current roll\n   * @param _actor The actor making a reroll\n   * @returns If the roll was modified\n   */\n  applyReroll(_actor: Actor | null): boolean {\n    Logger.warn('This function must be implemented on a subsidiary class');\n    return false;\n  }\n\n  protected _formatFormulaParts(): RollPart[] {\n    const result = new Array<RollPart>();\n    for (const term of this.terms) {\n      if (term instanceof foundry.dice.terms.PoolTerm) {\n        // Compute dice from the pool\n        for (const roll of term.rolls) {\n          const faces = roll.terms[0]['faces'];\n          const total = roll.total ?? 0;\n          let img = '';\n          if ([4, 6, 8, 10, 12, 20].indexOf(faces) !== -1) {\n            img = `icons/svg/d${faces}-grey.svg`;\n          }\n          result.push({\n            img,\n            die: true,\n            result: total,\n            class: this._getRollClass(roll),\n            hint: roll.dice[0].flavor,\n          });\n        }\n      } else if (term instanceof foundry.dice.terms.Die) {\n        // Grab the right dice\n        const faces = term.faces!;\n        let total = 0;\n        term.results.forEach((result) => {\n          total += result.result;\n        });\n        let img = '';\n        if ([4, 6, 8, 10, 12, 20].indexOf(faces) !== -1) {\n          img = `icons/svg/d${faces}-grey.svg`;\n        }\n        result.push({\n          img,\n          class: this._getDieClass(term),\n          result: total,\n          die: true,\n          hint: term.flavor,\n        });\n      } else {\n        result.push({\n          result: term.expression,\n          hint: term.flavor,\n        });\n      }\n    }\n    return result;\n  }\n\n  protected _getDieClass(die: foundry.dice.terms.Die) {\n    const faces = die.faces!;\n    let total = 0;\n    die.results.forEach((result) => {\n      total += result.result;\n    });\n    if (die.results[0].result === 1) return 'min';\n    if (total > faces) return 'exploded';\n    return 'color';\n  }\n\n  protected _getRollClass(roll: Roll) {\n    const faces = roll.terms[0]['faces'];\n    const total = roll.total ?? 0;\n    if (total > faces) return 'exploded';\n    if (roll.dice.some((d) => d.results[0].result === 1)) return 'min';\n    return '';\n  }\n}\n\nexport declare namespace SwadeRoll {\n  interface MessageData extends Roll.MessageData {\n    rolls?: any[];\n  }\n}\n","import {\n  ActorRollData,\n  SwadeRollOptions,\n} from '../../interfaces/roll.interface';\nimport { constants } from '../constants';\nimport { SwadeRoll } from './SwadeRoll';\n\nexport class DamageRoll extends SwadeRoll<ActorRollData> {\n  static override CHAT_TEMPLATE =\n    'systems/swade/templates/chat/dice/damage-roll.hbs';\n\n  constructor(\n    formula: string,\n    data: ActorRollData = {},\n    options: DamageRollOptions = {},\n  ) {\n    options.rollType ??= \"damage\";\n    super(formula, data, options);\n  }\n\n  override get isRerollable() {\n    return this.options['rerollable'] ?? true;\n  }\n\n  set targetNumber(tn: number) {\n    this.options['targetNumber'] = tn;\n  }\n\n  // Damage is almost never going to have a targetNumber of 4, arguably should just return an error\n  // TOFIX: targetNumber is not currently a valid option in the interface, either remove these paths or fix the interface setup and possibly bump these functions to SwadeRoll\n  get targetNumber(): number | undefined {\n    return this.options['targetNumber'];\n  }\n\n  // Returns -1 if target number isn't set, 0 on a fail, 1 on a success, 2 or more for raises\n  get successes(): number {\n    if (this.targetNumber === undefined) {\n      console.warn('No target number set for damage roll');\n      return constants.ROLL_RESULT.CRITFAIL;\n    }\n    if ((this.total ?? 0) < this.targetNumber)\n      return constants.ROLL_RESULT.FAIL;\n    if ((this.total ?? 0) < this.targetNumber + 4)\n      return constants.ROLL_RESULT.SUCCESS;\n    return Math.max(\n      Math.floor(((this.total ?? 0) - this.targetNumber) / 4) + 1,\n      0,\n    ); // raises get to be 2+\n  }\n\n  override get isCritfail() {\n    return false;\n  }\n\n  override get isCritFailConfirmationRoll() {\n    return false;\n  }\n\n  get ap() {\n    return this.options['ap'] ?? 0;\n  }\n\n  set ap(ap: number) {\n    this.options['ap'] = ap;\n  }\n\n  get isHeavyWeapon() {\n    return this.options['isHeavyWeapon'] ?? false;\n  }\n\n  set isHeavyWeapon(isHeavyWeapon: boolean) {\n    this.options['isHeavyWeapon'] = isHeavyWeapon;\n  }\n\n  override applyReroll(actor: Actor.Implementation | null): boolean {\n    if (\n      !actor ||\n      !('stats' in actor.system) ||\n      !('bennyDamage' in actor.system.stats.globalMods)\n    ) {\n      return false;\n    }\n    if (actor.system.stats.globalMods.bennyDamage?.length > 0) {\n      let adjustRoll = false;\n      for (const mod of actor.system.stats.globalMods.bennyDamage) {\n        const hasMod = this.modifiers.find((m) => m.label === mod.label);\n        if (!hasMod) {\n          adjustRoll = true;\n          this.options['modifiers'].push(mod);\n          this.terms.push(\n            new foundry.dice.terms.OperatorTerm({ operator: '+' }),\n            new foundry.dice.terms.StringTerm({\n              term: String(mod.value),\n              options: { flavor: mod.label },\n            }),\n          );\n        }\n      }\n      if (adjustRoll) {\n        this.resetFormula();\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\ninterface DamageRollOptions extends SwadeRollOptions {\n  ap?: number;\n  isHeavyWeapon?: boolean;\n}\n","export default class WildDie extends foundry.dice.terms.Die {\r\n  static get defaultTermData() {\r\n    return {\r\n      number: 1,\r\n      faces: 6,\r\n      modifiers: ['x'],\r\n      options: { flavor: game.i18n.localize('SWADE.WildDie') },\r\n    };\r\n  }\r\n  constructor(termData: Partial<foundry.dice.terms.Die.TermData> = {}) {\r\n    termData = foundry.utils.mergeObject(WildDie.defaultTermData, termData);\r\n    const user = game.user;\r\n    if (game.dice3d) {\r\n      // Get the user's configured Wild Die data.\r\n      const dieSystem = user?.getFlag('swade', 'dsnWildDiePreset') || 'none';\r\n      const colorSet = user?.getFlag('swade', 'dsnWildDie');\r\n      // If the color preset is not none\r\n      if (dieSystem !== 'none') {\r\n        // If dieSystem is defined... (new users might not have one defined)\r\n        if (dieSystem) {\r\n          // Set the color preset.\r\n          foundry.utils.setProperty(termData, 'options.colorset', colorSet);\r\n          // Set the system value.\r\n          foundry.utils.setProperty(\r\n            termData,\r\n            'options.appearance.system',\r\n            dieSystem,\r\n          );\r\n          // Get the die model for the respective die type\r\n          const dicePreset = game.dice3d?.DiceFactory?.systems[\r\n            dieSystem\r\n          ]?.dice?.find((d) => d.type === `d${termData?.faces}`);\r\n          if (dicePreset) {\r\n            if (dicePreset.modelFile && !dicePreset.modelLoaded) {\r\n              // Load the modelFile\r\n              dicePreset.loadModel(game.dice3d?.DiceFactory.loaderGLTF);\r\n            }\r\n            dicePreset.loadTextures();\r\n          }\r\n        }\r\n      }\r\n    }\r\n    super(termData);\r\n  }\r\n}\r\n","import {\n  ActorRollData,\n  RollPart,\n  SwadeRollOptions,\n} from '../../interfaces/roll.interface';\nimport { constants } from '../constants';\nimport SwadeChatMessage from '../documents/chat/SwadeChatMessage';\nimport { chunkArray, count } from '../util';\nimport { SwadeRoll } from './SwadeRoll';\nimport WildDie from './WildDie';\n\nexport class TraitRoll extends SwadeRoll<ActorRollData> {\n  static async confirmCritfail(msg: SwadeChatMessage) {\n    const label = game.i18n.localize('SWADE.Rolls.Critfail.ConfirmDie');\n    const options = { critfailConfirmationRoll: true };\n    const roll = await new SwadeRoll(`1d6[${label}]`, {}, options).evaluate();\n    await game.dice3d?.showForRoll(\n      roll,\n      game.user!,\n      true,\n      msg['whisper'] || null,\n      msg['blind'],\n      undefined,\n      msg['speaker'],\n    );\n    const previousRolls = msg['rolls'];\n    previousRolls.forEach((r) =>\n      r.dice.forEach((d) => d.results.forEach((i) => (i.hidden = true))),\n    );\n    await msg.update({ rolls: [roll, ...previousRolls] });\n  }\n  constructor(\n    formula: string,\n    data: ActorRollData = {},\n    options: TraitRollOptions = {},\n  ) {\n    options.rollType ??= \"trait\";\n    super(formula, data, options);\n  }\n\n  static override CHAT_TEMPLATE =\n    'systems/swade/templates/chat/dice/trait-roll.hbs';\n\n  get isValidTraitRoll(): boolean {\n    return this.#termIsPoolTerm(this.terms[0]);\n  }\n\n  override get isCritfail() {\n    const term = this.terms[0];\n    if (!this.#termIsPoolTerm(term) || !this._evaluated) return undefined;\n    const wildDie = term.dice.find((d) => d instanceof WildDie);\n    const majorityOfDiceAreOne =\n      count(term.dice, (d) => d.total === 1) > term.dice.length / 2;\n    if (wildDie) return majorityOfDiceAreOne && wildDie.total === 1;\n    return majorityOfDiceAreOne;\n  }\n\n  get groupRoll() {\n    return this.options['groupRoll'] ?? false;\n  }\n\n  set groupRoll(groupRoll: boolean) {\n    this.options['groupRoll'] = groupRoll;\n  }\n\n  override get isRerollable() {\n    return this.options['rerollable'] ?? true;\n  }\n\n  override get isCritFailConfirmationRoll() {\n    return false;\n  }\n\n  set targetNumber(tn: number) {\n    this.options['targetNumber'] = tn;\n  }\n\n  get targetNumber() {\n    return this.options['targetNumber'] ?? 4;\n  }\n\n  /**\n   * @returns Critfail: -1, Fail: 0, Success: 1, Raises: 2 or more\n   */\n  get successes(): number {\n    if (this.isCritfail) return constants.ROLL_RESULT.CRITFAIL;\n    if ((this.total ?? 0) < this.targetNumber)\n      return constants.ROLL_RESULT.FAIL;\n    if ((this.total ?? 0) < this.targetNumber + 4)\n      return constants.ROLL_RESULT.SUCCESS;\n    return Math.max(\n      Math.floor(((this.total ?? 0) - this.targetNumber) / 4) + 1,\n      0,\n    );\n  }\n\n  override async getRenderData(flavor?: string, isPrivate = false) {\n    const data = await super.getRenderData(flavor, isPrivate);\n    data.resultParts = this._formatResultParts();\n    return data;\n  }\n\n  override clone() {\n    const cloned = super.clone();\n    if (cloned.terms[0] instanceof foundry.dice.terms.PoolTerm) {\n      for (const poolPart of cloned.terms[0].rolls) {\n        poolPart.terms.forEach((part, i, terms) => {\n          if (\n            part instanceof foundry.dice.terms.Die &&\n            part.flavor === game.i18n.localize('SWADE.WildDie')\n          ) {\n            terms[i] = new WildDie({ faces: part.faces });\n          }\n        });\n      }\n    }\n    return cloned;\n  }\n\n  override async toMessage<const Create extends boolean | null | undefined>(\n    messageData: SwadeRoll.MessageData = {},\n    {\n      rollMode = 'publicroll',\n      create = true,\n    }: Roll.ToMessageOptions<Create> = {},\n  ): Promise<Roll.ToMessageReturn<Create>> {\n    foundry.utils.setProperty(\n      messageData,\n      'flags.swade.targets',\n      Array.from(game.user!.targets).map((t) => {\n        return { name: t.name, uuid: t.document.uuid };\n      }),\n    );\n\n    return super.toMessage(messageData, { rollMode, create });\n  }\n\n  override applyReroll(actor: Actor.Implementation | null): boolean {\n    if (\n      !actor ||\n      !('stats' in actor.system) ||\n      !('bennyTrait' in actor.system.stats.globalMods)\n    )\n      return false;\n    if (actor.system.stats.globalMods.bennyTrait?.length > 0) {\n      let adjustRoll = false;\n      for (const mod of actor.system.stats.globalMods.bennyTrait) {\n        const hasMod = this.modifiers.find((m) => m.label === mod.label);\n        if (!hasMod) {\n          adjustRoll = true;\n          this.options['modifiers'].push(mod);\n          this.terms.push(\n            new foundry.dice.terms.OperatorTerm({ operator: '+' }),\n            new foundry.dice.terms.StringTerm({\n              term: String(mod.value),\n              options: { flavor: mod.label },\n            }),\n          );\n        }\n      }\n      if (adjustRoll) {\n        this.resetFormula();\n        return true;\n      }\n    }\n    return false;\n  }\n\n  protected _formatResultParts() {\n    const result = new Array<RollPart>();\n    if (!this.isValidTraitRoll) return result;\n    const pool = this.terms[0] as foundry.dice.terms.PoolTerm;\n    //clone the terms and remove the pool;\n    const mods = this.terms.slice(1);\n    //cut up the modifiers and add them up into a single number\n    const modTotal = chunkArray<foundry.dice.terms.RollTerm>(mods, 2).reduce(\n      (acc, cur) => {\n        const [op, num] = cur;\n        return (acc += Number(`${op.total?.toString().trim()}${num.total}`));\n      },\n      0,\n    );\n\n    for (let i = 0; i < pool.rolls.length; i++) {\n      const roll = pool.rolls[i];\n      const faces = roll.terms[0]['faces'];\n      if (pool.results[i].discarded) continue; //skip discard results\n      let img = '';\n      if ([4, 6, 8, 10, 12, 20].indexOf(faces) !== -1) {\n        img = `icons/svg/d${faces}-grey.svg`;\n      }\n      //add the modifier total to each result of the base pool\n      result.push({\n        img,\n        result: (roll.total as number) + modTotal,\n        class: this._getRollClass(roll),\n        die: true,\n        hint: roll.dice[0].flavor,\n      });\n    }\n    return result;\n  }\n\n  #termIsPoolTerm(\n    term: foundry.dice.terms.RollTerm,\n  ): term is foundry.dice.terms.PoolTerm {\n    return term instanceof foundry.dice.terms.PoolTerm;\n  }\n}\n\ninterface TraitRollOptions extends SwadeRollOptions {\n  groupRoll?: boolean;\n  targetNumber?: number;\n}\n","import {\n  RollModifier,\n  RollModifierGroup,\n} from '../../interfaces/additional.interface';\nimport { constants } from '../constants';\nimport { DamageRoll } from '../dice/DamageRoll';\nimport { SwadeRoll } from '../dice/SwadeRoll';\nimport { TraitRoll } from '../dice/TraitRoll';\nimport WildDie from '../dice/WildDie';\nimport type SwadeActor from '../documents/actor/SwadeActor';\nimport type SwadeItem from '../documents/item/SwadeItem';\nimport { modifierReducer, normalizeRollModifiers } from '../util';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\nexport class RollDialog extends HandlebarsApplicationMixin(ApplicationV2) {\n  constructor({ ctx, resolve, ...options }: RollDialogConfiguration) {\n    super(options);\n    this.#ctx = ctx;\n    this.#callback = resolve;\n  }\n\n  #callback: (roll: SwadeRoll | null) => void;\n  #filters: foundry.applications.ux.SearchFilter[] =\n    this.#createFiltersHandlers();\n  #isResolved = false;\n  #extraButtonUsed = false;\n  #keydownListener;\n  #ctx: RollDialogContext;\n\n  static asPromise(ctx: RollDialogContext): Promise<SwadeRoll | null> {\n    return new Promise<SwadeRoll | null>((resolve) =>\n      new RollDialog({ ctx, resolve }).render({ force: true }),\n    );\n  }\n\n  static override DEFAULT_OPTIONS = {\n    window: {\n      contentClasses: ['standard-form'],\n    },\n    classes: ['swade', 'roll-dialog', 'swade-application'],\n    position: {\n      width: 400,\n      height: 'auto',\n    },\n    filters: [{ inputSelector: '.searchBox', contentSelector: '.selections' }],\n    tag: 'form',\n    form: {\n      handler: RollDialog.onSubmit,\n      closeOnSubmit: true,\n      submitOnClose: false,\n      submitOnChange: false,\n    },\n    actions: {\n      close: RollDialog.#onClose,\n      addModifier: RollDialog.#onAddModifier,\n      addPreset: RollDialog.#onAddPreset,\n      toggleList: RollDialog.#onToggleList,\n    },\n  };\n\n  static override PARTS = {\n    form: { template: 'systems/swade/templates/apps/roll-dialog.hbs' },\n    footer: { template: 'templates/generic/form-footer.hbs' },\n  };\n\n  get ctx() {\n    return this.#ctx;\n  }\n\n  get rollCls(): typeof SwadeRoll {\n    //@ts-expect-error JS somehow resolves that as a function\n    return this.ctx.roll.constructor as SwadeRoll;\n  }\n\n  override get title(): string {\n    return this.ctx.title ?? 'SWADE RollDialog';\n  }\n\n  get rollMode(): foundry.CONST.DICE_ROLL_MODES {\n    return this.form!.querySelector<HTMLSelectElement>('#rollMode')!\n      .value as foundry.CONST.DICE_ROLL_MODES;\n  }\n\n  get isTraitRoll(): boolean {\n    return this.ctx.roll instanceof TraitRoll;\n  }\n\n  get isDamageRoll(): boolean {\n    return this.ctx.roll instanceof DamageRoll;\n  }\n\n  get isAttack(): boolean {\n    return this.ctx?.item?.type === 'weapon' && this.isTraitRoll;\n  }\n\n  get modifiers(): RollModifier[] {\n    return this.ctx.mods;\n  }\n\n  #createFiltersHandlers() {\n    return this.options.filters.map((f) => {\n      f.callback = this._onSearchFilter.bind(this);\n      return new foundry.applications.ux.SearchFilter(f);\n    });\n  }\n\n  override async _onRender(context, options) {\n    await super._onRender(context, options);\n    this.#filters.forEach((f) => f.bind(this.element));\n    if (!this.#keydownListener) {\n      this.#keydownListener = this.#onKeyDown.bind(this);\n      document.addEventListener('keydown', this.#keydownListener);\n    }\n    this.element\n      .querySelector('.new-modifier-value')\n      ?.addEventListener('input', (ev) => {\n        const addModButton = this.element.querySelector('.add-modifier');\n        if (addModButton) addModButton.disabled = !ev.target?.value?.length;\n      });\n  }\n\n  static #onToggleList(\n    this: RollDialog,\n    _event: PointerEvent,\n    target: HTMLButtonElement,\n  ) {\n    const style = getComputedStyle(target);\n    const html = this.element;\n    html.querySelector('.fa-solid.fa-caret-right')?.classList.toggle('rotate');\n    const dropdown = html.querySelector('.dropdown');\n    if (dropdown) {\n      dropdown.style.width = style.width;\n      dropdown.classList.toggle('collapsed');\n    }\n  }\n\n  override _onChangeForm(formConfig, event) {\n    super._onChangeForm(formConfig, event);\n    const target = event.target;\n    if (!target) return;\n    if (target.type === 'checkbox') {\n      const index = Number(target.dataset.index);\n      this.modifiers[index].ignore = !target.checked;\n      this.render();\n    }\n  }\n\n  override async _prepareContext(options) {\n    const context = foundry.utils.mergeObject(\n      await super._prepareContext(options),\n      {\n        rollModes: CONFIG.Dice.rollModes,\n        modGroups: new Array<RollModifierGroup>(),\n        extraButtonLabel: '',\n        rollMode: game.settings.get('core', 'rollMode'),\n        modifiers: this.modifiers\n          .map(normalizeRollModifiers)\n          .map(this.#fillModifierLabels.bind(this)),\n        formula: this.#buildRollForEvaluation().formula.replace(\n          /(?<={[^}]*?),/g,\n          ', ',\n        ),\n        isTraitRoll: this.isTraitRoll,\n        buttons: [\n          {\n            type: 'submit',\n            icon: 'fa-solid fa-dice',\n            cssClass: 'submit-roll',\n            label: 'SWADE.Roll',\n          },\n          {\n            type: 'button',\n            icon: 'fa-solid fa-times',\n            action: 'close',\n            label: 'Close',\n          },\n        ],\n      },\n    );\n\n    if (\n      this.isDamageRoll ||\n      (this.isTraitRoll && !this.ctx.actor?.isWildcard)\n    ) {\n      context.buttons.splice(1, 0, {\n        type: 'submit',\n        icon: 'fa-regular fa-square-plus',\n        cssClass: 'submit-roll',\n        name: 'extra',\n        label: this.isDamageRoll ? 'SWADE.RollRaise' : 'SWADE.GroupRoll',\n      });\n    }\n\n    CONFIG.SWADE.prototypeRollGroups.forEach((m) => {\n      if (m.rollType === constants.ROLL_TYPE.TRAIT && !this.isTraitRoll) return;\n      if (m.rollType === constants.ROLL_TYPE.ATTACK && !this.isAttack) return;\n      if (m.rollType === constants.ROLL_TYPE.DAMAGE && !this.isDamageRoll)\n        return;\n      context.modGroups.push(m);\n    });\n    return context;\n  }\n\n  static async onSubmit(\n    this: RollDialog,\n    event: SubmitEvent,\n    _form: HTMLFormElement,\n    formData: FormDataExtended,\n  ) {\n    this.#extraButtonUsed = event.submitter?.name === 'extra';\n    const expanded = foundry.utils.expandObject(\n      formData.object,\n    ) as RollDialogFormData;\n    Object.values(expanded.modifiers ?? []).forEach(\n      (v, i) => (this.modifiers[i].ignore = !v.active),\n    );\n    if (expanded.map && expanded.map !== 0) {\n      this.modifiers.push({\n        label: game.i18n.localize('SWADE.MAPenalty.Label'),\n        value: expanded.map,\n      });\n    }\n\n    //add any unsubmitted modifiers, evaluate and resolve the promise\n    this.#addModifier();\n    this.#resolve(await this.#evaluateRoll());\n  }\n\n  static #onClose(\n    this: RollDialog,\n    _event: PointerEvent,\n    _target: HTMLElement,\n  ) {\n    return this.close();\n  }\n\n  protected override _onClose(options) {\n    super._onClose(options);\n    // Fallback if the roll has not yet been resolved\n    if (!this.#isResolved) this.#callback(null);\n    document.removeEventListener('keydown', this.#keydownListener);\n  }\n\n  async #evaluateRoll(): Promise<SwadeRoll<any>> {\n    this.#checkForAndAddBonusDamage();\n\n    const roll = this.#buildRollForEvaluation();\n    const terms = roll.terms;\n\n    //Add the Wild Die for a group roll of\n    if (\n      this.#extraButtonUsed &&\n      this.isTraitRoll &&\n      !this.ctx.actor?.isWildcard\n    ) {\n      const traitPool = terms[0];\n      if (traitPool instanceof foundry.dice.terms.PoolTerm) {\n        const wildDie = new WildDie();\n        const wildRoll = this.rollCls.fromTerms([wildDie]);\n        traitPool.rolls.push(wildRoll);\n        traitPool.terms.push(wildRoll.formula);\n      }\n    }\n\n    //recreate the roll\n    const finalizedRoll = this.rollCls.fromTerms(\n      terms,\n      roll.options,\n    ) as SwadeRoll;\n    if (finalizedRoll instanceof TraitRoll) {\n      finalizedRoll.groupRoll =\n        this.#extraButtonUsed && !this.ctx.actor?.isWildcard;\n    }\n\n    //evaluate\n    await finalizedRoll.evaluate();\n\n    if (finalizedRoll instanceof DamageRoll) {\n      finalizedRoll.ap = this.ctx.ap ?? 0;\n      finalizedRoll.isHeavyWeapon = this.ctx.isHeavyWeapon ?? false;\n    }\n\n    finalizedRoll.setRerollable(this.ctx.roll.isRerollable);\n    finalizedRoll.setRollType(this.ctx.roll.rollType);\n\n    // Convert the roll to a chat message and return it\n    const msg = await finalizedRoll.toMessage(\n      {\n        flavor: this.ctx.flavor,\n        speaker: this.ctx.speaker,\n      },\n      { rollMode: this.rollMode },\n    );\n    // TODO: Remove type annotation after toMessage gets fixed upstream in types\n    finalizedRoll.setMessageId(msg?.id as string);\n\n    return finalizedRoll;\n  }\n\n  protected _onSearchFilter(\n    _event: KeyboardEvent,\n    _query: string,\n    rgx: RegExp,\n    html: HTMLElement,\n  ) {\n    for (const li of Array.from(html.children) as HTMLLIElement[]) {\n      if (li.classList.contains('group-header')) continue;\n      const btn = li.querySelector('.add-preset');\n      const name = btn?.textContent;\n      const match = rgx.test(\n        foundry.applications.ux.SearchFilter.cleanQuery(name!),\n      );\n      li.style.display = match ? 'block' : 'none';\n    }\n  }\n\n  #buildRollForEvaluation(): SwadeRoll {\n    const formula =\n      this.ctx.roll.formula +\n      this.modifiers\n        .filter((v) => !v.ignore) //remove the disabled modifiers\n        .map(normalizeRollModifiers)\n        .reduce(modifierReducer, '');\n    // Create new roll from pure formula text\n    const intermediateRoll = new this.rollCls(formula, this.#getRollData());\n    const oldTerms = this.ctx.roll.terms;\n    const newTerms = intermediateRoll.terms;\n    // Replace \"duplicate\" terms with the originals to retain any extra data set on them\n    newTerms.splice(0, oldTerms.length, ...oldTerms);\n    const roll = this.rollCls.fromTerms(newTerms) as SwadeRoll;\n    roll.modifiers = this.modifiers;\n    return roll;\n  }\n\n  #fillModifierLabels(mod: RollModifier): RollModifier {\n    if (typeof mod.value === 'string' && mod.value.startsWith('@')) {\n      const key = mod.value.split('@')[1];\n      const rollData = this.#getRollData();\n      const value = rollData[key];\n      const match = value.match(/\\[(\\w+)\\]/); //extract the roll flavor text\n      if (value && match) mod.label = match[1];\n    }\n    mod.label ||= game.i18n.localize('SWADE.Addi');\n    return mod;\n  }\n\n  #resolve(roll: SwadeRoll) {\n    this.#isResolved = true;\n    this.#callback(roll);\n    this.close();\n  }\n\n  /** add a + if no +/- is present in the situational mod */\n  #sanitizeModifierInput(modifier: string): string {\n    if (modifier.startsWith('@')) return modifier;\n    if (!modifier[0].match(/[+-]/)) return '+' + modifier;\n    return modifier;\n  }\n\n  #getRollData() {\n    if (this.ctx.actor) return this.ctx.actor.getRollData(false);\n    return this.ctx.item?.actor?.getRollData(false) ?? {};\n  }\n\n  #checkForAndAddBonusDamage() {\n    if (this.#extraButtonUsed && this.ctx.item && !this.ctx.actor) {\n      const bonusDamageDice = this.ctx.item?.['system']['bonusDamageDice'];\n      const bonusDamageDieType = this.ctx.item?.['system']['bonusDamageDie'];\n      this.modifiers.push({\n        label: game.i18n.localize('SWADE.BonusDamage'),\n        value: `+${bonusDamageDice ?? 1}d${bonusDamageDieType}x`,\n      });\n    }\n  }\n\n  static #onAddModifier(\n    this: RollDialog,\n    _event: PointerEvent,\n    _target: HTMLElement,\n  ) {\n    this.#addModifier();\n    this.render({ force: true });\n  }\n\n  /** Reads the modifier inputs, sanitizes them and adds the values to the mod array */\n  #addModifier() {\n    const label = this.form?.querySelector<HTMLInputElement>(\n      '.new-modifier-label',\n    )?.value;\n    const value = this.form?.querySelector<HTMLInputElement>(\n      '.new-modifier-value',\n    )?.value;\n    if (value) {\n      this.modifiers.push({\n        label: label || game.i18n.localize('SWADE.Addi'),\n        value: this.#sanitizeModifierInput(value),\n      });\n    }\n  }\n\n  static #onAddPreset(\n    this: RollDialog,\n    _event: PointerEvent,\n    target: HTMLButtonElement,\n  ) {\n    const group = CONFIG.SWADE.prototypeRollGroups.find(\n      (v) => v.name === target.dataset.group,\n    );\n    const modifier = group?.modifiers[Number(target.dataset.index)];\n    if (modifier) {\n      this.modifiers.push({\n        label: modifier.label,\n        value: modifier.value,\n      });\n    }\n    this.render({ force: true });\n  }\n\n  #onKeyDown(event) {\n    // Close dialog\n    if (event.key === 'Escape') {\n      event.preventDefault();\n      event.stopPropagation();\n      return this.close();\n    }\n\n    // Confirm default choice or add a modifier\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      event.stopPropagation();\n      const modValue = this.form?.querySelector<HTMLInputElement>(\n        '.new-modifier-value',\n      )?.value;\n      if (modValue) {\n        this.#addModifier();\n        return this.render();\n      } else {\n        return this.submit();\n      }\n    }\n  }\n}\n\nexport interface RollDialogContext {\n  roll: SwadeRoll<any>;\n  mods: RollModifier[];\n  speaker: foundry.documents.BaseChatMessage.CreateData['speaker'];\n  flavor: string;\n  title: string;\n  item?: SwadeItem;\n  actor?: SwadeActor;\n  ap?: number;\n  isHeavyWeapon?: boolean;\n}\ninterface RollDialogConfiguration\n  extends Partial<foundry.applications.api.ApplicationV2.Configuration> {\n  ctx: RollDialogContext;\n  resolve: (roll: SwadeRoll | null) => void;\n}\ninterface RollDialogFormData {\n  modifiers?: Array<RollModifier & { active: boolean }>;\n  map?: number;\n  rollMode: foundry.CONST.DICE_ROLL_MODES;\n}\n","export class AddStatsValueField extends foundry.data.fields.DataField {\r\n  constructor(options: foundry.data.fields.DataField.Options.Any = {}) {\r\n    super(options as foundry.data.fields.DataField.DefaultOptions);\r\n  }\r\n\r\n  protected _cast(value: string | number | boolean) {\r\n    if (typeof value !== 'string') return value;\r\n    if (['true', 'false'].includes(value)) return value === 'true';\r\n    if (Number.isNumeric(value)) return Number(value);\r\n    return value;\r\n  }\r\n\r\n  protected override _validateType(\r\n    value: any,\r\n    _options: foundry.data.fields.DataField.ValidationOptions<foundry.data.fields.DataField.Any> = {},\r\n  ): boolean | void {\r\n    const validTypes = ['string', 'number', 'boolean'];\r\n    if (!!value && !validTypes.includes(foundry.utils.getType(value))) {\r\n      throw new Error('must be text, a number, or a boolean');\r\n    }\r\n  }\r\n}\r\n","import { constants } from '../../constants';\nimport { AddStatsValueField } from '../fields/AddStatsValueField';\n\nconst fields = foundry.data.fields;\nexport function makeAdditionalStatsSchema() {\n  return new fields.TypedObjectField(\n    new fields.SchemaField({\n      label: new fields.StringField({\n        nullable: false,\n        label: 'SWADE.AdditionalStats.Label',\n      }),\n      dtype: new fields.StringField({\n        nullable: false,\n        required: true,\n        choices: Object.values(constants.ADDITIONAL_STATS_TYPE),\n        label: 'SWADE.AdditionalStats.Type',\n      }),\n      hasMaxValue: new fields.BooleanField({\n        label: 'SWADE.AdditionalStats.HasMaxValue',\n      }),\n      value: new AddStatsValueField({ label: 'SWADE.AdditionalStats.Value' }),\n      max: new AddStatsValueField({ label: 'SWADE.AdditionalStats.MaxLabel' }),\n      optionString: new fields.StringField({\n        required: false,\n        initial: undefined,\n        label: 'SWADE.AdditionalStats.OptionLabel',\n      }),\n      modifier: new fields.StringField({\n        required: false,\n        initial: undefined,\n        label: 'SWADE.Modifier',\n      }),\n    }),\n    { initial: {}, label: 'SWADE.AddStats' },\n  );\n}\n","import { TraitDie } from '../../documents/actor/SwadeActor.interface';\n\nexport function makeDiceField(initial = 4, label = 'SWADE.DieSides') {\n  return new foundry.data.fields.NumberField({\n    label,\n    initial,\n    min: 0,\n    integer: true,\n    nullable: false,\n  });\n}\n\nexport function makeTraitDiceFields() {\n  const fields = foundry.data.fields;\n  return {\n    die: new fields.SchemaField({\n      sides: makeDiceField(),\n      modifier: new fields.NumberField({\n        label: 'SWADE.TraitMod',\n        initial: 0,\n        integer: true,\n        nullable: false,\n      }),\n    }),\n    'wild-die': new fields.SchemaField({\n      sides: makeDiceField(6, 'SWADE.WildDieSides'),\n    }),\n  };\n}\n\n/**\n * @param die The die to adjust\n * @returns the properly adjusted trait die\n */\nexport function boundTraitDie(die: TraitDie): TraitDie {\n  const sides = die.sides;\n  if (sides < 4 && sides !== 1) {\n    die.sides = 4;\n  } else if (sides > 12) {\n    const difference = sides - 12;\n    die.sides = 12;\n    die.modifier += difference / 2;\n  }\n  return die;\n}\n","import { constants } from '../../constants';\nimport { makeAdditionalStatsSchema, makeDiceField } from '../shared';\n\nconst fields = foundry.data.fields;\n\n/** source for regex: https://ihateregex.io/expr/url-slug/ */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const SLUG_REGEX = /^[a-z0-9]+(?:-[a-z0-9]+)*$/g;\n\nexport const itemDescription = () => ({\n  description: new fields.HTMLField({\n    initial: '',\n    textSearch: true,\n    label: 'SWADE.Desc',\n  }),\n  notes: new fields.StringField({\n    initial: '',\n    textSearch: true,\n    label: 'SWADE.Notes',\n  }),\n  source: new fields.StringField({\n    initial: '',\n    textSearch: true,\n    label: 'SWADE.Source',\n  }),\n  swid: new fields.StringField({\n    initial: constants.RESERVED_SWID.DEFAULT,\n    blank: false,\n    required: true,\n    label: 'SWADE.SWID.Long',\n    validate: (\n      value: string,\n      _options: foundry.data.fields.DataField.ValidationOptions,\n    ) => {\n      validateSwid(value);\n    },\n  }),\n  ...additionalStats(),\n});\n\nexport const builder = () => ({\n  build: new fields.SchemaField({\n    cost: new fields.NumberField({ label: 'SWADE.BuildCost' }),\n    // Null means unlimited. Nonlinear options should be implemented as separate choices.\n    limit: new fields.NumberField({\n      label: 'SWADE.BuildLimit',\n      initial: 1,\n      integer: true,\n      min: 1,\n    }),\n    level: new fields.NumberField({\n      label: 'SWADE.BuildLevel',\n      initial: 1,\n      integer: true,\n      min: 1,\n    }),\n  }),\n});\n\nexport const physicalItem = () => ({\n  quantity: new fields.NumberField({ initial: 1, label: 'SWADE.Quantity' }),\n  weight: new fields.NumberField({ initial: 0, label: 'SWADE.Weight' }),\n  price: new fields.NumberField({ initial: 0, label: 'SWADE.Price' }),\n});\n\nexport const arcaneDevice = () => ({\n  isArcaneDevice: new fields.BooleanField({ label: 'SWADE.ArcaneDevice' }),\n  arcaneSkillDie: new fields.SchemaField({\n    sides: makeDiceField(),\n    modifier: new fields.NumberField({ initial: 0, label: 'SWADE.Modifier' }),\n  }),\n  powerPoints: new fields.ObjectField({ label: 'SWADE.PP' }),\n});\n\nexport const equippable = () => ({\n  equippable: new fields.BooleanField({ label: 'SWADE.Equippable' }),\n  equipStatus: new fields.NumberField({ initial: 1, label: 'SWADE.Equipped' }),\n});\n\nexport const vehicular = () => ({\n  isVehicular: new fields.BooleanField({ label: 'SWADE.VehicleMod' }),\n  mods: new fields.NumberField({ initial: 1, label: 'SWADE.Mods' }),\n});\n\nexport const bonusDamage = () => ({\n  bonusDamageDie: makeDiceField(6),\n  bonusDamageDice: new fields.NumberField({\n    initial: 1,\n    label: 'SWADE.NumberOfDice.Label',\n  }),\n});\n\nexport const actions = () => ({\n  actions: new fields.SchemaField({\n    trait: new fields.StringField({ initial: '', label: 'SWADE.Trait' }),\n    traitMod: new fields.StringField({ initial: '', label: 'SWADE.TraitMod' }),\n    dmgMod: new fields.StringField({ initial: '', label: 'SWADE.DmgMod' }),\n    additional: new fields.TypedObjectField(\n      new fields.SchemaField({\n        name: new fields.StringField({\n          blank: false,\n          nullable: false,\n          label: 'SWADE.Name',\n        }),\n        type: new fields.StringField({\n          initial: constants.ACTION_TYPE.TRAIT,\n          choices: Object.values(constants.ACTION_TYPE),\n          label: 'Type',\n        }),\n        dice: new fields.NumberField({ initial: undefined, required: false }),\n        resourcesUsed: new fields.NumberField({\n          initial: undefined,\n          required: false,\n          label: 'SWADE.ResourcesUsed.Label',\n        }),\n        modifier: new fields.StringField({\n          initial: undefined,\n          required: false,\n          label: 'SWADE.Modifier',\n        }),\n        override: new fields.StringField({\n          initial: undefined,\n          required: false,\n          label: 'SWADE.ActionsOverride',\n        }),\n        ap: new fields.NumberField({\n          initial: undefined,\n          required: false,\n          nullable: true,\n          label: 'SWADE.Name',\n        }),\n        uuid: new fields.DocumentUUIDField({\n          type: 'Macro',\n          nullable: true,\n          required: true,\n          blank: false,\n          initial: null,\n          label: 'UUID',\n        }),\n        macroActor: new fields.StringField({\n          initial: constants.MACRO_ACTOR.DEFAULT,\n          required: false,\n          choices: Object.values(constants.MACRO_ACTOR),\n          label: 'DOCUMENT.Actor',\n        }),\n        isHeavyWeapon: new fields.BooleanField({\n          initial: false,\n          required: false,\n          label: 'SWADE.HeavyWeapon',\n        }),\n      }),\n      { initial: {} },\n    ),\n  }),\n  ...bonusDamage(),\n});\n\nexport const activities = () => ({\n  activities: new fields.SetField(\n    new fields.StringField({ blank: false, nullable: false }),\n    {\n      label: 'SWADE.Actions.Activities.Label',\n      hint: 'SWADE.Actions.Activities.Hint',\n    },\n  ),\n});\n\nexport const favorite = () => ({\n  favorite: new fields.BooleanField({ label: 'SWADE.Favorite' }),\n});\n\nexport const templates = () => ({\n  templates: new fields.SchemaField(\n    {\n      cone: new fields.BooleanField({ label: 'SWADE.Cone.Short' }),\n      stream: new fields.BooleanField({ label: 'SWADE.Stream.Short' }),\n      small: new fields.BooleanField({ label: 'SWADE.Small.Short' }),\n      medium: new fields.BooleanField({ label: 'SWADE.Medium.Short' }),\n      large: new fields.BooleanField({ label: 'SWADE.Large.Short' }),\n    },\n    { label: 'SWADE.Templates.Possible' },\n  ),\n});\n\nexport const additionalStats = () => ({\n  additionalStats: makeAdditionalStatsSchema(),\n});\n\nexport const category = () => ({\n  category: new fields.StringField({ initial: '', label: 'SWADE.Category' }),\n});\n\nexport const grantEmbedded = () => ({\n  ...grants(),\n  grantOn: new fields.NumberField({\n    initial: constants.GRANT_ON.CARRIED,\n    label: 'SWADE.ItemGrants.When',\n  }),\n});\n\nexport const grants = () => ({\n  grants: new fields.ArrayField(\n    //TODO create schema field for item grants\n    new fields.SchemaField({\n      uuid: new fields.DocumentUUIDField({\n        type: 'Item',\n        nullable: false,\n        required: true,\n        label: 'SWADE.Item',\n      }),\n      img: new fields.StringField({\n        initial: null,\n        nullable: true,\n        label: 'Image',\n      }),\n      name: new fields.StringField({\n        initial: null,\n        nullable: true,\n        label: 'SWADE.Name',\n      }),\n      mutation: new fields.ObjectField({\n        required: false,\n        label: 'SWADE.ItemGrants.Mutation',\n      }),\n    }),\n  ),\n});\n\nexport const choiceSets = () => ({\n  choiceSets: new fields.ArrayField(\n    new fields.SchemaField({\n      title: new fields.StringField({ initial: '', required: true }),\n      choice: new fields.NumberField({ initial: null, nullable: true }),\n      choices: new fields.ArrayField(\n        new fields.SchemaField({\n          name: new fields.StringField({ initial: '', required: true }),\n          addToName: new fields.BooleanField({\n            initial: true,\n            nullable: false,\n          }),\n          mutation: new fields.ObjectField({\n            required: false,\n            label: 'SWADE.ItemGrants.Mutation',\n          }),\n        }),\n      ),\n    }),\n  ),\n});\n\nexport function validateSwid(value: string) {\n  //`any` is a reserved word\n  if (value === constants.RESERVED_SWID.ANY) {\n    return new foundry.data.validation.DataModelValidationFailure({\n      unresolved: true,\n      invalidValue: value,\n      message: 'any is a reserved SWID!',\n    });\n  }\n  //if the value matches the regex we have likely a valid swid\n  if (!value.match(SLUG_REGEX)) {\n    return new foundry.data.validation.DataModelValidationFailure({\n      unresolved: true,\n      invalidValue: value,\n      message: value + ' is not a valid SWID!',\n    });\n  }\n}\n","import {\n  AdditionalStat,\n  ItemAction,\n} from '../../../../interfaces/additional.interface';\nimport { constants } from '../../../constants';\nimport { SwadeRoll } from '../../../dice/SwadeRoll';\nimport type SwadeActor from '../../../documents/actor/SwadeActor';\nimport type SwadeItem from '../../../documents/item/SwadeItem';\nimport { slugify } from '../../../util';\nimport { ArmorData } from '../armor';\nimport { additionalStats, choiceSets, itemDescription } from '../common';\nimport { ConsumableData } from '../consumable';\nimport { GearData } from '../gear';\nimport {\n  AdditionalStats,\n  ChoiceSets,\n  ItemDescription,\n} from '../item-common.interface';\nimport { PowerData } from '../power';\nimport { ShieldData } from '../shield';\nimport { WeaponData } from '../weapon';\n\ndeclare namespace SwadeBaseItemData {\n  interface Schema\n    extends foundry.data.fields.DataSchema,\n      ItemDescription,\n      ChoiceSets,\n      AdditionalStats {}\n  type BaseData = {};\n  type DerivedData = {};\n}\n\nclass SwadeBaseItemData<\n  Schema extends SwadeBaseItemData.Schema = SwadeBaseItemData.Schema,\n  BaseData extends SwadeBaseItemData.BaseData = SwadeBaseItemData.BaseData,\n  DerivedData extends\n    SwadeBaseItemData.DerivedData = SwadeBaseItemData.DerivedData,\n> extends foundry.abstract.TypeDataModel<\n  Schema,\n  SwadeItem,\n  BaseData,\n  DerivedData\n> {\n  /** @inheritdoc */\n  static override defineSchema(): SwadeBaseItemData.Schema {\n    return {\n      ...itemDescription(),\n      ...choiceSets(),\n      ...additionalStats(),\n    };\n  }\n  get isPhysicalItem(): boolean {\n    return false;\n  }\n\n  get actor(): SwadeActor | null | undefined {\n    return this.parent?.actor;\n  }\n\n  override prepareDerivedData(): void {\n    super.prepareDerivedData();\n    /// @ts-expect-error This should suffice as a type guard\n    if ('activities' in this) this._prepareActivities();\n  }\n\n  async rollAdditionalStat(stat: string) {\n    const statData: AdditionalStat = this.additionalStats[stat];\n    //return early if there's no data to roll or if it's not a die stat\n    if (\n      !statData ||\n      !statData.value ||\n      statData.dtype !== constants.ADDITIONAL_STATS_TYPE.DIE\n    )\n      return;\n    let modifier = statData.modifier || '';\n    if (modifier && !modifier.match(/^[+-]/)) {\n      modifier = '+' + modifier;\n    }\n    const roll = new SwadeRoll(\n      `${statData.value}${modifier}`,\n      this.actor?.getRollData() ?? {},\n    );\n    await roll.evaluate();\n    const message = await roll.toMessage({\n      speaker: ChatMessage.getSpeaker({ actor: this.actor }),\n      flavor: statData.label,\n    });\n    return message;\n  }\n\n  /**\n   * Shared utility method for preparing activities on the item.\n   * WARNING: Only call on items that actually support Activities\n   */\n  protected _prepareActivities(\n    this:\n      | ArmorData\n      | ConsumableData\n      | GearData\n      | PowerData\n      | ShieldData\n      | WeaponData,\n  ): void {\n    if (!this.actor || typeof this.activities === 'undefined') return;\n    const resolved = Array.from(this.activities).flatMap((activity: string) =>\n      this.actor!.getItemsBySwid(activity, 'action'),\n    );\n    for (const item of resolved) {\n      const actions = Object.entries<ItemAction>(\n        item.system.actions.additional,\n      );\n      for (const [key, action] of actions) {\n        this.actions.additional[item.system.swid + '-' + key] = {\n          ...action,\n          name: action.name + ' (' + item.name + ')',\n          resolved: true,\n        };\n      }\n    }\n  }\n\n  protected override async _preCreate(\n    data: foundry.abstract.TypeDataModel.ParentAssignmentType<Schema, Item>,\n    options: Item.Database.PreUpdateOptions,\n    user: User.Implementation,\n  ): Promise<boolean | void> {\n    const allowed = await super._preCreate(data, options, user);\n    if (allowed === false) return false;\n\n    if (this.actor?.type === 'group' && !this.isPhysicalItem) {\n      ui.notifications?.warn('Groups can only hold physical items!');\n      return false;\n    }\n\n    // set a default image\n    if (!data.img) {\n      this.parent?.updateSource({\n        img: `systems/swade/assets/icons/${data.type}.svg`,\n      });\n    }\n\n    //set a swid\n    if (\n      !data.system?.swid ||\n      data.system?.swid === constants.RESERVED_SWID.DEFAULT\n    ) {\n      this.updateSource({ swid: slugify(data.name) });\n    }\n  }\n\n  /** Prepare any fields that are formulas  */\n  prepareFormulaFields(): void {}\n}\n\nexport { SwadeBaseItemData };\n","import { DeepPartial } from 'fvtt-types/utils';\nimport { EquipState } from '../../../../globals';\nimport { constants } from '../../../constants';\nimport { builder, physicalItem } from '../common';\nimport { Builder, PhysicalItem } from '../item-common.interface';\nimport { SwadeBaseItemData } from './base';\n\ndeclare namespace SwadePhysicalItemData {\n  interface Schema extends SwadeBaseItemData.Schema, PhysicalItem, Builder {}\n  interface BaseData extends SwadeBaseItemData.BaseData {}\n  interface DerivedData extends SwadeBaseItemData.DerivedData {}\n}\n\nclass SwadePhysicalItemData<\n  Schema extends SwadePhysicalItemData.Schema = SwadePhysicalItemData.Schema,\n  BaseData extends\n    SwadePhysicalItemData.BaseData = SwadePhysicalItemData.BaseData,\n  DerivedData extends\n    SwadePhysicalItemData.DerivedData = SwadePhysicalItemData.DerivedData,\n> extends SwadeBaseItemData<Schema, BaseData, DerivedData> {\n  /** @inheritdoc */\n  static override defineSchema(): SwadePhysicalItemData.Schema {\n    return {\n      ...super.defineSchema(),\n      ...physicalItem(),\n      ...builder(),\n    };\n  }\n\n  override get isPhysicalItem(): boolean {\n    return true;\n  }\n\n  protected override async _preUpdate(\n    changed: DeepPartial<\n      foundry.abstract.TypeDataModel.ParentAssignmentType<Schema, Item>\n    >,\n    options: Item.Database.PreUpdateOptions,\n    user: User.Implementation,\n  ) {\n    await super._preUpdate(changed, options, user);\n    const diff = foundry.utils.diffObject(this.toObject(), changed);\n\n    if (\n      !!this.parent?.actor &&\n      foundry.utils.hasProperty(diff, 'system.equipStatus')\n    ) {\n      //toggle all active effects when an item equip status changes\n      const newState = foundry.utils.getProperty(\n        diff,\n        'system.equipStatus',\n      ) as EquipState;\n      const updates = this.parent.effects.map((ae) => {\n        return {\n          _id: ae.id,\n          disabled: newState < constants.EQUIP_STATE.OFF_HAND,\n        };\n      });\n      await this.parent.updateEmbeddedDocuments('ActiveEffect', updates);\n    }\n  }\n}\n\nexport { SwadePhysicalItemData };\n","import { AnyObject, DeepPartial, InexactPartial } from 'fvtt-types/utils';\nimport { EquipState, ItemActions } from '../../../globals';\nimport IRollOptions from '../../../interfaces/RollOptions.interface';\nimport {\n  ItemAction,\n  RollModifier,\n} from '../../../interfaces/additional.interface';\nimport { Logger } from '../../Logger';\nimport { ChoiceDialog } from '../../apps/ChoiceDialog';\nimport { RollDialog } from '../../apps/RollDialog';\nimport { constants } from '../../constants';\nimport { SwadePhysicalItemData } from '../../data/item/base';\nimport { DamageRoll } from '../../dice/DamageRoll';\nimport { getKeyByValue, modifierReducer, slugify } from '../../util';\nimport type SwadeActiveEffect from '../active-effect/SwadeActiveEffect';\nimport SwadeActor from '../actor/SwadeActor';\nimport {\n  ChoiceSet,\n  ItemChatCardAction,\n  ItemChatCardChip,\n  ItemChatCardData,\n  ItemDisplayPowerPoints,\n  ItemGrant,\n  ItemGrantChainLink,\n} from './SwadeItem.interface';\n\ndeclare global {\n  interface DocumentClassConfig {\n    Item: typeof SwadeItem;\n  }\n  interface FlagConfig {\n    Item: {\n      swade: {\n        embeddedPowers: [string, Item.CreateData][];\n        hasGranted?: string[];\n        loadedAmmo?: Item.CreateData;\n      };\n    };\n  }\n  namespace Item {\n    namespace Database {\n      interface Create {\n        isItemGrant?: boolean;\n      }\n    }\n  }\n}\n\nclass SwadeItem<\n  Subtype extends Item.SubType = Item.SubType,\n> extends Item<Subtype> {\n  /** Used for item enrichers */\n  declare plainTextDescription?: string;\n  static RANGE_REGEX = /[0-9]+\\/*/g;\n\n  static override migrateData(data: Item.CreateData & AnyObject) {\n    super.migrateData(data);\n    if (data.flags?.swade?.embeddedPowers) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      for (const [key, item] of data.flags.swade.embeddedPowers) {\n        if (item.system && !(item as any).data) continue;\n        item.system = { ...(item as any).data };\n        delete (item as any).data;\n      }\n    }\n    if (data?.system?.grants) {\n      for (const grant of data.system.grants as ItemGrant[]) {\n        const uuid = grant.uuid;\n        if (uuid.startsWith('Compendium.') && !uuid.includes('.Item.')) {\n          const arr = uuid.split('.');\n          arr.splice(arr.length - 1, 0, 'Item');\n          grant.uuid = arr.join('.');\n        }\n        //bad UUID with multiple Item strings\n        if (uuid.split('.').filter((v) => v === 'Item').length > 1) {\n          const arr = uuid.split('.').filter((v) => v !== 'Item'); //remove all instances of Item\n          arr.unshift('Item'); // add a single Item to the front\n          grant.uuid = arr.join('.');\n        }\n      }\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    if (\n      data.type === 'ability' &&\n      ['ancestry', 'race'].includes(data.system?.subtype as string)\n    ) {\n      data.type = 'ancestry';\n    }\n    return data;\n  }\n\n  /**\n   * An object that tracks which tracks the changes to the data model which were applied by active effects\n   */\n  overrides: DeepPartial<Item.CreateData> = {};\n\n  get isMeleeWeapon(): boolean {\n    return this.system['isMelee'] ?? false;\n  }\n\n  get range() {\n    // Validates that this item type has a range property\n    if (!('range' in this.system) || !this.system.range) return;\n    //match the range string via Regex\n    const match = this.system.range.match(SwadeItem.RANGE_REGEX);\n    //return early if nothing is found\n    if (!match) return;\n    //split the string and convert the values to numbers\n    const ranges = match.join('').split('/');\n    //make sure the array is 4 values long\n    const increments = Array.from(\n      { ...ranges, length: 4 },\n      (v) => Number(v) || 0,\n    );\n    return {\n      short: increments[0],\n      medium: increments[1],\n      long: increments[2],\n      extreme: increments[3] || increments[2] * 4,\n    };\n  }\n\n  /**\n   * @returns whether this item can be an arcane device\n   */\n  get canBeArcaneDevice(): boolean {\n    if ('canBeArcaneDevice' in this.system)\n      return this.system.canBeArcaneDevice;\n    return false;\n  }\n\n  get isArcaneDevice(): boolean {\n    if (!this.canBeArcaneDevice) return false;\n    return foundry.utils.getProperty(this, 'system.isArcaneDevice') as boolean;\n  }\n\n  /** @returns the power points for the AB that this power belongs to or null when the item is not a power */\n  get powerPointObject(): ItemDisplayPowerPoints | null {\n    if ('_powerPoints' in this.system) {\n      return this.system._powerPoints;\n    } else if (this.isArcaneDevice) {\n      return foundry.utils.getProperty(\n        this,\n        'system.powerPoints',\n      ) as ItemDisplayPowerPoints;\n    }\n    return null;\n  }\n\n  get isReadied(): boolean {\n    if ('isReadied' in this.system) return this.system.isReadied;\n    return false;\n  }\n\n  get isPhysicalItem(): boolean {\n    return this.system instanceof SwadePhysicalItemData;\n  }\n\n  get canHaveCategory(): boolean {\n    if ('canHaveCategory' in this.system) return this.system.canHaveCategory;\n    return this.isPhysicalItem;\n  }\n\n  get embeddedPowers() {\n    const flagContent = this.getFlag('swade', 'embeddedPowers') ?? [];\n    return new Map(flagContent);\n  }\n\n  get canGrantItems(): boolean {\n    return (\n      this.isPhysicalItem ||\n      ('canGrantItems' in this.system ? this.system.canGrantItems : false)\n    );\n  }\n\n  get grantsItems(): ItemGrant[] {\n    if (!this.canGrantItems) return [];\n    return foundry.utils.getProperty(this, 'system.grants') as ItemGrant[];\n  }\n\n  get hasGranted(): string[] {\n    return this.getFlag('swade', 'hasGranted') ?? [];\n  }\n\n  get grantedBy(): SwadeItem | undefined {\n    if (this.parent) {\n      return this.parent.items.find((i: SwadeItem) =>\n        i.hasGranted.includes(this.id!),\n      ) as SwadeItem;\n    }\n  }\n\n  get modifier(): number {\n    if ('modifier' in this.system) return this.system.modifier;\n    return 0;\n  }\n\n  get traitModifiers(): RollModifier[] {\n    const modifiers = new Array<RollModifier>();\n\n    // Ensure `this` is properly referenced\n    const itemName = this?.name ?? game.i18n.localize('SWADE.Item'); // Use optional chaining to prevent errors\n\n    if (foundry.utils.getProperty(this, 'system.actions.traitMod')) {\n      modifiers.push({\n        label: `${itemName} ${game.i18n.localize('SWADE.ItemTraitMod')}`, // Combine name and localized string\n        value: foundry.utils.getProperty(this, 'system.actions.traitMod'),\n      });\n    }\n\n    if (this.system?.traitModifiers) {\n      // Ensure `this.system` exists before accessing properties\n      modifiers.push(...this.system.traitModifiers);\n    }\n\n    return modifiers;\n  }\n\n  get usesAmmoFromInventory(): boolean {\n    if ('usesAmmoFromInventory' in this.system)\n      return !!this.system.usesAmmoFromInventory;\n    return false;\n  }\n\n  // Special implementation to help with modifiers on temp docs\n  override clone<Save extends boolean = false>(\n    data: Item.UpdateData = {},\n    options: foundry.abstract.Document.CloneContext<Save> &\n      InexactPartial<\n        foundry.abstract.Document.ConstructionContext<Item.Parent>\n      > = {},\n  ) {\n    if (options.save) return super.clone<true>(data, options);\n    if (this.parent) this.parent._embeddedPreparation = true;\n    const item = super.clone<false>(data, options);\n    if (item.parent) {\n      delete item.parent._embeddedPreparation;\n    }\n    return item;\n  }\n\n  override prepareEmbeddedDocuments() {\n    super.prepareEmbeddedDocuments();\n    if (!this.actor || this.actor._embeddedPreparation) this.applyModifiers();\n  }\n\n  /**\n   * Apply modifier effects to this item.\n   */\n  applyModifiers() {\n    const overrides: DeepPartial<Item.CreateData> = {};\n\n    const changes: Array<\n      ActiveEffect.EffectChangeData & { effect: SwadeActiveEffect }\n    > = [];\n    // TODO: In v13 just use the getter on the embedded collection\n    for (const effect of this.effects.filter((e) => e.type === 'modifier')) {\n      if (!effect.active) continue;\n      changes.push(\n        ...effect.changes.map((change) => {\n          const c = foundry.utils.deepClone(change);\n          c.effect = effect;\n          c.priority = c.priority ?? c.mode * 10;\n          return c;\n        }),\n      );\n    }\n    changes.sort((a, b) => a.priority - b.priority);\n    // Apply all changes\n    for (const change of changes) {\n      if (!change.key) continue;\n      const changes = change.effect.apply(this, change);\n      Object.assign(overrides, changes);\n    }\n\n    // Expand the set of final overrides\n    this.overrides = foundry.utils.expandObject(overrides);\n  }\n\n  async rollDamage(options: IRollOptions = {}): Promise<DamageRoll | null> {\n    const modifiers = new Array<RollModifier>();\n    let damage = '';\n    if (options.dmgOverride) {\n      damage = options.dmgOverride;\n    } else if ('damage' in this.system && this.system.damage) {\n      damage = this.system.damage;\n    } else {\n      return null;\n    }\n    const label = this.name;\n    let ap: number =\n      options.ap ?? foundry.utils.getProperty(this, 'system.ap') ?? 0;\n    const isHeavyWeapon: boolean =\n      foundry.utils.getProperty(this, 'system.isHeavyWeapon') ||\n      options.isHeavyWeapon;\n    let apFlavor = ` - ${game.i18n.localize('SWADE.Ap')} 0`;\n\n    if (this.actor && 'stats' in this.actor.system) {\n      this.actor?.system.stats.globalMods.ap.forEach((e) => {\n        ap += Number(e.value);\n      });\n    }\n\n    if (ap) {\n      apFlavor = ` - ${game.i18n.localize('SWADE.Ap')} ${ap}`;\n    }\n    const rollParts = [damage];\n\n    //Additional Mods\n    if (this.actor && 'stats' in this.actor.system) {\n      modifiers.push(...this.actor.system.stats.globalMods.damage);\n    }\n    if (options.additionalMods) {\n      modifiers.push(...options.additionalMods);\n    }\n\n    const terms = DamageRoll.parse(\n      rollParts.join(''),\n      this.actor?.getRollData() ?? {},\n    );\n    const baseRoll = new Array<string>();\n    for (const term of terms) {\n      if (term instanceof foundry.dice.terms.Die) {\n        if (!term.modifiers.includes('x') && Number(term.faces) > 1) {\n          term.modifiers.push('x');\n        }\n        if (!term.flavor) {\n          term.options.flavor = game.i18n.localize('SWADE.BaseDamage');\n        }\n        baseRoll.push(term.formula);\n      } else if (term instanceof foundry.dice.terms.StringTerm) {\n        baseRoll.push(this._makeExplodable(term.term));\n      } else if (term instanceof foundry.dice.terms.NumericTerm) {\n        baseRoll.push(term.formula);\n      } else {\n        baseRoll.push(term.expression);\n      }\n    }\n\n    //Conviction Modifier\n    if (\n      this.parent &&\n      'details' in this.parent.system &&\n      game.settings.get('swade', 'enableConviction') &&\n      foundry.utils.getProperty(this.parent.system, 'details.conviction.active')\n    ) {\n      modifiers.push({\n        label: game.i18n.localize('SWADE.Conv'),\n        value: '+1d6x',\n      });\n    }\n\n    let flavour = '';\n    if (options.flavour) {\n      flavour = ` - ${options.flavour}`;\n    }\n\n    //Joker Modifier\n    if (this.parent?.hasJoker) {\n      modifiers.push({\n        label: game.i18n.localize('SWADE.Joker'),\n        value: this.parent.getFlag('swade', 'jokerBonus') ?? 2,\n      });\n    }\n\n    const roll = new DamageRoll(baseRoll.join(''), {}, { modifiers });\n    if ('isRerollable' in options) roll.setRerollable(!!options.isRerollable);\n    /**\n     * A hook event that is fired before damage is rolled, giving the opportunity to programatically adjust a roll and its modifiers\n     * Returning `false` in a hook callback will cancel the roll entirely\n     * @category Hooks\n     * @param {SwadeActor} actor                The actor that owns the item which rolls the damage\n     * @param {SwadeItem} item                  The item that is used to create the damage value\n     * @param {DamageRoll} roll                 The built base roll, without any modifiers\n     * @param {RollModifier[]} modifiers   An array of modifiers which are to be added to the roll\n     * @param {IRollOptions} options            The options passed into the roll function\n     */\n    Hooks.call('swadeRollDamage', this.actor, this, roll, modifiers, options);\n\n    if (options.suppressChat) {\n      return DamageRoll.fromTerms<DamageRoll>([\n        ...roll.terms,\n        ...DamageRoll.parse(\n          roll.modifiers.reduce(modifierReducer, ''),\n          this.getRollData(),\n        ),\n      ]);\n    }\n\n    const finalFlavor = `${label} ${game.i18n.localize(\n      'SWADE.Dmg',\n    )}${apFlavor}${flavour}`;\n\n    // Roll and return\n    return RollDialog.asPromise({\n      roll: roll,\n      mods: modifiers,\n      speaker: ChatMessage.getSpeaker({ actor: this.actor! }),\n      flavor: finalFlavor,\n      title: `${label} ${game.i18n.localize('SWADE.Dmg')}`,\n      item: this,\n      ap: ap,\n      isHeavyWeapon: isHeavyWeapon,\n    }) as Promise<DamageRoll | null>;\n  }\n\n  async setEquipState(state: EquipState): Promise<EquipState> {\n    const equipState = constants.EQUIP_STATE;\n    Logger.debug(\n      `Trying to set state ${getKeyByValue(equipState, state)} on item ${\n        this.name\n      } with type ${this.type}`,\n    );\n    if (\n      '_rejectEquipState' in this.system &&\n      this.system._rejectEquipState(state)\n    ) {\n      Logger.warn('You cannot set this state on the item ' + this.name, {\n        toast: true,\n      });\n      return this.system.equipStatus as EquipState;\n    }\n    await this.update({ 'system.equipStatus': state });\n    return state;\n  }\n\n  override getRollData(): Record<string, unknown> {\n    return super.getRollData() as Record<string, unknown>;\n  }\n\n  async getChatData(\n    enrichOptions: Partial<TextEditor.EnrichmentOptions> = {},\n  ): Promise<ItemChatCardData> {\n    // Item properties\n    const chips =\n      'getChatChips' in this.system\n        ? await this.system.getChatChips(enrichOptions)\n        : new Array<ItemChatCardChip>();\n\n    //Additional actions\n    const itemActions = foundry.utils.getProperty(\n      this,\n      'system.actions.additional',\n    ) as Record<string, ItemAction>;\n\n    const actions = new Array<ItemChatCardAction>();\n    for (const action in itemActions) {\n      actions.push({\n        key: action,\n        type: itemActions[action].type,\n        name: itemActions[action].name,\n      });\n    }\n\n    const hasAmmoManagement =\n      'hasAmmoManagement' in this.system && this.system.hasAmmoManagement;\n    const hasMagazine =\n      hasAmmoManagement &&\n      'reloadType' in this.system &&\n      this.system.reloadType === constants.RELOAD_TYPE.MAGAZINE;\n    const hasDamage = !!foundry.utils.getProperty(this, 'system.damage');\n    const hasTrait = !!foundry.utils.getProperty(this, 'system.actions.trait');\n    const hasReloadButton =\n      'hasReloadButton' in this.system && this.system.hasReloadButton;\n\n    const additionalActions: ItemActions =\n      foundry.utils.getProperty(this, 'system.actions.additional') || {};\n    const actionValues = Object.values(additionalActions);\n\n    const hasTraitActions = actionValues.some(\n      (v) => v.type === constants.ACTION_TYPE.TRAIT,\n    );\n    const hasDamageActions = actionValues.some(\n      (v) => v.type === constants.ACTION_TYPE.DAMAGE,\n    );\n    const hasResistRolls = actionValues.some(\n      (v) => v.type === constants.ACTION_TYPE.RESIST,\n    );\n    const hasMacros = actionValues.some(\n      (v) => v.type === constants.ACTION_TYPE.MACRO,\n    );\n    const hasTemplates =\n      'templates' in this.system &&\n      Object.values(this.system.templates).some(Boolean);\n\n    const effects: string[] = [];\n    for (const effect of this.effects.filter(\n      (e) => !e.transfer && e.type !== 'modifier',\n    )) {\n      effects.push(\n        await foundry.applications.ux.TextEditor.implementation.enrichHTML(\n          effect.link,\n        ),\n      );\n    }\n\n    const data: ItemChatCardData = {\n      description:\n        await foundry.applications.ux.TextEditor.implementation.enrichHTML(\n          this.system.description,\n          enrichOptions,\n        ),\n      chips: chips,\n      actions: actions,\n    };\n\n    const templateData = {\n      item: this,\n      data,\n      effects,\n      hasAmmoManagement,\n      hasMagazine,\n      hasReloadButton,\n      hasDamage,\n      hasTrait,\n      hasTemplates,\n      showDamageRolls: hasDamage || hasDamageActions,\n      trait: foundry.utils.getProperty(this, 'system.actions.trait'),\n      showTraitRolls: hasTrait || hasTraitActions,\n      hasResistRolls,\n      hasMacros,\n      powerPoints: this.powerPointObject,\n      settingRules: {\n        noPowerPoints: game.settings.get('swade', 'noPowerPoints'),\n      },\n    };\n\n    return templateData;\n  }\n\n  /** A shorthand function to roll skills directly */\n  async roll(options: IRollOptions = {}) {\n    //return early if there's no parent or this isn't a skill\n    if (!('canRoll' in this.system) || !this.system.canRoll) return null;\n    return this.parent!.rollSkill(this.id, options);\n  }\n\n  override async deleteDialog(\n    options?: Partial<Dialog.Options> | undefined,\n  ): Promise<false | this | null | undefined> {\n    if (!this.parent) return super.deleteDialog(options);\n    const type = game.i18n.localize(`TYPES.Item.${this.type}`);\n    const proceed = await foundry.applications.api.DialogV2.confirm({\n      rejectClose: false,\n      window: {\n        title: `${game.i18n.format('DOCUMENT.Delete', { type })}: ${this.name}`,\n      },\n      content: `<h3>${game.i18n.localize('AreYouSure')}</h3><p>${game.i18n.format('SWADE.DeleteFromParentWarningPermanent', { name: this.name, parent: this.parent.name })}</p>`,\n    });\n    if (!proceed) return false;\n    return this.delete();\n  }\n\n  /**\n   * Assembles data and creates a chat card for the item\n   * @returns the rendered chat card\n   */\n  async show() {\n    // Basic template rendering data\n    if (!this.actor) return;\n\n    // Basic chat message data\n    const chatData: ChatMessage.CreateData = {\n      type: 'itemCard',\n      title: this.name,\n      author: game.user?.id,\n      style: CONST.CHAT_MESSAGE_STYLES.OTHER,\n      speaker: ChatMessage.getSpeaker({\n        actor: this.parent,\n        token: this.actor?.token,\n        scene: this.actor?.token?.parent,\n        alias: this.parent?.name,\n      }),\n      system: { uuid: this.uuid },\n      flags: { core: { canPopout: true } },\n    };\n\n    const msgClass = getDocumentClass('ChatMessage');\n\n    if (\n      game.settings.get('swade', 'hideNpcItemChatCards') &&\n      this.actor?.type === 'npc'\n    ) {\n      chatData.whisper = game.users!.filter((u) => u.isGM).map((u) => u.id!);\n    } else {\n      // Apply the roll mode to the message\n      msgClass.applyRollMode(\n        chatData,\n        game.settings.get('core', 'rollMode') ?? 'roll',\n      );\n    }\n\n    // Create the chat message\n    const chatCard = await msgClass.create(chatData);\n    Hooks.call('swadeChatCard', this.actor, this, chatCard, game.user!.id);\n    return chatCard;\n  }\n\n  canExpendResources(resourcesUsed = 1): boolean {\n    if ('_canExpendResources' in this.system) {\n      return this.system._canExpendResources(resourcesUsed);\n    } else return true;\n  }\n\n  async consume(charges = 1): Promise<void> {\n    if (!('_getUsageUpdates' in this.system)) return;\n    const usage = this.system._getUsageUpdates(charges);\n    if (!usage) return;\n\n    /**\n     * A hook event that is fired before an item is consumed, giving the opportunity to programmatically adjust the usage and/or trigger custom logic\n     * @category Hooks\n     * @param item               The item that is used being consumed\n     * @param charges            The charges used.\n     * @param usage              The determined usage updates that resulted from consuming this item\n     */\n    Hooks.call('swadePreConsumeItem', this, charges, usage);\n\n    const { actorUpdates, itemUpdates, resourceUpdates } = usage;\n\n    let updatedItems = new Array<foundry.abstract.Document.Stored<SwadeItem>>();\n    // Persist the updates\n    if (!foundry.utils.isEmpty(itemUpdates)) {\n      await this.update(itemUpdates);\n    }\n    if (!foundry.utils.isEmpty(actorUpdates)) {\n      await this.actor?.update(actorUpdates);\n    }\n    if (resourceUpdates.length) {\n      updatedItems = (await this.actor?.updateEmbeddedDocuments(\n        'Item',\n        resourceUpdates,\n      )) as Array<foundry.abstract.Document.Stored<SwadeItem>>;\n    }\n\n    /**\n     * A hook event that is fired after an item is consumed but before cleanup happens\n     * @category Hooks\n     * @param item               The item that is used being consumed\n     * @param charges            The charges used.\n     * @param usage              The determined usage updates that resulted from consuming this item\n     */\n    Hooks.call('swadeConsumeItem', this, charges, usage);\n\n    if ('messageOnUse' in this.system && this.system.messageOnUse) {\n      await this.#createChargeUsageMessage(charges);\n    }\n\n    await this.#postConsumptionCleanup(updatedItems);\n  }\n\n  async reload(): Promise<boolean> {\n    const ammoManagement = game.settings.get('swade', 'ammoManagement');\n    if (!('reload' in this.system) || !ammoManagement) return false;\n    else return this.system.reload();\n  }\n\n  async removeAmmo() {\n    if ('removeAmmo' in this.system) this.system.removeAmmo();\n  }\n\n  async grantEmbedded(target: SwadeActor = this.parent) {\n    if (!this.canGrantItems || !target) return;\n    const grantChain = await this.getItemGrantChain();\n\n    for (const link of grantChain) {\n      if (link.grant.mutation) {\n        link.item.updateSource(link.grant.mutation);\n      }\n    }\n    //create the items\n    const grantedItems =\n      (await SwadeItem.createDocuments(\n        grantChain.map((l) => l.item.toObject()),\n        {\n          parent: target,\n          renderSheet: undefined,\n          isItemGrant: true,\n        },\n      )) ?? [];\n    const created = grantedItems.map((i) => i.id);\n    await this.setFlag('swade', 'hasGranted', created);\n    Logger.debug([this.name, this.hasGranted]);\n  }\n\n  /**\n   * Renders a dialog to confirm the swid change and if accepted updates the SWID on the item.\n   * @returns The generated swid or undefined if no change was made.\n   */\n  async regenerateSWID() {\n    const html = `\n    <div class=\"warning-message\">\n      <p>${game.i18n.localize('SWADE.SWID.ChangeWarning2')}</p>\n      <p>${game.i18n.localize('SWADE.SWID.ChangeWarning3')}</p>\n    </div>\n    `;\n    const confirmation = await Dialog.confirm({\n      title: game.i18n.localize('SWADE.SWID.Regenerate'),\n      content: html,\n      defaultYes: false,\n      options: {\n        classes: [...Dialog.defaultOptions.classes, 'swade-app'],\n      },\n    });\n    if (!confirmation) return;\n    const swid = slugify(this.name);\n    await this.update({ 'system.swid': swid });\n    return swid;\n  }\n\n  /** @returns a flattened array of item grants, going down the chain of grants */\n  async getItemGrantChain(\n    ignored = new Set<string>(),\n  ): Promise<ItemGrantChainLink[]> {\n    if (!this.canGrantItems || ignored.has(this.uuid)) return [];\n    ignored.add(this.uuid);\n    const grantedItems = (\n      await Promise.all(this.grantsItems.map((g) => fromUuid(g.uuid)))\n    ).filter((i) => !!i) as SwadeItem[];\n\n    const grants: ItemGrantChainLink[] = [];\n    for (const item of grantedItems) {\n      const grant = this.grantsItems.find((g) => g.uuid === item.uuid)!;\n      const choiceUpdate = await item.handleChoices(\n        foundry.utils.mergeObject(item.toObject(), grant.mutation ?? {}),\n      );\n\n      grants.push({\n        item: new SwadeItem(\n          foundry.utils.mergeObject(item.toObject(), choiceUpdate),\n        ),\n        grant: this.grantsItems.find((g) => g.uuid === item.uuid) as ItemGrant,\n      });\n    }\n\n    const children = await Promise.all(\n      grants.flatMap((g) => g.item.getItemGrantChain(ignored)),\n    );\n\n    return [...new Set([...grants, ...children.deepFlatten()])];\n  }\n\n  async removeGranted(target = this.parent) {\n    if (this.hasGranted.length < 1) return;\n    //grab the granted ids and put them into a set to filter possible duplicates\n    const granted = new Set(\n      //filter the list of granted items to only try and remove the ones that still exist on the parent\n      this.hasGranted.filter((grant) => this.parent?.items.has(grant)),\n    );\n    granted.delete(this.id as string); //delete self in case there are circular dependencies.\n    await target?.deleteEmbeddedDocuments('Item', Array.from(granted));\n    await this.unsetFlag('swade', 'hasGranted');\n  }\n\n  async #postConsumptionCleanup(\n    updatedItems: foundry.abstract.Document.Stored<SwadeItem>[],\n  ) {\n    for (const update of updatedItems) {\n      const item = this.parent?.items.get(update.id);\n      if (item && item.system._shouldDelete) {\n        await item.delete();\n      }\n    }\n    if ('_shouldDelete' in this.system && this.system._shouldDelete) {\n      await this.delete();\n    }\n  }\n\n  private _makeExplodable(expression: string): string {\n    // Make all dice of a roll able to explode\n    const diceRegExp = /\\d*d\\d+[^kdrxc]/g;\n    expression = expression + ' '; // Just because of my poor reg_exp foo\n    const diceStrings: string[] = expression.match(diceRegExp) || [];\n    const used = new Array<string>();\n    for (const match of diceStrings) {\n      if (used.indexOf(match) === -1) {\n        expression = expression.replace(\n          new RegExp(match.slice(0, -1), 'g'),\n          match.slice(0, -1) + 'x',\n        );\n        used.push(match);\n      }\n    }\n    return expression;\n  }\n\n  async #createChargeUsageMessage(charges: number) {\n    const msgClass = getDocumentClass('ChatMessage');\n    const createData = {\n      speaker: msgClass.getSpeaker({ actor: this.actor! }),\n      content: game.i18n.format('SWADE.Consumable.ChargesUsed', {\n        charges,\n        name: this.name,\n      }),\n    };\n    msgClass.applyRollMode(\n      createData,\n      game.settings.get('core', 'rollMode') ?? 'roll',\n    );\n    return msgClass.create(createData);\n  }\n\n  async refreshFromCompendium(): Promise<this | null> {\n    if (!this.isOwned) {\n      ui.notifications.error(game.i18n.localize('SWADE.NotOwnedError'));\n      return null;\n    }\n    if (this.grantsItems.length > 0) {\n      ui.notifications.error(game.i18n.localize('SWADE.GrantsItemsError'));\n      return null;\n    }\n    const newItem = await this.findSimilarInCompendium();\n    if (!newItem) {\n      ui.notifications.warn(game.i18n.localize('SWADE.NoUpdatedItemFound'));\n      return null;\n    }\n    const updates = {\n      name: newItem.name,\n      img: newItem.img,\n      system: foundry.utils.deepClone(newItem.system),\n    };\n    foundry.utils.mergeObject(updates, {\n      'system.favorite':\n        'favorite' in this.system ? this.system.favorite : null,\n      'system.equipStatus':\n        'equipStatus' in this.system ? this.system.equipStatus : null,\n      'system.quantity':\n        'quantity' in this.system ? this.system.quantity : null,\n    });\n    await this.update(updates);\n    return this;\n  }\n\n  async findSimilarInCompendium(): Promise<SwadeItem | null> {\n    const sourceId = this._stats.compendiumSource;\n    let possibleItem: SwadeItem | null = null;\n    if (sourceId) {\n      possibleItem = (await fromUuid(sourceId)) as SwadeItem | null;\n      if (possibleItem) return possibleItem;\n    }\n\n    const searchFields = [\n      { name: 'system.source', weight: 15 },\n      { name: 'name', weight: 10 },\n      { name: 'img', weight: 6 },\n      { name: 'system.category', weight: 1 },\n      { name: 'system.swid', weight: 4 },\n    ];\n    let possibleItemWeight = 20;\n    for (const pack of game.packs) {\n      if (pack.metadata.system !== 'swade' || pack.metadata.type !== 'Item') {\n        continue;\n      }\n      const documents = await pack.getDocuments({ type: this.type });\n      for (const potentialItem of documents) {\n        let currentWeight = 0;\n        for (const search of searchFields) {\n          if (\n            foundry.utils.getProperty(potentialItem, search.name) ==\n            foundry.utils.getProperty(this, search.name)\n          ) {\n            currentWeight += search.weight;\n          }\n        }\n        if (currentWeight > possibleItemWeight) {\n          possibleItem = potentialItem;\n          possibleItemWeight = currentWeight;\n        }\n      }\n    }\n    return possibleItem;\n  }\n\n  async handleChoices(data: Item.CreateData) {\n    const choiceUpdate = {};\n    if (data.system?.choiceSets?.length > 0) {\n      for (const choiceSet of data.system.choiceSets as Array<ChoiceSet>) {\n        if (choiceSet.choice !== null) continue;\n\n        Object.assign(\n          choiceSet,\n          await ChoiceDialog.asPromise({ choiceSet: choiceSet, parent: this }),\n        );\n\n        if (choiceSet.choice === null) continue;\n\n        const mutationOption = choiceSet.choices[choiceSet.choice] ?? {};\n        const update = mutationOption.mutation ?? {};\n        if (mutationOption.addToName) {\n          update.name = data.name + ` (${mutationOption.name})`;\n        }\n        foundry.utils.mergeObject(choiceUpdate, update);\n      }\n      foundry.utils.mergeObject(choiceUpdate, {\n        'system.choiceSets': data.system!.choiceSets,\n      });\n    }\n    return choiceUpdate;\n  }\n\n  protected override async _preCreate(\n    data: Item.CreateData,\n    options: Item.DatabaseeOptions,\n    user: User.Implementation,\n  ) {\n    const canCreate = await super._preCreate(data, options, user);\n    if (canCreate === false) return false;\n\n    const choiceUpdate = await this.handleChoices(data);\n    if (Object.keys(choiceUpdate).length > 0) {\n      this.updateSource(choiceUpdate);\n    }\n  }\n\n  protected override async _preDelete(\n    options: Item.DatabaseeOptions,\n    user: User.Implementation,\n  ): Promise<void> {\n    await super._preDelete(options, user);\n    if (this.parent) await this.removeGranted();\n  }\n\n  protected override _onUpdate(\n    changed: Item.UpdateData,\n    options: Item.Database.OnUpdateOperation,\n    userId: string,\n  ) {\n    super._onUpdate(changed, options, userId);\n    if (userId !== game.userId) return; //return early to prevent multi-application\n    const grantOn: number | undefined = foundry.utils.getProperty(\n      this,\n      'system.grantOn',\n    );\n    if (\n      this.canGrantItems &&\n      this.parent &&\n      grantOn &&\n      foundry.utils.hasProperty(changed, 'system.equipStatus')\n    ) {\n      const equipStatus = foundry.utils.getProperty(this, 'system.equipStatus');\n      const shouldGrant =\n        (grantOn === constants.GRANT_ON.CARRIED &&\n          equipStatus >= constants.EQUIP_STATE.CARRIED) ||\n        (grantOn === constants.GRANT_ON.READIED && this.isReadied);\n      if (shouldGrant && this.hasGranted.length <= 0) {\n        this.grantEmbedded();\n      } else if (!shouldGrant) {\n        this.removeGranted();\n      }\n    }\n  }\n\n  protected static override async _onCreateOperation(\n    items: Item.Implementation[],\n    operation: Item.Database.Create,\n    user: User.Implementation,\n  ) {\n    if (!operation.isItemGrant && user.isSelf) {\n      for (const item of items) {\n        const grantOn: number | undefined = foundry.utils.getProperty(\n          item,\n          'system.grantOn',\n        );\n        const equipStatus: number | undefined = foundry.utils.getProperty(\n          item,\n          'system.equipStatus',\n        );\n        const nonPhysGranter = [\n          'edge',\n          'ability',\n          'ancestry',\n          'hindrance',\n        ].includes(item.type);\n        const shouldGrant =\n          grantOn === constants.GRANT_ON.ADDED ||\n          nonPhysGranter ||\n          (grantOn === constants.GRANT_ON.CARRIED &&\n            equipStatus === constants.EQUIP_STATE.CARRIED) ||\n          (grantOn === constants.GRANT_ON.READIED && item.isReadied);\n        if (item.canGrantItems && item.isEmbedded && shouldGrant) {\n          await item.grantEmbedded();\n        }\n      }\n    }\n    await super._onCreateOperation(items, operation, user);\n  }\n}\n\nexport default SwadeItem;\n","import { Attribute } from '../globals';\nimport { ItemAction, RollModifier } from '../interfaces/additional.interface';\nimport IRollOptions from '../interfaces/RollOptions.interface';\nimport SwadeMeasuredTemplate from './canvas/SwadeMeasuredTemplate';\nimport { SWADE } from './config';\nimport { constants } from './constants';\nimport { SwadeRoll } from './dice/SwadeRoll';\nimport { TraitRoll } from './dice/TraitRoll';\nimport SwadeActor from './documents/actor/SwadeActor';\nimport SwadeItem from './documents/item/SwadeItem';\nimport { Logger } from './Logger';\nimport { getTrait } from './util';\n\n/**\n * A helper class for Item chat card logic\n */\nexport default class ItemChatCardHelper {\n  static async onChatCardAction(\n    event: PointerEvent,\n  ): Promise<SwadeRoll | null> {\n    event.preventDefault();\n\n    // Extract card data\n    const button = event.target as HTMLButtonElement;\n    button.disabled = true;\n    const card = button.closest('.chat-card') as HTMLElement;\n    const messageId = card.closest('.message').dataset.messageId;\n    const message = game.messages?.get(messageId)!;\n    const action = button.dataset.action;\n    const additionalMods = new Array<RollModifier>();\n\n    //save the message ID if we're doing automated ammo management\n    SWADE['itemCardMessageId'] = messageId;\n\n    // Get the Actor from a synthetic Token\n    // This is a variable type because we might switch it later if this turns out\n    // to be a resistance-type trait roll.\n    let actor = this.getChatCardActor(card);\n    if (!actor) return null;\n\n    // Get the Item\n    const item = actor.items.get(card.dataset.itemId);\n    if (!item) {\n      Logger.error(\n        `The requested item ${card.dataset.itemId} does not exist on Actor ${actor.name}`,\n        { toast: true },\n      );\n      return null;\n    }\n\n    if (actor.type === 'vehicle') {\n      actor = (await actor.getDriver()) ?? actor;\n    }\n\n    const actionObj = foundry.utils.getProperty(\n      item,\n      'system.actions.additional.' + action,\n    ) as ItemAction | undefined;\n\n    // \"Resist\" types target the actor with a currently selected token, not the\n    // one that spawned the chat card. So swap that actor in.\n    if (actionObj?.type === constants.ACTION_TYPE.RESIST) {\n      // swap the selected token's actor in as the target for the roll\n      if (!canvas?.tokens || canvas.tokens.controlled.length !== 1) {\n        ui.notifications.warn('SWADE.NoTokenSelectedForResistRoll', {\n          localize: true,\n        });\n        button.disabled = false;\n        return null;\n      }\n      actor = canvas.tokens.controlled[0].actor ?? actor;\n    } else if (\n      !actor.isOwner &&\n      !message.isAuthor &&\n      actionObj?.type !== constants.ACTION_TYPE.MACRO\n    ) {\n      // For non-resist types, don't allow a roll unless the message author is the user clicking the button or it's a macro action\n      button.disabled = false;\n      return null;\n    }\n\n    //if it's a power and the No Power Points rule is in effect\n    if (item.type === 'power' && game.settings.get('swade', 'noPowerPoints')) {\n      const ppCost = card.querySelector('input.pp-adjust').value as number;\n      let modifier = Math.ceil(ppCost / 2);\n      modifier = Math.min(modifier * -1, modifier);\n      if (action === 'formula' || actionObj?.type === 'trait') {\n        additionalMods.push({\n          label: game.i18n.localize('TYPES.Item.power'),\n          value: modifier,\n        });\n      }\n    }\n\n    if (action === 'template') {\n      const template = button.dataset.template!;\n      SwadeMeasuredTemplate.fromPreset(template, item);\n      button.disabled = false;\n      return null;\n    }\n\n    if (!actor) return null;\n\n    const roll = await this.handleAction(item, actor, action, {\n      additionalMods,\n      event: event?.originalEvent,\n    });\n\n    //Only refresh the card if there is a roll and the item isn't a power\n    if (roll && item.type !== 'power') await this.refreshItemCard(actor);\n\n    // Re-enable the button\n    button.disabled = false;\n    return roll;\n  }\n\n  static getChatCardActor(card: HTMLElement): SwadeActor | null {\n    // Case 1 - a synthetic actor from a Token\n    const tokenKey = card.dataset.tokenId;\n    if (tokenKey) {\n      const [sceneId, tokenId] = tokenKey.split('.');\n      const scene = game.scenes?.get(sceneId);\n      if (!scene) return null;\n      const token = scene.tokens.get(tokenId);\n      if (!token) return null;\n      return token.actor;\n    }\n\n    // Case 2 - use Actor ID directory\n    const actorId = card.dataset.actorId!;\n    return game.actors?.get(actorId) ?? null;\n  }\n\n  /**\n   * Handles the basic skill/damage/reload AND the additional actions\n   * @param item\n   * @param actor\n   * @param action\n   */\n  static async handleAction(\n    item: SwadeItem,\n    actor: SwadeActor,\n    action: string,\n    {\n      additionalMods = [],\n      event,\n    }: { additionalMods: RollModifier[]; event?: Event },\n  ): Promise<SwadeRoll<any> | null> {\n    let roll: SwadeRoll<any> | null = null;\n\n    switch (action) {\n      case 'damage':\n        roll = await this.handleDamageAction(item, actor, additionalMods);\n        break;\n      case 'formula':\n        roll = await this.handleFormulaAction(item, actor, additionalMods);\n        break;\n      case 'arcane-device':\n        roll = await actor.makeArcaneDeviceSkillRoll(\n          foundry.utils.getProperty(item, 'system.arcaneSkillDie'),\n        );\n        break;\n      case 'reload':\n        await item.reload();\n        await this.refreshItemCard(actor);\n        break;\n      case 'consume':\n        await item.consume();\n        await this.refreshItemCard(actor);\n        break;\n      default:\n        roll = await this.handleAdditionalActions(item, actor, action, {\n          mods: additionalMods,\n          event,\n        });\n        // No need to call the hook here, as handleAdditionalActions already calls the hook\n        // This is so an external API can directly use handleAdditionalActions to use an action and still fire the hook\n        break;\n    }\n    return roll;\n  }\n\n  static async handleFormulaAction(\n    item: SwadeItem,\n    actor: SwadeActor,\n    additionalMods: RollModifier[] = [],\n  ) {\n    const traitName = foundry.utils.getProperty(item, 'system.actions.trait');\n    if (!item.canExpendResources()) {\n      // TODO: Refactor to be more accurate & more general (probably grab from the PP cost box?)\n      Logger.warn('SWADE.NotEnoughAmmo', { localize: true, toast: true });\n      return null;\n    }\n    additionalMods.push(...item.traitModifiers);\n    const trait = getTrait(traitName, actor);\n    const roll = await this.doTraitAction(trait, actor, {\n      additionalMods,\n      item: item,\n    });\n    if (roll && !item.isMeleeWeapon) await item.consume();\n    this.callActionHook(actor, item, 'formula', roll);\n    return roll;\n  }\n\n  static async handleDamageAction(\n    item: SwadeItem,\n    actor: SwadeActor,\n    additionalMods: RollModifier[] = [],\n  ) {\n    const dmgMod = ItemChatCardHelper.getDamageMod(item);\n    if (dmgMod) additionalMods.push(dmgMod);\n    const roll = await item.rollDamage({ additionalMods });\n    this.callActionHook(actor, item, 'damage', roll);\n    return roll;\n  }\n\n  /**\n   * Handles misc actions\n   * @param item The item that this action is used on\n   * @param actor The actor who has the item\n   * @param key The action key\n   * @returns the evaluated roll\n   */\n  static async handleAdditionalActions(\n    item: SwadeItem,\n    actor: SwadeActor,\n    key: string,\n    { mods = [], event }: { mods: RollModifier[]; event?: Event },\n  ): Promise<SwadeRoll<any> | null> {\n    const action = foundry.utils.getProperty(\n      item,\n      `system.actions.additional.${key}`,\n    ) as ItemAction;\n\n    // if there isn't actually any action then return early\n    if (!action) return null;\n\n    let roll: SwadeRoll<any> | null = null;\n\n    if (\n      action.type === constants.ACTION_TYPE.TRAIT ||\n      action.type === constants.ACTION_TYPE.RESIST\n    ) {\n      //set the trait name and potentially override it via the action\n      const traitName =\n        action.override ||\n        foundry.utils.getProperty(item, 'system.actions.trait');\n\n      //find the trait and either get the skill item or the key of the attribute\n      const trait = getTrait(traitName, actor);\n\n      if (action.modifier) {\n        mods.push({\n          label: action.name,\n          value: action.modifier,\n        });\n      }\n\n      if (item.type === 'weapon') {\n        if (!item.canExpendResources(action.resourcesUsed ?? 1)) {\n          Logger.warn('SWADE.NotEnoughAmmo', { localize: true, toast: true });\n          return null;\n        }\n      }\n\n      mods.push(...item.traitModifiers);\n\n      roll = await this.doTraitAction(trait, actor, {\n        flavour: action.name,\n        rof: action.dice,\n        additionalMods: mods,\n        item: item,\n      });\n      if (\n        roll &&\n        item.type === 'weapon' &&\n        action.type === constants.ACTION_TYPE.TRAIT\n      ) {\n        await item.consume(action.resourcesUsed ?? 1);\n      }\n    } else if (action.type === constants.ACTION_TYPE.DAMAGE) {\n      //Do Damage stuff\n      const dmgMod = ItemChatCardHelper.getDamageMod(item);\n      if (dmgMod) mods.push(dmgMod);\n      if (action.modifier) {\n        mods.push({\n          label: action.name,\n          value: action.modifier,\n        });\n      }\n      roll = await item.rollDamage({\n        dmgOverride: action.override,\n        isHeavyWeapon: action.isHeavyWeapon,\n        flavour: action.name,\n        additionalMods: mods,\n        ap: action.ap,\n      });\n    } else if (action.type === constants.ACTION_TYPE.MACRO) {\n      if (!action.uuid) return null;\n      const macro = (await fromUuid(action.uuid)) as Macro | null;\n      if (!macro) {\n        Logger.warn(\n          game.i18n.format('SWADE.CouldNotFindMacro', { uuid: action.uuid }),\n          { toast: true },\n        );\n      }\n      let targetActor;\n      let targetToken;\n      if (action.macroActor === constants.MACRO_ACTOR.SELF) {\n        targetActor = item.actor;\n      } else if (action.macroActor === constants.MACRO_ACTOR.TARGET) {\n        targetToken = game.user!.targets.first();\n        if (targetToken) targetActor = targetToken.actor;\n        if (!targetActor) {\n          ui.notifications.error('SWADE.CouldNotFindTarget', {\n            localize: true,\n          });\n          return null;\n        }\n      }\n      await macro?.execute({\n        actor: targetActor,\n        item,\n        token: targetToken,\n        event,\n      });\n      return null;\n    }\n    this.refreshItemCard(actor);\n    this.callActionHook(actor, item, key, roll);\n    return roll;\n  }\n\n  static async doTraitAction(\n    trait: string | SwadeItem | null | undefined,\n    actor: SwadeActor,\n    options: IRollOptions,\n  ): Promise<TraitRoll | null> {\n    const rollSkill = trait instanceof SwadeItem || !trait;\n    const rollAttribute = typeof trait === 'string';\n    if (rollSkill) {\n      //get the id from the item or null if there was no trait\n      const id = trait instanceof SwadeItem ? trait.id : null;\n      return actor.rollSkill(id, options);\n    } else if (rollAttribute) {\n      return actor.rollAttribute(trait as Attribute, options);\n    } else {\n      return null;\n    }\n  }\n\n  static async refreshItemCard(actor: SwadeActor, messageId?: string) {\n    //get ChatMessage and remove temporarily stored id from CONFIG object\n    let message;\n    if (messageId) {\n      message = game.messages?.get(messageId);\n    } else {\n      message = game.messages?.get(SWADE['itemCardMessageId']);\n      delete SWADE['itemCardMessageId'];\n    }\n    if (!message) return; //solves for the case where ammo management isn't turned on so there's no errors\n\n    // Some chat cards have buttons that can be clicked by other actors in the game,\n    // eg. resistance actions. When this happens, we cannot update the chat card, as\n    // the acting Actor does not own the card. Skip over these cases; there is no\n    // update necessary. Card updates are for things like ammo management and only make sense\n    // when they're being done by the actor that owns the card.\n    if (!message.isAuthor) return;\n\n    const content = new DOMParser().parseFromString(\n      message.content,\n      'text/html',\n    );\n\n    const messageData = content.querySelector('.chat-card.item-card').dataset;\n\n    const item = actor.items.get(messageData.itemId);\n    function setTextIfPresent(selector: string, text: string) {\n      const field = content.querySelector(selector);\n      if (field) field.textContent = text;\n    }\n    if (item?.type === 'weapon') {\n      const currentShots = item.system.currentShots;\n      const maxShots = item.system.shots;\n\n      //update message content\n      setTextIfPresent('.ammo-counter .current-shots', currentShots);\n      setTextIfPresent('.ammo-counter .max-shots', maxShots);\n    }\n\n    if (item?.type === 'power') {\n      const arcane = item.system.arcane || 'general';\n      const curPP = foundry.utils.getProperty(\n        actor,\n        `system.powerPoints.${arcane}.value`,\n      );\n      const maxPP = foundry.utils.getProperty(\n        actor,\n        `system.powerPoints.${arcane}.max`,\n      );\n      //update message content\n      setTextIfPresent('.pp-counter .current-pp', curPP);\n      setTextIfPresent('.pp-counter .max-pp', maxPP);\n    }\n\n    if (item?.type === 'consumable') {\n      //update message content\n      const charges = item.system.charges;\n      setTextIfPresent('.pp-counter .current-pp', charges.value);\n      setTextIfPresent('.pp-counter .max-pp', charges.max);\n    }\n\n    if (item?.isArcaneDevice) {\n      const currentPP = foundry.utils.getProperty(\n        item,\n        'system.powerPoints.value',\n      );\n      const maxPP = foundry.utils.getProperty(item, 'system.powerPoints.max');\n      //update message content\n      setTextIfPresent('.pp-counter .current-pp', currentPP);\n      setTextIfPresent('.pp-counter .max-pp', maxPP);\n    }\n\n    //update the message and render the chatlog/chat popout\n    await message.update({ content: content.body.innerHTML });\n    // ui.chat?.render(true);\n    for (const appId in message.apps) {\n      const app = message.apps[appId] as FormApplication;\n      if (app.rendered) {\n        app.render(true);\n      }\n    }\n  }\n\n  /** @internal */\n  private static callActionHook(\n    actor: SwadeActor,\n    item: SwadeItem,\n    action: string,\n    roll: SwadeRoll<any> | null,\n  ) {\n    if (!roll) return; // Do not trigger the hook if the roll was cancelled\n    /** @category Hooks */\n    Hooks.call('swadeAction', actor, item, action, roll, game.userId);\n  }\n\n  private static getDamageMod(item: SwadeItem): RollModifier | null {\n    const value = foundry.utils.getProperty(\n      item,\n      'system.actions.dmgMod',\n    ) as string;\n    if (!value) return null;\n\n    // Ensure `item.name` exists to avoid errors\n    const itemName = item?.name ?? game.i18n.localize('SWADE.Item');\n\n    // Localize the label and include the item name\n    let label = `${itemName} ${game.i18n.localize('SWADE.ItemDmgMod')}`;\n\n    // If the value starts with \"@\", use an empty label\n    if (value.startsWith('@')) {\n      label = ''; // Empty label for a modifier\n    }\n\n    return { label, value };\n  }\n}\n","import type SwadeActiveEffect from './documents/active-effect/SwadeActiveEffect';\nimport type SwadeActor from './documents/actor/SwadeActor';\nimport { isFirstGM, isFirstOwner } from './util';\n\nexport default class SwadeSocketHandler {\n  identifier = 'system.swade';\n\n  /** registers all the socket listeners */\n  registerSocketListeners(): void {\n    game.socket?.on(this.identifier, (data) => {\n      switch (data.type) {\n        case 'deleteConvictionMessage':\n          this.#onDeleteConvictionMessage(data);\n          break;\n        case 'newRound':\n          this.#onNewRound(data);\n          break;\n        case 'removeStatusEffect':\n          this.#onRemoveStatusEffect(data);\n          break;\n        case 'giveBennies':\n          this.#onGiveBenny(data);\n          break;\n        case 'promptInitiative':\n          this.#onPromptInitiative(data);\n          break;\n        default:\n          this.#onUnknownSocket(data.type);\n          break;\n      }\n    });\n  }\n\n  emit<T extends EventData>(data: T) {\n    return game.socket?.emit(this.identifier, data);\n  }\n\n  deleteConvictionMessage(messageId: string) {\n    this.emit<DeleteConvictionMessageEvent>({\n      type: 'deleteConvictionMessage',\n      messageId,\n      userId: game.userId!,\n    });\n  }\n\n  #onDeleteConvictionMessage(data: DeleteConvictionMessageEvent) {\n    const message = game.messages?.get(data.messageId);\n    //only delete the message if the user is a GM and the event emitter is one of the recipients\n    if (game.user!.isGM && message?.whisper.includes(data.userId)) {\n      message?.delete();\n    }\n  }\n\n  removeStatusEffect(uuid: string) {\n    this.emit<RemoveStatusEffectEvent>({\n      type: 'removeStatusEffect',\n      effectUUID: uuid,\n    });\n  }\n\n  async #onRemoveStatusEffect(data: RemoveStatusEffectEvent) {\n    const effect = (await fromUuid(data.effectUUID)) as SwadeActiveEffect;\n    if (isFirstOwner(effect.parent)) {\n      effect.expire();\n    }\n  }\n\n  newRound(combatId: string) {\n    this.emit<NewRoundEvent>({\n      type: 'newRound',\n      combatId: combatId,\n    });\n  }\n\n  //advance round\n  async #onNewRound(data: NewRoundEvent) {\n    const combat = game.combats!.get(data.combatId, { strict: true });\n    if (isFirstGM()) combat.nextRound();\n  }\n\n  giveBenny(users: string[], actors?: string[]) {\n    this.emit<GiveBenniesEvent>({ type: 'giveBennies', users, actors });\n  }\n\n  async #onGiveBenny(data: GiveBenniesEvent) {\n    if (data.users.includes(game.userId!)) {\n      // If specific actors were specified, only give bennies to those actors instead of the user's default, and also don't give bennies to the GM\n      if (data.actors) {\n        for (const a of data.actors) {\n          const actor = fromUuidSync(a) as SwadeActor;\n          actor.getBenny();\n        }\n      } else await game.user?.getBenny();\n    }\n  }\n\n  promptInitiative(combatId: string, userId: string, combatantId: string) {\n    if (!game.user?.isGM) return;\n    this.emit<PromptInitiativeEvent>({\n      type: 'promptInitiative',\n      userId,\n      combatId,\n      combatantIds: [combatantId],\n    });\n  }\n\n  #onPromptInitiative(data: PromptInitiativeEvent) {\n    if (game.userId !== data.userId) return;\n    const combat = game.combats!.get(data.combatId, { strict: true });\n    combat.rollInitiative(data.combatantIds);\n  }\n\n  #onUnknownSocket(type: string) {\n    console.warn(`The socket event ${type} is not supported`);\n  }\n}\n\ninterface EventData {\n  type: string;\n}\n\ninterface RemoveStatusEffectEvent extends EventData {\n  effectUUID: string;\n}\n\ninterface DeleteConvictionMessageEvent extends EventData {\n  userId: string;\n  messageId: string;\n}\n\ninterface NewRoundEvent extends EventData {\n  combatId: string;\n}\n\ninterface PromptInitiativeEvent extends EventData {\n  userId: string;\n  combatId: string;\n  combatantIds: string[];\n}\n\ninterface GiveBenniesEvent extends EventData {\n  users: string[];\n  /** An array of Actor UUIDs */\n  actors?: string[];\n}\n","import { SimpleMerge } from 'fvtt-types/utils';\nimport type SwadeActor from '../../documents/actor/SwadeActor';\nimport { PaceSchema } from '../actor/base/creature.schemas';\nimport { makeDiceField } from '../shared';\n\nconst fields = foundry.data.fields;\n\nfunction makePaceField(label: string, initial: number | null = null) {\n  return new fields.NumberField({\n    nullable: true,\n    integer: true,\n    min: 0,\n    initial,\n    label,\n  });\n}\n\nfunction definePaceSchema(): PaceSchema {\n  return {\n    base: new fields.StringField({\n      required: true,\n      initial: 'ground',\n      choices: {\n        ground: 'SWADE.Movement.Pace.Ground.Label',\n        fly: 'SWADE.Movement.Pace.Fly.Label',\n        swim: 'SWADE.Movement.Pace.Swim.Label',\n        burrow: 'SWADE.Movement.Pace.Burrow.Label',\n      },\n      label: 'SWADE.Movement.Pace.Base.Label',\n      hint: 'SWADE.Movement.Pace.Base.Hint',\n    }),\n    ground: makePaceField('SWADE.Movement.Pace.Ground.Label', 6),\n    fly: makePaceField('SWADE.Movement.Pace.Fly.Label'),\n    swim: makePaceField('SWADE.Movement.Pace.Swim.Label'),\n    burrow: makePaceField('SWADE.Movement.Pace.Burrow.Label'),\n    running: new fields.SchemaField({\n      die: makeDiceField(6, 'SWADE.RunningDie'),\n      mod: new fields.NumberField({\n        initial: 0,\n        integer: true,\n        label: 'SWADE.RunningMod',\n      }),\n    }),\n  };\n}\n\nexport class PaceSchemaField<\n  Options extends\n    foundry.data.fields.SchemaField.Options<PaceSchema> = foundry.data.fields.SchemaField.DefaultOptions,\n> extends foundry.data.fields.SchemaField<PaceSchema, Options> {\n  constructor() {\n    super(definePaceSchema(), { label: 'SWADE.Pace' } as Options);\n  }\n\n  static get paceKeys(): Exclude<keyof PaceSchema, 'base' | 'running'>[] {\n    return ['ground', 'fly', 'swim', 'burrow'];\n  }\n\n  protected override _validateType(\n    value: foundry.data.fields.SchemaField.Internal.InitializedType<\n      PaceSchema,\n      SimpleMerge<Options, foundry.data.fields.SchemaField.DefaultOptions>\n    >,\n    options?:\n      | foundry.data.fields.DataField.ValidationOptions<foundry.data.fields.DataField.Any>\n      | undefined,\n  ): boolean | void | foundry.data.validation.DataModelValidationFailure {\n    let result = super._validateType(value, options);\n    if (!value?.base) return result;\n    if (value[value.base] === null) {\n      if (!result || typeof result === 'boolean') {\n        result = new foundry.data.validation.DataModelValidationFailure({});\n      }\n      result.fields[this.fieldPath] =\n        new foundry.data.validation.DataModelValidationFailure({\n          invalidValue: value.base,\n          message: game.i18n.localize('SWADE.Validation.InvalidBasePace'),\n        });\n      throw result.asError();\n    }\n    return result;\n  }\n\n  protected override _castChangeDelta(delta) {\n    //@ts-expect-error Protected prototype property\n    return fields.NumberField.prototype._castChangeDelta(delta);\n  }\n\n  // @ts-expect-error Breaking inheritance intentionally via the _castChangeDelta trick\n  protected override _applyChangeAdd(\n    value: foundry.data.fields.SchemaField.Internal.InitializedType<PaceSchema>,\n    delta: number,\n    _model: SwadeActor,\n    _change: ActiveEffect.EffectChangeData,\n  ) {\n    for (const key of PaceSchemaField.paceKeys) {\n      value[key]! += delta;\n    }\n    return value;\n  }\n\n  // @ts-expect-error Breaking inheritance intentionally via the _castChangeDelta trick\n  protected override _applyChangeMultiply(\n    value: foundry.data.fields.SchemaField.Internal.InitializedType<PaceSchema>,\n    delta: number,\n    _model: SwadeActor,\n    _change: ActiveEffect.EffectChangeData,\n  ) {\n    for (const key of PaceSchemaField.paceKeys) {\n      if (value[key] !== null) value[key]! *= delta;\n    }\n    return value;\n  }\n\n  // @ts-expect-error Breaking inheritance intentionally via the _castChangeDelta trick\n  protected override _applyChangeDowngrade(\n    value: foundry.data.fields.SchemaField.Internal.InitializedType<PaceSchema>,\n    delta: number,\n    _model: SwadeActor,\n    _change: ActiveEffect.EffectChangeData,\n  ) {\n    for (const key of PaceSchemaField.paceKeys) {\n      if (value[key] !== null) value[key] = Math.min(value[key]!, delta);\n    }\n    return value;\n  }\n\n  // @ts-expect-error Breaking inheritance intentionally via the _castChangeDelta trick\n  protected override _applyChangeUpgrade(\n    value: foundry.data.fields.SchemaField.Internal.InitializedType<PaceSchema>,\n    delta: number,\n    _model: SwadeActor,\n    _change: ActiveEffect.EffectChangeData,\n  ) {\n    for (const key of PaceSchemaField.paceKeys) {\n      if (value[key] !== null) value[key] = Math.max(value[key]!, delta);\n    }\n    return value;\n  }\n\n  // @ts-expect-error Breaking inheritance intentionally via the _castChangeDelta trick\n  protected override _applyChangeOverride(\n    value: foundry.data.fields.SchemaField.Internal.InitializedType<PaceSchema>,\n    delta: number,\n    _model: SwadeActor,\n    _change: ActiveEffect.EffectChangeData,\n  ) {\n    for (const key of PaceSchemaField.paceKeys) {\n      value[key] = delta;\n    }\n    return value;\n  }\n}\n","import { PotentialSource } from '../../../globals';\nimport { SWADE } from '../../config';\nimport { constants } from '../../constants';\nimport type { AbilityData } from './ability';\nimport { EdgeData } from './edge';\n\nexport function renameActionProperties(source: any) {\n  if (!source.actions) return;\n  const actions = source.actions;\n  if (!actions.trait && actions.skill) {\n    actions.trait = actions.skill;\n    delete actions.skill;\n  }\n  if (!actions.traitMod && actions.skillMod) {\n    actions.traitMod = actions.skillMod;\n    delete actions.skillMod;\n  }\n  for (const [id, action] of Object.entries<any>(actions.additional ?? {})) {\n    if (id.startsWith('-=') && action === null) continue; //skip null actions, happens on delete\n    //remap skill to trait type actions\n    action.type = action.type === 'skill' ? 'trait' : action.type;\n\n    //set the new properties\n    if (!action.resourcesUsed && action.shotsUsed) {\n      action.resourcesUsed = action.shotsUsed;\n      delete action.shotsUsed;\n    }\n    if (!action.dice && action.rof) {\n      if (typeof action.rof === 'string') {\n        if (Number.isNumeric(action.rof)) action.dice = Number(action.rof);\n      } else if (typeof action.rof === 'number') {\n        action.dice = action.rof;\n      }\n      delete action.rof;\n    }\n    if (!action.modifier && (action.skillMod || action.dmgMod)) {\n      if (action.type === constants.ACTION_TYPE.TRAIT) {\n        action.modifier = action.skillMod;\n      }\n      if (action.type === constants.ACTION_TYPE.DAMAGE) {\n        action.modifier = action.dmgMod;\n      }\n      delete action.skillMod;\n      delete action.dmgMod;\n    }\n    if (!action.override && (action.skillOverride || action.dmgOverride)) {\n      if (action.type === constants.ACTION_TYPE.TRAIT) {\n        action.override = action.skillOverride;\n      }\n      if (action.type === constants.ACTION_TYPE.DAMAGE) {\n        action.override = action.dmgOverride;\n      }\n      delete action.skillOverride;\n      delete action.dmgOverride;\n    }\n  }\n}\n\nexport function renameRaceToAncestry(source: PotentialSource<AbilityData>) {\n  if (source.subtype === 'race') source.subtype = 'ancestry';\n}\n\nexport function convertRequirementsToList(source: PotentialSource<EdgeData>) {\n  if (\n    !source.requirements ||\n    Array.isArray(source.requirements) ||\n    Object.keys(source.requirements).every((k) => Number.isNumeric(k))\n  ) {\n    return;\n  }\n  const oldValue = source.requirements['value'] as string;\n  const mapped: any[] = oldValue\n    .split(',')\n    .filter(Boolean)\n    .map((r) => r.trim()) //trim excess whitespaces before we do the actual mapping\n    .map((requirement: string) => {\n      if (SWADE.ranks.includes(requirement)) {\n        return {\n          type: constants.REQUIREMENT_TYPE.RANK,\n          value: SWADE.ranks.indexOf(requirement),\n        };\n      }\n      if (\n        requirement === game.i18n.localize('SWADE.WildCard') ||\n        requirement === 'Wild Card'\n      ) {\n        return {\n          type: constants.REQUIREMENT_TYPE.WILDCARD,\n          value: true,\n        };\n      }\n      return {\n        type: constants.REQUIREMENT_TYPE.OTHER,\n        label: requirement,\n      };\n    });\n  //make sure at least 1 rank requirement is present in case none could be detected\n  if (!mapped.find((r) => r.type === constants.REQUIREMENT_TYPE.RANK)) {\n    mapped.unshift({\n      type: constants.REQUIREMENT_TYPE.RANK,\n      value: constants.RANK.NOVICE,\n    });\n  }\n  source.requirements = mapped;\n}\n","import { PotentialSource } from '../../../globals';\nimport { constants } from '../../constants';\nimport { createEmbedElement } from '../../util';\nimport * as migrations from './_migration';\nimport { SwadeBaseItemData } from './base';\nimport { builder, category, favorite, grants } from './common';\nimport {\n  Builder,\n  Category,\n  ChoicesType,\n  Favorite,\n  Grants,\n} from './item-common.interface';\n\ndeclare namespace AbilityData {\n  interface Schema\n    extends SwadeBaseItemData.Schema,\n      Favorite,\n      Category,\n      Grants,\n      Builder {\n    subtype: foundry.data.fields.StringField<{\n      initial: typeof constants.ABILITY_TYPE.SPECIAL;\n      choices: ChoicesType<typeof constants.ABILITY_TYPE>;\n      textSearch: true;\n    }>;\n    grantsPowers: foundry.data.fields.BooleanField<{ label: string }>;\n  }\n  interface BaseData extends SwadeBaseItemData.BaseData {}\n  interface DerivedData extends SwadeBaseItemData.DerivedData {}\n}\n\nclass AbilityData extends SwadeBaseItemData<\n  AbilityData.Schema,\n  AbilityData.BaseData,\n  AbilityData.DerivedData\n> {\n  /** @inheritdoc */\n  static override defineSchema(): AbilityData.Schema {\n    const fields = foundry.data.fields;\n    return {\n      ...super.defineSchema(),\n      ...favorite(),\n      ...category(),\n      ...grants(),\n      ...builder(),\n      subtype: new fields.StringField({\n        initial: constants.ABILITY_TYPE.SPECIAL,\n        choices: Object.values(constants.ABILITY_TYPE),\n        textSearch: true,\n        label: 'SWADE.Subtype',\n      }),\n      grantsPowers: new fields.BooleanField({\n        label: 'SWADE.GrantsPowers',\n      }),\n    };\n  }\n\n  /** @inheritdoc */\n  static override migrateData(source: PotentialSource<AbilityData>) {\n    migrations.renameRaceToAncestry(source);\n    return super.migrateData(source);\n  }\n\n  get canHaveCategory() {\n    return true;\n  }\n\n  get canGrantItems() {\n    return true;\n  }\n\n  protected override async _preCreate(\n    data: foundry.abstract.TypeDataModel.ParentAssignmentType<\n      AbilityData.Schema,\n      Item<'ability'>\n    >,\n    options: Item.Database.PreUpdateOptions,\n    user: User.Implementation,\n  ) {\n    const allowed = await super._preCreate(data, options, user);\n    if (allowed === false) return false;\n    //Stop Archetypes from being added to the actor as an item if the actor already has one\n    const subType = this.subtype;\n    if (\n      subType === constants.ABILITY_TYPE.ARCHETYPE &&\n      !!this.parent.actor?.archetype\n    ) {\n      ui.notifications?.warn('SWADE.Validation.OnlyOneArchetype', {\n        localize: true,\n      });\n      return false;\n    }\n  }\n\n  declare enrichedDescription?: string;\n\n  override async toEmbed(\n    config: TextEditor.DocumentHTMLEmbedConfig,\n    options: TextEditor.EnrichmentOptions,\n  ): Promise<HTMLElement | HTMLCollection | null> {\n    config.caption = false;\n    this.enrichedDescription = await foundry.applications.ux.TextEditor.implementation.enrichHTML(this.description, {\n      ...options,\n    });\n    return await createEmbedElement(\n      this,\n      'systems/swade/templates/embeds/ability-embeds.hbs',\n      ['item-embed', 'ability'],\n    );\n  }\n}\n\nexport { AbilityData };\n","export function actionProperties(data: any) {\r\n  const options: foundry.utils.LogCompatibilityWarningOptions = {\r\n    since: '3.1',\r\n    until: '4.0',\r\n  };\r\n  const descriptor = { configurable: true };\r\n\r\n  Object.defineProperties(data.actions, {\r\n    skill: {\r\n      ...descriptor,\r\n      get: () => {\r\n        foundry.utils.logCompatibilityWarning(\r\n          getReplacementMessage('skill', 'trait'),\r\n          options,\r\n        );\r\n        return data.actions.trait;\r\n      },\r\n      set: (skill: string) => {\r\n        foundry.utils.logCompatibilityWarning(\r\n          getReplacementMessage('skill', 'trait'),\r\n          options,\r\n        );\r\n        data.actions.trait = skill;\r\n      },\r\n    },\r\n    skillMod: {\r\n      ...descriptor,\r\n      get: () => {\r\n        foundry.utils.logCompatibilityWarning(\r\n          getReplacementMessage('skillMod', 'traitMod'),\r\n          options,\r\n        );\r\n\r\n        return data.actions.traitMod;\r\n      },\r\n      set: (skillMod: string) => {\r\n        foundry.utils.logCompatibilityWarning(\r\n          getReplacementMessage('skill', 'traitMod'),\r\n          options,\r\n        );\r\n        data.actions.traitMod = skillMod;\r\n      },\r\n    },\r\n  });\r\n\r\n  for (const action of Object.values<any>(data.actions.additional)) {\r\n    Object.defineProperties(action, {\r\n      rof: {\r\n        ...descriptor,\r\n        get: () => {\r\n          foundry.utils.logCompatibilityWarning(\r\n            getReplacementMessage('rof', 'dice'),\r\n            options,\r\n          );\r\n          return action.dice;\r\n        },\r\n        set: (rof: number) => {\r\n          foundry.utils.logCompatibilityWarning(\r\n            getReplacementMessage('rof', 'dice'),\r\n            options,\r\n          );\r\n          action.dice = rof;\r\n        },\r\n      },\r\n      shotsUsed: {\r\n        ...descriptor,\r\n        get: () => {\r\n          foundry.utils.logCompatibilityWarning(\r\n            getReplacementMessage('shotsUsed', 'resourcesUsed'),\r\n            options,\r\n          );\r\n          return action.resourcesUsed;\r\n        },\r\n        set: (shots: number) => {\r\n          foundry.utils.logCompatibilityWarning(\r\n            getReplacementMessage('shotsUsed', 'resourcesUsed'),\r\n            options,\r\n          );\r\n          action.resourcesUsed = shots;\r\n        },\r\n      },\r\n      skillOverride: {\r\n        ...descriptor,\r\n        get: () => {\r\n          foundry.utils.logCompatibilityWarning(\r\n            'The skillOverride and dmgOverride properties have been combined into a new property named override',\r\n            options,\r\n          );\r\n          return action.override;\r\n        },\r\n        set: (skillOverride: string) => {\r\n          foundry.utils.logCompatibilityWarning(\r\n            'The skillOverride and dmgOverride properties have been combined into a new property named override',\r\n            options,\r\n          );\r\n          action.override = skillOverride;\r\n        },\r\n      },\r\n      skillMod: {\r\n        ...descriptor,\r\n        get: () => {\r\n          foundry.utils.logCompatibilityWarning(\r\n            'The skillMod and dmgMod properties have been combined into a new property named modifier',\r\n            options,\r\n          );\r\n          return action.modifier;\r\n        },\r\n        set: (skillMod: string) => {\r\n          foundry.utils.logCompatibilityWarning(\r\n            'The skillMod and dmgMod properties have been combined into a new property named modifier',\r\n            options,\r\n          );\r\n          action.modifier = skillMod;\r\n        },\r\n      },\r\n      dmgOverride: {\r\n        ...descriptor,\r\n        get: () => {\r\n          foundry.utils.logCompatibilityWarning(\r\n            'The skillOverride and dmgOverride properties have been combined into a new property named override',\r\n            options,\r\n          );\r\n          return action.override;\r\n        },\r\n        set: (dmgOverride: string) => {\r\n          foundry.utils.logCompatibilityWarning(\r\n            'The skillOverride and dmgOverride properties have been combined into a new property named override',\r\n            options,\r\n          );\r\n          action.override = dmgOverride;\r\n        },\r\n      },\r\n      dmgMod: {\r\n        ...descriptor,\r\n        get: () => {\r\n          foundry.utils.logCompatibilityWarning(\r\n            'The skillMod and dmgMod properties have been combined into a new property named modifier',\r\n            options,\r\n          );\r\n          return action.modifier;\r\n        },\r\n        set: (dmgMod: string) => {\r\n          foundry.utils.logCompatibilityWarning(\r\n            'The skillMod and dmgMod properties have been combined into a new property named modifier',\r\n            options,\r\n          );\r\n          action.modifier = dmgMod;\r\n        },\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nfunction getReplacementMessage(old: string, newName: string): string {\r\n  return `The ${old} property has been depreciated in favor of the more aptly named ${newName} property`;\r\n}\r\n","import { DeepPartial } from 'fvtt-types/utils';\nimport { PotentialSource } from '../../../globals';\nimport { createEmbedElement } from '../../util';\nimport * as migrations from './_migration';\nimport * as shims from './_shims';\nimport { SwadeBaseItemData } from './base';\nimport { actions, category, favorite, templates } from './common';\nimport {\n  Actions,\n  Category,\n  Favorite,\n  Templates,\n} from './item-common.interface';\nimport type SwadeItem from '../../documents/item/SwadeItem';\n\ndeclare namespace ActionData {\n  interface Schema\n    extends SwadeBaseItemData.Schema,\n      Favorite,\n      Category,\n      Templates,\n      Actions {\n    hidden: foundry.data.fields.BooleanField<{\n      initial: boolean;\n      label: string;\n      hint: string;\n    }>;\n  }\n  interface BaseData extends SwadeBaseItemData.BaseData {}\n  interface DerivedData extends SwadeBaseItemData.DerivedData {}\n}\n\nclass ActionData extends SwadeBaseItemData<\n  ActionData.Schema,\n  ActionData.BaseData,\n  ActionData.DerivedData\n> {\n  static override defineSchema(): ActionData.Schema {\n    return {\n      ...super.defineSchema(),\n      ...favorite(),\n      ...category(),\n      ...templates(),\n      ...actions(),\n      hidden: new foundry.data.fields.BooleanField({\n        initial: false,\n        label: 'SWADE.Actions.Hidden.Label',\n        hint: 'SWADE.Actions.Hidden.Hint',\n      }),\n    };\n  }\n\n  static override migrateData(source: PotentialSource<ActionData>) {\n    migrations.renameActionProperties(source);\n    return super.migrateData(source);\n  }\n\n  get canHaveCategory() {\n    return true;\n  }\n\n  declare enrichedDescription?: string;\n\n  override async toEmbed(\n    config: TextEditor.DocumentHTMLEmbedConfig,\n    options: TextEditor.EnrichmentOptions,\n  ): Promise<HTMLElement | HTMLCollection | null> {\n    config.caption = false;\n    this.enrichedDescription = await foundry.applications.ux.TextEditor.implementation.enrichHTML(this.description, {\n      ...options,\n    });\n    return await createEmbedElement(\n      this,\n      'systems/swade/templates/embeds/action-embeds.hbs',\n      ['item-embed', 'action'],\n    );\n  }\n\n  protected _applyShims() {\n    shims.actionProperties(this);\n  }\n\n  protected override _initialize(options?: any) {\n    super._initialize(options);\n    this._applyShims();\n  }\n\n  #triggerActivityUpdate() {\n    const items =\n      this.parent.actor?.items.filter(\n        (i) => 'activities' in i.system && i.system.activities.has(this.swid),\n      ) ?? [];\n    for (const item of items) {\n      item._safePrepareData();\n      item.sheet.render();\n    }\n  }\n\n  protected override _onUpdate(\n    changed: DeepPartial<\n      foundry.abstract.TypeDataModel.ParentAssignmentType<\n        ActionData.Schema,\n        SwadeItem\n      >\n    >,\n    options: Item.Database.OnUpdateOperation,\n    userId: string,\n  ): void {\n    super._onUpdate(changed, options, userId);\n    if (foundry.utils.hasProperty(changed, 'system.actions'))\n      this.#triggerActivityUpdate();\n  }\n  protected override _onCreate(\n    data: foundry.abstract.TypeDataModel.ParentAssignmentType<\n      ActionData.Schema,\n      SwadeItem\n    >,\n    options: Item.Database.OnCreateOperation,\n    userId: string,\n  ): void {\n    super._onCreate(data, options, userId);\n    this.#triggerActivityUpdate();\n  }\n  protected override _onDelete(\n    options: Item.Database.OnDeleteOperation,\n    userId: string,\n  ): void {\n    super._onDelete(options, userId);\n    this.#triggerActivityUpdate();\n  }\n}\n\nexport { ActionData };\n","import { createEmbedElement } from '../../util';\nimport { SwadeBaseItemData } from './base';\nimport { grants } from './common';\nimport { Grants } from './item-common.interface';\n\ndeclare namespace AncestryData {\n  interface Schema extends SwadeBaseItemData.Schema, Grants {\n    threshold: foundry.data.fields.NumberField<{\n      integer: true;\n      initial: 2;\n    }>;\n  }\n  interface BaseData extends SwadeBaseItemData.BaseData {}\n  interface DerivedData extends SwadeBaseItemData.DerivedData {}\n}\n\nclass AncestryData extends SwadeBaseItemData<\n  AncestryData.Schema,\n  AncestryData.BaseData,\n  AncestryData.DerivedData\n> {\n  /** @inheritdoc */\n  static override defineSchema(): AncestryData.Schema {\n    return {\n      ...super.defineSchema(),\n      ...grants(),\n      threshold: new foundry.data.fields.NumberField({\n        integer: true,\n        initial: 2,\n      }),\n    };\n  }\n\n  get canGrantItems() {\n    return true;\n  }\n\n  protected override async _preCreate(\n    data: foundry.abstract.TypeDataModel.ParentAssignmentType<\n      AncestryData.Schema,\n      Item<'ancestry'>\n    >,\n    options: Item.Database.PreUpdateOptions,\n    user: User.Implementation,\n  ) {\n    const allowed = await super._preCreate(data, options, user);\n    if (allowed === false) return false;\n    //Stop Ancestries/Archetypes from being added to the actor as an item if the actor already has one\n    if (this.parent.actor?.ancestry) {\n      ui.notifications.warn('SWADE.Validation.OnlyOneAncestry', {\n        localize: true,\n      });\n      return false;\n    }\n  }\n\n  declare enrichedDescription?: string;\n\n  override async toEmbed(\n    config: TextEditor.DocumentHTMLEmbedConfig,\n    options: TextEditor.EnrichmentOptions,\n  ): Promise<HTMLElement | HTMLCollection | null> {\n    config.caption = false;\n    this.enrichedDescription = await foundry.applications.ux.TextEditor.implementation.enrichHTML(this.description, {\n      ...options,\n    });\n    return await createEmbedElement(\n      this,\n      'systems/swade/templates/embeds/ancestry-embeds.hbs',\n      ['item-embed', 'ancestry'],\n    );\n  }\n}\n\nexport { AncestryData };\n","export function ensureWeightsAreNumeric(source: any) {\r\n  if (!Object.hasOwn(source, 'weight')) return; // return early in case of update\r\n  if (source.weight === null || typeof source.weight === 'number') return;\r\n  if (typeof source.weight === 'string') {\r\n    // remove all symbols that aren't numeric or a decimal point\r\n    source.weight = Number(source.weight.replaceAll(/[^0-9.]/g, ''));\r\n  }\r\n}\r\n\r\nexport function ensurePricesAreNumeric(source: any) {\r\n  if (!Object.hasOwn(source, 'price')) return; // return early in case of update\r\n  if (source.price === null || typeof source.price === 'number') return;\r\n  if (typeof source.price === 'string') {\r\n    // remove all symbols that aren't numeric or a decimal point\r\n    source.price = Number(source.price.replaceAll(/[^0-9.]/g, ''));\r\n  }\r\n}\r\n\r\nexport function ensureAPisNumeric(source: any) {\r\n  if (!Object.hasOwn(source, 'ap')) return; // return early in case of update\r\n  if (source.ap === null || typeof source.ap === 'number') return;\r\n  if (Number.isNumeric(source.ap)) {\r\n    source.ap = Number(source.ap);\r\n    return;\r\n  }\r\n  source.ap = 0; // set the ap to 0 as a default\r\n}\r\n\r\nexport function ensureRoFisNumeric(source: any) {\r\n  if (!Object.hasOwn(source, 'rof')) return; // return early in case of update\r\n  if (source.rof === null || typeof source.rof === 'number') return;\r\n  if (Number.isNumeric(source.rof)) {\r\n    source.rof = Number(source.rof);\r\n    return;\r\n  }\r\n  source.rof = 1; // set the rof to 1 as a default\r\n}\r\n\r\nexport function ensureShotsAreNumeric(source: any) {\r\n  if (\r\n    Object.hasOwn(source, 'shots') &&\r\n    source.shots !== null &&\r\n    typeof source.shots !== 'number'\r\n  ) {\r\n    source.shots = null;\r\n  }\r\n  if (\r\n    Object.hasOwn(source, 'currentShots') &&\r\n    source.currentShots !== null &&\r\n    typeof source.currentShots !== 'number'\r\n  ) {\r\n    source.currentShots = null;\r\n  }\r\n}\r\n\r\nexport function ensurePowerPointsAreNumeric(source: any) {\r\n  if (!Object.hasOwn(source, 'pp')) return; // return early in case of update\r\n  if (source.pp === null || typeof source.pp === 'number') return;\r\n  if (Number.isNumeric(source.pp)) {\r\n    source.pp = Number(source.pp);\r\n    return;\r\n  }\r\n  source.pp = 0; // set the pp to 0 as a default\r\n}\r\n","import { PotentialSource } from '../../../globals';\nimport { constants } from '../../constants';\nimport { ItemChatCardChip } from '../../documents/item/SwadeItem.interface';\nimport { createEmbedElement } from '../../util';\nimport * as migrations from './_migration';\nimport * as quarantine from './_quarantine';\nimport * as shims from './_shims';\nimport { SwadePhysicalItemData } from './base';\nimport {\n  actions,\n  activities,\n  arcaneDevice,\n  category,\n  equippable,\n  favorite,\n  grantEmbedded,\n} from './common';\nimport {\n  Actions,\n  Activities,\n  ArcaneDevice,\n  Category,\n  Equippable,\n  Favorite,\n  GrantEmbedded,\n} from './item-common.interface';\n\ndeclare namespace ArmorData {\n  interface Schema\n    extends SwadePhysicalItemData.Schema,\n      Equippable,\n      ArcaneDevice,\n      Actions,\n      Activities,\n      Favorite,\n      Category,\n      GrantEmbedded {\n    minStr: foundry.data.fields.StringField<{ initial: ''; label: string }>;\n    armor: foundry.data.fields.NumberField<{ initial: 0; label: string }>;\n    toughness: foundry.data.fields.NumberField<{ initial: 0; label: string }>;\n    isNaturalArmor: foundry.data.fields.BooleanField<{ label: string }>;\n    isHeavyArmor: foundry.data.fields.BooleanField<{ label: string }>;\n    locations: foundry.data.fields.SchemaField<{\n      head: foundry.data.fields.BooleanField<{ label: string }>;\n      torso: foundry.data.fields.BooleanField<{ label: string; initial: true }>;\n      arms: foundry.data.fields.BooleanField<{ label: string }>;\n      legs: foundry.data.fields.BooleanField<{ label: string }>;\n    }>;\n    energy: foundry.data.fields.SchemaField<\n      {\n        value: foundry.data.fields.NumberField<{\n          integer: true;\n          initial: 0;\n          label: string;\n        }>;\n        max: foundry.data.fields.NumberField<{\n          integer: true;\n          initial: 0;\n          label: string;\n        }>;\n        enabled: foundry.data.fields.BooleanField<{ label: string }>;\n      },\n      { label: string }\n    >;\n    mods: foundry.data.fields.SchemaField<{\n      value: foundry.data.fields.NumberField<{\n        integer: true;\n        initial: 0;\n        label: string;\n      }>;\n      max: foundry.data.fields.NumberField<{\n        integer: true;\n        initial: 0;\n        label: string;\n      }>;\n    }>;\n  }\n  interface BaseData extends SwadePhysicalItemData.BaseData {}\n  interface DerivedData extends SwadePhysicalItemData.DerivedData {}\n}\nclass ArmorData extends SwadePhysicalItemData<\n  ArmorData.Schema,\n  ArmorData.BaseData,\n  ArmorData.DerivedData\n> {\n  static override defineSchema(): ArmorData.Schema {\n    const fields = foundry.data.fields;\n    return {\n      ...super.defineSchema(),\n      ...equippable(),\n      ...arcaneDevice(),\n      ...actions(),\n      ...activities(),\n      ...favorite(),\n      ...category(),\n      ...grantEmbedded(),\n      minStr: new fields.StringField({ initial: '', label: 'SWADE.MinStr' }),\n      armor: new fields.NumberField({ initial: 0, label: 'SWADE.Armor' }),\n      toughness: new fields.NumberField({ initial: 0, label: 'SWADE.Tough' }),\n      isNaturalArmor: new fields.BooleanField({ label: 'SWADE.NaturalArmor' }),\n      isHeavyArmor: new fields.BooleanField({ label: 'SWADE.HeavyArmor' }),\n      locations: new fields.SchemaField({\n        head: new fields.BooleanField({ label: 'SWADE.Head' }),\n        torso: new fields.BooleanField({ initial: true, label: 'SWADE.Torso' }),\n        arms: new fields.BooleanField({ label: 'SWADE.Arms' }),\n        legs: new fields.BooleanField({ label: 'SWADE.Legs' }),\n      }),\n      energy: new fields.SchemaField(\n        {\n          value: new fields.NumberField({\n            integer: true,\n            initial: 0,\n            label: 'SWADE.Energy.Value',\n          }),\n          max: new fields.NumberField({\n            integer: true,\n            initial: 0,\n            label: 'SWADE.Energy.Max',\n          }),\n          enabled: new fields.BooleanField({ label: 'SWADE.Energy.Enable' }),\n        },\n        { label: 'SWADE.Energy.Label' },\n      ),\n      mods: new fields.SchemaField({\n        value: new fields.NumberField({\n          integer: true,\n          initial: 0,\n          label: 'SWADE.Mods',\n        }),\n        max: new fields.NumberField({\n          integer: true,\n          initial: 0,\n          label: 'SWADE.MaxMods',\n        }),\n      }),\n    };\n  }\n\n  static override migrateData(source: PotentialSource<ArmorData>) {\n    quarantine.ensurePricesAreNumeric(source);\n    quarantine.ensureWeightsAreNumeric(source);\n    migrations.renameActionProperties(source);\n    return super.migrateData(source);\n  }\n\n  protected override _initialize(options?: any) {\n    super._initialize(options);\n    this._applyShims();\n  }\n\n  protected _applyShims() {\n    shims.actionProperties(this);\n  }\n\n  get canBeArcaneDevice() {\n    return true;\n  }\n\n  get isReadied(): boolean {\n    return Number(this.equipStatus) > constants.EQUIP_STATE.CARRIED;\n  }\n\n  async getChatChips(\n    enrichOptions: Partial<TextEditor.EnrichmentOptions>,\n  ): Promise<ItemChatCardChip[]> {\n    const chips = new Array<ItemChatCardChip>();\n    for (const [location, covered] of Object.entries(this.locations)) {\n      if (!covered) continue;\n      chips.push({\n        text: game.i18n.localize(\n          `SWADE.${location.charAt(0).toUpperCase() + location.slice(1)}`,\n        ),\n      });\n    }\n    if (this.isReadied) {\n      chips.push({\n        icon: '<i class=\"fas fa-tshirt\"></i>',\n        title: game.i18n.localize('SWADE.Equipped'),\n      });\n    } else {\n      chips.push({\n        icon: '<i class=\"fas fa-tshirt\" style=\"color:grey\"></i>',\n        title: game.i18n.localize('SWADE.Unequipped'),\n      });\n    }\n    chips.push(\n      {\n        icon: '<i class=\"fas fa-shield-alt\"></i>',\n        title: game.i18n.localize('SWADE.Armor'),\n        text: this.armor,\n      },\n      {\n        icon: '<i class=\"fas fa-dumbbell\"></i>',\n        text: this.minStr,\n      },\n      {\n        icon: '<i class=\"fas fa-sticky-note\"></i>',\n        text: await foundry.applications.ux.TextEditor.implementation.enrichHTML(this.notes ?? '', enrichOptions),\n        title: game.i18n.localize('SWADE.Notes'),\n      },\n    );\n    return chips;\n  }\n\n  protected override async _preCreate(\n    data: foundry.abstract.TypeDataModel.ParentAssignmentType<\n      ArmorData.Schema,\n      Item<'armor'>\n    >,\n    options: Item.Database.PreUpdateOptions,\n    user: User.Implementation,\n  ) {\n    const allowed = await super._preCreate(data, options, user);\n    if (allowed === false) return false;\n    if (this.parent?.actor?.type === 'npc') {\n      this.updateSource({ equipStatus: constants.EQUIP_STATE.EQUIPPED });\n    }\n  }\n\n  declare enrichedDescription?: string;\n\n  override async toEmbed(\n    config: TextEditor.DocumentHTMLEmbedConfig,\n    options: TextEditor.EnrichmentOptions,\n  ): Promise<HTMLElement | HTMLCollection | null> {\n    config.caption = false;\n    this.enrichedDescription = await foundry.applications.ux.TextEditor.implementation.enrichHTML(this.description, {\n      ...options,\n    });\n    return await createEmbedElement(\n      this,\n      'systems/swade/templates/embeds/armor-embeds.hbs',\n      ['item-embed', 'armor'],\n    );\n  }\n}\n\nexport { ArmorData };\n","import { DeepPartial } from 'fvtt-types/utils';\nimport { EquipState, PotentialSource, Updates } from '../../../globals';\nimport { Logger } from '../../Logger';\nimport { constants } from '../../constants';\nimport { UsageUpdates } from '../../documents/item/SwadeItem.interface';\nimport { createEmbedElement } from '../../util';\nimport * as migrations from './_migration';\nimport * as quarantine from './_quarantine';\nimport * as shims from './_shims';\nimport { SwadePhysicalItemData } from './base';\nimport {\n  actions,\n  activities,\n  category,\n  equippable,\n  favorite,\n  grantEmbedded,\n} from './common';\nimport {\n  Actions,\n  Activities,\n  Category,\n  ChoicesType,\n  Equippable,\n  Favorite,\n  GrantEmbedded,\n} from './item-common.interface';\n\ndeclare namespace ConsumableData {\n  interface Schema\n    extends SwadePhysicalItemData.Schema,\n      Equippable,\n      Favorite,\n      Category,\n      Actions,\n      Activities,\n      GrantEmbedded {\n    charges: foundry.data.fields.SchemaField<{\n      value: foundry.data.fields.NumberField<{ initial: 1 }>;\n      max: foundry.data.fields.NumberField<{ initial: 1 }>;\n    }>;\n    messageOnUse: foundry.data.fields.BooleanField<{ initial: true }>;\n    destroyOnEmpty: foundry.data.fields.BooleanField<{ label: string }>;\n    subtype: foundry.data.fields.StringField<{\n      initial: typeof constants.CONSUMABLE_TYPE.REGULAR;\n      choices: ChoicesType<typeof constants.CONSUMABLE_TYPE>;\n      textSearch: true;\n    }>;\n  }\n  interface BaseData extends SwadePhysicalItemData.BaseData {}\n  interface DerivedData extends SwadePhysicalItemData.DerivedData {}\n}\n\nclass ConsumableData extends SwadePhysicalItemData<\n  ConsumableData.Schema,\n  ConsumableData.BaseData,\n  ConsumableData.DerivedData\n> {\n  /** @inheritdoc */\n  static override defineSchema(): ConsumableData.Schema {\n    const fields = foundry.data.fields;\n    return {\n      ...super.defineSchema(),\n      ...equippable(),\n      ...favorite(),\n      ...category(),\n      ...actions(),\n      ...activities(),\n      ...grantEmbedded(),\n      charges: new fields.SchemaField({\n        value: new fields.NumberField({ initial: 1, label: 'SWADE.Charges' }),\n        max: new fields.NumberField({ initial: 1, label: 'SWADE.ChargesMax' }),\n      }),\n      messageOnUse: new fields.BooleanField({\n        initial: true,\n        label: 'SWADE.MessageOnUse.Label',\n      }),\n      destroyOnEmpty: new fields.BooleanField({\n        label: 'SWADE.DestroyOnEmpty',\n      }),\n      subtype: new fields.StringField({\n        initial: constants.CONSUMABLE_TYPE.REGULAR,\n        choices: Object.values(constants.CONSUMABLE_TYPE),\n        textSearch: true,\n        label: 'SWADE.Subtype',\n      }),\n    };\n  }\n\n  /** @inheritdoc */\n  static override migrateData(source: PotentialSource<ConsumableData>) {\n    quarantine.ensurePricesAreNumeric(source);\n    quarantine.ensureWeightsAreNumeric(source);\n    migrations.renameActionProperties(source);\n    return super.migrateData(source);\n  }\n\n  /** @inheritdoc */\n  protected override _initialize(options?: any) {\n    super._initialize(options);\n    this._applyShims();\n  }\n\n  protected _applyShims() {\n    shims.actionProperties(this);\n  }\n\n  /** Used by SwadeItem.#postConsumptionCleanup */\n  get _shouldDelete(): boolean {\n    return this.destroyOnEmpty && this.quantity === 0 && this.parent.isOwned;\n  }\n\n  /** Used by SwadeItem.setEquipState */\n  _rejectEquipState(state: EquipState): boolean {\n    return state > constants.EQUIP_STATE.CARRIED;\n  }\n\n  /** Used by SwadeItem.consume */\n  _getUsageUpdates(chargesToUse: number): UsageUpdates | false {\n    const actorUpdates: Updates = {};\n    const itemUpdates: Updates = {};\n    const resourceUpdates = new Array<Updates>();\n\n    //gather variables\n    const currentCharges = Number(this.charges.value);\n    const maxCharges = Number(this.charges.max);\n    const quantity = Number(this.quantity);\n    const maxChargesOnStack = (quantity - 1) * maxCharges + currentCharges;\n\n    //abort early if too much is being used\n    if (chargesToUse > maxChargesOnStack) {\n      ui.notifications.warn('SWADE.Consumable.NotEnoughCharges', {\n        localize: true,\n      });\n      return false;\n    }\n\n    const totalRemainingCharges = maxChargesOnStack - chargesToUse;\n    const newQuantity = Math.ceil(totalRemainingCharges / maxCharges);\n    let newCharges = totalRemainingCharges % maxCharges;\n\n    if (newCharges === 0 && newQuantity < quantity && newQuantity !== 0) {\n      newCharges = maxCharges;\n    }\n\n    //write updates\n    itemUpdates['system.quantity'] = Math.max(0, newQuantity);\n    itemUpdates['system.charges.value'] = newCharges;\n\n    return { actorUpdates, itemUpdates, resourceUpdates };\n  }\n\n  protected override async _preUpdate(\n    changed: DeepPartial<\n      foundry.abstract.TypeDataModel.ParentAssignmentType<\n        ConsumableData.Schema,\n        Item<'consumable'>\n      >\n    >,\n    options: Item.Database.PreUpdateOptions,\n    user: User.Implementation,\n  ) {\n    await super._preUpdate(changed, options, user);\n    if (\n      foundry.utils.hasProperty(changed, 'system.quantity') &&\n      this.subtype !== constants.CONSUMABLE_TYPE.REGULAR &&\n      this.charges.value !== 0 &&\n      this.charges.value !== this.charges.max\n    ) {\n      if (\n        (changed.system?.quantity ?? 0) > 1 &&\n        this.charges.value! < this.charges.max!\n      ) {\n        delete changed.system!.quantity;\n        Logger.warn(\n          'Partially filled magazines can only have a quantity of 1',\n          { toast: true },\n        );\n      }\n    }\n    if (\n      foundry.utils.hasProperty(changed, 'system.charges.max') &&\n      this.subtype === constants.CONSUMABLE_TYPE.BATTERY\n    ) {\n      foundry.utils.setProperty(changed, 'system.charges.max', 100);\n    }\n    if (\n      foundry.utils.getProperty(changed, 'system.subtype') ===\n      constants.CONSUMABLE_TYPE.BATTERY\n    ) {\n      foundry.utils.setProperty(changed, 'system.charges.max', 100);\n    }\n  }\n\n  declare enrichedDescription?: string;\n\n  override async toEmbed(\n    config: TextEditor.DocumentHTMLEmbedConfig,\n    options: TextEditor.EnrichmentOptions,\n  ): Promise<HTMLElement | HTMLCollection | null> {\n    config.caption = false;\n    this.enrichedDescription = await foundry.applications.ux.TextEditor.implementation.enrichHTML(this.description, {\n      ...options,\n    });\n    return await createEmbedElement(\n      this,\n      'systems/swade/templates/embeds/consumable-embeds.hbs',\n      ['item-embed', 'consumable'],\n    );\n  }\n}\n\nexport { ConsumableData };\n","import { SWADE } from '../../config';\r\nimport { constants } from '../../constants';\r\nimport { validateSwid } from '../item/common';\r\nimport { ChoicesType } from '../item/item-common.interface';\r\nimport { AddStatsValueField } from './AddStatsValueField';\r\n\r\ndeclare namespace RequirementsField {\r\n  interface Schema extends foundry.data.fields.DataSchema {\r\n    type: foundry.data.fields.StringField<{\r\n      required: true;\r\n      initial: typeof constants.REQUIREMENT_TYPE.RANK;\r\n      choices: ChoicesType<typeof constants.REQUIREMENT_TYPE>;\r\n    }>;\r\n    selector: foundry.data.fields.StringField<{\r\n      required: true;\r\n      validate: typeof validateSwid;\r\n    }>;\r\n    value: AddStatsValueField;\r\n    label: foundry.data.fields.StringField<{ required: false }>;\r\n    combinator: foundry.data.fields.StringField<{\r\n      initial: 'and';\r\n      choices: ['and', 'or'];\r\n    }>;\r\n  }\r\n}\r\n\r\nclass RequirementsField extends foundry.abstract\r\n  .DataModel<RequirementsField.Schema> {\r\n  static get sortOrder() {\r\n    return [\r\n      constants.REQUIREMENT_TYPE.WILDCARD,\r\n      constants.REQUIREMENT_TYPE.RANK,\r\n      constants.REQUIREMENT_TYPE.ATTRIBUTE,\r\n      constants.REQUIREMENT_TYPE.SKILL,\r\n      constants.REQUIREMENT_TYPE.EDGE,\r\n      constants.REQUIREMENT_TYPE.HINDRANCE,\r\n      constants.REQUIREMENT_TYPE.ANCESTRY,\r\n      constants.REQUIREMENT_TYPE.POWER,\r\n      constants.REQUIREMENT_TYPE.OTHER,\r\n    ];\r\n  }\r\n\r\n  /** Returns a sorting function to sort requirements */\r\n  static sortFunction(\r\n    order: string[] = this.sortOrder,\r\n  ): (a: RequirementsField, b: RequirementsField) => number {\r\n    return (a, b) => order.indexOf(a.type) - order.indexOf(b.type);\r\n  }\r\n\r\n  /** @inheritdoc */\r\n  static override defineSchema() {\r\n    const fields = foundry.data.fields;\r\n    return {\r\n      /**The type of requirement */\r\n      type: new fields.StringField({\r\n        choices: Object.values(constants.REQUIREMENT_TYPE),\r\n        initial: constants.REQUIREMENT_TYPE.RANK,\r\n        required: true,\r\n        label: 'Type',\r\n      }),\r\n      /** The actual requirement value, such as an attribute, skill or edge swid */\r\n      selector: new fields.StringField({\r\n        required: true,\r\n        validate: validateSwid,\r\n        label: 'SWADE.Requirements.Editor.SWID',\r\n      }),\r\n      /** For attribute and skill requirements this is used  to denote the die type, for Ranks it is used to denote the rank*/\r\n      value: new AddStatsValueField({\r\n        initial: '',\r\n        required: true,\r\n        label: 'SWADE.Requirements.Editor.Value',\r\n      }),\r\n      /** A simple label, for display */\r\n      label: new fields.StringField({ required: false }),\r\n      combinator: new fields.StringField({\r\n        initial: 'and',\r\n        choices: ['and', 'or'],\r\n        label: 'SWADE.Requirements.Combinator',\r\n      }),\r\n    };\r\n  }\r\n\r\n  override toString(): string {\r\n    switch (this.type) {\r\n      case constants.REQUIREMENT_TYPE.WILDCARD:\r\n        return this.value\r\n          ? game.i18n.localize('SWADE.WildCard')\r\n          : game.i18n.localize('SWADE.Extra');\r\n      case constants.REQUIREMENT_TYPE.RANK:\r\n        return SWADE.ranks[this.value];\r\n      case constants.REQUIREMENT_TYPE.ATTRIBUTE:\r\n        return `${SWADE.attributes[this.selector]?.long} d${this.value}+`;\r\n      case constants.REQUIREMENT_TYPE.SKILL:\r\n        return `${this.label} d${this.value}+`;\r\n      case constants.REQUIREMENT_TYPE.POWER:\r\n        return `<i>${this.label}</i>`;\r\n      case constants.REQUIREMENT_TYPE.EDGE:\r\n      case constants.REQUIREMENT_TYPE.HINDRANCE:\r\n      case constants.REQUIREMENT_TYPE.ANCESTRY:\r\n      case constants.REQUIREMENT_TYPE.OTHER:\r\n      default:\r\n        return this.label ?? '';\r\n    }\r\n  }\r\n}\r\n\r\nexport { RequirementsField };\r\n","import { PotentialSource } from '../../../globals';\nimport { SWADE } from '../../config';\nimport { constants } from '../../constants';\nimport {\n  ItemChatCardChip,\n  Requirement,\n} from '../../documents/item/SwadeItem.interface';\nimport { count, createEmbedElement } from '../../util';\nimport { RequirementsField } from '../fields/RequirementsField';\nimport * as migrations from './_migration';\nimport { SwadeBaseItemData } from './base';\nimport { category, favorite, grants } from './common';\nimport { Category, Favorite, Grants } from './item-common.interface';\n\ndeclare namespace EdgeData {\n  interface Schema\n    extends SwadeBaseItemData.Schema,\n      Favorite,\n      Category,\n      Grants {\n    isArcaneBackground: foundry.data.fields.BooleanField<{ label: string }>;\n    requirements: foundry.data.fields.ArrayField<\n      foundry.data.fields.EmbeddedDataField<typeof RequirementsField>,\n      {\n        initial: Requirement[];\n        validate: (\n          value: Requirement[],\n          _options: foundry.data.fields.DataField.ValidationOptions<foundry.data.fields.DataField.Any>,\n        ) => foundry.data.validation.DataModelValidationFailure | undefined;\n      }\n    >;\n  }\n  interface BaseData extends SwadeBaseItemData.BaseData {}\n  interface DerivedData extends SwadeBaseItemData.DerivedData {}\n}\n\nclass EdgeData extends SwadeBaseItemData<\n  EdgeData.Schema,\n  EdgeData.BaseData,\n  EdgeData.DerivedData\n> {\n  /** @inheritdoc */\n  static override defineSchema(): EdgeData.Schema {\n    const fields = foundry.data.fields;\n    return {\n      ...super.defineSchema(),\n      ...favorite(),\n      ...category(),\n      ...grants(),\n      isArcaneBackground: new fields.BooleanField({ label: 'SWADE.ArcBack' }),\n      requirements: new fields.ArrayField(\n        new fields.EmbeddedDataField(RequirementsField),\n        {\n          label: 'SWADE.Req',\n          initial: [\n            {\n              type: constants.REQUIREMENT_TYPE.RANK,\n              value: SWADE.ranks[constants.RANK.NOVICE],\n              combinator: 'and',\n              selector: '',\n            },\n          ],\n          validate: (\n            value: Requirement[],\n            _options: foundry.data.fields.DataField.ValidationOptions<foundry.data.fields.DataField.Any>,\n          ) => {\n            const failures =\n              new foundry.data.validation.DataModelValidationFailure({\n                unresolved: true,\n              });\n            const ranksInvalid = this.#checkRankRequirements(value);\n            if (ranksInvalid) {\n              failures.elements.push({\n                id: 'rank',\n                name: 'Rank',\n                failure: ranksInvalid,\n              });\n            }\n            const wildCardsInvalid = this.#checkWildCardRequirements(value);\n            if (wildCardsInvalid) {\n              failures.elements.push({\n                id: 'wildCard',\n                name: 'Wild Card',\n                failure: wildCardsInvalid,\n              });\n            }\n            if (failures.elements.length) return failures;\n          },\n        },\n      ),\n    };\n  }\n\n  get requirementString() {\n    return (this.requirements ?? {}).reduce(\n      (\n        accumulator: string,\n        current: RequirementsField,\n        index: number,\n        list: RequirementsField[],\n      ) => {\n        accumulator += current.toString();\n        if (index !== list.length - 1) {\n          switch (current.combinator) {\n            case 'or':\n              accumulator +=\n                ' ' + game.i18n.localize('SWADE.Requirements.Or') + ' ';\n              break;\n            case 'and':\n              accumulator += ', ';\n              break;\n          }\n        }\n        return accumulator;\n      },\n      '',\n    );\n  }\n\n  static override migrateData(source: PotentialSource<EdgeData>) {\n    migrations.convertRequirementsToList(source);\n    return super.migrateData(source);\n  }\n\n  static #checkRankRequirements(value: Requirement[]) {\n    const rankRequirements = count(\n      value,\n      (v) => v.type === constants.REQUIREMENT_TYPE.RANK,\n    );\n\n    if (rankRequirements > 1) {\n      return new foundry.data.validation.DataModelValidationFailure({\n        message: 'Cannot have more than one rank requirement',\n      });\n    }\n  }\n  static #checkWildCardRequirements(value: Requirement[]) {\n    const wildcard = count(\n      value,\n      (v) => v.type === constants.REQUIREMENT_TYPE.WILDCARD,\n    );\n\n    if (wildcard > 1) {\n      return new foundry.data.validation.DataModelValidationFailure({\n        message: 'Cannot have more than one Wild Card/Extra requirement',\n      });\n    }\n  }\n\n  get canHaveCategory() {\n    return true;\n  }\n\n  get canGrantItems() {\n    return true;\n  }\n\n  async getChatChips(): Promise<ItemChatCardChip[]> {\n    const chips = new Array<ItemChatCardChip>();\n    chips.push({\n      text: this.requirementString,\n    });\n    if (this.isArcaneBackground) {\n      chips.push({ text: game.i18n.localize('SWADE.Arcane') });\n    }\n    return chips;\n  }\n\n  declare enrichedDescription?: string;\n\n  override async toEmbed(\n    config: TextEditor.DocumentHTMLEmbedConfig,\n    options: TextEditor.EnrichmentOptions,\n  ): Promise<HTMLElement | HTMLCollection | null> {\n    config.caption = false;\n    this.enrichedDescription = await foundry.applications.ux.TextEditor.implementation.enrichHTML(this.description, {\n      ...options,\n    });\n    return await createEmbedElement(\n      this,\n      'systems/swade/templates/embeds/edge-embeds.hbs',\n      ['item-embed', 'edge'],\n    );\n  }\n}\n\nexport { EdgeData };\n","import { PotentialSource, Updates } from '../../../globals';\nimport { constants } from '../../constants';\nimport { UsageUpdates } from '../../documents/item/SwadeItem.interface';\nimport { createEmbedElement } from '../../util';\nimport * as migrations from './_migration';\nimport * as quarantine from './_quarantine';\nimport * as shims from './_shims';\nimport { SwadePhysicalItemData } from './base';\nimport {\n  actions,\n  activities,\n  arcaneDevice,\n  category,\n  equippable,\n  favorite,\n  grantEmbedded,\n  vehicular,\n} from './common';\nimport {\n  Actions,\n  Activities,\n  ArcaneDevice,\n  Category,\n  Equippable,\n  Favorite,\n  GrantEmbedded,\n  Vehicular,\n} from './item-common.interface';\n\ndeclare namespace GearData {\n  interface Schema\n    extends SwadePhysicalItemData.Schema,\n      Equippable,\n      ArcaneDevice,\n      Vehicular,\n      Actions,\n      Activities,\n      Favorite,\n      Category,\n      GrantEmbedded {\n    isAmmo: foundry.data.fields.BooleanField<{ label: string }>;\n  }\n  interface BaseData extends SwadePhysicalItemData.BaseData {}\n  interface DerivedData extends SwadePhysicalItemData.DerivedData {}\n}\n\nclass GearData extends SwadePhysicalItemData<\n  GearData.Schema,\n  GearData.BaseData,\n  GearData.DerivedData\n> {\n  /** @inheritdoc */\n  static override defineSchema(): GearData.Schema {\n    const fields = foundry.data.fields;\n    return {\n      ...super.defineSchema(),\n      ...equippable(),\n      ...arcaneDevice(),\n      ...vehicular(),\n      ...actions(),\n      ...activities(),\n      ...favorite(),\n      ...category(),\n      ...grantEmbedded(),\n      isAmmo: new fields.BooleanField({ label: 'SWADE.ItemIsAmmo' }),\n    };\n  }\n\n  /** @inheritdoc */\n  static override migrateData(source: PotentialSource<GearData>) {\n    quarantine.ensurePricesAreNumeric(source);\n    quarantine.ensureWeightsAreNumeric(source);\n    migrations.renameActionProperties(source);\n    return super.migrateData(source);\n  }\n\n  protected override _initialize(options?: any) {\n    super._initialize(options);\n    this._applyShims();\n  }\n\n  protected _applyShims() {\n    shims.actionProperties(this);\n  }\n\n  get canBeArcaneDevice() {\n    return true;\n  }\n\n  get isReadied(): boolean {\n    return Number(this.equipStatus) > constants.EQUIP_STATE.CARRIED;\n  }\n\n  /** Used by SwadeItem.consume */\n  _getUsageUpdates(chargesToUse: number): UsageUpdates {\n    const actorUpdates: Updates = {};\n    const itemUpdates: Updates = {};\n    const resourceUpdates = new Array<Updates>();\n\n    itemUpdates['system.quantity'] = Number(this.quantity) - chargesToUse;\n\n    return { actorUpdates, itemUpdates, resourceUpdates };\n  }\n\n  protected override async _preCreate(\n    data: foundry.abstract.TypeDataModel.ParentAssignmentType<\n      GearData.Schema,\n      Item\n    >,\n    options: Item.Database.PreUpdateOptions,\n    user: User.Implementation,\n  ) {\n    const allowed = await super._preCreate(data, options, user);\n    if (allowed === false) return false;\n    if (this.parent?.actor?.type === 'npc') {\n      this.updateSource({ equipStatus: constants.EQUIP_STATE.EQUIPPED });\n    }\n  }\n\n  declare enrichedDescription?: string;\n\n  override async toEmbed(\n    config: TextEditor.DocumentHTMLEmbedConfig,\n    options: TextEditor.EnrichmentOptions,\n  ): Promise<HTMLElement | HTMLCollection | null> {\n    config.caption = false;\n    this.enrichedDescription = await foundry.applications.ux.TextEditor.implementation.enrichHTML(this.description, {\n      ...options,\n    });\n    return await createEmbedElement(\n      this,\n      'systems/swade/templates/embeds/gear-embeds.hbs',\n      ['item-embed', 'gear'],\n    );\n  }\n}\n\nexport { GearData };\n","import { constants } from '../../constants';\nimport { ItemChatCardChip } from '../../documents/item/SwadeItem.interface';\nimport { createEmbedElement } from '../../util';\nimport { SwadeBaseItemData } from './base';\nimport { favorite, grants } from './common';\nimport { ChoicesType, Favorite, Grants } from './item-common.interface';\n\ndeclare namespace HindranceData {\n  interface Schema extends SwadeBaseItemData.Schema, Favorite, Grants {\n    severity: foundry.data.fields.StringField<{\n      choices: ChoicesType<typeof constants.HINDRANCE_SEVERITY>;\n      initial: typeof constants.HINDRANCE_SEVERITY.EITHER;\n      blank: false;\n    }>;\n    major: foundry.data.fields.BooleanField<{ label: string }>;\n  }\n  interface BaseData extends SwadeBaseItemData.BaseData {}\n  interface DerivedData extends SwadeBaseItemData.DerivedData {}\n}\n\nclass HindranceData extends SwadeBaseItemData<\n  HindranceData.Schema,\n  HindranceData.BaseData,\n  HindranceData.DerivedData\n> {\n  /** @inheritdoc */\n  static override defineSchema(): HindranceData.Schema {\n    const fields = foundry.data.fields;\n    return {\n      ...super.defineSchema(),\n      ...favorite(),\n      ...grants(),\n      severity: new fields.StringField({\n        choices: Object.values(constants.HINDRANCE_SEVERITY),\n        initial: constants.HINDRANCE_SEVERITY.EITHER,\n        blank: false,\n        label: 'SWADE.HindranceSeverity.Label',\n      }),\n      major: new fields.BooleanField({ label: 'SWADE.MajHind' }),\n    };\n  }\n\n  get isMajor(): boolean {\n    return (\n      this.severity === constants.HINDRANCE_SEVERITY.MAJOR ||\n      (this.severity === constants.HINDRANCE_SEVERITY.EITHER &&\n        this.major === true)\n    );\n  }\n\n  get canGrantItems() {\n    return true;\n  }\n\n  async getChatChips(): Promise<ItemChatCardChip[]> {\n    return [\n      {\n        text: this.isMajor\n          ? game.i18n.localize('SWADE.Major')\n          : game.i18n.localize('SWADE.Minor'),\n      },\n    ];\n  }\n\n  declare enrichedDescription?: string;\n\n  override async toEmbed(\n    config: TextEditor.DocumentHTMLEmbedConfig,\n    options: TextEditor.EnrichmentOptions,\n  ): Promise<HTMLElement | HTMLCollection | null> {\n    config.caption = false;\n    this.enrichedDescription = await foundry.applications.ux.TextEditor.implementation.enrichHTML(this.description, {\n      ...options,\n    });\n    return await createEmbedElement(\n      this,\n      'systems/swade/templates/embeds/hindrance-embeds.hbs',\n      ['item-embed', 'hindrance'],\n    );\n  }\n}\n\nexport { HindranceData };\n","import { SimpleMerge } from 'fvtt-types/utils';\n\n/** A function that resolves into the fetched document or the source UUID as a string */\nexport type DocumentFn<\n  T extends foundry.abstract.Document.Any = foundry.abstract.Document.Any,\n> = () => T | string;\n\ndeclare namespace ForeignDocumentUUIDField {\n  type Options = foundry.data.fields.DocumentUUIDField.Options;\n  type DefaultOptions = SimpleMerge<\n    foundry.data.fields.DocumentUUIDField.DefaultOptions,\n    {\n      nullable: true;\n      readonly: false;\n      idOnly: false;\n    }\n  >;\n}\n\nexport class ForeignDocumentUUIDField<\n  const Options extends\n    ForeignDocumentUUIDField.Options = ForeignDocumentUUIDField.DefaultOptions,\n  const AssignmentType = foundry.data.fields.StringField.AssignmentType<Options>,\n  const InitializedType =\n    | foundry.data.fields.StringField.InitializedType<Options>\n    | foundry.abstract.Document.Any,\n  const PersistedType extends\n    | string\n    | null\n    | undefined = foundry.data.fields.StringField.InitializedType<Options>,\n> extends foundry.data.fields.DocumentUUIDField<\n  Options,\n  AssignmentType,\n  InitializedType,\n  PersistedType\n> {\n  declare type: foundry.abstract.Document.Type;\n  declare idOnly: boolean;\n\n  static override get _defaults() {\n    return foundry.utils.mergeObject(super._defaults, {\n      nullable: true,\n      readonly: false,\n      idOnly: false,\n    });\n  }\n\n  override initialize(value: PersistedType, _model, _options = {}) {\n    if (this.idOnly) return () => value;\n    const typeClass = getDocumentClass<this['type']>(this.type);\n    return () => {\n      try {\n        const doc = fromUuidSync(value);\n        if (doc instanceof typeClass)\n          return doc as foundry.abstract.Document.ConfiguredClassForName<\n            this['type']\n          >;\n        return value;\n      } catch (error) {\n        console.error(error);\n        return value ?? null;\n      }\n    };\n  }\n\n  override toObject(value): PersistedType {\n    return value?.uuid ?? value;\n  }\n\n  override _toInput(config) {\n    if (!config.options) {\n      // Prepare array of visible options\n      const collection = game.scenes.viewed?.tokens;\n      const options: foundry.applications.fields.FormSelectOption[] = (\n        collection ?? []\n      ).reduce((arr, doc: TokenDocument.Implementation) => {\n        if (!doc.visible || !doc.actor) return arr;\n        arr.push({ value: doc.actor.uuid, label: doc.name });\n        return arr;\n      }, []);\n      Object.assign(config, { options });\n    }\n\n    // Allow blank\n    if (!this.required || this.nullable) config.blank ??= '';\n\n    // Create select input\n    return foundry.applications.fields.createSelectInput(config);\n  }\n}\n","export class FormulaField<\n  Options extends\n    foundry.data.fields.StringField.Options = foundry.data.fields.StringField.DefaultOptions,\n> extends foundry.data.fields.StringField<Options> {\n  protected override _cast(value: any): string {\n    if (typeof value !== 'string') {\n      value = value?.toString() ?? '';\n    } else {\n      if (game.settings.get('core', 'language') !== 'en') {\n        value = value\n          .replace(\n            new RegExp('^' + game.i18n.localize('SWADE.AttrSma')),\n            '@sma',\n          )\n          .replace(\n            new RegExp(\n              '^' + game.i18n.localize('SWADE.AttrSmaShortPowerRange'),\n            ),\n            '@sma',\n          );\n      }\n      value = value\n        .replace(/^-/, '') // Core, HYPHEN-MINUS, only remove at beginning as minus may be used in formulas\n        .replace(/–/, '') // SFC, EN DASH not minus, so safe to remove\n        .replace(/—/, '') // EM DASH not minus, so safe to remove\n        .replace(/―/, '') // FIGURE DASH not minus, so safe to remove\n        .replace(/―/, '') // HORIZONTAL BAR not minus, so safe to remove\n        .replace(/( )(x)([ ]*[0-9])*/g, '$1*$3') // core rules power ranges, turns ' x 5' and ' x5' into '*5' (matches <space><x><optional space><number>)\n        .replace(/×/g, '*') // U+00D7 Multiplication Sign, used e.g. in Fantasy Companion power ranges\n        .replace(/^Smarts/, '@sma')\n        .replace(/^Sm/, '@sma');\n      return value;\n    }\n  }\n\n  protected override _validateType(\n    value: any,\n    _options: foundry.data.fields.DataField.ValidationOptions<foundry.data.fields.DataField.Any> = {},\n  ): boolean | void {\n    if (!value) console.log(this);\n    if (this.blank && Number(value) === 0) return true;\n    return Roll.validate(value);\n  }\n}\n","import { FormulaField } from './FormulaField';\n\nexport class FormulaDerivedValueField extends FormulaField {\n  override initialize(\n    value: string,\n    model: foundry.abstract.DataModel.Any,\n    _options?: AnyObject,\n  ): number {\n    value = this._cast(value);\n    if (!model.parent?.actor) return 0;\n    const rollData = model.parent?.actor?.getRollData();\n    const roll = new Roll(value, rollData);\n    const simplifiedTerms = new Array<foundry.dice.terms.RollTerm>();\n    for (const term of roll.terms) {\n      const simplified = this.#simplifyTerm(term);\n      if (Array.isArray(simplified)) simplifiedTerms.push(...simplified);\n      else simplifiedTerms.push(simplified);\n    }\n    roll.terms = simplifiedTerms;\n    const evaluated = new Roll(roll.resetFormula()).evaluateSync();\n    return evaluated.total;\n  }\n\n  #simplifyTerm(\n    term: foundry.dice.terms.RollTerm,\n  ): foundry.dice.terms.RollTerm | foundry.dice.terms.RollTerm[] {\n    if (term instanceof foundry.dice.terms.DiceTerm) {\n      return new foundry.dice.terms.NumericTerm({\n        number: (term.number ?? 1) * (term.faces ?? 0),\n      });\n    }\n    if (term instanceof foundry.dice.terms.ParentheticalTerm) {\n      term.roll.terms = term.roll.terms.map(this.#simplifyTerm.bind(this));\n      term.roll = new Roll(term.roll.resetFormula());\n      term.term = term.roll.formula;\n      return term;\n    }\n    return term;\n  }\n}\n","import { AnyObject } from '@league-of-foundry-developers/foundry-vtt-types/utils';\n\ndeclare namespace LocalDocumentField {\n  interface Options extends foundry.data.fields.ForeignDocumentField.Options {\n    types?: string[];\n  }\n}\n\nclass LocalDocumentField<\n  DocumentType extends foundry.abstract.Document.AnyConstructor,\n  Options extends\n    LocalDocumentField.Options = foundry.data.fields.ForeignDocumentField.DefaultOptions,\n  AssignmentType = foundry.data.fields.ForeignDocumentField.AssignmentType<\n    DocumentType,\n    Options\n  >,\n  InitializedType = foundry.data.fields.ForeignDocumentField.InitializedType<\n    DocumentType,\n    Options\n  >,\n  PersistedType extends\n    | string\n    | null\n    | undefined = foundry.data.fields.ForeignDocumentField.PersistedType<Options>,\n> extends foundry.data.fields.ForeignDocumentField<\n  DocumentType,\n  Options,\n  AssignmentType,\n  InitializedType,\n  PersistedType\n> {\n  override _cast(value) {\n    if (typeof value === 'string') return value;\n    if (value instanceof this.model) return value._id;\n    throw new Error(\n      `The value provided to a ${this.constructor.name} must be a ${this.model.name} instance.`,\n    );\n  }\n  override initialize(\n    value: PersistedType,\n    model: DataModel.Any,\n    _options?: AnyObject,\n  ): InitializedType | (() => InitializedType | null) {\n    if (this.idOnly) return value;\n    if (\n      model?.pack &&\n      !foundry.utils.isSubclass(this.model, foundry.documents.BaseFolder)\n    )\n      return null;\n    if (!value) return null;\n    return () =>\n      model.parent?.collections[this.model.collectionName].get(value);\n  }\n\n  override _toInput(\n    config:\n      | DataField.ToInputConfig<InitializedType>\n      | DataField.ToInputConfigWithOptions<InitializedType> = {},\n  ) {\n    // Prepare array of visible options\n    const collection =\n      config.actor?.collections[this.model.collectionName] ?? [];\n    const value =\n      typeof config.value === 'string' ? config.value : config.value?.id;\n    const current = collection.get(value);\n    let hasCurrent = false;\n    const options = collection.reduce((arr, doc) => {\n      if (this.options.types?.length && !this.options.types.includes(doc.type))\n        return arr;\n      if (!doc.visible) return arr;\n      if (doc === current) hasCurrent = true;\n      arr.push({ value: doc.id, label: doc.name });\n      return arr;\n    }, []);\n    if (current && !hasCurrent)\n      options.unshift({ value: config.value, label: current.name });\n    Object.assign(config, { options });\n\n    // Allow blank\n    if (!this.required || this.nullable) config.blank = '';\n\n    // Create select input\n    return foundry.applications.fields.createSelectInput(config);\n  }\n}\n\nexport { LocalDocumentField };\n","/**\r\n * A subclass of ObjectField that represents a mapping of keys to the provided DataField type.\r\n * @param model The class of DataField which should be embedded in this field.\r\n * @param options Options which configure the behavior of the field.\r\n */\r\nexport class MappingField<\r\n  Model extends\r\n    foundry.data.fields.DataField.Any = foundry.data.fields.DataField.Any,\r\n> extends foundry.data.fields.ObjectField {\r\n  /**The embedded DataField definition which is contained in this field.*/\r\n  declare model: Model;\r\n  /** Keys that will be created if no data is provided. */\r\n  declare initialKeys?: string[];\r\n  /** Function to calculate the initial value for a key. */\r\n  declare initialKeysOnly?: boolean;\r\n  /**  Should the keys in the initialized data be limited to the keys provided by `initialKeys`? */\r\n  declare initialValue?: MappingFieldInitialValueBuilder;\r\n\r\n  constructor(model: Model, options: MappingFieldOptions = {}) {\r\n    if (!(model instanceof foundry.data.fields.DataField)) {\r\n      throw new Error(\r\n        'MappingField must have a DataField as its contained element',\r\n      );\r\n    }\r\n    super(options as foundry.data.fields.ObjectField.DefaultOptions);\r\n    this.model = model;\r\n  }\r\n\r\n  static override get _defaults() {\r\n    return foundry.utils.mergeObject(super._defaults, {\r\n      initialKeys: null,\r\n      initialValue: null,\r\n      initialKeysOnly: false,\r\n    });\r\n  }\r\n\r\n  protected override _cleanType(value, options) {\r\n    Object.entries(value).forEach(\r\n      ([k, v]) => (value[k] = this.model.clean(v, options)),\r\n    );\r\n    return value;\r\n  }\r\n\r\n  override getInitialValue(data: any) {\r\n    let keys = this.initialKeys;\r\n    const initial = super.getInitialValue(data);\r\n    if (!keys || !foundry.utils.isEmpty(initial)) return initial;\r\n    if (!(keys instanceof Array)) keys = Object.keys(keys);\r\n    for (const key of keys) initial[key] = this._getInitialValueForKey(key);\r\n    return initial;\r\n  }\r\n\r\n  /**\r\n   * Get the initial value for the provided key.\r\n   * @param key Key within the object being built.\r\n   * @param object  Any existing mapping data.\r\n   * @returns Initial value based on provided field type.\r\n   */\r\n  protected _getInitialValueForKey(key: string, object?: Record<string, any>) {\r\n    const initial = this.model.getInitialValue({});\r\n    return this.initialValue?.(key, initial, object) ?? initial;\r\n  }\r\n\r\n  protected override _validateType(value: any, options = {}) {\r\n    if (foundry.utils.getType(value) !== 'Object')\r\n      throw new Error('must be an Object');\r\n    const errors = this._validateValues(value, options);\r\n    if (!foundry.utils.isEmpty(errors)) {\r\n      const depth = this.fieldPath.split('.').length + 1;\r\n      const indent = '\\n' + ' '.repeat(depth * 2);\r\n      let msg = '';\r\n      for (const [key, err] of Object.entries(errors)) {\r\n        const name =\r\n          !!value[key].name || !!value[key].label\r\n            ? `${key} (${value[key].name || value[key].label})`\r\n            : key;\r\n        const errString = err.toString().replaceAll('\\n', indent);\r\n        msg += indent + name + ': ' + errString;\r\n      }\r\n      throw new foundry.data.validation.DataModelValidationError(msg);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validate each value of the object.\r\n   * @param value The object to validate.\r\n   * @param options Validation options.\r\n   * @returns An object of value-specific errors by key.\r\n   */\r\n  protected _validateValues(value: object, options: object) {\r\n    const errors: Record<\r\n      string,\r\n      foundry.data.validation.DataModelValidationFailure\r\n    > = {};\r\n    for (const [k, v] of Object.entries(value)) {\r\n      const error = this.model.validate(v, options);\r\n      if (error) errors[k] = error;\r\n    }\r\n    return errors;\r\n  }\r\n\r\n  override initialize(value, model, options = {}) {\r\n    if (!value) return value;\r\n    const obj = {};\r\n    const initialKeys =\r\n      this.initialKeys instanceof Array\r\n        ? this.initialKeys\r\n        : Object.keys(this.initialKeys ?? {});\r\n    const keys = this.initialKeysOnly ? initialKeys : Object.keys(value);\r\n    for (const key of keys) {\r\n      const data = value[key] ?? this._getInitialValueForKey(key, value);\r\n      obj[key] = this.model.initialize(data, model, options);\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  override _getField(path) {\r\n    if (path.length === 0) return this;\r\n    else if (path.length === 1) return this.model;\r\n    path.shift();\r\n    return this.model._getField(path);\r\n  }\r\n}\r\n\r\n/**\r\n * @param key The key within the object where this new value is being generated.\r\n * @param initial The generic initial data provided by the contained model.\r\n * @param existing Any existing mapping data.\r\n * @returns Value to use as default for this key.\r\n */\r\nexport type MappingFieldInitialValueBuilder = (\r\n  key: string,\r\n  initial: any,\r\n  existing?: Record<string, any>,\r\n) => any;\r\n\r\nexport interface MappingFieldOptions\r\n  extends Partial<foundry.data.fields.DataField.Options<object>> {\r\n  /** Keys that will be created if no data is provided. */\r\n  initialKeys?: string[];\r\n  /** Function to calculate the initial value for a key. */\r\n  initialValue?: MappingFieldInitialValueBuilder;\r\n  /**  Should the keys in the initialized data be limited to the keys provided by `initialKeys`? */\r\n  initialKeysOnly?: boolean;\r\n}\r\n","import { ForeignDocumentUUIDField } from './ForeignDocumentUUIDField';\n\ntype DataSchema = foundry.data.fields.DataSchema;\n\nexport interface MemberSchema extends DataSchema {\n  uuid: ForeignDocumentUUIDField<{ type: 'Actor' }>;\n}\n\nfunction makeBaseMemberSchema(): MemberSchema {\n  return {\n    uuid: new ForeignDocumentUUIDField({\n      type: 'Actor',\n      required: true,\n      nullable: false,\n      validate: (\n        value: any,\n        _options: foundry.data.fields.DataField.ValidationOptions<foundry.data.fields.DataField>,\n      ) => {\n        if (value.startsWith('Compendium')) {\n          return new foundry.data.validation.DataModelValidationFailure({\n            unresolved: true,\n            invalidValue: value,\n            message: 'Cannot contain an actor from a Compendium!',\n          });\n        }\n      },\n    }),\n  };\n}\n\nexport class MemberField<\n  Schema extends MemberSchema = MemberSchema,\n  Options extends\n    foundry.data.fields.SchemaField.Options<Schema> = foundry.data.fields.SchemaField.DefaultOptions,\n> extends foundry.data.fields.SchemaField<Schema, Options> {\n  constructor(schema: foundry.data.fields.DataSchema, options?: Options) {\n    super({ ...schema, ...makeBaseMemberSchema() } as Schema, options);\n  }\n}\n","import { PotentialSource } from '../../../globals';\nimport {\n  ItemChatCardChip,\n  ItemDisplayPowerPoints,\n} from '../../documents/item/SwadeItem.interface';\nimport { createEmbedElement } from '../../util';\nimport { FormulaField } from '../fields';\nimport { FormulaDerivedValueField } from '../fields/FormulaDerivedValueField';\nimport * as migrations from './_migration';\nimport * as quarantine from './_quarantine';\nimport * as shims from './_shims';\nimport { SwadeBaseItemData } from './base';\nimport { actions, activities, favorite, templates } from './common';\nimport {\n  Actions,\n  Activities,\n  Favorite,\n  Templates,\n} from './item-common.interface';\n\ndeclare namespace PowerData {\n  interface Schema\n    extends SwadeBaseItemData.Schema,\n      Actions,\n      Activities,\n      Favorite,\n      Templates {\n    rank: foundry.data.fields.StringField<{ initial: ''; textSearch: true }>;\n    pp: foundry.data.fields.NumberField<{ initial: 0 }>;\n    damage: FormulaField<{ label: string }>;\n    range: foundry.data.fields.StringField<{ initial: '@sma' }>;\n    duration: foundry.data.fields.StringField<{ initial: '' }>;\n    trapping: foundry.data.fields.StringField<{\n      initial: '';\n      textSearch: true;\n    }>;\n    arcane: foundry.data.fields.StringField<{ initial: ''; textSearch: true }>;\n    ap: foundry.data.fields.NumberField<{ initial: 0 }>;\n    innate: foundry.data.fields.BooleanField<{ label: string }>;\n    modifiers: foundry.data.fields.ArrayField<\n      foundry.data.fields.ObjectField,\n      { label: string }\n    >;\n  }\n  interface BaseData extends SwadeBaseItemData.BaseData {}\n  interface DerivedData extends SwadeBaseItemData.DerivedData {\n    power: number;\n  }\n}\n\nclass PowerData extends SwadeBaseItemData<\n  PowerData.Schema,\n  PowerData.BaseData,\n  PowerData.DerivedData\n> {\n  /** @inheritdoc */\n  static override defineSchema(): PowerData.Schema {\n    const fields = foundry.data.fields;\n    return {\n      ...super.defineSchema(),\n      ...actions(),\n      ...activities(),\n      ...favorite(),\n      ...templates(),\n      rank: new fields.StringField({\n        initial: '',\n        textSearch: true,\n        label: 'SWADE.Rank',\n      }),\n      pp: new fields.NumberField({ initial: 0, label: 'SWADE.PP' }),\n      damage: new FormulaField({\n        initial: '',\n        blank: true,\n        label: 'SWADE.Dmg',\n      }),\n      range: new fields.StringField({\n        initial: '@sma',\n        label: 'SWADE.Range._name',\n      }),\n      duration: new fields.StringField({ initial: '', label: 'SWADE.Dur' }),\n      trapping: new fields.StringField({\n        initial: '',\n        textSearch: true,\n        label: 'SWADE.Trap',\n      }),\n      arcane: new fields.StringField({\n        initial: '',\n        textSearch: true,\n        label: 'SWADE.Arcane',\n      }),\n      ap: new fields.NumberField({ initial: 0, label: 'SWADE.Ap' }),\n      innate: new fields.BooleanField({ label: 'SWADE.InnatePower' }),\n      modifiers: new fields.ArrayField(new fields.ObjectField(), {\n        label: 'SWADE.Modifiers',\n      }),\n    };\n  }\n\n  /** @inheritdoc */\n  static override migrateData(source: PotentialSource<PowerData>) {\n    quarantine.ensurePowerPointsAreNumeric(source);\n    migrations.renameActionProperties(source);\n    return super.migrateData(source);\n  }\n\n  override prepareFormulaFields(): void {\n    const field = new FormulaDerivedValueField();\n    const cleaned = field.clean(this.range);\n    if (Roll.validate(cleaned)) {\n      this.range = String(field.initialize(cleaned as string, this));\n    }\n  }\n\n  /** @inheritdoc */\n  protected override _initialize(options?: any) {\n    super._initialize(options);\n    this._applyShims();\n  }\n\n  protected _applyShims() {\n    shims.actionProperties(this);\n  }\n\n  // Called by SwadeItem.powerPoints\n  get _powerPoints(): ItemDisplayPowerPoints {\n    const actor = this.parent.actor!;\n    const arcane = this.arcane || 'general';\n    const value = foundry.utils.getProperty(\n      actor,\n      `system.powerPoints.${arcane}.value`,\n    );\n    const max = foundry.utils.getProperty(\n      actor,\n      `system.powerPoints.${arcane}.max`,\n    );\n    return { value, max };\n  }\n\n  get ppModifiers() {\n    let cost = this.pp;\n    const modifiers: string[] = [];\n    for (const e of this.parent.effects.filter(\n      (e) => e.type === 'modifier' && e.active,\n    )) {\n      cost += e.system.cost ?? 0;\n      modifiers.push(e.name);\n    }\n    const formatter = game.i18n.getListFormatter({ type: 'unit' });\n    return { cost, modifierList: formatter.format(modifiers) };\n  }\n\n  async getChatChips(): Promise<ItemChatCardChip[]> {\n    return [\n      { text: this.rank },\n      { text: this.arcane },\n      { text: this.pp + game.i18n.localize('SWADE.PPAbbreviation') },\n      {\n        icon: '<i class=\"fas fa-ruler\"></i>',\n        text: this.range,\n        title: game.i18n.localize('SWADE.Range._name'),\n      },\n      {\n        icon: '<i class=\"fas fa-shield-alt\"></i>',\n        text: this.ap,\n        title: game.i18n.localize('SWADE.Ap'),\n      },\n      {\n        icon: '<i class=\"fas fa-hourglass-half\"></i>',\n        text: this.duration,\n        title: game.i18n.localize('SWADE.Dur'),\n      },\n      { text: this.trapping },\n    ];\n  }\n\n  _canExpendResources(resourcesUsed = 1): boolean {\n    if (!this.parent.actor) return false;\n    if (game.settings.get('swade', 'noPowerPoints')) return true;\n    const arcane = this.arcane || 'general';\n    const ab = this.parent.actor.system.powerPoints[arcane];\n    return ab.value >= resourcesUsed;\n  }\n\n  declare enrichedDescription?: string;\n\n  override async toEmbed(\n    config: TextEditor.DocumentHTMLEmbedConfig,\n    options: TextEditor.EnrichmentOptions,\n  ): Promise<HTMLElement | HTMLCollection | null> {\n    config.caption = false;\n    this.enrichedDescription = await foundry.applications.ux.TextEditor.implementation.enrichHTML(this.description, {\n      ...options,\n    });\n    return await createEmbedElement(\n      this,\n      'systems/swade/templates/embeds/power-embeds.hbs',\n      ['item-embed', 'power'],\n    );\n  }\n}\n\nexport { PowerData };\n","import { PotentialSource } from '../../../globals';\nimport { constants } from '../../constants';\nimport { ItemChatCardChip } from '../../documents/item/SwadeItem.interface';\nimport { createEmbedElement } from '../../util';\nimport * as migrations from './_migration';\nimport * as quarantine from './_quarantine';\nimport * as shims from './_shims';\nimport { SwadePhysicalItemData } from './base';\nimport {\n  actions,\n  activities,\n  arcaneDevice,\n  category,\n  equippable,\n  favorite,\n  grantEmbedded,\n} from './common';\nimport {\n  Actions,\n  Activities,\n  ArcaneDevice,\n  Category,\n  Equippable,\n  Favorite,\n  GrantEmbedded,\n} from './item-common.interface';\n\ndeclare namespace ShieldData {\n  interface Schema\n    extends SwadePhysicalItemData.Schema,\n      Equippable,\n      ArcaneDevice,\n      Actions,\n      Activities,\n      Favorite,\n      Category,\n      GrantEmbedded {\n    minStr: foundry.data.fields.StringField<{ initial: '' }>;\n    parry: foundry.data.fields.NumberField<{ initial: 0; integer: true }>;\n    cover: foundry.data.fields.NumberField<{ initial: 0; integer: true }>;\n  }\n  interface BaseData extends SwadePhysicalItemData.BaseData {}\n  interface DerivedData extends SwadePhysicalItemData.DerivedData {}\n}\n\nclass ShieldData extends SwadePhysicalItemData<\n  ShieldData.Schema,\n  ShieldData.BaseData,\n  ShieldData.DerivedData\n> {\n  /** @inheritdoc */\n  static override defineSchema(): ShieldData.Schema {\n    const fields = foundry.data.fields;\n    return {\n      ...super.defineSchema(),\n      ...equippable(),\n      ...arcaneDevice(),\n      ...actions(),\n      ...activities(),\n      ...favorite(),\n      ...category(),\n      ...grantEmbedded(),\n      minStr: new fields.StringField({ initial: '', label: 'SWADE.MinStr' }),\n      parry: new fields.NumberField({\n        initial: 0,\n        integer: true,\n        label: 'SWADE.Parry',\n      }),\n      cover: new fields.NumberField({\n        initial: 0,\n        integer: true,\n        label: 'SWADE.Cover._name',\n      }),\n    };\n  }\n\n  /** @inheritdoc */\n  static override migrateData(source: PotentialSource<ShieldData>) {\n    quarantine.ensurePricesAreNumeric(source);\n    quarantine.ensureWeightsAreNumeric(source);\n    migrations.renameActionProperties(source);\n    return super.migrateData(source);\n  }\n\n  /** @inheritdoc */\n  protected override _initialize(options?: any) {\n    super._initialize(options);\n    this._applyShims();\n  }\n\n  protected _applyShims() {\n    shims.actionProperties(this);\n  }\n\n  get canBeArcaneDevice() {\n    return true;\n  }\n\n  get isReadied(): boolean {\n    return Number(this.equipStatus) > constants.EQUIP_STATE.CARRIED;\n  }\n\n  async getChatChips(\n    enrichOptions: Partial<TextEditor.EnrichmentOptions>,\n  ): Promise<ItemChatCardChip[]> {\n    const chips = new Array<ItemChatCardChip>();\n    if (this.isReadied) {\n      chips.push({\n        icon: '<i class=\"fas fa-tshirt\"></i>',\n        title: game.i18n.localize('SWADE.Equipped'),\n      });\n    } else {\n      chips.push({\n        icon: '<i class=\"fas fa-tshirt\" style=\"color:grey\"></i>',\n        title: game.i18n.localize('SWADE.Unequipped'),\n      });\n    }\n    chips.push(\n      {\n        icon: '<i class=\"fas fa-user-shield\"></i>',\n        text: this.parry,\n        title: game.i18n.localize('SWADE.Parry'),\n      },\n      {\n        icon: '<i class=\"fas fas fa-umbrella\"></i>',\n        text: this.cover,\n        title: game.i18n.localize('SWADE.Cover._name'),\n      },\n      {\n        icon: '<i class=\"fas fa-dumbbell\"></i>',\n        text: this.minStr,\n      },\n      {\n        icon: '<i class=\"fas fa-sticky-note\"></i>',\n        text: await foundry.applications.ux.TextEditor.implementation.enrichHTML(this.notes ?? '', enrichOptions),\n        title: game.i18n.localize('SWADE.Notes'),\n      },\n    );\n    return chips;\n  }\n\n  protected override async _preCreate(\n    data: foundry.abstract.TypeDataModel.ParentAssignmentType<\n      ShieldData.Schema,\n      Item<'shield'>\n    >,\n    options: Item.Database.PreCreateOptions,\n    user: User.Implementation,\n  ) {\n    const allowed = await super._preCreate(data, options, user);\n    if (allowed === false) return false;\n    if (this.parent?.actor?.type === 'npc') {\n      this.updateSource({ equipStatus: constants.EQUIP_STATE.EQUIPPED });\n    }\n  }\n\n  declare enrichedDescription?: string;\n\n  override async toEmbed(\n    config: TextEditor.DocumentHTMLEmbedConfig,\n    options: TextEditor.EnrichmentOptions,\n  ): Promise<HTMLElement | HTMLCollection | null> {\n    config.caption = false;\n    this.enrichedDescription = await foundry.applications.ux.TextEditor.implementation.enrichHTML(this.description, {\n      ...options,\n    });\n    return await createEmbedElement(\n      this,\n      'systems/swade/templates/embeds/shield-embeds.hbs',\n      ['item-embed', 'shield'],\n    );\n  }\n}\n\nexport { ShieldData };\n","import { DeepPartial } from 'fvtt-types/utils';\nimport { RollModifier } from '../../../interfaces/additional.interface';\nimport type SwadeActor from '../../documents/actor/SwadeActor';\nimport { TraitDie } from '../../documents/actor/SwadeActor.interface';\nimport type SwadeItem from '../../documents/item/SwadeItem';\nimport { addUpModifiers, createEmbedElement } from '../../util';\nimport { DiceTrait } from '../common.interface';\nimport { boundTraitDie, makeTraitDiceFields } from '../shared';\nimport { SwadeBaseItemData } from './base/base';\n\ndeclare namespace SkillData {\n  interface Schema extends SwadeBaseItemData.Schema, DiceTrait {\n    attribute: foundry.data.fields.StringField<{ initial: '' }>;\n    isCoreSkill: foundry.data.fields.BooleanField<{ label: string }>;\n  }\n  interface BaseData extends SwadeBaseItemData.BaseData {\n    die: TraitDie;\n    effects: RollModifier[];\n  }\n  interface DerivedData extends SwadeBaseItemData.DerivedData {}\n}\n\nclass SkillData extends SwadeBaseItemData<\n  SkillData.Schema,\n  SkillData.BaseData,\n  SkillData.DerivedData\n> {\n  /** @inheritdoc */\n  static override defineSchema(): SkillData.Schema {\n    return {\n      ...super.defineSchema(),\n      ...makeTraitDiceFields(),\n      attribute: new foundry.data.fields.StringField({\n        initial: '',\n        label: 'SWADE.Attribute',\n      }),\n      isCoreSkill: new foundry.data.fields.BooleanField({\n        label: 'SWADE.CoreSkill',\n      }),\n    };\n  }\n\n  override prepareBaseData() {\n    this.effects ??= new Array<RollModifier>();\n  }\n\n  override prepareDerivedData() {\n    this.die = boundTraitDie(this.die);\n    this['wild-die'].sides = Math.min(this['wild-die'].sides as number, 12);\n  }\n\n  get modifier(): number {\n    let mod = this.die.modifier;\n    const attribute = this.attribute;\n    const globals = this.parent.actor?.system.stats.globalMods as Record<\n      string,\n      RollModifier[]\n    >;\n    mod += this.effects?.reduce(addUpModifiers, 0);\n    mod += globals?.trait.reduce(addUpModifiers, 0) ?? 0;\n    if (attribute) mod += globals?.[attribute]?.reduce(addUpModifiers, 0);\n    return mod;\n  }\n\n  get canRoll(): boolean {\n    return !!this.parent.actor;\n  }\n\n  protected override async _preCreate(\n    data: foundry.abstract.TypeDataModel.ParentAssignmentType<\n      SkillData.Schema,\n      Item<'skill'>\n    >,\n    options: Item.Database.PreCreateOptions,\n    user: User.Implementation,\n  ) {\n    const allowed = await super._preCreate(data, options, user);\n    if (allowed === false) return false;\n  }\n\n  declare enrichedDescription?: string;\n\n  override async toEmbed(\n    config: TextEditor.DocumentHTMLEmbedConfig,\n    options: TextEditor.EnrichmentOptions,\n  ): Promise<HTMLElement | HTMLCollection | null> {\n    config.caption = false;\n    this.enrichedDescription = await foundry.applications.ux.TextEditor.implementation.enrichHTML(this.description, {\n      ...options,\n    });\n    return await createEmbedElement(\n      this,\n      'systems/swade/templates/embeds/skill-embeds.hbs',\n      ['item-embed', 'skill'],\n    );\n  }\n\n  protected override _onUpdate(\n    changed: DeepPartial<\n      foundry.abstract.TypeDataModel.ParentAssignmentType<\n        SkillData.Schema,\n        SwadeItem\n      >\n    >,\n    options: Item.Database.OnUpdateOperation,\n    userId: string,\n  ) {\n    super._onUpdate(changed, options, userId);\n\n    if (!this.actor) return;\n    //gather all vehicle documents\n    const allVehicles: SwadeActor<'vehicle'>[] = game.actors\n      .filter((a) => a.type === 'vehicle')\n      .concat(\n        game.scenes.contents\n          .flatMap((scene) => scene.tokens.contents)\n          .filter((token) => !token.actorLink)\n          .map((token) => token.actor)\n          .filter((doc) => doc?.type === 'vehicle'),\n      );\n    //filter down to only the vehicles this skill's actor is an operator of\n    const filtered = allVehicles.filter((vehicle) =>\n      vehicle.system.crew.members.find(\n        (m) =>\n          m.uuid === this.actor?.uuid &&\n          m.role === constants.CREW_ROLE.OPERATOR,\n      ),\n    );\n    for (const vehicle of filtered) {\n      //possibly trigger dataprep again\n      if (\n        [\n          vehicle.system.driver.skill,\n          vehicle.system.driver.skillAlternative,\n        ].includes(this.parent.name)\n      ) {\n        vehicle.reset();\n        vehicle.sheet?.render();\n      }\n    }\n  }\n}\n\nexport { SkillData };\n","import { constants } from '../constants';\nimport type SwadeItem from '../documents/item/SwadeItem';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\nexport default class Reloadinator extends HandlebarsApplicationMixin(\n  ApplicationV2,\n) {\n  declare magazines: SwadeItem[];\n  declare weapon: SwadeItem;\n\n  constructor({\n    weapon,\n    magazines,\n    resolve,\n    ...options\n  }: MagReloadConfiguration) {\n    super(options);\n    this.#callback = resolve;\n    this.magazines = magazines;\n    this.weapon = weapon;\n  }\n\n  #callback: (reloaded: boolean) => void;\n  #isResolved = false;\n  #wantsToDiscard = false;\n\n  static asPromise(\n    ctx: Omit<MagReloadConfiguration, 'resolve'>,\n  ): Promise<boolean> {\n    return new Promise((resolve) =>\n      new Reloadinator({ ...ctx, resolve }).render({ force: true }),\n    );\n  }\n\n  static override DEFAULT_OPTIONS = {\n    window: {\n      title: 'SWADE.Magazine.Select',\n    },\n    position: {\n      width: 400,\n      height: 'auto',\n    },\n    classes: ['swade', 'magazine-manager', 'swade-application'],\n    actions: {\n      selectMag: Reloadinator.#onSelectMag,\n      discard: Reloadinator.#onDiscard,\n    },\n  };\n\n  static override PARTS = {\n    main: { template: 'systems/swade/templates/apps/reload-manager.hbs' },\n  };\n\n  get loadedAmmo() {\n    return this.weapon.getFlag('swade', 'loadedAmmo');\n  }\n\n  get noShotsInWeapon() {\n    return (\n      this.weapon.type === 'weapon' && this.weapon.system.currentShots === 0\n    );\n  }\n\n  static #onDiscard(\n    this: Reloadinator,\n    _event: PointerEvent,\n    target: HTMLInputElement,\n  ) {\n    this.#wantsToDiscard = target.checked;\n  }\n\n  override async _prepareContext(options) {\n    const context = foundry.utils.mergeObject(\n      await super._prepareContext(options),\n      {\n        magazineGroups: this.#prepareOptionList(),\n        canDiscard: this.weapon.system.currentShots === 0 && this.loadedAmmo,\n      },\n    );\n    return context;\n  }\n\n  protected override _onClose(options) {\n    super._onClose(options);\n    if (!this.#isResolved) this.#callback(false);\n  }\n\n  static async #onSelectMag(\n    this: Reloadinator,\n    event: PointerEvent,\n    target: HTMLButtonElement,\n  ) {\n    event.preventDefault();\n    if (this.weapon.type !== 'weapon') return;\n    const selected = this.#selectOption(target.dataset.itemId as string);\n    if (selected?.type !== 'consumable') return;\n\n    const currentShots = this.weapon.system.currentShots;\n    const magContent = selected.system.charges.value;\n    //return early if the new and old mag have the same content as there's nothing to do\n    if (currentShots === magContent) return;\n\n    const stackSize = selected.system.quantity;\n    const discardEmpty =\n      this.#wantsToDiscard && this.noShotsInWeapon && this.loadedAmmo;\n\n    //discard empty magazine if desired\n    if (discardEmpty || !this.loadedAmmo) {\n      await this.#loadFromInventory(selected, stackSize);\n      await this.#loadIntoWeapon(selected);\n    } else if (stackSize > 0) {\n      await this.#exchangeMagWithStack(selected, stackSize);\n      await this.#loadIntoWeapon(selected);\n    } else {\n      //last resort: just update the charges\n      await this.#loadIntoWeapon(selected);\n      await this.#updateSelectedMag(selected, currentShots);\n    }\n    this.#resolve();\n  }\n\n  #selectOption(id: string) {\n    return this.magazines.find((i) => i.id === id)!;\n  }\n\n  #resolve() {\n    this.#isResolved = true;\n    this.#callback(true);\n    this.close();\n  }\n\n  #prepareOptionList(): MagazineGroups {\n    const groups: MagazineGroups = Object.fromEntries(\n      this.magazines.map((m) => [m.name!, []]),\n    );\n    const filteredMags = this.magazines.filter(\n      (m) => m.system.charges.value > 0,\n    );\n\n    for (const mag of filteredMags) {\n      if (mag.type !== 'consumable') continue;\n      const charges = foundry.utils.getProperty(\n        mag,\n        'system.charges.value',\n      ) as number;\n      const capacity = foundry.utils.getProperty(\n        mag,\n        'system.charges.max',\n      ) as number;\n      const isBattery =\n        mag.system.subtype === constants.CONSUMABLE_TYPE.BATTERY;\n\n      groups[mag.name!].push({\n        id: mag.id!,\n        name: mag.name!,\n        charges,\n        capacity,\n        percentage: Math.round((charges / capacity) * 100),\n        quantity: mag.system.quantity > 1 ? mag.system.quantity : undefined,\n        showPercentage: isBattery,\n      });\n    }\n\n    Object.values(groups).forEach((v) =>\n      v.sort((a, b) => b.percentage - a.percentage),\n    );\n    return groups;\n  }\n\n  /** set the shots in the weapon and the selected magazine/battery */\n  async #loadIntoWeapon(selected: SwadeItem) {\n    if (selected.type !== 'consumable') return;\n    const selectedToInsert = foundry.utils.mergeObject(selected.toObject(), {\n      'system.quantity': 1,\n    });\n    let shots = 0;\n    if (selected.system.subtype === constants.CONSUMABLE_TYPE.MAGAZINE) {\n      shots = selected.system.charges.value;\n    } else if (selected.system.subtype === constants.CONSUMABLE_TYPE.BATTERY) {\n      shots = this.#getShotsFromBatteryFill(selected);\n    }\n    await this.weapon.update({\n      'system.currentShots': shots,\n      'flags.swade.loadedAmmo': selectedToInsert,\n    });\n  }\n\n  /** simply overwrite the old magazine with the new one to \"discard\" the old one */\n  async #loadFromInventory(selected: SwadeItem, stackSize: number) {\n    if (stackSize > 1) {\n      await selected.update({ 'system.quantity': stackSize - 1 });\n    } else {\n      await selected.delete();\n    }\n  }\n\n  async #exchangeMagWithStack(selected: SwadeItem, stackSize: number) {\n    if (selected.type !== 'consumable') return;\n\n    //find an existing magazine stack we can add to\n    const emptyMagStack = this.magazines.find(\n      (m) => m.type === 'consumable' && m.system.charges.value === 0,\n    );\n    //if there's no existing stack or we're doing a partial reload.\n    if (!emptyMagStack || (!this.noShotsInWeapon && this.loadedAmmo)) {\n      const subtype = selected.system.subtype;\n      let newCharges = 0;\n      const currentShots = this.weapon.system.currentShots;\n      //get the new charges value based on current shots and consumable subtype.\n      if (subtype === constants.CONSUMABLE_TYPE.MAGAZINE) {\n        newCharges = currentShots;\n      } else if (subtype === constants.CONSUMABLE_TYPE.BATTERY) {\n        newCharges = this.#getBatteryFillFromShots(currentShots);\n      }\n      //copy the selected consumable and set the new charges on the clone.\n      await selected.clone(\n        { 'system.quantity': 1, 'system.charges.value': newCharges },\n        { save: true },\n      );\n    } else {\n      //else increase the stack by 1\n      await emptyMagStack.update({\n        'system.quantity': emptyMagStack.system.quantity + 1,\n      });\n    }\n\n    //lastly, decrease the stack size of the selected mag or delete it entirely.\n    const newStackSize = stackSize - 1;\n    if (newStackSize > 0) {\n      await selected.update({ 'system.quantity': newStackSize });\n    } else {\n      await selected.delete();\n    }\n  }\n\n  async #updateSelectedMag(selected: SwadeItem, currentShots: number) {\n    let shots = 0;\n    const subtype = selected.system.subtype;\n    if (subtype === constants.CONSUMABLE_TYPE.MAGAZINE) {\n      shots = currentShots;\n    } else if (subtype === constants.CONSUMABLE_TYPE.BATTERY) {\n      shots = this.#getBatteryFillFromShots(currentShots);\n    }\n    await selected.update({ 'system.charges.value': shots });\n  }\n\n  #getBatteryFillFromShots(currentShots: number): number {\n    if (this.weapon.type !== 'weapon') return 0;\n    const per = (currentShots / this.weapon.system.shots) * 100;\n    return Math.ceil(per);\n  }\n\n  #getShotsFromBatteryFill(battery: SwadeItem): number {\n    if (this.weapon.type !== 'weapon' || battery.type !== 'consumable') {\n      return 0;\n    }\n    const factor = battery.system.charges.value / 100;\n    return Math.ceil(this.weapon.system.shots * factor);\n  }\n}\n\ninterface MagReloadConfiguration {\n  weapon: SwadeItem;\n  magazines: SwadeItem[];\n  resolve: (reloaded: boolean) => void;\n}\n\ninterface RenderedMagazine {\n  id: string;\n  name: string;\n  charges: number;\n  capacity: number;\n  percentage: number;\n  showPercentage: boolean;\n  quantity?: number;\n}\n\ntype MagazineGroups = Record<string, RenderedMagazine[]>;\n","import { ValueOf } from 'fvtt-types/utils';\nimport {\n  EquipState,\n  PotentialSource,\n  ReloadType,\n  Updates,\n} from '../../../globals';\nimport { RollModifier } from '../../../interfaces/additional.interface';\nimport { Logger } from '../../Logger';\nimport Reloadinator from '../../apps/Reloadinator';\nimport { constants } from '../../constants';\nimport type SwadeActor from '../../documents/actor/SwadeActor';\nimport type SwadeItem from '../../documents/item/SwadeItem';\nimport {\n  ItemChatCardChip,\n  UsageUpdates,\n} from '../../documents/item/SwadeItem.interface';\nimport { createEmbedElement, notificationExists } from '../../util';\nimport { FormulaField } from '../fields';\nimport * as migrations from './_migration';\nimport * as quarantine from './_quarantine';\nimport * as shims from './_shims';\nimport { SwadePhysicalItemData } from './base';\nimport {\n  actions,\n  activities,\n  arcaneDevice,\n  category,\n  equippable,\n  favorite,\n  grantEmbedded,\n  templates,\n  vehicular,\n} from './common';\nimport { ConsumableData } from './consumable';\nimport { GearData } from './gear';\nimport {\n  Actions,\n  Activities,\n  ArcaneDevice,\n  Category,\n  ChoicesType,\n  Equippable,\n  Favorite,\n  GrantEmbedded,\n  Templates,\n  Vehicular,\n} from './item-common.interface';\n\ndeclare namespace WeaponData {\n  interface Schema\n    extends SwadePhysicalItemData.Schema,\n      Equippable,\n      ArcaneDevice,\n      Vehicular,\n      Actions,\n      Activities,\n      Favorite,\n      Templates,\n      Category,\n      GrantEmbedded {\n    damage: FormulaField;\n    range: foundry.data.fields.StringField<{ initial: '' }>;\n    rangeType: foundry.data.fields.NumberField<{\n      integer: true;\n      nullable: true;\n      initial: null;\n      choices: ChoicesType<typeof constants.WEAPON_RANGE_TYPE>;\n    }>;\n    rof: foundry.data.fields.NumberField<{ initial: 1 }>;\n    ap: foundry.data.fields.NumberField<{ initial: 0; integer: true }>;\n    parry: foundry.data.fields.NumberField<{ initial: 0 }>;\n    minStr: foundry.data.fields.StringField<{ initial: '' }>;\n    shots: foundry.data.fields.NumberField<{ initial: 0 }>;\n    currentShots: foundry.data.fields.NumberField<{ initial: 0 }>;\n    ammo: foundry.data.fields.StringField<{ initial: '' }>;\n    reloadType: foundry.data.fields.StringField<{\n      initial: typeof constants.RELOAD_TYPE.NONE;\n      choices: ChoicesType<typeof constants.RELOAD_TYPE>;\n    }>;\n    ppReloadCost: foundry.data.fields.NumberField<{ initial: 2 }>;\n    trademark: foundry.data.fields.NumberField<{\n      initial: 0;\n      min: 0;\n      integer: true;\n    }>;\n    isHeavyWeapon: foundry.data.fields.BooleanField<{ label: string }>;\n  }\n  interface BaseData extends SwadePhysicalItemData.BaseData {}\n  interface DerivedData extends SwadePhysicalItemData.DerivedData {}\n}\n\nclass WeaponData extends SwadePhysicalItemData<\n  WeaponData.Schema,\n  WeaponData.BaseData,\n  WeaponData.DerivedData\n> {\n  /** @inheritdoc */\n  static override defineSchema(): WeaponData.Schema {\n    const fields = foundry.data.fields;\n    return {\n      ...super.defineSchema(),\n      ...equippable(),\n      ...arcaneDevice(),\n      ...vehicular(),\n      ...actions(),\n      ...activities(),\n      ...favorite(),\n      ...templates(),\n      ...category(),\n      ...grantEmbedded(),\n      damage: new FormulaField({ initial: '', label: 'SWADE.Dmg' }),\n      range: new fields.StringField({\n        initial: '',\n        label: 'SWADE.Range._name',\n      }),\n      rangeType: new fields.NumberField({\n        integer: true,\n        nullable: true,\n        initial: null,\n        choices: Object.values(constants.WEAPON_RANGE_TYPE),\n        label: 'SWADE.Weapon.RangeType.Label',\n      }),\n      rof: new fields.NumberField({ initial: 1, label: 'SWADE.RoF' }),\n      ap: new fields.NumberField({\n        initial: 0,\n        integer: true,\n        label: 'SWADE.AP',\n      }),\n      parry: new fields.NumberField({ initial: 0, label: 'SWADE.Parry' }),\n      minStr: new fields.StringField({ initial: '', label: 'SWADE.MinStr' }),\n      shots: new fields.NumberField({ initial: 0, label: 'SWADE.Mag' }),\n      currentShots: new fields.NumberField({\n        initial: 0,\n        label: 'SWADE.ShotsCurrent',\n      }),\n      ammo: new fields.StringField({ initial: '', label: 'SWADE.Ammo' }),\n      reloadType: new fields.StringField({\n        initial: constants.RELOAD_TYPE.NONE,\n        choices: Object.values(constants.RELOAD_TYPE),\n        label: 'SWADE.ReloadType.Label',\n      }),\n      ppReloadCost: new fields.NumberField({\n        initial: 2,\n        label: 'SWADE.PPCost',\n      }),\n      trademark: new fields.NumberField({\n        initial: 0,\n        min: 0,\n        integer: true,\n        label: 'SWADE.TrademarkWeapon.Label',\n      }),\n      isHeavyWeapon: new fields.BooleanField({ label: 'SWADE.HeavyWeapon' }),\n    };\n  }\n\n  /** @inheritdoc */\n  static override migrateData(source: PotentialSource<WeaponData>) {\n    quarantine.ensurePricesAreNumeric(source);\n    quarantine.ensureWeightsAreNumeric(source);\n    quarantine.ensureAPisNumeric(source);\n    quarantine.ensureRoFisNumeric(source);\n    quarantine.ensureShotsAreNumeric(source);\n\n    migrations.renameActionProperties(source);\n    return super.migrateData(source);\n  }\n\n  /** @inheritdoc */\n  protected override _initialize(options?: any) {\n    super._initialize(options);\n    this._applyShims();\n  }\n\n  protected _applyShims() {\n    shims.actionProperties(this);\n  }\n\n  get isMelee(): boolean {\n    return (\n      this.rangeType === constants.WEAPON_RANGE_TYPE.MIXED ||\n      this.rangeType === constants.WEAPON_RANGE_TYPE.MELEE\n    );\n  }\n\n  get isRanged(): boolean {\n    return (\n      this.rangeType === constants.WEAPON_RANGE_TYPE.MIXED ||\n      this.rangeType === constants.WEAPON_RANGE_TYPE.RANGED\n    );\n  }\n\n  get canBeArcaneDevice() {\n    return true;\n  }\n\n  get isReadied(): boolean {\n    return Number(this.equipStatus) > constants.EQUIP_STATE.CARRIED;\n  }\n\n  get traitModifiers(): RollModifier[] {\n    const modifiers = new Array<RollModifier>();\n    modifiers.push(\n      ...(this.parent.actor?.system.stats.globalMods.attack ?? []),\n    );\n    if (\n      this.equipStatus === constants.EQUIP_STATE.OFF_HAND &&\n      !this.parent.actor?.getFlag('swade', 'ambidextrous')\n    ) {\n      modifiers.push({\n        label: game.i18n.localize('SWADE.OffHandPenalty'),\n        value: -2,\n      });\n    }\n    if (Number(this.trademark) > 0) {\n      modifiers.push({\n        label: game.i18n.localize('SWADE.TrademarkWeapon.Label'),\n        value: '+' + this.trademark,\n      });\n    }\n    return modifiers;\n  }\n\n  get usesAmmoFromInventory(): boolean {\n    if (this.reloadType === constants.RELOAD_TYPE.PP) return false;\n    const isPC = this.parent.actor?.type === 'character';\n    const isNPC = this.parent.actor?.type === 'npc';\n    const isVehicle = this.parent.actor?.type === 'vehicle';\n    const npcAmmoFromInventory = game.settings.get('swade', 'npcAmmo');\n    const vehicleAmmoFromInventory = game.settings.get('swade', 'vehicleAmmo');\n    const useAmmoFromInventory = game.settings.get(\n      'swade',\n      'ammoFromInventory',\n    );\n    return (\n      (isVehicle && vehicleAmmoFromInventory) ||\n      (isNPC && npcAmmoFromInventory) ||\n      (isPC && useAmmoFromInventory)\n    );\n  }\n\n  get hasAmmoManagement(): boolean {\n    return (\n      !this.isMelee &&\n      game.settings.get('swade', 'ammoManagement') &&\n      this.reloadType !== constants.RELOAD_TYPE.NONE\n    );\n  }\n\n  get hasReloadButton(): boolean {\n    return (\n      game.settings.get('swade', 'ammoManagement') &&\n      (this.shots ?? 0) > 0 &&\n      this.reloadType !== constants.RELOAD_TYPE.NONE &&\n      this.reloadType !== constants.RELOAD_TYPE.SELF\n    );\n  }\n\n  /** Used by SwadeItem.setEquipState */\n  _rejectEquipState(state: EquipState): boolean {\n    return state === constants.EQUIP_STATE.EQUIPPED;\n  }\n\n  async getChatChips(\n    enrichOptions: Partial<TextEditor.EnrichmentOptions>,\n  ): Promise<ItemChatCardChip[]> {\n    const chips = new Array<ItemChatCardChip>();\n    if (this.isReadied) {\n      chips.push({\n        icon: '<i class=\"fas fa-tshirt\"></i>',\n        title: game.i18n.localize('SWADE.Equipped'),\n      });\n    } else {\n      chips.push({\n        icon: '<i class=\"fas fa-tshirt\" style=\"color:grey\"></i>',\n        title: game.i18n.localize('SWADE.Unequipped'),\n      });\n    }\n    chips.push(\n      {\n        icon: '<i class=\"fas fa-fist-raised\"></i>',\n        text: this.damage,\n        title: game.i18n.localize('SWADE.Dmg'),\n      },\n      {\n        icon: '<i class=\"fas fa-shield-alt\"></i>',\n        text: this.ap,\n        title: game.i18n.localize('SWADE.Ap'),\n      },\n      {\n        icon: '<i class=\"fas fa-user-shield\"></i>',\n        text: this.parry,\n        title: game.i18n.localize('SWADE.Parry'),\n      },\n      {\n        icon: '<i class=\"fas fa-ruler\"></i>',\n        text: this.range,\n        title: game.i18n.localize('SWADE.Range._name'),\n      },\n      {\n        icon: '<i class=\"fas fa-tachometer-alt\"></i>',\n        text: this.rof,\n        title: game.i18n.localize('SWADE.RoF'),\n      },\n      {\n        icon: '<i class=\"fas fa-sticky-note\"></i>',\n        text: await foundry.applications.ux.TextEditor.implementation.enrichHTML(this.notes ?? '', enrichOptions),\n        title: game.i18n.localize('SWADE.Notes'),\n      },\n    );\n    return chips;\n  }\n\n  /** Used by SwadeItem.canExpendResources */\n  _canExpendResources(resourcesUsed = 1): boolean {\n    if (!game.settings.get('swade', 'ammoManagement') || this.isMelee)\n      return true;\n\n    if (this.reloadType === constants.RELOAD_TYPE.NONE) {\n      if (!this.usesAmmoFromInventory) return true;\n      const ammo = this.actor?.items.getName(this.ammo as string);\n      if (!ammo) return false;\n      const ammoCount =\n        ammo?.type === 'consumable'\n          ? ammo?.system['charges']['value']\n          : ammo?.system['quantity'];\n      return resourcesUsed <= ammoCount;\n    } else if (this.reloadType === constants.RELOAD_TYPE.SELF) {\n      const usesRemaining =\n        Number(this.shots) * (Number(this.quantity) - 1) +\n        Number(this.currentShots);\n      return resourcesUsed <= usesRemaining;\n    } else {\n      return resourcesUsed <= Number(this.currentShots);\n    }\n  }\n\n  /** Used by SwadeItem.consume */\n  _getUsageUpdates(chargesToUse: number): UsageUpdates | false {\n    const actorUpdates: Updates = {};\n    const itemUpdates: Updates = {};\n    const resourceUpdates = new Array<Updates>();\n\n    if (!game.settings.get('swade', 'ammoManagement')) return false;\n    const usesAmmo = this.shots && this.currentShots;\n\n    if (this.reloadType === constants.RELOAD_TYPE.NONE) {\n      if (!this.usesAmmoFromInventory) return false;\n      const ammo = this.parent.actor?.items.getName(this.ammo);\n      if (ammo?.type === 'consumable') {\n        ammo?.consume(chargesToUse);\n      } else {\n        const quantity = ammo?.system['quantity'];\n        if ((usesAmmo && !ammo) || chargesToUse > quantity) {\n          Logger.warn('SWADE.NotEnoughAmmo', { toast: true, localize: true });\n          return false;\n        } else if (usesAmmo && ammo) {\n          resourceUpdates.push({\n            _id: ammo.id,\n            'system.quantity': quantity - chargesToUse,\n          });\n        }\n      }\n    } else if (this.reloadType === constants.RELOAD_TYPE.SELF) {\n      const currentShots = Number(this.currentShots);\n      const maxShots = Number(this.shots);\n      const usesShots = !!maxShots && !!currentShots;\n      const quantity = Number(this.quantity);\n      const usesRemaining = maxShots * (quantity - 1) + currentShots;\n      if (!usesShots || chargesToUse > usesRemaining) {\n        Logger.warn('SWADE.NotEnoughAmmo', { toast: true, localize: true });\n        return false;\n      }\n\n      let newShots: number;\n      let newQuantity: number;\n      if (chargesToUse < currentShots) {\n        itemUpdates['system.currentShots'] = currentShots - chargesToUse;\n      } else {\n        const quantityUsed = Math.ceil(chargesToUse / maxShots);\n        const remainingQty = quantity - quantityUsed;\n        if (remainingQty < 1) {\n          newShots = 0;\n          newQuantity = 0;\n        } else {\n          const remainder =\n            chargesToUse - (currentShots + (quantityUsed - 1) * maxShots);\n          newShots = maxShots - remainder;\n          newQuantity = remainingQty;\n        }\n        itemUpdates['system.currentShots'] = newShots;\n        itemUpdates['system.quantity'] = newQuantity;\n      }\n    } else {\n      const currentShots = this.currentShots;\n      const usesShots = !!this.shots && !!currentShots;\n\n      if (!usesShots || chargesToUse > currentShots) {\n        Logger.warn('SWADE.NotEnoughAmmo', { toast: true, localize: true });\n        return false;\n      }\n      itemUpdates['system.currentShots'] = currentShots - chargesToUse;\n    }\n\n    return { actorUpdates, itemUpdates, resourceUpdates };\n  }\n\n  override prepareDerivedData(this: WeaponData): void {\n    super.prepareDerivedData();\n  }\n\n  /**\n   * Reload this weapon based on the reload procedure set.\n   * @returns whether this weapon was successfully reloaded\n   */\n  async reload(): Promise<boolean> {\n    const parent = this.parent.actor;\n    if (!game.settings.get('swade', 'ammoManagement') || !parent) return false;\n\n    //return if there's no ammo set\n    if (this.usesAmmoFromInventory && !this.ammo) {\n      if (!notificationExists('SWADE.NoAmmoSet')) {\n        Logger.info('SWADE.NoAmmoSet', { toast: true, localize: true });\n      }\n      return false;\n    }\n\n    const ammoItem = parent.items.getName(this.ammo) as\n      | SwadeItem<'gear' | 'consumable'>\n      | undefined;\n    const currentShots = this.currentShots || 0;\n    const maxShots = this.shots || 0;\n    const missingShots = maxShots - currentShots;\n    const reloadType = this.reloadType;\n\n    if (this.usesAmmoFromInventory && !ammoItem) {\n      this.#postNotEnoughAmmoMessage();\n      return false;\n    }\n\n    if (currentShots >= maxShots) {\n      if (!notificationExists('SWADE.ReloadUnneeded')) {\n        Logger.info('SWADE.ReloadUnneeded', {\n          localize: true,\n          toast: true,\n        });\n      }\n      return false;\n    }\n\n    /**\n     * Called when a reload is initiated. Returning false will cancel the reload operation;\n     * @param {SwadeItem} item        The weapon being reloaded\n     */\n    const permitContinue = Hooks.call('swadePreReloadWeapon', this.parent);\n\n    if (!permitContinue) return false;\n\n    let reloaded = false;\n\n    switch (reloadType) {\n      case constants.RELOAD_TYPE.SINGLE:\n        reloaded = await this.#handleSingleReload(ammoItem);\n        break;\n      case constants.RELOAD_TYPE.FULL:\n        reloaded = await this.#handleFullReload(\n          ammoItem, //FIXME technically the item can be undefined here still\n          missingShots,\n        );\n        break;\n      case constants.RELOAD_TYPE.MAGAZINE:\n      case constants.RELOAD_TYPE.BATTERY:\n        reloaded = await this.#handleReloadFromConsumable(reloadType);\n        break;\n      case constants.RELOAD_TYPE.PP:\n        reloaded = await this.#handlePowerPointReload();\n        break;\n      case constants.RELOAD_TYPE.NONE:\n      case constants.RELOAD_TYPE.SELF:\n      default:\n        // Shouldn't ever arrive here because the Reload button shouldn't display\n        break;\n    }\n\n    /**\n     * Called after a weapon reload procedure has finished.\n     * @param {SwadeItem} item            The weapon being reloaded\n     * @param {boolean} reloaded          Whether the reload operation was successfully completed\n     */\n    Hooks.callAll('swadeReloadWeapon', this.parent, reloaded);\n    return reloaded;\n  }\n\n  async #handleSingleReload(ammo?: SwadeItem): Promise<boolean> {\n    const system = ammo?.system as GearData | undefined;\n    if (this.usesAmmoFromInventory && (system?.quantity ?? 0) <= 0) {\n      this.#postNotEnoughAmmoMessage();\n      return false;\n    } else {\n      await ammo?.consume(1);\n    }\n    await this.parent.update({\n      'system.currentShots': Number(this.currentShots) + 1,\n    });\n    Logger.info('SWADE.ReloadSuccess', { toast: true, localize: true });\n    return true;\n  }\n\n  async #handleFullReload(\n    ammo: SwadeItem<'gear' | 'consumable'>,\n    missing: number,\n  ): Promise<boolean> {\n    if (!this.usesAmmoFromInventory) {\n      return this.#handleSimpleReload();\n    }\n    if (ammo.type === 'consumable') {\n      return this.#handleConsumableReload(ammo, missing);\n    }\n    if (ammo.system.quantity! <= 0) {\n      this.#postNotEnoughAmmoMessage();\n      return false;\n    }\n    let ammoInMagazine = this.shots;\n    if (ammo.system.quantity! < missing) {\n      // partial reload\n      ammoInMagazine = (this.currentShots ?? 0) + ammo.system.quantity!;\n      await ammo.consume(ammo.system.quantity!);\n      this.#postNotEnoughAmmoToReloadMessage();\n    } else {\n      await ammo.consume(missing);\n    }\n    await this.parent.update({ 'system.currentShots': ammoInMagazine });\n    Logger.info('SWADE.ReloadSuccess', { toast: true, localize: true });\n    return true;\n  }\n\n  async #handleConsumableReload(\n    ammo: SwadeItem,\n    missing: number,\n  ): Promise<boolean> {\n    if (!(ammo.system instanceof ConsumableData)) return false;\n    if ((ammo.system.charges.value ?? 0) <= 0) {\n      this.#postNotEnoughAmmoMessage();\n      return false;\n    }\n\n    const allCharges =\n      (ammo.system.charges.value ?? 0) * (ammo.system.quantity ?? 0);\n\n    let ammoInMagazine = this.shots;\n    if (allCharges < missing) {\n      // partial reload\n      ammoInMagazine = Number(this.currentShots) + allCharges;\n      await ammo.consume(allCharges);\n      this.#postNotEnoughAmmoToReloadMessage();\n    } else {\n      await ammo.consume(missing);\n    }\n    await this.parent.update({ 'system.currentShots': ammoInMagazine });\n    Logger.info('SWADE.ReloadSuccess', { toast: true, localize: true });\n    return true;\n  }\n\n  async #handleReloadFromConsumable(reloadType: ReloadType): Promise<boolean> {\n    if (!this.usesAmmoFromInventory) return this.#handleSimpleReload();\n\n    let magazines = new Array<SwadeItem<'consumable'>>();\n    const consumables = this.parent.actor?.itemTypes.consumable ?? [];\n    const predicate = (type: ValueOf<typeof constants.CONSUMABLE_TYPE>) => {\n      return (i: SwadeItem<'consumable'>) =>\n        i.type === 'consumable' &&\n        i.name === this.ammo &&\n        i.system.subtype === type &&\n        (i.system.equipStatus ?? 0) >= constants.EQUIP_STATE.CARRIED;\n    };\n\n    if (reloadType === constants.RELOAD_TYPE.MAGAZINE) {\n      magazines = consumables.filter(\n        predicate(constants.CONSUMABLE_TYPE.MAGAZINE),\n      );\n    } else if (reloadType === constants.RELOAD_TYPE.BATTERY) {\n      magazines = consumables.filter(\n        predicate(constants.CONSUMABLE_TYPE.BATTERY),\n      );\n    }\n\n    if (\n      magazines.filter((m) => (m.system.charges.value ?? 0) > 0).length === 0\n    ) {\n      if (!notificationExists('SWADE.NoMags')) {\n        Logger.warn('SWADE.NoMags', {\n          toast: true,\n          localize: true,\n        });\n      }\n      return false;\n    }\n    const reloaded = await Reloadinator.asPromise({\n      weapon: this.parent as SwadeItem,\n      magazines,\n    });\n\n    if (reloaded)\n      Logger.info('SWADE.ReloadSuccess', { toast: true, localize: true });\n    return reloaded;\n  }\n\n  async #handlePowerPointReload(): Promise<boolean> {\n    const powerPoints = this.parent.actor?.system.powerPoints[this.ammo!];\n    const ppReloadCost = Number(this.ppReloadCost);\n    if (!powerPoints) {\n      if (!notificationExists('SWADE.NoAmmoPP')) {\n        Logger.warn('SWADE.NoAmmoPP', {\n          toast: true,\n          localize: true,\n        });\n      }\n      return false;\n    }\n    if (powerPoints?.value < ppReloadCost) {\n      this.#postNotEnoughAmmoMessage();\n      return false;\n    }\n    await this.parent.actor?.update({\n      ['system.powerPoints.' + this.ammo + '.value']:\n        powerPoints.value - ppReloadCost,\n    });\n    await this.parent.update({ 'system.currentShots': this.shots });\n    Logger.info('SWADE.ReloadSuccess', { toast: true, localize: true });\n    return true;\n  }\n\n  async #handleSimpleReload(): Promise<boolean> {\n    await this.parent.update({ 'system.currentShots': this.shots });\n    Logger.info('SWADE.ReloadSuccess', { toast: true, localize: true });\n    return true;\n  }\n\n  /** Remove the loaded ammunition from this weapon and move it into the parent actor's inventory */\n  async removeAmmo() {\n    const loadedAmmo = this.parent.getFlag('swade', 'loadedAmmo');\n    const parent = this.parent.actor as SwadeActor | null;\n    if (!parent || !loadedAmmo) return;\n    const reloadType = this.reloadType;\n    if (\n      reloadType !== constants.RELOAD_TYPE.MAGAZINE &&\n      reloadType !== constants.RELOAD_TYPE.BATTERY\n    )\n      return;\n\n    const updates: Updates[] = [\n      {\n        _id: this.parent.id,\n        'system.currentShots': 0,\n        'flags.swade': { '-=loadedAmmo': null },\n      },\n    ];\n\n    if (!this.usesAmmoFromInventory) {\n      await parent.updateEmbeddedDocuments('Item', updates);\n      return;\n    }\n    const isFull = this.currentShots === this.shots;\n    const predicate = (\n      type: ValueOf<typeof constants.CONSUMABLE_TYPE>,\n      charges?: number,\n    ) => {\n      return (item: SwadeItem<'consumable'>) =>\n        item.type === 'consumable' &&\n        item.name === loadedAmmo.name &&\n        item.system.subtype === type &&\n        (item.system.equipStatus ?? 0) >= constants.EQUIP_STATE.CARRIED &&\n        item.system.charges.value === (charges ?? item.system.charges.max);\n    };\n\n    const consumables = parent.itemTypes\n      .consumable as SwadeItem<'consumable'>[];\n\n    if (reloadType === constants.RELOAD_TYPE.MAGAZINE) {\n      const existingStack = consumables.find(\n        predicate(constants.CONSUMABLE_TYPE.MAGAZINE),\n      );\n      if (existingStack && isFull) {\n        updates.push({\n          _id: existingStack.id,\n          'system.quantity': (existingStack.system.quantity ?? 0) + 1,\n        });\n      } else {\n        const itemData = foundry.utils.mergeObject(loadedAmmo, {\n          'system.charges.value': this.currentShots,\n        });\n        await getDocumentClass('Item').create(itemData, { parent });\n      }\n    } else if (reloadType === constants.RELOAD_TYPE.BATTERY) {\n      const existingStack = consumables.find(\n        predicate(constants.CONSUMABLE_TYPE.BATTERY, 100),\n      );\n\n      if (existingStack && isFull) {\n        updates.push({\n          _id: existingStack.id,\n          'system.quantity': (existingStack.system.quantity ?? 0) + 1,\n        });\n      } else {\n        const factor = Number(this.currentShots) / Number(this.shots);\n        const itemData = foundry.utils.mergeObject(loadedAmmo, {\n          'system.charges.value': Math.ceil(factor * 100),\n        });\n        await getDocumentClass('Item').create(itemData, { parent });\n      }\n    }\n\n    await parent.updateEmbeddedDocuments('Item', updates);\n  }\n\n  #postNotEnoughAmmoMessage() {\n    if (!notificationExists('SWADE.NotEnoughAmmo')) {\n      Logger.warn('SWADE.NotEnoughAmmo', {\n        toast: true,\n        localize: true,\n      });\n    }\n  }\n\n  #postNotEnoughAmmoToReloadMessage() {\n    if (!notificationExists('SWADE.NotEnoughAmmoToReload')) {\n      Logger.warn('SWADE.NotEnoughAmmoToReload', {\n        toast: true,\n        localize: true,\n      });\n    }\n  }\n\n  protected override async _preCreate(\n    data: foundry.abstract.TypeDataModel.ParentAssignmentType<\n      WeaponData.Schema,\n      Item<'weapon'>\n    >,\n    options: Item.Database.PreCreateOptions,\n    user: User.Implementation,\n  ): Promise<boolean | void> {\n    const allowed = await super._preCreate(data, options, user);\n    if (allowed === false) return false;\n    if (this.parent?.actor?.type === 'npc') {\n      this.updateSource({ equipStatus: constants.EQUIP_STATE.MAIN_HAND });\n    }\n  }\n\n  declare enrichedDescription?: string;\n\n  override async toEmbed(\n    config: TextEditor.DocumentHTMLEmbedConfig,\n    options: TextEditor.EnrichmentOptions,\n  ): Promise<HTMLElement | HTMLCollection | null> {\n    config.caption = false;\n    this.enrichedDescription = await foundry.applications.ux.TextEditor.implementation.enrichHTML(this.description, {\n      ...options,\n    });\n    return await createEmbedElement(\n      this,\n      'systems/swade/templates/embeds/weapon-embeds.hbs',\n      ['item-embed', 'weapon'],\n    );\n  }\n}\n\nexport { WeaponData };\n","import { AbilityData } from './ability';\nimport { ActionData } from './action';\nimport { AncestryData } from './ancestry';\nimport { ArmorData } from './armor';\nimport { ConsumableData } from './consumable';\nimport { EdgeData } from './edge';\nimport { GearData } from './gear';\nimport { HindranceData } from './hindrance';\nimport { PowerData } from './power';\nimport { ShieldData } from './shield';\nimport { SkillData } from './skill';\nimport { WeaponData } from './weapon';\n\nexport * as shims from './_shims';\nexport { AbilityData } from './ability';\nexport { ActionData } from './action';\nexport { AncestryData } from './ancestry';\nexport { ArmorData } from './armor';\nexport * as base from './base';\nexport * as common from './common';\nexport { ConsumableData } from './consumable';\nexport { EdgeData } from './edge';\nexport { GearData } from './gear';\nexport { HindranceData } from './hindrance';\nexport { PowerData } from './power';\nexport { ShieldData } from './shield';\nexport { SkillData } from './skill';\nexport { WeaponData } from './weapon';\n\nexport const config = {\n  ability: AbilityData,\n  action: ActionData,\n  ancestry: AncestryData,\n  armor: ArmorData,\n  consumable: ConsumableData,\n  edge: EdgeData,\n  gear: GearData,\n  hindrance: HindranceData,\n  power: PowerData,\n  shield: ShieldData,\n  skill: SkillData,\n  weapon: WeaponData,\n};\n\ndeclare global {\n  interface DataModelConfig {\n    Item: {\n      ability: typeof AbilityData;\n      action: typeof ActionData;\n      ancestry: typeof AncestryData;\n      armor: typeof ArmorData;\n      consumable: typeof ConsumableData;\n      edge: typeof EdgeData;\n      gear: typeof GearData;\n      hindrance: typeof HindranceData;\n      power: typeof PowerData;\n      shield: typeof ShieldData;\n      skill: typeof SkillData;\n      weapon: typeof WeaponData;\n    };\n  }\n}\n","import { constants } from '../../constants';\n\nexport function splitTopSpeed(source: any) {\n  if (\n    Object.hasOwn(source, 'topspeed') &&\n    typeof source.topspeed === 'string'\n  ) {\n    const stringValue: string = source.topspeed;\n    const match = stringValue.match(/^\\d*/);\n    if (Number.isNumeric(stringValue)) {\n      source.topspeed = { value: Number(stringValue), unit: '' };\n    } else if (!match) {\n      source.topspeed = { value: 0, unit: '' };\n    } else {\n      const value = match[0];\n      const unit = stringValue.slice(value.length).trim();\n      source.topspeed = { value: Number(value), unit };\n    }\n  }\n}\n\nexport function renamePace(source: any) {\n  const oldSpeed = source.stats?.speed;\n  if (foundry.utils.hasProperty(source, 'pace') || !oldSpeed) return;\n  const oldPace = oldSpeed?.value;\n  const oldRunningDie = oldSpeed?.runningDie;\n  const oldRunningMod = oldSpeed?.runningMod;\n  const runningDie = {\n    die: typeof oldRunningMod === 'number' ? oldRunningDie : 6,\n    mod: typeof oldRunningDie === 'number' ? oldRunningMod : 0,\n  };\n  source.pace = {\n    ground: typeof oldPace === 'number' ? oldPace : 6,\n    running: runningDie,\n  };\n}\n\nexport function shiftCargoModsMax(source: any) {\n  const oldMaxCargo = source.maxCargo;\n  if (oldMaxCargo) foundry.utils.setProperty(source, 'cargo.max', oldMaxCargo);\n  const oldMaxMods = source.maxMods;\n  if (oldMaxMods) foundry.utils.setProperty(source, 'mods.max', oldMaxMods);\n}\n\nexport function migrateDriver(source: any) {\n  if (foundry.utils.hasProperty(source, 'driver.id') && !!source.driver.id) {\n    foundry.utils.mergeObject(source.crew, {\n      members: [{ uuid: source.driver.id, role: constants.CREW_ROLE.OPERATOR }],\n    });\n    delete source.driver.id;\n    Object.defineProperty(source.driver, 'id', {\n      configurable: true,\n      get: () => {\n        foundry.utils.logCompatibilityWarning(\n          'The driver.id property has been replaced by the crew member list',\n          { since: '4.4', until: '5.1' },\n        );\n        return source.crew.members.find(\n          (m) => m.role === constants.CREW_ROLE.OPERATOR,\n        )?.uuid;\n      },\n    });\n  }\n}\n","import { TraitDie } from '../../documents/actor/SwadeActor.interface';\r\n\r\nexport function ensureStrengthDie(source: any) {\r\n  const strength: TraitDie | undefined = source.attributes?.strength?.die;\r\n  if (!strength || !Object.hasOwn(strength, 'sides')) return; //bail early\r\n  if (typeof strength.sides === 'string' && Number.isNumeric(strength.sides)) {\r\n    strength.sides = Number(strength.sides); // reassign data to numbers if necessary\r\n  }\r\n  //limit the die to a minimum of 1\r\n  strength.sides = Math.max(1, strength.sides);\r\n}\r\n\r\nexport function ensureCurrencyIsNumeric(source: any) {\r\n  if (!source.details || !Object.hasOwn(source.details, 'currency')) return; // return early in case of update\r\n  if (\r\n    source.details.currency === null ||\r\n    typeof source.details.currency === 'number'\r\n  )\r\n    return;\r\n  if (typeof source.details.currency === 'string') {\r\n    // remove all symbols that aren't numeric or a decimal point\r\n    source.details.currency = Number(\r\n      source.details.currency.replaceAll(/[^0-9.]/g, ''),\r\n    );\r\n  }\r\n}\r\n\r\nexport function ensureGeneralPowerPoints(source: any) {\r\n  if (!source.powerPoints) return;\r\n  source.powerPoints.general ??= {};\r\n\r\n  if (Object.hasOwn(source.powerPoints, 'value')) {\r\n    const value = source.powerPoints.value;\r\n    source.powerPoints.general.value = Number.isNumeric(value)\r\n      ? Number(value)\r\n      : 0;\r\n    delete source.powerPoints.value;\r\n  }\r\n\r\n  if (Object.hasOwn(source.powerPoints, 'max')) {\r\n    const max = source.powerPoints.max;\r\n    source.powerPoints.general.max = Number.isNumeric(max) ? Number(max) : 0;\r\n    delete source.powerPoints.max;\r\n  }\r\n}\r\n\r\nexport function ensurePowerPointsAreNumeric(source: any) {\r\n  if (!source.powerPoints) return;\r\n  for (const [key, pool] of Object.entries<any>(source.powerPoints)) {\r\n    if (key.startsWith('-=') || pool === null) continue; //bail condition for deletions\r\n    if (Object.hasOwn(pool, 'value')) {\r\n      pool.value = Number.isNumeric(pool.value) ? Number(pool.value) : 0;\r\n    }\r\n    if (Object.hasOwn(pool, 'max')) {\r\n      pool.max = Number.isNumeric(pool.max) ? Number(pool.max) : 0;\r\n    }\r\n  }\r\n}\r\n","export function _shimPace(source) {\r\n  const descriptor = { configurable: true };\r\n  const options: foundry.utils.LogCompatibilityWarningOptions = {\r\n    since: '4.2',\r\n    until: '5.0',\r\n  };\r\n  const shim = {};\r\n  Object.defineProperties(shim, {\r\n    value: {\r\n      ...descriptor,\r\n      get: () => {\r\n        foundry.utils.logCompatibilityWarning(\r\n          'The system.stats.speed.value property has been moved to the new system.pace object',\r\n          options,\r\n        );\r\n        return source.pace[source.pace.base];\r\n      },\r\n      set: (pace: number) => {\r\n        foundry.utils.logCompatibilityWarning(\r\n          'The system.stats.speed.value property has been moved to the new system.pace object',\r\n          options,\r\n        );\r\n        source.pace[source.pace.base] = pace;\r\n      },\r\n    },\r\n    adjusted: {\r\n      ...descriptor,\r\n      get: () => {\r\n        foundry.utils.logCompatibilityWarning(\r\n          'The system.stats.speed.adjusted property has been moved to the new system.pace object',\r\n          options,\r\n        );\r\n        return source.pace[source.pace.base];\r\n      },\r\n      set: (pace: number) => {\r\n        foundry.utils.logCompatibilityWarning(\r\n          'The system.stats.speed.adjusted property has been moved to the new system.pace object',\r\n          options,\r\n        );\r\n        source.pace[source.pace.base] = pace;\r\n      },\r\n    },\r\n    runningDie: {\r\n      ...descriptor,\r\n      get: () => {\r\n        foundry.utils.logCompatibilityWarning(\r\n          'The system.stats.speed.runningDie property has been moved to the new system.pace.running object',\r\n          options,\r\n        );\r\n        return source.pace.running.die;\r\n      },\r\n      set: (sides: number) => {\r\n        foundry.utils.logCompatibilityWarning(\r\n          'The system.stats.speed.runningDie property has been moved to the new system.pace.running object',\r\n          options,\r\n        );\r\n        source.pace.running.die = sides;\r\n      },\r\n    },\r\n    runningMod: {\r\n      ...descriptor,\r\n      get: () => {\r\n        foundry.utils.logCompatibilityWarning(\r\n          'The system.stats.speed.runningMod property has been moved to the new system.pace.running object',\r\n          options,\r\n        );\r\n        return source.pace.running.mod;\r\n      },\r\n      set: (modifier: number) => {\r\n        foundry.utils.logCompatibilityWarning(\r\n          'The system.stats.speed.runningMod property has been moved to the new system.pace.running object',\r\n          options,\r\n        );\r\n        source.pace.running.mod = modifier;\r\n      },\r\n    },\r\n  });\r\n\r\n  foundry.utils.setProperty(source, 'stats.speed', shim);\r\n}\r\n","import { AuraData } from '../../interfaces/AuraData.interface';\nimport SwadeToken from './SwadeToken';\n\nexport class AuraPointSource extends foundry.canvas.sources.PointEffectSourceMixin(\n  foundry.canvas.sources.BaseEffectSource,\n) {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static sourceType = 'light';\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static effectsCollection = 'auras';\n  graphics!: PIXI.Graphics;\n  id: string;\n  sourceId: string;\n  declare object: SwadeToken;\n\n  constructor({ object, id }: { object: SwadeToken; id: string }) {\n    super({ object });\n    this.id = id;\n    this.sourceId = `${object.sourceId}.Aura.${id}`;\n  }\n\n  static get defaultData(): AuraData {\n    return {\n      ...super.defaultData,\n      enabled: false,\n      walls: false,\n      color: '#000000',\n      alpha: 0.25,\n      radius: 5,\n      visibleTo: [],\n    };\n  }\n\n  get auraData() {\n    return this.object!.actor?.system?.auras[this.id] as AuraData;\n  }\n\n  /** @override */\n  _configure(_changes: Record<string, unknown>) {\n    this.graphics ??= new PIXI.Graphics();\n    this.graphics.clear();\n    this.graphics\n      .beginFill(this.auraData?.color ?? '#000000', this.auraData?.alpha)\n      .lineStyle(2, this.auraData?.color, 1)\n      .drawShape(this.shape)\n      .endFill();\n  }\n\n  /** @override */\n  _destroy() {\n    this.graphics?.destroy();\n  }\n\n  /** @override */\n  protected get active(): boolean {\n    const isActive = super.active;\n    return isActive && (this._checkPermission() || this._checkDisposition());\n  }\n\n  protected _checkPermission(): boolean {\n    return (\n      (this.object!.actor?.permission ?? 0) >=\n      foundry.CONST.DOCUMENT_OWNERSHIP_LEVELS.OBSERVER\n    );\n  }\n\n  protected _checkDisposition(): boolean {\n    const isSet = foundry.utils.getType(this.auraData.visibleTo) === 'Set';\n    const visibleTo = isSet\n      ? Array.from(this.auraData.visibleTo)\n      : Array.isArray(this.auraData.visibleTo)\n        ? this.auraData.visibleTo\n        : [this.auraData.visibleTo];\n    return !!canvas?.tokens?.controlled.some((t) =>\n      visibleTo.includes(t.document.disposition),\n    );\n  }\n}\n","import { AdditionalStat } from '../../../../interfaces/additional.interface';\nimport { SwadeRoll } from '../../../dice/SwadeRoll';\nimport type SwadeActor from '../../../documents/actor/SwadeActor';\nimport type SwadeItem from '../../../documents/item/SwadeItem';\nimport { makeAdditionalStatsSchema } from '../../shared/additionalStats';\nimport { AuraPointSource } from '../../../canvas/AuraPointSource';\nimport { AuraData } from '../../../../interfaces/AuraData.interface';\n\nconst fields = foundry.data.fields;\n\ndeclare namespace SwadeBaseActorData {\n  interface Schema extends foundry.data.fields.DataSchema {\n    additionalStats: ReturnType<typeof makeAdditionalStatsSchema>;\n  }\n  type BaseData = {};\n  type DerivedData = {\n    auras: Record<string, AuraData>;\n  };\n}\n\nexport type TokenSize = { width: number; height: number };\n\nclass SwadeBaseActorData<\n  Schema extends SwadeBaseActorData.Schema = SwadeBaseActorData.Schema,\n  BaseData extends SwadeBaseActorData.BaseData = SwadeBaseActorData.BaseData,\n  DerivedData extends SwadeBaseActorData.DerivedData = SwadeBaseActorData.DerivedData,\n> extends foundry.abstract.TypeDataModel<\n  Schema,\n  SwadeActor,\n  BaseData,\n  DerivedData\n> {\n  static override defineSchema(): SwadeBaseActorData.Schema {\n    return {\n      additionalStats: makeAdditionalStatsSchema(),\n  \n      category: new fields.StringField({ \n        required: false, \n        initial: ''\n      }),\n\n      auras: new fields.TypedObjectField(\n        new fields.SchemaField({\n          enabled: new fields.BooleanField({\n            label: 'SWADE.Auras.Enabled',\n            required: true,\n          }),\n          radius: new fields.NumberField({\n            label: 'SWADE.Auras.Range',\n            min: 0,\n            step: 1,\n            required: true,\n            initial: 5,\n          }),\n          color: new fields.ColorField({\n            label: 'SWADE.Auras.Color',\n            initial: () => game.user?.color.css ?? '#000000',\n          }),\n          alpha: new fields.NumberField({\n            label: 'SWADE.Auras.Alpha',\n            min: 0,\n            max: 1,\n            step: 0.05,\n            required: true,\n            initial: 0.25,\n          }),\n          walls: new fields.BooleanField({\n            label: 'SWADE.Auras.WallConstraints.Label',\n            hint: 'SWADE.Auras.WallConstraints.Hint',\n            required: true,\n          }),\n          visibleTo: new fields.SetField(\n            new fields.NumberField({\n              choices: {\n                [CONST.TOKEN_DISPOSITIONS.HOSTILE]: 'TOKEN.DISPOSITION.HOSTILE',\n                [CONST.TOKEN_DISPOSITIONS.NEUTRAL]: 'TOKEN.DISPOSITION.NEUTRAL',\n                [CONST.TOKEN_DISPOSITIONS.FRIENDLY]: 'TOKEN.DISPOSITION.FRIENDLY',\n              },\n              required: true,\n            }),\n            {\n              label: 'SWADE.Aura.Visibility.Label',\n              hint: 'SWADE.Aura.Visibility.Hint',\n              required: true,\n              initial: [],\n            },\n          ),\n        }),\n        {\n          initial: {\n            aura1: {\n              ...AuraPointSource.defaultData,\n            },\n            aura2: {\n              ...AuraPointSource.defaultData,\n            },\n          },\n        },\n      ),\n    };\n  }\n\n  override prepareDerivedData(this: SwadeBaseActorData) {\n    super.prepareDerivedData();\n    // Ensure all auras have defaults if not provided\n    const userColor =\n      game.users.find((u) => u.character === this.parent)?.color?.css ??\n      '#000000';\n    for (const [auraKey, aura] of Object.entries(this.auras)) {\n      this.auras[auraKey] = {\n        ...AuraPointSource.defaultData,\n        color: userColor,\n        ...aura,\n      };\n    }\n  }\n\n  get tokenSize(): TokenSize {\n    return { width: 1, height: 1 };\n  }\n\n  getRollData(_includeModifiers = true): Record<string, number | string> {\n    return {};\n  }\n\n  async rollAdditionalStat(stat: string) {\n    const statData: AdditionalStat = this.additionalStats[stat];\n    if (statData.dtype !== 'Die') return;\n    let modifier = statData.modifier || '';\n    if (!!modifier && !modifier.match(/^[+-]/)) {\n      modifier = '+' + modifier;\n    }\n    //return early if there's no data to roll\n    if (!statData.value) return;\n    const roll = new SwadeRoll(\n      `${statData.value}${modifier}`,\n      this.getRollData(),\n    );\n    await roll.evaluate();\n    const message = await roll.toMessage({\n      speaker: ChatMessage.getSpeaker({ actor: this.parent }),\n      flavor: statData.label,\n    });\n    return message;\n  }\n\n  getParryBaseSkill(): SwadeItem<'skill'> | undefined {\n    return undefined;\n  }\n\n  /**\n   * Actor type specific preparation of embedded documents\n   * @see {@link Actor.prepareEmbeddedDocuments}\n   */\n  prepareEmbeddedDocuments() {\n    if (!this.parent) return;\n    for (const effect of this.parent.effects) effect._safePrepareData();\n    this.parent.applyActiveEffects();\n    const sortedItems = this.parent.items.contents.sort((a, b) => {\n      // make sure actions come first\n      if (a.type === 'action' && b.type !== 'action') return -1;\n      if (a.type !== 'action' && b.type === 'action') return 1;\n      return 0;\n    });\n    for (const item of sortedItems) item._safePrepareData();\n  }\n}\n\nexport { SwadeBaseActorData };\n","import { DeepPartial } from 'fvtt-types/utils';\nimport { Advance } from '../../../../interfaces/Advance.interface';\nimport {\n  DerivedModifier,\n  RollModifier,\n} from '../../../../interfaces/additional.interface';\nimport { SWADE } from '../../../config';\nimport { constants } from '../../../constants';\nimport type SwadeActor from '../../../documents/actor/SwadeActor';\nimport type SwadeItem from '../../../documents/item/SwadeItem';\nimport {\n  addUpModifiers,\n  getRankFromAdvanceAsString,\n  getScaleName,\n} from '../../../util';\nimport { PaceSchemaField } from '../../fields/PaceSchemaField';\nimport { ShieldData, WeaponData } from '../../item';\nimport {\n  boundTraitDie,\n  makeDiceField,\n  makeTraitDiceFields,\n} from '../../shared';\nimport * as migration from '../_migration';\nimport * as quarantine from '../_quarantine';\nimport * as shims from '../_shims';\nimport { SwadeBaseActorData, TokenSize } from './base';\nimport { WildCardDataSchema } from './creature.schemas';\n\nconst fields = foundry.data.fields;\n\ndeclare namespace CreatureData {\n  interface Schema\n    extends SwadeBaseActorData.Schema,\n      ReturnType<typeof creatureSchema> {}\n\n  type BaseData = {\n    attributes: {\n      agility: {\n        effects: Array<RollModifier>;\n      };\n      smarts: {\n        effects: Array<RollModifier>;\n      };\n      spirit: {\n        effects: Array<RollModifier>;\n      };\n      strength: {\n        effects: Array<RollModifier>;\n      };\n      vigor: {\n        effects: Array<RollModifier>;\n      };\n    };\n    stats: {\n      scale: number;\n      toughness: {\n        sources: Array<DerivedModifier>;\n        effects: Array<DerivedModifier>;\n        armorEffects: Array<DerivedModifier>;\n      };\n      parry: {\n        sources: Array<DerivedModifier>;\n        effects: Array<DerivedModifier>;\n      };\n      globalMods: {\n        trait: Array<DerivedModifier>;\n        agility: Array<DerivedModifier>;\n        smarts: Array<DerivedModifier>;\n        spirit: Array<DerivedModifier>;\n        strength: Array<DerivedModifier>;\n        vigor: Array<DerivedModifier>;\n        attack: Array<DerivedModifier>;\n        damage: Array<DerivedModifier>;\n        ap: Array<DerivedModifier>;\n        bennyTrait: Array<DerivedModifier>;\n        bennyDamage: Array<DerivedModifier>;\n      };\n    };\n  };\n\n  type DerivedData = {\n    advances: {\n      list: Collection<Advance>;\n    };\n    details: {\n      encumbrance: {\n        max: number;\n        value: number;\n        isEncumbered: boolean;\n      };\n    };\n    pace: {\n      default: number;\n    };\n  };\n}\n\nfunction creatureSchema() {\n  return {\n    attributes: new fields.SchemaField(\n      {\n        agility: new fields.SchemaField(makeTraitDiceFields(), {\n          label: 'SWADE.AttrAgi',\n        }),\n        smarts: new fields.SchemaField(\n          {\n            ...makeTraitDiceFields(),\n            animal: new fields.BooleanField({\n              label: 'SWADE.AnimalSmarts',\n            }),\n          },\n          { label: 'SWADE.AttrSma' },\n        ),\n        spirit: new fields.SchemaField(\n          {\n            ...makeTraitDiceFields(),\n            unShakeBonus: new fields.NumberField({\n              initial: 0,\n              integer: true,\n              label: 'SWADE.EffectCallbacks.Shaken.UnshakeModifier',\n            }),\n          },\n          { label: 'SWADE.AttrSpr' },\n        ),\n        strength: new fields.SchemaField(\n          {\n            ...makeTraitDiceFields(),\n            encumbranceSteps: new fields.NumberField({\n              initial: 0,\n              integer: true,\n              label: 'SWADE.EncumbranceSteps',\n            }),\n          },\n          { label: 'SWADE.AttrStr' },\n        ),\n        vigor: new fields.SchemaField(\n          {\n            ...makeTraitDiceFields(),\n            unStunBonus: new fields.NumberField({\n              initial: 0,\n              integer: true,\n              label: 'SWADE.EffectCallbacks.Stunned.UnStunModifier',\n            }),\n            soakBonus: new fields.NumberField({\n              initial: 0,\n              integer: true,\n              label: 'SWADE.DamageApplicator.SoakModifier',\n            }),\n            bleedOut: new fields.SchemaField({\n              modifier: new fields.NumberField({\n                initial: 0,\n                integer: true,\n                label: 'SWADE.EffectCallbacks.BleedingOut.BleedOutModifier',\n              }),\n              ignoreWounds: new fields.BooleanField({\n                label: 'SWADE.IgnWounds',\n              }),\n            }),\n          },\n          { label: 'SWADE.AttrVig' },\n        ),\n      },\n      { label: 'SWADE.Attributes' },\n    ),\n    pace: new PaceSchemaField(),\n    stats: new fields.SchemaField(\n      {\n        toughness: new fields.SchemaField(\n          {\n            value: new fields.NumberField({\n              initial: 0,\n              integer: true,\n              label: 'SWADE.Tough',\n            }),\n            armor: new fields.NumberField({\n              initial: 0,\n              integer: true,\n              label: 'SWADE.Armor',\n            }),\n            modifier: new fields.NumberField({\n              initial: 0,\n              integer: true,\n              required: false,\n              label: 'SWADE.Modifier',\n            }),\n          },\n          { label: 'SWADE.Tough' },\n        ),\n        parry: new fields.SchemaField(\n          {\n            value: new fields.NumberField({\n              initial: 0,\n              integer: true,\n              label: 'SWADE.Parry',\n            }),\n            shield: new fields.NumberField({\n              initial: 0,\n              integer: true,\n              label: 'SWADE.ShieldBonus',\n            }),\n            modifier: new fields.NumberField({\n              initial: 0,\n              integer: true,\n              required: false,\n              label: 'SWADE.Modifier',\n            }),\n          },\n          { label: 'SWADE.Parry' },\n        ),\n        size: new fields.NumberField({\n          initial: 0,\n          integer: true,\n          label: 'SWADE.Size',\n        }),\n      },\n      { label: 'SWADE.Stats' },\n    ),\n    details: new fields.SchemaField(\n      {\n        autoCalcToughness: new fields.BooleanField({\n          initial: true,\n          hint: 'SWADE.InclArmor',\n        }),\n        autoCalcParry: new fields.BooleanField({\n          initial: true,\n          hint: 'SWADE.AutoCalcParry',\n        }),\n        archetype: new fields.StringField({\n          initial: '',\n          textSearch: true,\n          label: 'SWADE.Archetype',\n        }),\n        appearance: new fields.HTMLField({\n          initial: '',\n          textSearch: true,\n          label: 'SWADE.Appearance',\n        }),\n        notes: new fields.HTMLField({\n          initial: '',\n          textSearch: true,\n          label: 'SWADE.Notes',\n        }),\n        goals: new fields.HTMLField({\n          initial: '',\n          textSearch: true,\n          label: 'SWADE.CharacterGoals',\n        }),\n        biography: new fields.SchemaField(\n          {\n            value: new fields.HTMLField({\n              initial: '',\n              textSearch: true,\n              label: 'SWADE.Biography',\n            }),\n          },\n          { label: 'SWADE.Biography' },\n        ),\n        species: new fields.SchemaField(\n          {\n            name: new fields.StringField({\n              initial: '',\n              textSearch: true,\n              label: 'SWADE.Ancestry',\n            }),\n          },\n          { label: 'SWADE.Ancestry' },\n        ),\n        currency: new fields.NumberField({\n          initial: 0,\n          label: 'SWADE.Currency',\n        }),\n        wealth: new fields.SchemaField(\n          {\n            die: new fields.NumberField({\n              initial: 6,\n              min: -1,\n              integer: true,\n              label: 'SWADE.WealthDie.Sides',\n            }),\n            modifier: new fields.NumberField({\n              initial: 0,\n              label: 'SWADE.WealthDie.Modifier',\n            }),\n            'wild-die': makeDiceField(6, 'SWADE.WealthDie.WildSides'),\n          },\n          { label: 'SWADE.WealthDie.Label' },\n        ),\n        conviction: new fields.SchemaField(\n          {\n            value: new fields.NumberField({\n              initial: 0,\n              label: 'SWADE.Value',\n            }),\n            active: new fields.BooleanField({\n              label: 'SWADE.ConvictionActive',\n            }),\n          },\n          { label: 'SWADE.Conv' },\n        ),\n      },\n      { label: 'SWADE.Details' },\n    ),\n    powerPoints: new fields.TypedObjectField(\n      CreatureData.makePowerPointsSchema(),\n      {\n        initial: {\n          general: CreatureData.makePowerPointsSchema().getInitialValue(),\n        },\n        required: true,\n        label: 'SWADE.PP',\n      },\n    ),\n    fatigue: new fields.SchemaField(\n      {\n        value: new fields.NumberField({\n          initial: 0,\n          min: 0,\n          label: 'SWADE.Fatigue',\n        }),\n        max: new fields.NumberField({\n          initial: 2,\n          label: 'SWADE.FatigueMax',\n        }),\n        ignored: new fields.NumberField({\n          initial: 0,\n          label: 'SWADE.IgnFatigue',\n        }),\n      },\n      { label: 'SWADE.Fatigue' },\n    ),\n    woundsOrFatigue: new fields.SchemaField(\n      {\n        ignored: new fields.NumberField({\n          initial: 0,\n          label: 'SWADE.IgnFatigueWounds',\n        }),\n      },\n      { label: 'SWADE.FatigueWounds' },\n    ),\n    advances: new fields.SchemaField(\n      {\n        mode: new fields.StringField({\n          initial: 'expanded',\n          blank: false,\n          nullable: false,\n          choices: {\n            legacy: 'SWADE.Advances.Modes.Legacy',\n            expanded: 'SWADE.Advances.Modes.Expanded',\n          },\n          label: 'SWADE.Advances.Modes.Label',\n        }),\n        value: new fields.NumberField({\n          initial: 0,\n          label: 'SWADE.Advance',\n        }),\n        rank: new fields.StringField({\n          initial: 'Novice',\n          textSearch: true,\n          label: 'SWADE.Rank',\n        }),\n        details: new fields.HTMLField({\n          initial: '',\n          label: 'SWADE.Details',\n        }),\n        list: new fields.ArrayField(\n          new fields.SchemaField({\n            //TODO Create special data field for Advances\n            type: new fields.NumberField({ initial: 0, label: 'Type' }),\n            notes: new fields.HTMLField({\n              initial: '',\n              label: 'SWADE.Notes',\n            }),\n            sort: new fields.NumberField({\n              initial: 0,\n              label: 'SWADE.SortNum',\n            }),\n            planned: new fields.BooleanField({\n              label: 'SWADE.Advances.Planned',\n            }),\n            id: new fields.StringField({ initial: '', label: 'SWADE.ID' }),\n            rank: new fields.NumberField({\n              initial: 0,\n              label: 'SWADE.Rank',\n            }),\n          }),\n          { label: 'SWADE.Adv' },\n        ),\n      },\n      { label: 'SWADE.Adv' },\n    ),\n    status: new fields.SchemaField(\n      {\n        isShaken: new fields.BooleanField({ label: 'SWADE.Shaken' }),\n        isDistracted: new fields.BooleanField({\n          label: 'SWADE.Distr',\n        }),\n        isVulnerable: new fields.BooleanField({\n          label: 'SWADE.Vuln',\n        }),\n        isStunned: new fields.BooleanField({ label: 'SWADE.Stunned' }),\n        isEntangled: new fields.BooleanField({ label: 'SWADE.Entangled' }),\n        isBound: new fields.BooleanField({ label: 'SWADE.Bound' }),\n        isIncapacitated: new fields.BooleanField({ label: 'SWADE.Incap' }),\n      },\n      { label: 'SWADE.Status' },\n    ),\n    initiative: new fields.SchemaField(\n      {\n        hasHesitant: new fields.BooleanField({ label: 'SWADE.Hesitant' }),\n        hasLevelHeaded: new fields.BooleanField({\n          label: 'SWADE.LevelHeaded',\n        }),\n        hasImpLevelHeaded: new fields.BooleanField({\n          label: 'SWADE.ImprovedLevelHeaded',\n        }),\n        hasQuick: new fields.BooleanField({ label: 'SWADE.Quick' }),\n      },\n      { label: 'SWADE.Init' },\n    ),\n  };\n}\n\nclass CreatureData<\n  Schema extends CreatureData.Schema &\n    WildCardDataSchema = CreatureData.Schema & WildCardDataSchema,\n  BaseData extends CreatureData.BaseData = CreatureData.BaseData,\n  DerivedData extends CreatureData.DerivedData = CreatureData.DerivedData,\n> extends SwadeBaseActorData<Schema, BaseData, DerivedData> {\n  static override defineSchema(): CreatureData.Schema {\n    return {\n      ...super.defineSchema(),\n      ...creatureSchema(),\n    };\n  }\n\n  protected static wildcardData = (\n    baseBennies: number,\n    maxWounds: number,\n  ): WildCardDataSchema => ({\n    bennies: new fields.SchemaField(\n      {\n        value: new fields.NumberField({\n          initial: 0,\n          min: 0,\n          integer: true,\n          label: 'SWADE.CurrentBennies',\n        }),\n        max: new fields.NumberField({\n          initial: baseBennies,\n          min: 0,\n          integer: true,\n          label: 'SWADE.BenniesMaxNum',\n        }),\n      },\n      { label: 'SWADE.Bennies' },\n    ),\n    wounds: new fields.SchemaField(\n      {\n        value: new fields.NumberField({\n          initial: 0,\n          min: 0,\n          integer: true,\n          label: 'SWADE.Wounds',\n        }),\n        max: new fields.NumberField({\n          initial: maxWounds,\n          min: 0,\n          integer: true,\n          label: 'SWADE.WoundsMax',\n        }),\n        ignored: new fields.NumberField({\n          initial: 0,\n          min: 0,\n          integer: true,\n          label: 'SWADE.IgnWounds',\n        }),\n      },\n      { label: 'SWADE.Wounds' },\n    ),\n  });\n\n  static makePowerPointsSchema = () => {\n    return new fields.SchemaField(\n      {\n        value: new fields.NumberField({\n          initial: 0,\n          min: 0,\n          integer: true,\n          label: 'SWADE.CurPP',\n        }),\n        max: new fields.NumberField({\n          initial: 0,\n          min: 0,\n          integer: true,\n          label: 'SWADE.MaxPP',\n        }),\n      },\n      { label: 'SWADE.PP' },\n    );\n  };\n\n  static override migrateData(source) {\n    quarantine.ensureStrengthDie(source);\n    quarantine.ensureCurrencyIsNumeric(source);\n    quarantine.ensureGeneralPowerPoints(source);\n    quarantine.ensurePowerPointsAreNumeric(source);\n    migration.renamePace(source);\n    return super.migrateData(source);\n  }\n\n  static override shimData(source) {\n    shims._shimPace(source);\n    return source;\n  }\n\n  override get tokenSize(): TokenSize {\n    const value = Math.max(\n      1,\n      Math.floor((this as CreatureData).stats.size! / 4) + 1,\n    );\n    return { width: value, height: value };\n  }\n\n  get encumbered(): boolean {\n    if (!game.settings.get('swade', 'applyEncumbrance')) {\n      return false;\n    }\n    const encumbrance = (this as CreatureData).details.encumbrance;\n    if (encumbrance.isEncumbered) return true;\n    return encumbrance.value > encumbrance.max;\n  }\n\n  get isIncapacitated(): boolean {\n    return (\n      (this as CreatureData).status.isIncapacitated ||\n      this.parent?.statuses.has(CONFIG.specialStatusEffects.INCAPACITATED)\n    );\n  }\n\n  // specifying this to resolve depth issue\n  override prepareBaseData(this: CreatureData) {\n    super.prepareBaseData();\n    for (const key in this.attributes) {\n      const attribute = this.attributes[key];\n      attribute.effects = new Array<RollModifier>();\n    }\n\n    //auto calculations\n    if (this.details.autoCalcToughness) {\n      //if we calculate the toughness then we set the values to 0 beforehand so the active effects can be applies\n      this.stats.toughness.value = 0;\n      this.stats.toughness.armor = 0;\n    }\n    if (this.details.autoCalcParry) {\n      //same procedure as with Toughness\n      this.stats.parry.value = 0;\n    }\n\n    // Prepping the parry & toughness sources\n    this.stats.toughness.sources = new Array<DerivedModifier>();\n    this.stats.toughness.effects = new Array<DerivedModifier>();\n    this.stats.toughness.armorEffects = new Array<DerivedModifier>();\n    this.stats.parry.sources = new Array<DerivedModifier>();\n    this.stats.parry.effects = new Array<DerivedModifier>();\n\n    //setup the global modifier container object\n    this.stats.globalMods = {\n      trait: new Array<DerivedModifier>(),\n      agility: new Array<DerivedModifier>(),\n      smarts: new Array<DerivedModifier>(),\n      spirit: new Array<DerivedModifier>(),\n      strength: new Array<DerivedModifier>(),\n      vigor: new Array<DerivedModifier>(),\n      attack: new Array<DerivedModifier>(),\n      damage: new Array<DerivedModifier>(),\n      ap: new Array<DerivedModifier>(),\n      bennyTrait: new Array<DerivedModifier>(),\n      bennyDamage: new Array<DerivedModifier>(),\n    };\n  }\n\n  // specifying this to resolve depth issue\n  override prepareDerivedData(this: CreatureData) {\n    super.prepareDerivedData();\n    //die type bounding for attributes\n    for (const key in this.attributes) {\n      const attribute = this.attributes[key];\n      attribute.die = boundTraitDie(attribute.die);\n      attribute['wild-die'].sides = Math.min(attribute['wild-die'].sides, 12);\n    }\n\n    //handle advances\n    const advances = this.advances;\n    if (advances.mode === 'expanded') {\n      const advRaw = foundry.utils.getProperty(\n        this._source,\n        'advances.list',\n      ) as Advance[];\n      const list = new Collection<Advance>();\n      advRaw.forEach((adv) => list.set(adv.id, adv));\n      const activeAdvances = list.filter((a) => !a.planned).length;\n      advances.list = list;\n      advances.value = activeAdvances;\n      advances.rank = getRankFromAdvanceAsString(activeAdvances);\n    }\n\n    //set scale\n    this.stats.scale = this.parent.calcScale(this.stats.size!);\n\n    //handle carry capacity\n    foundry.utils.setProperty(\n      this,\n      'details.encumbrance.value',\n      this.parent.calcInventoryWeight(),\n    );\n    foundry.utils.setProperty(\n      this,\n      'details.encumbrance.max',\n      this.parent.calcMaxCarryCapacity(),\n    );\n\n    this.#preparePace();\n\n    // Toughness calculation\n    if (this.details.autoCalcToughness) {\n      const torsoArmor = this.parent.calcArmor();\n      this.stats.toughness.armor = torsoArmor;\n      this.stats.toughness.value = this.parent.calcToughness() + torsoArmor;\n      this.stats.toughness.sources.push({\n        label: game.i18n.localize('SWADE.Armor'),\n        value: torsoArmor,\n      });\n    }\n\n    if (this.details.autoCalcParry) {\n      this.stats.parry.value = this.parent.calcParry();\n    }\n    for (const item of this.parent.items) {\n      item.system.prepareFormulaFields();\n    }\n  }\n\n  /**\n   * Creates an HTMLElement for displaying in a tooltip, adding some context to an actor's size\n   */\n  getSizeTooltip(this: CreatureData): HTMLElement {\n    const scale = this.stats?.scale?.signedString();\n    const element = document.createElement('div');\n    const p = document.createElement('p');\n    p.innerText = game.i18n.format('SWADE.Scales.Description', {\n      scale: scale,\n      name: getScaleName(this.stats?.scale),\n    });\n    element.appendChild(p);\n    return element;\n  }\n\n  override getParryBaseSkill() {\n    return this.parent.getSingleItemBySwid(\n      game.settings.get('swade', 'parryBaseSwid'),\n      'skill',\n    );\n  }\n\n  calcParry(): number {\n    /** base value of all parry calculations */\n    const parryBaseValue = 2;\n\n    let parryTotal = 0;\n    const sources: DerivedModifier[] = this.stats.parry.sources;\n    const parryBaseSkill = this.getParryBaseSkill();\n\n    const skillDie = parryBaseSkill?.system?.die.sides ?? 0;\n    const skillMod = parryBaseSkill?.system?.die.modifier ?? 0;\n\n    //base parry calculation\n    parryTotal = Math.round(skillDie / 2) + parryBaseValue;\n\n    //add modifier if the skill die is 12\n    if (skillDie >= 12) {\n      parryTotal += Math.floor(skillMod / 2);\n    }\n\n    if (parryBaseSkill) {\n      sources.push({\n        label: foundry.utils.getProperty(parryBaseSkill, 'name'),\n        value: parryTotal,\n      });\n    } else {\n      sources.push({\n        label: game.i18n.localize('SWADE.BaseParry'),\n        value: parryBaseValue,\n      });\n    }\n\n    this.stats.parry.shield = 0;\n\n    const itemTypes = this.parent.itemTypes;\n\n    //add shields\n    for (const shield of itemTypes.shield) {\n      if (!(shield.system instanceof ShieldData)) continue;\n      if (shield.system.equipStatus === constants.EQUIP_STATE.EQUIPPED) {\n        const shieldParry = shield.system.parry ?? 0;\n        parryTotal += shieldParry;\n        this.stats.parry.shield += shieldParry;\n        sources.push({\n          label: shield.name,\n          value: shieldParry,\n        });\n      }\n    }\n\n    //add equipped weapons\n    const ambidextrous = this.parent.getFlag('swade', 'ambidextrous') as\n      | undefined\n      | boolean;\n    for (const weapon of itemTypes.weapon) {\n      if (!(weapon.system instanceof WeaponData)) continue;\n      let parryBonus = 0;\n\n      if (Number(weapon.system.equipStatus) >= constants.EQUIP_STATE.OFF_HAND) {\n        // only add parry bonus if it's in the main hand or actor is ambidextrous\n        if (\n          Number(weapon.system.equipStatus) >= constants.EQUIP_STATE.EQUIPPED ||\n          ambidextrous\n        )\n          parryBonus += weapon.system.parry ?? 0;\n\n        //add trademark weapon bonus\n        parryBonus += Number(weapon.system.trademark);\n      }\n      if (parryBonus !== 0) {\n        sources.push({\n          label: weapon.name,\n          value: parryBonus,\n        });\n      }\n      parryTotal += parryBonus;\n    }\n    return parryTotal;\n  }\n\n  /**\n   * Creates an HTMLElement for displaying in a tooltip, adding some context to an actor's movement speed\n   * @returns the constructed HTMLElement\n   */\n  getPaceTooltip(this: CreatureData): HTMLElement {\n    const element = document.createElement('div');\n    //current pace\n    const heading = document.createElement('h4');\n    heading.innerText =\n      game.i18n.localize('SWADE.Movement.Base') +\n      ': ' +\n      game.i18n.localize(\n        'SWADE.Movement.Pace.' + this.pace.base!.capitalize() + '.Label',\n      );\n    element.appendChild(heading);\n\n    //attempt to add other pace values as a list\n    const availableKeys = PaceSchemaField.paceKeys\n      .filter((key) => !!this.pace[key])\n      .filter((key) => key !== this.pace.base!);\n    if (availableKeys.length) {\n      const subheading = document.createElement('h5');\n      subheading.innerText = game.i18n.localize('SWADE.Movement.Other');\n      element.appendChild(subheading);\n      const paceList = document.createElement('ul');\n      for (const key of availableKeys) {\n        const li = document.createElement('li');\n        const localized = game.i18n.localize(\n          `SWADE.Movement.Pace.${key.capitalize()}.Label`,\n        );\n        li.innerText = `${localized}: ${this.pace[key]}`;\n        paceList.appendChild(li);\n      }\n      element.appendChild(paceList);\n    }\n\n    //if the parent isn't a combatant add the out of combat pace\n    if (!this.parent.getCombatant()) {\n      element.appendChild(document.createElement('hr'));\n      const p = document.createElement('span');\n      const runningDie = this.pace.running.die!;\n      const minutes = this.attributes.vigor.die.sides! / 2;\n      const pace = (runningDie + this.pace.default) * 2;\n      p.innerText = game.i18n.format('SWADE.Movement.Running.OutOfCombat', {\n        pace,\n        minutes,\n      });\n      element.appendChild(p);\n    }\n    return element;\n  }\n\n  // specifying this to resolve depth issue\n  override getRollData(\n    this: CreatureData,\n    includeModifiers = true,\n  ): Record<string, number | string> {\n    const out: Record<string, number | string> = {\n      wounds: this.wounds.value || 0,\n      fatigue: this.fatigue.value || 0,\n      pace: this.pace.default || 0,\n    };\n\n    const globalMods = this.stats.globalMods;\n\n    // Attributes\n    const attributes = this.attributes;\n    for (const [key, attribute] of Object.entries(attributes)) {\n      const short = key.substring(0, 3);\n      const name = game.i18n.localize(SWADE.attributes[key].long);\n      const die = attribute.die.sides;\n      let mod = attribute.die.modifier || 0;\n      if (includeModifiers) {\n        mod = structuredClone<RollModifier[]>([\n          {\n            label: game.i18n.localize('SWADE.TraitMod'),\n            value: attribute.die.modifier!,\n          },\n          ...globalMods[key],\n          ...globalMods.trait,\n        ])\n          .filter((m) => m.ignore !== true)\n          .reduce(addUpModifiers, 0) as number;\n      }\n      let modString = mod !== 0 ? mod.signedString() : '';\n      if (mod) modString += `[${game.i18n.localize('SWADE.TraitMod')}]`;\n      let val = `1d${die}x[${name}]${modString}`;\n      if (die! <= 1) val = `1d${die}[${name}]${modString}`;\n      out[short] = val;\n    }\n\n    for (const skill of this.parent.itemTypes.skill as SwadeItem<'skill'>[]) {\n      const die = skill.system.die.sides;\n      let mod = skill.system.die.modifier;\n      if (includeModifiers) mod = skill.modifier;\n      const name = skill.name!.slugify({ strict: true });\n      let modString = mod !== 0 ? mod.signedString() : '';\n      if (mod) modString += `[${game.i18n.localize('SWADE.TraitMod')}]`;\n      out[name] = `1d${die}[${skill.name}]${modString}`;\n    }\n\n    return { ...out, ...super.getRollData() };\n  }\n\n  // specifying this to resolve depth issue\n  async refreshBennies(this: CreatureData, notify = true) {\n    if (notify && game.settings.get('swade', 'notifyBennies')) {\n      const message = await foundry.applications.handlebars.renderTemplate(\n        SWADE.bennies.templates.refresh,\n        {\n          target: this.parent,\n          speaker: getDocumentClass('ChatMessage').getSpeaker({\n            actor: this.parent,\n          }),\n        },\n      );\n      const chatData = { content: message };\n      getDocumentClass('ChatMessage').create(chatData);\n    }\n    let newValue = this.bennies.max;\n    const hardChoices = game.settings.get('swade', 'hardChoices');\n    if (hardChoices && this.wildcard && !this.parent.hasPlayerOwner) {\n      newValue = 0;\n    }\n    await this.parent.update({ 'system.bennies.value': newValue });\n\n    /**\n     * Called an actor refreshes their bennies\n     * @param {SwadeActor} actor            The Actor refreshing their bennies\n     */\n    Hooks.callAll('swadeRefreshBennies', this.parent);\n  }\n\n  #preparePace(this: CreatureData) {\n    const encumbered = this.encumbered;\n    const woundPenalties = this.parent?.calcWoundPenalties(false) ?? 0;\n    const enableWoundPace = game.settings.get('swade', 'enableWoundPace');\n\n    for (const key of PaceSchemaField.paceKeys) {\n      if (this.pace[key] === null) continue; //skip null values\n      let value = this.pace[key]!;\n      if (enableWoundPace) value += woundPenalties; //modify pace with wounds, core rules p. 95\n      if (encumbered) value -= 2; //subtract encumbrance, if necessary\n      this.pace[key] = Math.max(value, 1); //Clamp the pace so it's a minimum of 1\n    }\n\n    this.pace.default = this.pace[this.pace.base!];\n  }\n\n  protected override async _preUpdate(\n    changed: DeepPartial<\n      foundry.abstract.TypeDataModel.ParentAssignmentType<\n        CreatureData.Schema,\n        SwadeActor\n      >\n    >,\n    options: Actor.Database.PreUpdateOptions,\n    user: User.Implementation,\n  ) {\n    const allowed = await super._preUpdate(changed, options, user);\n    if (allowed === false) return false;\n    if (foundry.utils.hasProperty(changed, 'system.wounds.value')) {\n      foundry.utils.setProperty(\n        options,\n        'swade.wounds.value',\n        this.wounds.value,\n      );\n    }\n    if (foundry.utils.hasProperty(changed, 'system.fatigue.value')) {\n      foundry.utils.setProperty(\n        options,\n        'swade.fatigue.value',\n        this.fatigue.value,\n      );\n    }\n  }\n}\n\nexport { CreatureData };\n","import { ItemMetadata } from '../../../globals';\nimport { createEmbedElement } from '../../util';\nimport type { SkillData } from '../item';\nimport { CreatureData } from './base/creature';\nimport { WildCardDataSchema } from './base/creature.schemas';\n\ndeclare namespace CharacterData {\n  interface Schema extends CreatureData.Schema {}\n  interface BaseData extends CreatureData.BaseData {}\n  interface DerivedData extends CreatureData.DerivedData {}\n}\n\nexport class CharacterData extends CreatureData<\n  CharacterData.Schema & WildCardDataSchema,\n  CharacterData.BaseData,\n  CharacterData.DerivedData\n> {\n  static override defineSchema() {\n    return {\n      ...super.defineSchema(),\n      ...this.wildcardData(3, 3),\n    };\n  }\n\n  get wildcard() {\n    return true;\n  }\n\n  get #startingCurrency(): number {\n    return game.settings.get('swade', 'pcStartingCurrency') ?? 0;\n  }\n\n  async #addCoreSkills() {\n    //Get list of core skills from settings\n    const coreSkills = game.settings\n      .get('swade', 'coreSkills')\n      .split(',')\n      .map((s) => s.trim());\n\n    //only do this if this is a PC with no prior skills\n    if (coreSkills.length > 0 && this.parent.itemTypes.skill.length === 0) {\n      const coreSkillsPack = game.settings.get('swade', 'coreSkillsCompendium');\n      //Set compendium source, including a fallback to the system compendium of the required one cannot be found\n      const pack = (game.packs.get(coreSkillsPack) ??\n        game.packs.get('swade.skills')) as CompendiumCollection<ItemMetadata>;\n\n      if (!pack) return; //critical fallback point, simply skip core skills if neither pack can be located\n\n      const skillIndex = await pack.getDocuments();\n\n      // extract skill data\n      const skills: foundry.abstract.TypeDataModel.ParentAssignmentType<\n        SkillData.Schema,\n        Item<'skill'>\n      >[] = skillIndex\n        .filter((i) => i.type === 'skill')\n        .filter((i) => coreSkills.includes(i.name!))\n        .map((s) => s.toObject());\n\n      // Create core skills not in compendium (for custom skill names entered by the user)\n      for (const skillName of coreSkills) {\n        if (!skillIndex.find((skill) => skillName === skill.name)) {\n          skills.push({\n            name: skillName,\n            type: 'skill',\n            img: 'systems/swade/assets/icons/skill.svg',\n            system: { attribute: '' },\n          });\n        }\n      }\n\n      //set all the skills to be core skills\n      for (const skill of skills) {\n        if (skill.type === 'skill') skill.system.isCoreSkill = true;\n      }\n\n      //Add the Untrained skill\n      skills.push({\n        name: game.i18n.localize('SWADE.Unskilled'),\n        type: 'skill',\n        img: 'systems/swade/assets/icons/skill.svg',\n        system: {\n          attribute: '',\n          die: {\n            sides: 4,\n            modifier: -2,\n          },\n        },\n      });\n\n      //Add the items to the creation data\n      this.parent.updateSource({ items: skills });\n    }\n  }\n\n  protected override async _preCreate(\n    createData: foundry.abstract.TypeDataModel.ParentAssignmentType<\n      CharacterData.Schema,\n      Actor<'character'>\n    >,\n    options: Actor.Database.PreCreateOptions,\n    user: User.Implementation,\n  ) {\n    const allowed = await super._preCreate(createData, options, user);\n    if (allowed === false) return false;\n    this.parent.updateSource({\n      prototypeToken: {\n        actorLink: true,\n        disposition: CONST.TOKEN_DISPOSITIONS.FRIENDLY,\n      },\n    });\n\n    await this.#addCoreSkills();\n\n    //Handle starting currency\n    if (\n      !this.parent._stats.compendiumSource &&\n      !this.parent._stats.duplicateSource\n    ) {\n      this.updateSource({ 'details.currency': this.#startingCurrency });\n    }\n  }\n\n  declare enrichedBiography?: string;\n\n  override async toEmbed(\n    config: TextEditor.DocumentHTMLEmbedConfig,\n    options: TextEditor.EnrichmentOptions,\n  ): Promise<HTMLElement | HTMLCollection | null> {\n    config.caption = false;\n\n    // Enrich biography text\n    this.enrichedBiography =\n      await foundry.applications.ux.TextEditor.implementation.enrichHTML(\n        this.details.biography.value,\n        { ...options },\n      );\n\n    // Combine weapons and armor into a displayable gear array\n    const displayableGear = this.parent.itemTypes.armor.concat(\n      this.parent.itemTypes.weapon,\n    );\n    foundry.utils.setProperty(this, 'displayableGear', displayableGear);\n\n    // Enrich and strip ability descriptions to plain text\n    if (this.parent.itemTypes.ability) {\n      for (const ability of this.parent.itemTypes.ability) {\n        const enrichedHTML =\n          await foundry.applications.ux.TextEditor.implementation.enrichHTML(\n            ability.system.description,\n            { ...options },\n          );\n        ability.plainTextDescription = enrichedHTML.replace(/<[^>]*>/g, ''); // Strip HTML tags\n      }\n    }\n\n    // Create the embed element\n    const embed = await createEmbedElement(\n      this,\n      'systems/swade/templates/embeds/actor-embeds.hbs',\n      ['actor-embed', 'character'],\n    );\n\n    if (embed) {\n      Hooks.callAll('swadeActorEmbed', embed, this.parent, config, options);\n    }\n\n    return embed;\n  }\n}\n","import { constants } from '../../constants';\nimport type SwadeActor from '../../documents/actor/SwadeActor';\nimport {\n  DocumentFn,\n  ForeignDocumentUUIDField,\n} from '../fields/ForeignDocumentUUIDField';\nimport { SwadeBaseActorData } from './base';\n\nconst fields = foundry.data.fields;\n\ninterface GroupMember {\n  actor: SwadeActor<'character' | 'npc'> | null;\n}\n\ndeclare namespace GroupData {\n  interface Schema extends foundry.data.fields.DataSchema {\n    supplyLevels: ReturnType<(typeof GroupData)['makeSupplyLevelSchema']>;\n    members: foundry.data.fields.SetField<ForeignDocumentUUIDField>;\n    description: foundry.data.fields.HTMLField<{ textSearch: true }>;\n    locked: foundry.data.fields.BooleanField<{\n      gmOnly: true;\n      hint: string;\n      label: string;\n    }>;\n  }\n  type BaseData = {\n    members: Map<string, GroupMember>;\n  };\n  type DerivedData = {};\n}\n\nclass GroupData<\n  Schema extends GroupData.Schema = GroupData.Schema,\n  BaseData extends GroupData.BaseData = GroupData.BaseData,\n  DerivedData extends GroupData.DerivedData = GroupData.DerivedData,\n> extends SwadeBaseActorData<Schema, BaseData, DerivedData> {\n  static override defineSchema(): foundry.data.fields.DataSchema {\n    return {\n      ...super.defineSchema(),\n      members: new fields.SetField(\n        new ForeignDocumentUUIDField({\n          type: 'Actor',\n          validate: (\n            value: string,\n            _options: foundry.data.fields.DataField.ValidationOptions<foundry.data.fields.DataField>,\n          ) => {\n            if (value.startsWith('Compendium')) {\n              return new foundry.data.validation.DataModelValidationFailure({\n                unresolved: true,\n                invalidValue: value,\n                message: 'Groups cannot contain actors from Compendiums!',\n              });\n            }\n          },\n        }),\n        {\n          label: 'SWADE.Group.Sheet.Members.Header',\n          hint: 'SWADE.Group.Sheet.Members.Hint',\n        },\n      ),\n      description: new fields.HTMLField({ textSearch: true }),\n      locked: new fields.BooleanField({\n        gmOnly: true,\n        label: 'SWADE.Group.Sheet.Lock.Label',\n        hint: 'SWADE.Group.Sheet.Lock.Hint',\n      }),\n      supplyLevels: this.makeSupplyLevelSchema(),\n      currency: new fields.NumberField({\n        initial: 0,\n        integer: true,\n        label: 'SWADE.Currency',\n        hint: 'SWADE.Currency',\n      }), // New currency field\n    };\n  }\n\n  static #supplyLevelField = (label: string) =>\n    new fields.NumberField({\n      initial: constants.SUPPLY_LEVEL.HIGH,\n      integer: true,\n      choices: {\n        [constants.SUPPLY_LEVEL.OUT]: 'SWADE.Supplies.Level.Out',\n        [constants.SUPPLY_LEVEL.LOW]: 'SWADE.Supplies.Level.Low',\n        [constants.SUPPLY_LEVEL.HIGH]: 'SWADE.Supplies.Level.High',\n        [constants.SUPPLY_LEVEL.VERY_HIGH]: 'SWADE.Supplies.Level.VeryHigh',\n      },\n      label,\n    });\n\n  private static makeSupplyLevelSchema = () =>\n    new fields.SchemaField(\n      {\n        ammo: this.#supplyLevelField('SWADE.Supplies.Ammo.Label'),\n        fuel: this.#supplyLevelField('SWADE.Supplies.Fuel.Label'),\n        food: this.#supplyLevelField('SWADE.Supplies.Food.Label'),\n        supply: this.#supplyLevelField('SWADE.Supplies.Supply.Label'),\n      },\n      { label: 'SWADE.Supplies.Label' },\n    );\n\n  override prepareBaseData() {\n    super.prepareBaseData();\n    this.members = new Map<string, GroupMember>(\n      this.members.map<[string, GroupMember]>(\n        (fn: DocumentFn<SwadeActor<'character' | 'npc'>>) => {\n          const result = fn();\n          if (typeof result === 'string') return [result, { actor: null }];\n          return [result.uuid as string, { actor: result }];\n        },\n      ),\n    );\n  }\n\n  get wildcard() {\n    return false;\n  }\n}\n\nexport { GroupData, GroupMember };\n","import { DeepPartial } from 'fvtt-types/utils';\nimport { createEmbedElement } from '../../util';\nimport { CreatureData } from './base/creature';\nimport { WildCardDataSchema } from './base/creature.schemas';\n\nconst fields = foundry.data.fields;\n\ndeclare namespace NpcData {\n  interface Schema extends CreatureData.Schema {\n    wildcard: foundry.data.fields.BooleanField<{\n      initial: false;\n      label: string;\n    }>;\n  }\n  interface BaseData extends CreatureData.BaseData {}\n  interface DerivedData extends CreatureData.DerivedData {}\n}\n\nexport class NpcData extends CreatureData<\n  NpcData.Schema & WildCardDataSchema,\n  NpcData.BaseData,\n  NpcData.DerivedData\n> {\n  static override defineSchema(): NpcData.Schema {\n    return {\n      ...super.defineSchema(),\n      ...this.wildcardData(2, 0),\n      wildcard: new fields.BooleanField({\n        initial: false,\n        label: 'SWADE.WildCard',\n      }),\n    };\n  }\n\n  get #startingCurrency(): number {\n    return game.settings.get('swade', 'npcStartingCurrency') ?? 0;\n  }\n\n  protected override async _preCreate(\n    createData: foundry.abstract.TypeDataModel.ParentAssignmentType<\n      NpcData.Schema,\n      Actor<'npc'>\n    >,\n    options: Actor.Database.PreCreateOptions,\n    user: User.Implementation,\n  ) {\n    const allowed = await super._preCreate(createData, options, user);\n    if (allowed === false) return false;\n\n    //Handle starting currency\n    if (\n      !this.parent._stats.compendiumSource &&\n      !this.parent._stats.duplicateSource\n    ) {\n      this.updateSource({ 'details.currency': this.#startingCurrency });\n    }\n  }\n\n  protected override _onUpdate(\n    changed: DeepPartial<\n      foundry.abstract.TypeDataModel.ParentAssignmentType<\n        NpcData.Schema,\n        Actor<'npc'>\n      >\n    >,\n    options: Actor.Database.OnUpdateOperation,\n    userId: string,\n  ) {\n    super._onUpdate(changed, options, userId);\n    ui.actors?.render(true);\n  }\n\n  declare enrichedBiography?: string;\n\n  override async toEmbed(\n    config: TextEditor.DocumentHTMLEmbedConfig,\n    options: TextEditor.EnrichmentOptions,\n  ): Promise<HTMLElement | HTMLCollection | null> {\n    config.caption = false;\n\n    // Enrich biography text\n    this.enrichedBiography =\n      await foundry.applications.ux.TextEditor.implementation.enrichHTML(\n        this.details.biography.value,\n        { ...options },\n      );\n\n    // Combine weapons and armor into a displayable gear array\n    const displayableGear = this.parent.itemTypes.armor.concat(\n      this.parent.itemTypes.weapon,\n    );\n    foundry.utils.setProperty(this, 'displayableGear', displayableGear);\n\n    // Enrich and strip ability descriptions to plain text\n    if (this.parent.itemTypes.ability) {\n      for (const ability of this.parent.itemTypes.ability) {\n        const enrichedHTML =\n          await foundry.applications.ux.TextEditor.implementation.enrichHTML(\n            ability.system.description,\n            { ...options },\n          );\n        ability.plainTextDescription = enrichedHTML.replace(/<[^>]*>/g, ''); // Strip HTML tags\n      }\n    }\n\n    // Create the embed element\n    const embed = await createEmbedElement(\n      this,\n      'systems/swade/templates/embeds/actor-embeds.hbs',\n      ['actor-embed', 'npc'],\n    );\n\n    if (embed) {\n      Hooks.callAll('swadeActorEmbed', embed, this.parent, config, options);\n    }\n\n    return embed;\n  }\n}\n","import type { AnyObject, ValueOf } from 'fvtt-types/utils';\nimport {\n  DerivedModifier,\n  RollModifier,\n} from '../../../interfaces/additional.interface';\nimport { SWADE } from '../../config';\nimport { constants } from '../../constants';\nimport type SwadeActor from '../../documents/actor/SwadeActor';\nimport SwadeItem from '../../documents/item/SwadeItem';\nimport { createEmbedElement } from '../../util';\nimport { LocalDocumentField } from '../fields/LocalDocumentField';\nimport { MemberField } from '../fields/MemberField';\nimport { ShieldData, WeaponData } from '../item';\nimport { boundTraitDie, makeTraitDiceFields } from '../shared';\nimport * as migrations from './_migration';\nimport { SwadeBaseActorData, TokenSize } from './base/base';\n\ndeclare namespace VehicleData {\n  interface Schema\n    extends SwadeBaseActorData.Schema,\n      ReturnType<typeof createVehicleSchema> {}\n  interface BaseData {\n    attributes: {\n      agility: {\n        effects: Array<RollModifier>;\n      };\n      smarts: {\n        effects: Array<RollModifier>;\n      };\n      spirit: {\n        effects: Array<RollModifier>;\n      };\n      strength: {\n        effects: Array<RollModifier>;\n      };\n      vigor: {\n        effects: Array<RollModifier>;\n      };\n    };\n    stats: {\n      globalMods: {\n        attack: Array<DerivedModifier>;\n        damage: Array<DerivedModifier>;\n        ap: Array<DerivedModifier>;\n        agility: Array<DerivedModifier>;\n        smarts: Array<DerivedModifier>;\n        spirit: Array<DerivedModifier>;\n        strength: Array<DerivedModifier>;\n        vigor: Array<DerivedModifier>;\n        trait: Array<DerivedModifier>;\n      };\n      parry: {\n        sources: Array<DerivedModifier>;\n        effects: Array<DerivedModifier>;\n      };\n    };\n    cargo: {\n      value: number;\n    };\n    mods: {\n      value: number;\n    };\n    crew: {\n      required: number;\n      members: Array<CrewMember>;\n    };\n  }\n\n  interface DerivedData {\n    scale: number;\n    cargo: {\n      value: number;\n      items: SwadeItem<CargoItemType>[];\n    };\n  }\n\n  interface CrewMember {\n    uuid: string;\n    actor: SwadeActor<VehicleData.CrewActorType> | null;\n    role: ValueOf<typeof constants.CREW_ROLE>;\n    weapons: SwadeItem<'weapon'>[];\n    sort: number;\n  }\n  type CrewActorType = 'character' | 'npc';\n  type CargoItemType = 'gear' | 'weapon' | 'armor' | 'shield' | 'consumable';\n}\n\nfunction validateCrewMember(\n  value: any,\n  _options: foundry.data.fields.DataField.ValidationOptions<foundry.data.fields.DataField>,\n) {\n  const actor = fromUuidSync(value.uuid);\n  // Optional chaining `actor.type` so that on game load, when `fromUuidSync` can only return null, this doesn't throw.\n  if (['vehicle', 'group'].includes(actor?.type)) {\n    return new foundry.data.validation.DataModelValidationFailure({\n      unresolved: true,\n      invalidValue: value,\n      message: `Cannot contain an actor of type ${actor.type}!`,\n    });\n  }\n}\n\nfunction createVehicleSchema() {\n  const fields = foundry.data.fields;\n  return {\n    attributes: new fields.SchemaField(\n      {\n        // Found in HC Haunted Car\n        agility: new fields.SchemaField(\n          {\n            ...makeTraitDiceFields(),\n            enabled: new fields.BooleanField({\n              label: 'SWADE.VehicleAttributes.Agility',\n            }),\n          },\n          {\n            label: 'SWADE.AttrAgi',\n          },\n        ),\n        // HC Haunted Car & Sentient Vehicles\n        smarts: new fields.SchemaField(\n          {\n            ...makeTraitDiceFields(),\n            enabled: new fields.BooleanField({\n              label: 'SWADE.VehicleAttributes.Smarts',\n            }),\n          },\n          { label: 'SWADE.AttrSma' },\n        ),\n        // HC Haunted Car & Sentient Vehicles\n        spirit: new fields.SchemaField(\n          {\n            ...makeTraitDiceFields(),\n            enabled: new fields.BooleanField({\n              label: 'SWADE.VehicleAttributes.Spirit',\n            }),\n          },\n          { label: 'SWADE.AttrSpr' },\n        ),\n        strength: new fields.SchemaField(\n          {\n            ...makeTraitDiceFields(),\n            encumbranceSteps: new fields.NumberField({\n              initial: 0,\n              integer: true,\n              label: 'SWADE.EncumbranceSteps',\n            }),\n            enabled: new fields.BooleanField({\n              label: 'SWADE.VehicleAttributes.Strength',\n            }),\n          },\n          { label: 'SWADE.AttrStr' },\n        ),\n        vigor: new fields.SchemaField(\n          {\n            ...makeTraitDiceFields(),\n            enabled: new fields.BooleanField({\n              label: 'SWADE.VehicleAttributes.Vigor',\n            }),\n          },\n          { label: 'SWADE.AttrVig' },\n        ),\n      },\n      { label: 'SWADE.Attributes' },\n    ),\n    size: new fields.NumberField({\n      initial: 0,\n      integer: true,\n      nullable: false,\n      label: 'SWADE.Size',\n    }),\n    scale: new fields.NumberField({\n      initial: 0,\n      integer: true,\n      nullable: false,\n      label: 'SWADE.Scale',\n    }),\n    classification: new fields.StringField({\n      initial: '',\n      textSearch: true,\n      label: 'SWADE.Class',\n    }),\n    handling: new fields.NumberField({\n      initial: 0,\n      integer: true,\n      label: 'SWADE.Handling',\n    }),\n    cost: new fields.NumberField({ initial: 0, label: 'SWADE.Price' }),\n    topspeed: new fields.SchemaField(\n      {\n        value: new fields.NumberField({\n          initial: 0,\n          min: 0,\n          label: 'SWADE.Topspeed',\n        }),\n        unit: new fields.StringField({ label: 'SWADE.SpeedUnit' }),\n      },\n      { label: 'SWADE.Topspeed' },\n    ),\n    description: new fields.HTMLField({\n      initial: '',\n      textSearch: true,\n      label: 'SWADE.Desc',\n    }),\n    toughness: new fields.SchemaField(\n      {\n        total: new fields.NumberField({ initial: 0, label: 'SWADE.Tough' }),\n        armor: new fields.NumberField({ initial: 0, label: 'SWADE.Armor' }),\n      },\n      { label: 'SWADE.Tough' },\n    ),\n    wounds: new fields.SchemaField(\n      {\n        value: new fields.NumberField({\n          initial: 0,\n          min: 0,\n          integer: true,\n          label: 'SWADE.Wounds',\n        }),\n        max: new fields.NumberField({\n          initial: 3,\n          min: 0,\n          integer: true,\n          label: 'SWADE.WoundsMax',\n        }),\n        ignored: new fields.NumberField({\n          initial: 0,\n          integer: true,\n          label: 'SWADE.IgnWounds',\n        }),\n      },\n      { label: 'SWADE.Wounds' },\n    ),\n    stats: new fields.SchemaField({\n      parry: new fields.SchemaField(\n        {\n          value: new fields.NumberField({\n            initial: 0,\n            integer: true,\n            label: 'SWADE.Parry',\n          }),\n          shield: new fields.NumberField({\n            initial: 0,\n            integer: true,\n            label: 'SWADE.ShieldBonus',\n          }),\n          modifier: new fields.NumberField({\n            initial: 0,\n            integer: true,\n            required: false,\n            label: 'SWADE.Modifier',\n          }),\n        },\n        { label: 'SWADE.Parry' },\n      ),\n    }),\n    energy: new fields.SchemaField(\n      {\n        value: new fields.NumberField({\n          initial: 0,\n          integer: true,\n          min: 0,\n          label: 'SWADE.Energy.Value',\n        }),\n        max: new fields.NumberField({\n          initial: 0,\n          integer: true,\n          min: 0,\n          label: 'SWADE.Energy.Max',\n        }),\n        enabled: new fields.BooleanField({ label: 'SWADE.Energy.Enable' }),\n      },\n      { label: 'SWADE.Energy.Label' },\n    ),\n    crew: new fields.SchemaField(\n      {\n        required: new fields.SchemaField(\n          {\n            max: new fields.NumberField({\n              initial: 1,\n              integer: true,\n              min: 0,\n              label: 'SWADE.MaxLabel',\n            }),\n          },\n          { label: 'SWADE.RequiredCrew' },\n        ),\n        optional: new fields.SchemaField(\n          {\n            value: new fields.NumberField({\n              initial: 0,\n              integer: true,\n              min: 0,\n              label: 'SWADE.Value',\n            }),\n            max: new fields.NumberField({\n              initial: 0,\n              integer: true,\n              min: 0,\n              label: 'SWADE.MaxLabel',\n            }),\n          },\n          { label: 'SWADE.Passengers' },\n        ),\n        members: new fields.ArrayField(\n          new MemberField(\n            {\n              role: new fields.StringField({\n                initial: constants.CREW_ROLE.GUNNER,\n                choices: {\n                  [constants.CREW_ROLE.OPERATOR]:\n                    'SWADE.Vehicle.Crew.Roles.Operator',\n                  [constants.CREW_ROLE.GUNNER]:\n                    'SWADE.Vehicle.Crew.Roles.Gunner',\n                  [constants.CREW_ROLE.OTHER]: 'SWADE.Vehicle.Crew.Roles.Other',\n                },\n                label: 'SWADE.Vehicle.Crew.Role',\n              }),\n              sort: new fields.IntegerSortField(),\n              weapons: new fields.ArrayField(\n                new LocalDocumentField(SwadeItem, { types: ['weapon'] }),\n              ),\n            },\n            { validate: validateCrewMember },\n          ),\n        ),\n      },\n      { label: 'SWADE.Crew' },\n    ),\n    driver: new fields.SchemaField(\n      {\n        skill: new fields.StringField({\n          initial: '',\n          label: 'SWADE.OpSkill',\n        }),\n        skillAlternative: new fields.StringField({\n          initial: '',\n          label: 'SWADE.AltSkill',\n        }),\n      },\n      { label: 'SWADE.Operator' },\n    ),\n    status: new fields.SchemaField(\n      {\n        isOutOfControl: new fields.BooleanField({\n          label: 'SWADE.OutOfControl',\n        }),\n        isWrecked: new fields.BooleanField({ label: 'SWADE.Wrecked' }),\n        isDistracted: new fields.BooleanField({\n          label: 'SWADE.Distr',\n        }),\n        isVulnerable: new fields.BooleanField({\n          label: 'SWADE.Vuln',\n        }),\n      },\n      { label: 'SWADE.Status' },\n    ),\n    details: new fields.SchemaField(\n      {\n        autoCalcParry: new fields.BooleanField({\n          initial: true,\n          hint: 'SWADE.AutoCalcParry',\n        }),\n      },\n      { label: 'SWADE.Details' },\n    ),\n    initiative: new fields.SchemaField(\n      {\n        hasHesitant: new fields.BooleanField({ label: 'SWADE.Hesitant' }),\n        hasLevelHeaded: new fields.BooleanField({\n          label: 'SWADE.LevelHeaded',\n        }),\n        hasImpLevelHeaded: new fields.BooleanField({\n          label: 'SWADE.ImprovedLevelHeaded',\n        }),\n        hasQuick: new fields.BooleanField({ label: 'SWADE.Quick' }),\n      },\n      { label: 'SWADE.Init' },\n    ),\n    cargo: new fields.SchemaField({\n      max: new fields.NumberField({ initial: 0, label: 'SWADE.MaxCargo' }),\n    }),\n    mods: new fields.SchemaField({\n      max: new fields.NumberField({ initial: 0, label: 'SWADE.MaxMods' }),\n    }),\n  };\n}\n\nclass VehicleData<\n  Schema extends VehicleData.Schema = VehicleData.Schema,\n  BaseData extends VehicleData.BaseData = VehicleData.BaseData,\n  DerivedData extends VehicleData.DerivedData = VehicleData.DerivedData,\n> extends SwadeBaseActorData<Schema, BaseData, DerivedData> {\n  declare enrichedDescription?: string;\n\n  static override defineSchema() {\n    return {\n      ...super.defineSchema(),\n      ...createVehicleSchema(),\n    };\n  }\n\n  static override migrateData(source: AnyObject): AnyObject {\n    migrations.splitTopSpeed(source);\n    migrations.shiftCargoModsMax(source);\n    migrations.migrateDriver(source);\n    return super.migrateData(source);\n  }\n\n  get encumbered() {\n    return false;\n  }\n\n  get wildcard() {\n    return false;\n  }\n\n  override get tokenSize(): TokenSize {\n    const value = Math.max(1, Math.floor(this.size! / 4) + 1);\n    return { width: value, height: value };\n  }\n\n  get operators(): (SwadeActor<VehicleData.CrewActorType> | null)[] {\n    return this.crew.members\n      .filter(\n        (m: VehicleData.CrewMember) =>\n          !!m.actor && m.role === constants.CREW_ROLE.OPERATOR,\n      )\n      .map((m: VehicleData.CrewMember) => m.actor);\n  }\n\n  get operator(): SwadeActor<VehicleData.CrewActorType> | null {\n    return this.operators[0] ?? null;\n  }\n\n  async rollManeuverCheck(\n    actor: SwadeActor<VehicleData.CrewActorType> | null = this.operator,\n  ) {\n    //Return early if no driver was found\n    if (!actor) return;\n\n    //Get skillname\n    const skillName = this.driver.skill || this.driver.skillAlternative;\n\n    // Calculate the final handling\n    const handling = this.handling!;\n    const wounds = this.parent.calcWoundPenalties();\n\n    //Handling is capped at a certain penalty\n    const totalHandling = Math.max(\n      handling + wounds,\n      SWADE.vehicles.maxHandlingPenalty,\n    );\n\n    //Find the operating skill\n    const skill = actor.itemTypes.skill.find((i) => i.name === skillName);\n    return actor.rollSkill(skill?.id, {\n      additionalMods: [\n        {\n          label: game.i18n.localize('SWADE.Handling'),\n          value: totalHandling,\n        },\n      ],\n    });\n  }\n\n  override prepareBaseData(this: VehicleData<VehicleData.Schema>) {\n    super.prepareBaseData();\n    //setup the global modifier container object\n    this.stats.globalMods = {\n      attack: new Array<DerivedModifier>(),\n      damage: new Array<DerivedModifier>(),\n      ap: new Array<DerivedModifier>(),\n      agility: new Array<DerivedModifier>(),\n      smarts: new Array<DerivedModifier>(),\n      spirit: new Array<DerivedModifier>(),\n      strength: new Array<DerivedModifier>(),\n      vigor: new Array<DerivedModifier>(),\n      trait: new Array<DerivedModifier>(),\n    };\n    this.stats.parry.sources = new Array<DerivedModifier>();\n    this.stats.parry.effects = new Array<DerivedModifier>();\n\n    //parry autocalc\n    if (this.details.autoCalcParry) this.stats.parry.value = 0;\n\n    for (const attribute of Object.values(this.attributes)) {\n      attribute.effects = new Array<RollModifier>();\n    }\n    this.mods.value = 0;\n    this.cargo.value = 0;\n    this.crew.members = this.crew.members\n      .sort((a, b) => a.sort - b.sort)\n      .map(this._mapCrewMember.bind(this));\n    this.crew.required.value = this.crew.members.length;\n  }\n\n  override prepareDerivedData(this: VehicleData<VehicleData.Schema>) {\n    super.prepareDerivedData();\n    //die type bounding for attributes\n    for (const key in this.attributes) {\n      const attribute = this.attributes[key];\n      attribute.die = boundTraitDie(attribute.die);\n      attribute['wild-die'].sides = Math.min(attribute['wild-die'].sides, 12);\n    }\n\n    this.scale = this.parent.calcScale(this.size!);\n    this.mods.value += this.parent.items.reduce((total: number, i) => {\n      // probably need to check for equip status too\n      if (\n        'mods' in i.system &&\n        i.system.isVehicular &&\n        i.system.equipStatus > constants.EQUIP_STATE.CARRIED\n      ) {\n        return total + (i.system.mods ?? 0);\n      }\n      return total;\n    }, 0);\n    this.cargo.items = this.#prepareCargo();\n    this.cargo.value = this.cargo.items.reduce(\n      (acc, item: SwadeItem<VehicleData.CargoItemType>) => {\n        return acc + (item.system.quantity ?? 0) * (item.system.weight ?? 0);\n      },\n      0,\n    );\n\n    if (this.details.autoCalcParry)\n      this.stats.parry.value = this.parent.calcParry();\n  }\n\n  override getParryBaseSkill() {\n    const skillCandidates = this.operator?.itemTypes.skill ?? [];\n    return (skillCandidates.find((s) => s.name === this.driver.skill) ||\n      skillCandidates.find((s) => s.name === this.driver.skillAlternative)) as\n      | SwadeItem<'skill'>\n      | undefined;\n  }\n\n  calcParry(): number {\n    /** base value of all parry calculations */\n    const parryBaseValue = 2;\n\n    let parryTotal = 0;\n    const sources: DerivedModifier[] = this.stats.parry.sources;\n    const parryBaseSkill = this.getParryBaseSkill();\n\n    const skillDie = parryBaseSkill?.system?.die.sides ?? 0;\n    const skillMod = parryBaseSkill?.system?.die.modifier ?? 0;\n\n    //base parry calculation\n    parryTotal = Math.round(skillDie / 2) + parryBaseValue;\n\n    //add modifier if the skill die is 12\n    if (skillDie >= 12) {\n      parryTotal += Math.floor(skillMod / 2);\n    }\n\n    if (parryBaseSkill) {\n      sources.push({\n        label: foundry.utils.getProperty(parryBaseSkill, 'name'),\n        value: parryTotal,\n      });\n    } else {\n      sources.push({\n        label: game.i18n.localize('SWADE.BaseParry'),\n        value: parryBaseValue,\n      });\n    }\n\n    this.stats.parry.shield = 0;\n\n    const itemTypes = this.parent.itemTypes;\n\n    //add shields\n    for (const shield of itemTypes.shield) {\n      if (!(shield.system instanceof ShieldData)) continue;\n      if (shield.system.equipStatus === constants.EQUIP_STATE.EQUIPPED) {\n        const shieldParry = shield.system.parry ?? 0;\n        parryTotal += shieldParry;\n        this.stats.parry.shield += shieldParry;\n        sources.push({\n          label: shield.name,\n          value: shieldParry,\n        });\n      }\n    }\n\n    //add equipped weapons\n    const ambidextrous = this.parent.getFlag('swade', 'ambidextrous') as\n      | undefined\n      | boolean;\n    for (const weapon of itemTypes.weapon) {\n      if (!(weapon.system instanceof WeaponData)) continue;\n      let parryBonus = 0;\n\n      if (Number(weapon.system.equipStatus) >= constants.EQUIP_STATE.OFF_HAND) {\n        // only add parry bonus if it's in the main hand or actor is ambidextrous\n        if (\n          Number(weapon.system.equipStatus) >= constants.EQUIP_STATE.EQUIPPED ||\n          ambidextrous\n        )\n          parryBonus += weapon.system.parry ?? 0;\n\n        //add trademark weapon bonus\n        parryBonus += Number(weapon.system.trademark);\n      }\n      if (parryBonus !== 0) {\n        sources.push({\n          label: weapon.name,\n          value: parryBonus,\n        });\n      }\n      parryTotal += parryBonus;\n    }\n\n    return parryTotal;\n  }\n\n  getCrewMemberForWeapon(\n    weapon: SwadeItem<'weapon'>,\n  ): SwadeActor<VehicleData.CrewActorType> | undefined {\n    if (weapon.type !== 'weapon') return;\n    const user = this.crew.members\n      .filter((m: VehicleData.CrewMember) =>\n        m.weapons.map((i) => i.id).includes(weapon.id),\n      )\n      .find(\n        (m: VehicleData.CrewMember) =>\n          m.actor?.type === 'npc' || m.actor?.isOwner,\n      )?.actor;\n    return user;\n  }\n\n  override async toEmbed(\n    this: VehicleData,\n    config: TextEditor.DocumentHTMLEmbedConfig,\n    options: TextEditor.EnrichmentOptions,\n  ): Promise<HTMLElement | HTMLCollection | null> {\n    config.caption = false;\n    this.enrichedDescription =\n      await foundry.applications.ux.TextEditor.implementation.enrichHTML(\n        this.description,\n        {\n          ...options,\n        },\n      );\n    const embed = await createEmbedElement(\n      this,\n      'systems/swade/templates/embeds/vehicle-embeds.hbs',\n      ['actor-embed', 'vehicle'],\n    );\n\n    if (embed) {\n      Hooks.callAll('swadeActorEmbed', embed, this.parent, config, options);\n    }\n\n    return embed;\n  }\n\n  override getRollData(\n    this: VehicleData<VehicleData.Schema>,\n  ): Record<string, number | string> {\n    const out: Record<string, number | string> = {\n      wounds: this.wounds.value || 0,\n      topspeed: this.topspeed.value || 0,\n    };\n    return { ...out, ...super.getRollData() };\n  }\n\n  protected _mapCrewMember(member: any): VehicleData.CrewMember {\n    const actor = member.uuid;\n    if (typeof actor === 'string') return { ...member, actor: null };\n    const weapons = member.weapons.map((fn) => fn());\n    return {\n      ...member,\n      name: actor.token?.name ?? actor.name,\n      img: actor.token?.texture?.src ?? actor.img,\n      uuid: actor.uuid,\n      actor,\n      weapons,\n    };\n  }\n\n  #prepareCargo(): SwadeItem<VehicleData.CargoItemType>[] {\n    const itemTypes = this.parent.itemTypes;\n    const notMod = (i: SwadeItem<'gear' | 'weapon'>) =>\n      !i.system.isVehicular ||\n      i.system.equipStatus! < constants.EQUIP_STATE.EQUIPPED;\n    return [\n      ...itemTypes.gear.filter(notMod),\n      ...itemTypes.weapon.filter(notMod),\n      ...itemTypes.armor,\n      ...itemTypes.shield,\n      ...itemTypes.consumable,\n    ];\n  }\n}\n\nexport { VehicleData };\n","import { CharacterData } from './character';\r\nimport { GroupData } from './group';\r\nimport { NpcData } from './npc';\r\nimport { VehicleData } from './vehicle';\r\n\r\nexport * as base from './base';\r\nexport { CharacterData } from './character';\r\nexport { GroupData } from './group';\r\nexport { NpcData } from './npc';\r\nexport { VehicleData } from './vehicle';\r\n\r\nexport const config = {\r\n  character: CharacterData,\r\n  npc: NpcData,\r\n  vehicle: VehicleData,\r\n  group: GroupData,\r\n};\r\n\r\ndeclare global {\r\n  interface DataModelConfig {\r\n    Actor: {\r\n      character: typeof CharacterData;\r\n      npc: typeof NpcData;\r\n      vehicle: typeof VehicleData;\r\n      group: typeof GroupData;\r\n    };\r\n  }\r\n}\r\n","import { AnyObject, NullishProps, ValueOf } from 'fvtt-types/utils';\nimport { Attribute } from '../../../globals';\nimport IRollOptions from '../../../interfaces/RollOptions.interface';\nimport {\n  DerivedModifier,\n  RollModifier,\n} from '../../../interfaces/additional.interface';\nimport { Logger } from '../../Logger';\nimport { RollDialog, RollDialogContext } from '../../apps/RollDialog';\nimport { SWADE } from '../../config';\nimport { constants } from '../../constants';\nimport {\n  CharacterData,\n  GroupData,\n  NpcData,\n  VehicleData,\n} from '../../data/actor';\nimport { CreatureData, SwadeBaseActorData } from '../../data/actor/base';\nimport { TokenSize } from '../../data/actor/base/base';\nimport { PaceSchemaField } from '../../data/fields/PaceSchemaField';\nimport {\n  AbilityData,\n  ArmorData,\n  ConsumableData,\n  EdgeData,\n  GearData,\n  ShieldData,\n  SkillData,\n  WeaponData,\n} from '../../data/item';\nimport { SwadeRoll } from '../../dice/SwadeRoll';\nimport { TraitRoll } from '../../dice/TraitRoll';\nimport WildDie from '../../dice/WildDie';\nimport {\n  getStatusEffectDataById,\n  mapRange,\n  modifierReducer,\n  shouldShowBennyAnimation,\n} from '../../util';\nimport SwadeCombatant from '../combat/SwadeCombatant';\nimport SwadeItem from '../item/SwadeItem';\nimport { TraitDie } from './SwadeActor.interface';\n\ndeclare global {\n  interface DocumentClassConfig {\n    Actor: typeof SwadeActor;\n  }\n  interface FlagConfig {\n    swade: {\n      ambidextrous?: boolean;\n      hardy?: boolean;\n      ignoreBleedOut?: boolean;\n      wildAttackDamage?: string | number;\n      jokerBonus?: string | number;\n      hiddenActionOverride?: boolean;\n    };\n  }\n\n  namespace Actor {\n    namespace Database {\n      interface Update {\n        swade?: {\n          wounds?: {\n            value?: number;\n          };\n          fatigue?: {\n            value?: number;\n          };\n        };\n      }\n    }\n  }\n}\n\nclass SwadeActor<\n  Subtype extends Actor.SubType = Actor.SubType,\n> extends Actor<Subtype> {\n  static getWoundsColor(current: number, max: number) {\n    const minDegrees = 30;\n    const maxDegrees = 120;\n    //get the degrees on the HSV wheel, going from 30° (greenish-yellow) to 120° (green)\n    const degrees = mapRange(current, 0, max, minDegrees, maxDegrees);\n    //invert the degrees and map them from 0 to a third\n    const hue = mapRange(maxDegrees - degrees, 0, maxDegrees, 0, 1 / 3);\n    //get a usable color value with 100% saturation and 90% value\n    return Color.fromHSV([hue, 1, 0.9]);\n  }\n\n  static getFatigueColor(current: number, max: number) {\n    //get the angle (200°) and map it into the proper range\n    const hue = mapRange(200, 0, 360, 0, 1);\n    //get the value from the parameter\n    const value = mapRange(current, 0, max, 0, 1);\n    return Color.fromHSV([hue, value, 0.75]);\n  }\n\n  static override migrateData(data: Actor.CreateData & AnyObject) {\n    super.migrateData(data);\n    if (data.flags?.swade?.auras) {\n      data.system ??= {};\n      data.system.auras = data.flags.swade.auras;\n      delete data.flags.swade.auras;\n    }\n    return data;\n  }\n\n  constructor(\n    data: Actor.CreateData,\n    ctx?: foundry.abstract.Document.ConstructionContext<TokenDocument>,\n  ) {\n    if (game.swade.ready && ctx?.pack && data._id) {\n      const art = game.swade.compendiumArt.map.get(\n        `Compendium.${ctx.pack}.${data._id}`,\n      );\n      if (art) {\n        data.img = art.actor;\n        const tokenArt =\n          typeof art.token === 'string'\n            ? { texture: { src: art.token } }\n            : {\n                texture: {\n                  src: art.token.img,\n                  scaleX: art.token.scale,\n                  scaleY: art.token.scale,\n                },\n              };\n        data.prototypeToken = foundry.utils.mergeObject(\n          data.prototypeToken ?? {},\n          tokenArt,\n        );\n      }\n    }\n    super(data, ctx);\n  }\n\n  // Does not appear to work properly\n  // isType<TypeName extends SystemActorTypes>(\n  //   type: TypeName,\n  // ): this is SwadeActor<TypeName> {\n  //   return type === this.type;\n  // }\n\n  /** @returns true when the actor is a Wild Card */\n  get isWildcard(): boolean {\n    return !!this.system.wildcard;\n  }\n\n  /** @returns true when the actor has an arcane background or a special ability that grants powers. */\n  get hasArcaneBackground(): boolean {\n    return !!this.items.find(\n      (i: SwadeItem<'edge' | 'ability' | 'power'>) =>\n        (i.system instanceof EdgeData && i.system.isArcaneBackground) ||\n        (i.system instanceof AbilityData && i.system.grantsPowers),\n    );\n  }\n\n  /** @returns whether the actor has any power items at all */\n  get hasPowers(): boolean {\n    return !!this.items.find((i) => i.type === 'power');\n  }\n\n  get tokenSize(): TokenSize {\n    if ('tokenSize' in this.system) return this.system.tokenSize;\n    return { height: 1, width: 1 };\n  }\n\n  /** @returns true when the actor is currently in combat and has drawn a joker */\n  get hasJoker(): boolean {\n    const combatant = this.getCombatant(game.combats?.active);\n    return (combatant?.hasJoker as boolean) ?? false;\n  }\n\n  get bennies(): number {\n    if (!('bennies' in this.system)) return 0;\n    return this.system.bennies.value!;\n  }\n\n  /** @returns an object that contains booleans which denote the current status of the actor */\n  get status() {\n    if (!('status' in this.system)) return {};\n    return this.system.status;\n  }\n\n  get armorPerLocation(): Record<ArmorLocation, number> {\n    return {\n      head: this._getArmorForLocation(constants.ARMOR_LOCATIONS.HEAD),\n      torso: this._getArmorForLocation(constants.ARMOR_LOCATIONS.TORSO),\n      arms: this._getArmorForLocation(constants.ARMOR_LOCATIONS.ARMS),\n      legs: this._getArmorForLocation(constants.ARMOR_LOCATIONS.LEGS),\n    };\n  }\n\n  get hasHeavyArmor(): boolean {\n    return this.itemTypes.armor.some(\n      (a) =>\n        !!foundry.utils.getProperty(a, 'system.isHeavyArmor') &&\n        foundry.utils.getProperty(a, 'system.equipStatus') >=\n          constants.EQUIP_STATE.EQUIPPED,\n    );\n  }\n\n  get isUnarmored(): boolean {\n    return this.itemTypes.armor.every(\n      (a) =>\n        foundry.utils.getProperty(a, 'system.equipStatus') <\n        constants.EQUIP_STATE.EQUIPPED,\n    );\n  }\n\n  get ancestry(): SwadeItem | undefined {\n    if (this.system instanceof VehicleData || this.system instanceof GroupData)\n      return;\n    const ancestries = this.items.filter((i) => i.type === 'ancestry');\n    if (ancestries.length > 1) {\n      Logger.warn(\n        `Actor ${this.name} (${this.id}) has more than one ancestry!`,\n      );\n    }\n    return ancestries[0];\n  }\n\n  get archetype(): SwadeItem | undefined {\n    if (this.system instanceof VehicleData || this.system instanceof GroupData)\n      return;\n    const archetypes = this.items.filter(\n      (i) =>\n        i.type === 'ability' &&\n        (i as SwadeItem<'ability'>).system.subtype === 'archetype',\n    );\n    if (archetypes.length > 1) {\n      Logger.warn(\n        `Actor ${this.name} (${this.id}) has more than one archetype!`,\n      );\n    }\n    return archetypes[0];\n  }\n\n  override get itemTypes() {\n    const types = super.itemTypes;\n    //sort the items before returning them\n    for (const type in types) {\n      types[type].sort((a, b) => a.sort - b.sort);\n    }\n    return types;\n  }\n\n  /**\n   * Helper property to prevent double-application of modifiers\n   */\n  declare _embeddedPreparation: boolean | undefined;\n\n  override prepareEmbeddedDocuments() {\n    this._embeddedPreparation = true;\n    if (this.system instanceof SwadeBaseActorData) {\n      this.system.prepareEmbeddedDocuments();\n    } else super.prepareEmbeddedDocuments();\n    delete this._embeddedPreparation;\n  }\n\n  override prepareDerivedData() {\n    this._filterOverrides();\n\n    /**\n     * A hook event that is fired after the system has completed its data preparation and allows modules to adjust the derived data afterwards\n     * @category Hooks\n     * @param {SwadeActor} actor                The actor whose data is being prepared\n     */\n    Hooks.callAll('swadeActorPrepareDerivedData', this);\n  }\n\n  async rollAttribute(\n    attribute: Attribute,\n    options: IRollOptions = {},\n  ): Promise<TraitRoll | null> {\n    if (!('attributes' in this.system)) return null;\n    if (options.rof && options.rof > 1) {\n      ui.notifications.warn(\n        'Attribute Rolls with RoF greater than 1 are not currently supported',\n      );\n    }\n    const label: string = SWADE.attributes[attribute].long;\n    const abl = this.system.attributes[attribute];\n    const rolls = new Array<Roll>();\n\n    rolls.push(\n      Roll.fromTerms([\n        this._buildTraitDie(abl.die.sides!, game.i18n.localize(label)),\n      ]),\n    );\n\n    if (this.isWildcard) {\n      rolls.push(Roll.fromTerms([this._buildWildDie(abl['wild-die'].sides!)]));\n    }\n\n    const basePool = foundry.dice.terms.PoolTerm.fromRolls(rolls);\n    basePool.modifiers.push('kh');\n\n    const effects = structuredClone<RollModifier[]>([\n      ...abl.effects,\n      ...this.system.stats.globalMods[attribute],\n      ...this.system.stats.globalMods.trait,\n    ]);\n\n    if (options.additionalMods) {\n      options.additionalMods.push(...effects);\n    } else {\n      options.additionalMods = effects;\n    }\n\n    const modifiers = this.getTraitRollModifiers(\n      abl.die,\n      options,\n      game.i18n.localize(label),\n    );\n\n    //add encumbrance penalty if necessary\n    if (attribute === 'agility' && this.system.encumbered) {\n      modifiers.push({\n        label: game.i18n.localize('SWADE.Encumbered'),\n        value: -2,\n      });\n    }\n\n    const roll = TraitRoll.fromTerms([basePool]) as TraitRoll;\n    roll.modifiers = modifiers;\n    if ('isRerollable' in options) roll.setRerollable(options.isRerollable!);\n\n    /**\n     * A hook event that is fired before an attribute is rolled, giving the opportunity to programmatically adjust a roll and its modifiers\n     * Returning `false` in a hook callback will cancel the roll entirely\n     * @category Hooks\n     * @param {SwadeActor} actor                The actor that rolls the attribute\n     * @param {String} attribute                The name of the attribute, in lower case\n     * @param {TraitRoll} roll                  The built base roll, without any modifiers\n     * @param {RollModifier[]} modifiers   An array of modifiers which are to be added to the roll\n     * @param {IRollOptions} options            The options passed into the roll function\n     */\n    const permitContinue = Hooks.call(\n      'swadePreRollAttribute',\n      this,\n      attribute,\n      roll,\n      modifiers,\n      options,\n    );\n    if (permitContinue === false) return null;\n\n    if (options.suppressChat) {\n      return TraitRoll.fromTerms([\n        ...roll.terms,\n        ...TraitRoll.parse(\n          roll.modifiers.reduce(modifierReducer, ''),\n          this.getRollData(false),\n        ),\n      ]) as TraitRoll;\n    }\n\n    // Roll and return\n    const retVal = await RollDialog.asPromise({\n      roll: roll,\n      mods: modifiers,\n      speaker: ChatMessage.getSpeaker({ actor: this }),\n      flavor:\n        options.flavour ??\n        `${game.i18n.localize(label)} ${game.i18n.localize(\n          'SWADE.AttributeTest',\n        )}`,\n      title:\n        options.title ??\n        `${game.i18n.localize(label)} ${game.i18n.localize(\n          'SWADE.AttributeTest',\n        )}`,\n      actor: this,\n    });\n\n    /**\n     * A hook event that is fired after an attribute is rolled\n     * @category Hooks\n     * @param {SwadeActor} actor                The actor that rolls the attribute\n     * @param {String} attribute                The name of the attribute, in lower case\n     * @param {TraitRoll} roll                  The built base roll, without any modifiers\n     * @param {RollModifier[]} modifiers   An array of modifiers which are to be added to the roll\n     * @param {IRollOptions} options            The options passed into the roll function\n     */\n    Hooks.callAll(\n      'swadeRollAttribute',\n      this,\n      attribute,\n      roll,\n      modifiers,\n      options,\n    );\n\n    return retVal as TraitRoll | null;\n  }\n\n  async rollSkill(\n    skillId: string | null | undefined,\n    options: IRollOptions = { rof: 1 },\n    tempSkill?: SwadeItem,\n  ): Promise<TraitRoll | null> {\n    if (\n      this.system instanceof VehicleData ||\n      this.system instanceof GroupData\n    ) {\n      Logger.error('Only Extras and Wildcards can roll skills!', {\n        toast: true,\n      });\n      return null;\n    }\n    let skill: SwadeItem | undefined;\n    skill = this.items.find((i) => i.id == skillId);\n    if (tempSkill) skill = tempSkill;\n\n    if (!skill) return this.makeUnskilledAttempt(options);\n\n    const skillRoll = this._handleComplexSkill(skill, options);\n    const roll = skillRoll[0];\n    const modifiers = skillRoll[1];\n    roll.modifiers = modifiers;\n    if ('isRerollable' in options) roll.setRerollable(options.isRerollable!);\n\n    //Build Flavour\n    let flavour = '';\n    if (options.flavour) flavour = ` - ${options.flavour}`;\n\n    /**\n     * A hook event that is fired before a skill is rolled, giving the opportunity to programmatically adjust a roll and its modifiers\n     * Returning `false` in a hook callback will cancel the roll entirely\n     * @category Hooks\n     * @param {SwadeActor} actor                The actor that rolls the skill\n     * @param {SwadeItem} skill                 The Skill item that is being rolled\n     * @param {TraitRoll} roll                  The built base roll, without any modifiers\n     * @param {RollModifier[]} modifiers   An array of modifiers which are to be added to the roll\n     * @param {IRollOptions} options            The options passed into the roll function\n     */\n    const permitContinue = Hooks.call(\n      'swadePreRollSkill',\n      this,\n      skill,\n      roll,\n      modifiers,\n      options,\n    );\n\n    if (!permitContinue) return null;\n\n    if (options.suppressChat) {\n      return TraitRoll.fromTerms([\n        ...roll.terms,\n        ...TraitRoll.parse(\n          roll.modifiers.reduce(modifierReducer, ''),\n          this.getRollData(false),\n        ),\n      ]) as TraitRoll;\n    }\n\n    const rollDialogContext: RollDialogContext = {\n      roll: roll,\n      mods: modifiers,\n      speaker: ChatMessage.getSpeaker({ actor: this }),\n      flavor:\n        options.flavour ??\n        `${skill.name} ${game.i18n.localize('SWADE.SkillTest')}${flavour}`,\n      title:\n        options.title ??\n        `${skill.name} ${game.i18n.localize('SWADE.SkillTest')}`,\n      actor: this,\n    };\n\n    if (options.item) rollDialogContext.item = options.item;\n\n    // Roll and return\n    const retVal = await RollDialog.asPromise(rollDialogContext);\n\n    /**\n     * A hook event that is fired after a skill is rolled\n     * @category Hooks\n     * @param {SwadeActor} actor                The actor that rolls the skill\n     * @param {SwadeItem} skill                 The Skill item that is being rolled\n     * @param {TraitRoll} roll                  The built base roll, without any modifiers\n     * @param {RollModifier[]} modifiers   An array of modifiers which are to be added to the roll\n     * @param {IRollOptions} options            The options passed into the roll function\n     */\n    Hooks.callAll('swadeRollSkill', this, skill, roll, modifiers, options);\n\n    return retVal as TraitRoll | null;\n  }\n\n  async rollWealthDie() {\n    if (!('details' in this.system)) return null;\n    const die = this.system.details.wealth.die ?? 6;\n    const mod = this.system.details.wealth.modifier ?? 0;\n    const wildDie = this.system.details.wealth['wild-die'] ?? 6;\n    if (die < 4) {\n      ui.notifications.warn('SWADE.WealthDie.Broke.Hint', { localize: true });\n      return null;\n    }\n    const rolls = [\n      Roll.fromTerms([\n        this._buildTraitDie(die, game.i18n.localize('SWADE.WealthDie.Label')),\n      ]),\n    ];\n    if (this.isWildcard) {\n      rolls.push(Roll.fromTerms([this._buildWildDie(wildDie)]));\n    }\n\n    const pool = foundry.dice.terms.PoolTerm.fromRolls(rolls);\n    pool.modifiers.push('kh');\n\n    const roll = SwadeRoll.fromTerms([pool]);\n    const mods = [{ label: 'Modifier', value: mod }];\n    roll.modifiers = mods;\n\n    return RollDialog.asPromise({\n      roll: roll,\n      mods: mods,\n      speaker: ChatMessage.getSpeaker({ actor: this }),\n      actor: this,\n      flavor: game.i18n.localize('SWADE.WealthDie.Label'),\n      title: game.i18n.localize('SWADE.WealthDie.Label'),\n    });\n  }\n\n  async rollRunningDie() {\n    if (\n      this.system instanceof VehicleData ||\n      this.system instanceof GroupData\n    ) {\n      return null;\n    }\n\n    const system = this.system as CharacterData | NpcData;\n\n    const availableKeys = PaceSchemaField.paceKeys.filter(\n      (key) => !!system.pace[key],\n    );\n\n    let paceKey: string | null = availableKeys[0];\n    if (Object.keys(availableKeys).length > 1) {\n      paceKey = await foundry.applications.api.DialogV2.wait({\n        window: {\n          title: 'SWADE.Movement.Running.Dialog.Title',\n        } satisfies Partial<foundry.applications.api.ApplicationV2.WindowConfiguration>,\n        content: `<p>${game.i18n.localize('SWADE.Movement.Running.Dialog.Content')}</p>`,\n        buttons: availableKeys.map((key) => {\n          return {\n            label: `SWADE.Movement.Pace.${key.capitalize()}.Label`,\n            action: key,\n            default: key === paceKey,\n          };\n        }),\n        rejectClose: false,\n        render: (_event, dialog: foundry.applications.api.DialogV2) =>\n          dialog.element.querySelector('footer')?.classList.add('flexcol'),\n      });\n    }\n\n    if (paceKey === null) return;\n    let pace = system.pace[paceKey];\n    const running = system.pace.running;\n    const runningDie = `1d${running.die}[${game.i18n.localize(\n      'SWADE.RunningDie',\n    )}]`;\n\n    const mods: RollModifier[] = [];\n\n    if (running.mod) {\n      mods.push({\n        label: game.i18n.localize('SWADE.Modifier'),\n        value: running.mod,\n      });\n    }\n\n    if ('encumbered' in this.system && this.system.encumbered) {\n      pace += 2; //add the base value back, the roll modifier will take care of it\n      mods.push({\n        label: game.i18n.localize('SWADE.Encumbered'),\n        value: -2,\n      });\n    }\n    const paceLabel = `${game.i18n.localize('SWADE.Pace')} (${game.i18n.localize(`SWADE.Movement.Pace.${paceKey.capitalize()}.Label`)})`;\n    mods.unshift({ label: paceLabel, value: pace });\n\n    return RollDialog.asPromise({\n      roll: new SwadeRoll(runningDie, this.getRollData(false), {\n        modifiers: mods,\n        rollType: \"running\",\n      }),\n      mods,\n      speaker: ChatMessage.getSpeaker({ actor: this }),\n      flavor:\n        game.i18n.localize('SWADE.RunningHint.Header') +\n        game.i18n.localize('SWADE.RunningHint.Reminder'),\n      title: game.i18n.localize('SWADE.Running'),\n      actor: this,\n    });\n  }\n\n  async makeUnskilledAttempt(options: IRollOptions = {}) {\n    const tempSkill = new SwadeItem({\n      name: game.i18n.localize('SWADE.Unskilled'),\n      type: 'skill',\n      system: {\n        swid: 'unskilled-attempt',\n        die: {\n          sides: 4,\n          modifier: 0,\n        },\n        'wild-die': {\n          sides: 6,\n        },\n      },\n    });\n    const modifier: RollModifier = {\n      label: game.i18n.localize('SWADE.Unskilled'),\n      value: -2,\n    };\n    if (options.additionalMods) {\n      options.additionalMods.push(modifier);\n    } else {\n      options.additionalMods = [modifier];\n    }\n    return this.rollSkill(null, options, tempSkill);\n  }\n\n  async makeArcaneDeviceSkillRoll(\n    arcaneSkillDie: TraitDie,\n    options: IRollOptions = {},\n  ) {\n    const tempSkill = new SwadeItem({\n      name: game.i18n.localize('SWADE.ArcaneSkill'),\n      type: 'skill',\n      system: {\n        die: arcaneSkillDie,\n        'wild-die': {\n          sides: 6,\n        },\n      },\n    });\n    return this.rollSkill(null, options, tempSkill);\n  }\n\n  async spendBenny() {\n    //return early if there no bennies to spend\n    if (this.bennies < 1) return;\n    const msgClass = getDocumentClass('ChatMessage');\n    if (game.settings.get('swade', 'notifyBennies')) {\n      const speaker = msgClass.getSpeaker({\n        actor: this,\n      });\n      const message = await foundry.applications.handlebars.renderTemplate(SWADE.bennies.templates.spend, {\n        target: this,\n        speaker: speaker,\n      });\n      const chatData = { content: message, speaker: speaker };\n      await msgClass.create(chatData);\n    }\n    await this.update({ 'system.bennies.value': this.bennies - 1 });\n    if (game.settings.get('swade', 'hardChoices')) {\n      const gms = game\n        .users!.filter((u) => u.isGM && u.active)\n        .map((u) => u.id);\n      game.swade.sockets.giveBenny(gms);\n    }\n\n    /**\n     * A hook event that is fired after an actor spends a Benny\n     * @category Hooks\n     * @param {SwadeActor} actor                     The actor that spent the benny\n     */\n    Hooks.call('swadeSpendBenny', this);\n\n    if (!!game.dice3d && (await shouldShowBennyAnimation())) {\n      game.dice3d.showForRoll(\n        await new Roll('1dB').evaluate(),\n        game.user!,\n        true,\n        null,\n        false,\n      );\n    }\n  }\n\n  async getBenny() {\n    if (this.system instanceof VehicleData || this.system instanceof GroupData)\n      return;\n    const combatant = this.token?.combatant as SwadeCombatant | undefined;\n    await this.update({ 'system.bennies.value': this.bennies + 1 });\n\n    const msgClass = getDocumentClass('ChatMessage');\n\n    const hiddenNPC = combatant?.isNPC && combatant?.hidden;\n    if (game.settings.get('swade', 'notifyBennies') && !hiddenNPC) {\n      const speaker = msgClass.getSpeaker({\n        actor: this,\n      });\n      const content = await foundry.applications.handlebars.renderTemplate(SWADE.bennies.templates.add, {\n        target: this,\n        speaker: speaker,\n      });\n      await msgClass.create({\n        content: content,\n        speaker: speaker,\n      });\n    }\n\n    /**\n     * A hook event that is fired after an actor has been awarded a benny\n     * @category Hooks\n     * @param {SwadeActor} actor                     The actor that received the benny\n     */\n    Hooks.call('swadeGetBenny', this);\n\n    if (!!game.dice3d && (await shouldShowBennyAnimation())) {\n      game.dice3d.showForRoll(\n        await new Roll('1dB').evaluate(),\n        game.user!,\n        true,\n        null,\n        false,\n      );\n    }\n  }\n\n  /**\n   * Toggles the actor's conviction state on/off, subtracting the relevant resource\n   * @param toChat Whether to post a chat message when toggling, defaults to `true`\n   */\n  async toggleConviction(toChat = true): Promise<void> {\n    if (!('details' in this.system)) return;\n    const current = this.system.details.conviction.value!;\n    const active = this.system.details.conviction.active;\n    let template = '';\n\n    if (current > 0 && !active) {\n      await this.update({\n        'system.details.conviction.value': current - 1,\n        'system.details.conviction.active': true,\n      });\n      template = CONFIG.SWADE.conviction.templates.start;\n    } else {\n      await this.update({\n        'system.details.conviction.active': false,\n      });\n      template = CONFIG.SWADE.conviction.templates.end;\n    }\n    if (!toChat) return;\n    const msgClass = getDocumentClass('ChatMessage');\n    await msgClass.create({\n      speaker: msgClass.getSpeaker({ actor: this }),\n      content: await foundry.applications.handlebars.renderTemplate(template, {\n        icon: CONFIG.SWADE.conviction.icon,\n        actor: this,\n      }),\n    });\n  }\n\n  /** @see {TokenDocument#toggleActiveEffect} */\n  async toggleActiveEffect(\n    effect: CONFIG.StatusEffect | string,\n    {\n      overlay = false,\n      active,\n    }: NullishProps<{ overlay: boolean; active: boolean }> = {},\n  ) {\n    const statusEffect =\n      typeof effect === 'string' ? getStatusEffectDataById(effect) : effect;\n    if (!statusEffect?.id) return false;\n\n    // Remove existing single-status effects.\n    const existing = this.effects.reduce<string[]>((acc, cur) => {\n      if (cur.statuses.size === 1 && cur.statuses.has(statusEffect.id)) {\n        acc.push(cur.id);\n      }\n      return acc;\n    }, []);\n    const state = active ?? !existing.length;\n    if (!state && existing.length) {\n      await this.deleteEmbeddedDocuments('ActiveEffect', existing);\n    }\n    // Add a new effect\n    else if (state) {\n      const aeClass = getDocumentClass('ActiveEffect');\n      const data = foundry.utils.deepClone(statusEffect);\n      foundry.utils.setProperty(data, 'statuses', [statusEffect.id]);\n      delete data.id; //remove the ID to not trigger validation errors\n      aeClass.migrateDataSafe(data);\n      aeClass.cleanData(data);\n      data.name = game.i18n.localize(data.name as string);\n      if (overlay) foundry.utils.setProperty(data, 'flags.core.overlay', true);\n      await aeClass.create(data, { parent: this });\n    }\n    return state;\n  }\n\n  /**\n   * Reset the bennies of the Actor to their default value\n   */\n  async refreshBennies(notify = true) {\n    if ('refreshBennies' in this.system) this.system.refreshBennies(notify);\n  }\n\n  /** Calculates the total Wound Penalties\n   * and returns them as a negative number */\n  calcWoundPenalties(ignoreAll: boolean = false): number {\n    if (ignoreAll) return 0;\n    let total = 0;\n    const wounds = foundry.utils.getProperty(\n      this,\n      'system.wounds.value',\n    ) as number;\n    const ignoredWounds = foundry.utils.getProperty(\n      this,\n      'system.wounds.ignored',\n    ) as number;\n\n    //clamp the value between 0 and the maximum\n    total = Math.clamp(wounds - ignoredWounds, 0, 3);\n    return total * -1;\n  }\n\n  /** Calculates the total Fatigue Penalties */\n  calcFatiguePenalties(): number {\n    let total = 0;\n    const fatigue = foundry.utils.getProperty(\n      this,\n      'system.fatigue.value',\n    ) as number;\n    const ignoredFatigue = foundry.utils.getProperty(\n      this,\n      'system.fatigue.ignored',\n    ) as number;\n\n    //get the bigger of the two values so we don't accidentally return a negative value for the penalty\n    total = Math.max(fatigue - ignoredFatigue, 0);\n    return total * -1;\n  }\n\n  calcStatusPenalties(): number {\n    let retVal = 0;\n    const isDistracted = foundry.utils.getProperty(\n      this,\n      'system.status.isDistracted',\n    );\n    if (isDistracted) {\n      retVal -= 2;\n    }\n    return retVal;\n  }\n\n  calcScale(size: number): number {\n    let scale = 0;\n    if (Number.between(size, 20, 12)) scale = 6;\n    else if (Number.between(size, 11, 8)) scale = 4;\n    else if (Number.between(size, 7, 4)) scale = 2;\n    else if (Number.between(size, 3, -1)) scale = 0;\n    else if (size === -2) scale = -2;\n    else if (size === -3) scale = -4;\n    else if (size === -4) scale = -6;\n    return scale;\n  }\n\n  /**\n   * Returns an array of items that match a given SWID and optionally an item type\n   * @param swid The SWID of the item(s) which you want to retrieve\n   * @param type Optionally, a type name to restrict the search\n   * @returns an array containing the found items\n   */\n  getItemsBySwid<T extends Item.SubType>(\n    swid: string,\n    type?: T,\n  ): SwadeItem<T>[] {\n    const swidFilter = (i: SwadeItem) => i.system.swid === swid;\n    if (!type) return this.items.filter(swidFilter);\n    const itemTypes = this.itemTypes;\n    if (!Object.hasOwn(itemTypes, type)) {\n      throw new Error(`Type ${type} is invalid!`);\n    }\n    return itemTypes[type].filter(swidFilter) as SwadeItem<T>[];\n  }\n\n  /**\n   * Fetch an item that matches a given SWID and optionally an item type\n   * @param swid The SWID of the item(s) which you want to retrieve\n   * @param type Optionally, a type name to restrict the search\n   * @returns The matching item, or undefined if none was found.\n   */\n  getSingleItemBySwid<T extends Item.SubType>(\n    swid: string,\n    type?: T,\n  ): SwadeItem<T> | undefined {\n    return this.getItemsBySwid<T>(swid, type)[0];\n  }\n\n  /**\n   * Function for shortcut roll in item (@str + 1d6)\n   * return something like : {agi: \"1d8x+1\", sma: \"1d6x\", spi: \"1d6x\", str: \"1d6x-1\", vig: \"1d6x\"}\n   */\n  override getRollData(\n    includeModifiers = true,\n  ): Record<string, number | string> {\n    let rollData;\n    if ('getRollData' in this.system)\n      rollData = this.system.getRollData(includeModifiers);\n    return rollData ?? {};\n  }\n\n  /** Calculates the maximum carry capacity based on the strength die and any adjustment steps */\n  calcMaxCarryCapacity(): number {\n    if (!('attributes' in this.system)) return 0;\n    const unit = game.settings.get('swade', 'weightUnit');\n    const strength = foundry.utils.deepClone(this.system.attributes.strength);\n    const stepAdjust = Math.max(strength.encumbranceSteps! * 2, 0);\n    strength.die.sides! += stepAdjust;\n    //bound the adjusted strength die to 12\n    const encumbDie = this._boundTraitDie(strength.die);\n\n    if (unit === 'imperial') {\n      return this._calcImperialCapacity(encumbDie);\n    } else if (unit === 'metric') {\n      return this._calcMetricCapacity(encumbDie);\n    } else {\n      throw new Error(`Value ${unit} is an unknown value!`);\n    }\n  }\n\n  calcInventoryWeight(): number {\n    const items = this.items.map((i) =>\n      i.system instanceof ArmorData ||\n      i.system instanceof WeaponData ||\n      i.system instanceof ShieldData ||\n      i.system instanceof GearData ||\n      i.system instanceof ConsumableData\n        ? i.system\n        : null,\n    );\n    let retVal = 0;\n    if (this.system instanceof VehicleData) {\n      for (const item of items) {\n        if (!item) continue;\n        retVal += Number(item.weight) * Number(item.quantity);\n      }\n    } else {\n      for (const item of items) {\n        if (!item) continue;\n        if (item.equipStatus !== constants.EQUIP_STATE.STORED) {\n          retVal += Number(item.weight) * Number(item.quantity);\n        }\n      }\n    }\n    return retVal;\n  }\n\n  /**\n   * @deprecated\n   * Helper Function for Vehicle Actors, to roll Maneuvering checks\n   */\n  async rollManeuverCheck() {\n    foundry.utils.logCompatibilityWarning(\n      'SwadeActor#rollManeuverCheck has been moved to the VehicleData class and can be accessed via system.rollManeuverCheck',\n      { since: '4.4', until: '5.1' },\n    );\n    if (!(this.system instanceof VehicleData)) return;\n    await this.system.rollManeuverCheck();\n  }\n\n  /** @deprecated */\n  async getDriver(): Promise<SwadeActor<'character' | 'npc'> | null> {\n    foundry.utils.logCompatibilityWarning(\n      'SwadeActor#getDriver deprecated in favor of the crew members array, which can be found at system.crew.members',\n      { since: '4.4', until: '5.1' },\n    );\n    return this.system.operator;\n  }\n\n  getTraitRollModifiers(\n    die: TraitDie,\n    options: IRollOptions,\n    name?: string | null,\n  ): RollModifier[] {\n    const mods = new Array<RollModifier>();\n\n    //Trait modifier\n    if (die.modifier !== 0) {\n      mods.push({\n        label: name\n          ? `${name} ${game.i18n.localize('SWADE.Modifier')}`\n          : game.i18n.localize('SWADE.TraitMod'),\n        value: die.modifier,\n      });\n    }\n\n    const wounds = this.calcWoundPenalties(!!options.ignoreWounds);\n    const fatigue = this.calcFatiguePenalties();\n    const numbness =\n      'woundsOrFatigue' in this.system\n        ? this.system.woundsOrFatigue?.ignored!\n        : 0;\n    if (numbness > 0) {\n      const label = `${game.i18n.localize('SWADE.Wounds')}/${game.i18n.localize(\n        'SWADE.Fatigue',\n      )}`;\n      mods.push({\n        label: label,\n        value: Math.min(wounds + fatigue + numbness, 0),\n      });\n    } else {\n      //Wounds\n      mods.push({\n        label: game.i18n.localize('SWADE.Wounds'),\n        value: wounds,\n      });\n      //Fatigue\n      mods.push({\n        label: game.i18n.localize('SWADE.Fatigue'),\n        value: fatigue,\n      });\n    }\n\n    //Additional Mods\n    if (options.additionalMods) {\n      mods.push(...options.additionalMods);\n    }\n\n    // Joker, Dramatic Task Complication\n    if (game.combats.active && 'rollModifiers' in game.combats.active.system) {\n      mods.push(...game.combats.active.system.rollModifiers(this));\n    }\n\n    if (\n      !(this.system instanceof VehicleData || this.system instanceof GroupData)\n    ) {\n      //Status penalties\n      if (this.system.status.isDistracted) {\n        mods.push({\n          label: game.i18n.localize('SWADE.Distr'),\n          value: -2,\n        });\n      }\n\n      //Conviction Die\n      const useConviction =\n        this.isWildcard &&\n        this.system.details.conviction.active &&\n        game.settings.get('swade', 'enableConviction');\n      if (useConviction) {\n        mods.push({\n          label: game.i18n.localize('SWADE.Conv'),\n          value: '+1d6x',\n        });\n      }\n    }\n\n    return mods\n      .filter((m) => m.value) //filter out the nullish values\n      .sort((a, b) => a.label.localeCompare(b.label)); //sort the mods alphabetically by label\n  }\n\n  private _handleComplexSkill(\n    skill: SwadeItem,\n    options: IRollOptions,\n  ): [TraitRoll, RollModifier[]] {\n    if (\n      this.system instanceof VehicleData ||\n      this.system instanceof GroupData\n    ) {\n      throw new Error('Only Extras and Wildcards can roll skills!');\n    }\n    if (!(skill.system instanceof SkillData)) {\n      throw new Error('Detected-non skill in skill roll construction');\n    }\n    if (!options.rof) options.rof = 1;\n    const skillData = skill.system;\n\n    const rolls = new Array<Roll>();\n\n    //Add all necessary trait die\n    for (let i = 0; i < options.rof; i++) {\n      rolls.push(\n        Roll.fromTerms([this._buildTraitDie(skillData.die.sides, skill.name!)]),\n      );\n    }\n\n    //Add Wild Die\n    if (this.isWildcard) {\n      rolls.push(\n        Roll.fromTerms([this._buildWildDie(skillData['wild-die'].sides!)]),\n      );\n    }\n\n    const kh = options.rof > 1 ? `kh${options.rof}` : 'kh';\n    const basePool = foundry.dice.terms.PoolTerm.fromRolls(rolls);\n    basePool.modifiers.push(kh);\n    const attGlobalMods: RollModifier[] =\n      this.system.stats.globalMods[skill.system.attribute ?? ''] ?? [];\n    const effects = structuredClone<RollModifier[]>([\n      ...(skillData.effects ?? []),\n      ...attGlobalMods,\n      ...this.system.stats.globalMods.trait,\n    ]);\n\n    if (options.additionalMods) options.additionalMods.push(...effects);\n    else options.additionalMods = effects;\n\n    const rollMods = this.getTraitRollModifiers(\n      skillData.die,\n      options,\n      skill.name,\n    );\n\n    //add encumbrance penalty if necessary\n    if (skill.system.attribute === 'agility' && this.system.encumbered) {\n      rollMods.push({\n        label: game.i18n.localize('SWADE.Encumbered'),\n        value: -2,\n      });\n    }\n\n    return [TraitRoll.fromTerms<TraitRoll>([basePool]), rollMods];\n  }\n\n  /**\n   * @param sides number of sides of the die\n   * @param flavor flavor of the die\n   * @param modifiers modifiers to the die\n   * @returns a Die instance that already has the exploding modifier by default\n   */\n  private _buildTraitDie(\n    sides: number,\n    flavor: string,\n  ): foundry.dice.terms.Die {\n    const modifiers: (keyof foundry.dice.terms.Die.Modifiers)[] = [];\n    if (sides > 1) modifiers.push('x');\n    return new foundry.dice.terms.Die({\n      faces: sides,\n      modifiers: modifiers,\n      options: { flavor: flavor.replace(/[^a-zA-Z\\d\\s:\\u00C0-\\u00FF]/g, '') },\n    });\n  }\n\n  /**\n   * @param die The die to adjust\n   * @returns the properly adjusted trait die\n   */\n  private _boundTraitDie(die: TraitDie): TraitDie {\n    const sides = die.sides;\n    if (sides < 4 && sides !== 1) {\n      die.sides = 4;\n    } else if (sides > 12) {\n      const difference = sides - 12;\n      die.sides = 12;\n      die.modifier += difference / 2;\n    }\n    return die;\n  }\n\n  private _buildWildDie(sides = 6): WildDie {\n    return new WildDie({ faces: sides });\n  }\n\n  private _calcImperialCapacity(strength: TraitDie): number {\n    const modifier = Math.max(strength.modifier, 0);\n    return Math.max((strength.sides / 2 - 1 + modifier) * 20, 0);\n  }\n\n  private _calcMetricCapacity(strength: TraitDie): number {\n    const modifier = Math.max(strength.modifier, 0);\n    return Math.max((strength.sides / 2 - 1 + modifier) * 10, 0);\n  }\n\n  /** Calculates the correct armor value based on SWADE v5.0 and returns that value */\n  calcArmor(): number {\n    const torsoArmor = this._getArmorForLocation(\n      constants.ARMOR_LOCATIONS.TORSO,\n    );\n    return this._calcDerivedEffects('armor', torsoArmor);\n  }\n\n  /** Calculates the Toughness value without armor and returns it */\n  calcToughness(): number {\n    if (this.system instanceof VehicleData || this.system instanceof GroupData)\n      return 0;\n    /** base value of all toughness calculations */\n    const toughnessBaseValue = 2;\n\n    const sources: DerivedModifier[] = this.system.stats.toughness.sources;\n\n    //get the base values we need\n    const vigor = this.system.attributes.vigor.die.sides!;\n    const vigMod = this.system.attributes.vigor.die.modifier!;\n    // const toughMod = this.system.stats.toughness.modifier;\n\n    let finalToughness = Math.round(vigor / 2) + toughnessBaseValue;\n    if (vigMod > 0) {\n      finalToughness += Math.floor(vigMod / 2);\n    }\n    sources.push({\n      label: game.i18n.localize('SWADE.AttrVig'),\n      value: finalToughness,\n    });\n\n    const size = this.system.stats.size ?? 0;\n    finalToughness += size;\n    if (size !== 0) {\n      sources.push({\n        label: game.i18n.localize('SWADE.Size'),\n        value: size,\n      });\n    }\n\n    //add the toughness from the armor\n    for (const armor of this.itemTypes.armor) {\n      if (!(armor.system instanceof ArmorData)) continue;\n      if (armor.isReadied && armor.system.locations.torso) {\n        finalToughness += Number(armor.system.toughness);\n        sources.push({\n          label: armor.name,\n          value: armor.system.toughness!,\n        });\n      }\n    }\n    return this._calcDerivedEffects('toughness', finalToughness);\n  }\n\n  calcParry(): number {\n    if (\n      this.system instanceof VehicleData ||\n      this.system instanceof CreatureData\n    ) {\n      return this._calcDerivedEffects('parry', this.system.calcParry());\n    }\n    return 0;\n  }\n\n  private _calcDerivedEffects(\n    target: 'parry' | 'toughness' | 'armor',\n    derivedStat: number,\n  ): number {\n    let effects: DerivedModifier[] = [];\n    let sources: DerivedModifier[] = [];\n    if (\n      this.system instanceof CreatureData ||\n      this.system instanceof VehicleData\n    ) {\n      effects =\n        target === 'armor'\n          ? (this.system.stats.toughness?.armorEffects ?? [])\n          : this.system.stats[target].effects;\n      sources =\n        target === 'armor'\n          ? new Array<DerivedModifier>() // currently gets discarded\n          : this.system.stats[target].sources;\n    }\n\n    effects.forEach((e: DerivedModifier) => {\n      switch (e.mode) {\n        case CONST.ACTIVE_EFFECT_MODES.MULTIPLY:\n          derivedStat *= e.value;\n          sources.push({\n            label: e.label,\n            value: e.value,\n            mode: e.mode,\n          });\n          break;\n        case CONST.ACTIVE_EFFECT_MODES.ADD:\n          derivedStat += e.value;\n          sources.push({\n            label: e.label,\n            value: e.value,\n            mode: e.mode,\n          });\n          break;\n        case CONST.ACTIVE_EFFECT_MODES.DOWNGRADE:\n          if (derivedStat > e.value) {\n            derivedStat = e.value;\n            sources.length = 0;\n            sources.push({\n              label: e.label,\n              value: e.value,\n              mode: e.mode,\n            });\n          }\n          break;\n        case CONST.ACTIVE_EFFECT_MODES.UPGRADE:\n          if (derivedStat < e.value) {\n            derivedStat = e.value;\n            sources.length = 0;\n            sources.push({\n              label: e.label,\n              value: e.value,\n              mode: e.mode,\n            });\n          }\n          break;\n        case CONST.ACTIVE_EFFECT_MODES.OVERRIDE:\n          derivedStat = e.value;\n          sources.length = 0;\n          sources.push({\n            label: e.label,\n            value: e.value,\n            mode: e.mode,\n          });\n          break;\n      }\n    });\n    return derivedStat;\n  }\n\n  /**\n   * @param location The location of the armor such as head, torso, arms or legs\n   * @returns The total amount of armor for that location\n   */\n  private _getArmorForLocation(location: ArmorLocation): number {\n    if (this.system instanceof VehicleData || this.system instanceof GroupData)\n      return 0;\n\n    return Object.values(this._getArmorSourcesForLocation(location)).reduce(\n      (acc, value) => (acc += value),\n      0,\n    );\n  }\n\n  /**\n   * @param location The location of the armor such as head, torso, arms or legs\n   * @returns A record of armor sources and values\n   */\n  private _getArmorSourcesForLocation(\n    location: ArmorLocation,\n  ): Record<string, number> {\n    const armorSources = {};\n    if (this.system instanceof VehicleData || this.system instanceof GroupData)\n      return armorSources;\n\n    const [regularArmor, naturalArmor] = this.itemTypes.armor\n      .filter((i) => {\n        //filter away armor that doesn't match the location and isn't equipped\n        const system = i.system as ArmorData;\n        const isEquipped = system.equipStatus! > constants.EQUIP_STATE.CARRIED;\n        return isEquipped && system.locations[location];\n      })\n      .map((i) => {\n        // map the data into a usable format\n        const system = i.system as ArmorData;\n        return {\n          name: i.name,\n          armor: system.armor as number,\n          isNaturalArmor: system.isNaturalArmor as boolean,\n        } satisfies ArmorCalcContext;\n      })\n      .sort((a, b) => b.armor - a.armor) // sort the items by armor value, descending\n      .partition((i) => i.isNaturalArmor); //split them into natural and regular armor\n\n    const isCoreStacking =\n      game.settings.get('swade', 'armorStacking') ===\n      constants.ARMOR_STACKING.CORE;\n\n    const [baseArmor, extraArmor] = regularArmor;\n    if (baseArmor) {\n      armorSources[baseArmor.name] = baseArmor.armor;\n      if (extraArmor && isCoreStacking) {\n        armorSources[extraArmor.name] = Math.floor(extraArmor.armor / 2);\n      }\n    }\n\n    //add the natural armor to the object\n    return naturalArmor.reduce((acc, cur) => {\n      acc[cur.name] = cur.armor;\n      return acc;\n    }, armorSources);\n  }\n\n  getPTTooltip(target: 'parry' | 'toughness'): string {\n    if (this.system instanceof VehicleData || this.system instanceof GroupData)\n      return '';\n    let tooltip =\n      target === 'parry'\n        ? `<h4>${game.i18n.localize('SWADE.Parry')}\n       ${this.system.stats.parry.value}\n      (${this.system.stats.parry.shield})</h4>`\n        : `<h4>${game.i18n.localize('SWADE.Tough')}\n       ${this.system.stats.toughness.value}\n      (${this.system.stats.toughness.armor})</h4>`;\n\n    tooltip += this._sourcesToTooltip(this.system.stats[target].sources);\n\n    return tooltip;\n  }\n\n  getArmorTooltip(): string {\n    if (this.system instanceof VehicleData || this.system instanceof GroupData)\n      return '';\n    let tooltip = '';\n\n    const armor = this.armorPerLocation;\n    tooltip += game.i18n.localize('SWADE.Head') + `: ${armor.head}<br>`;\n    tooltip += game.i18n.localize('SWADE.Torso') + `: ${armor.torso}<br>`;\n    tooltip += game.i18n.localize('SWADE.Arms') + `: ${armor.arms}<br>`;\n    tooltip += game.i18n.localize('SWADE.Legs') + `: ${armor.legs}<hr>`;\n\n    tooltip += this._sourcesToTooltip(this.system.stats.toughness.armorEffects);\n\n    tooltip += Object.entries(\n      this._getArmorSourcesForLocation(constants.ARMOR_LOCATIONS.TORSO),\n    ).reduce((acc, [source, value]) => acc + `${source}: ${value}<br>`, '');\n\n    return tooltip;\n  }\n\n  /**\n   * Looks up the combatant instance for this actor in a given Combat encounter, taking into account whether the actor is an unlinked token or not.\n   * @param combat The combat instance to look in.\n   * @returns The found combatant for this actor, if one exists\n   */\n  getCombatant(combat?: Combat): SwadeCombatant | undefined {\n    if (!combat) return;\n    const combatant = this.isToken\n      ? combat?.getCombatantsByToken(this.token?.id as string)[0]\n      : combat?.getCombatantsByActor(this.id as string)[0];\n    return combatant as SwadeCombatant;\n  }\n\n  private _sourcesToTooltip(sources: DerivedModifier[]): string {\n    let tooltip = '';\n\n    sources.forEach((source) => {\n      let effect = '';\n      switch (source.mode) {\n        case CONST.ACTIVE_EFFECT_MODES.MULTIPLY:\n          effect = 'x' + source.value;\n          break;\n        case CONST.ACTIVE_EFFECT_MODES.DOWNGRADE:\n          effect =\n            game.i18n.localize('EFFECT.MODE_DOWNGRADE') + ' ' + source.value;\n          break;\n        case CONST.ACTIVE_EFFECT_MODES.UPGRADE:\n          effect =\n            game.i18n.localize('EFFECT.MODE_UPGRADE') + ' ' + source.value;\n          break;\n        case CONST.ACTIVE_EFFECT_MODES.OVERRIDE:\n          effect =\n            game.i18n.localize('EFFECT.MODE_OVERRIDE') + ' ' + source.value;\n          break;\n        case CONST.ACTIVE_EFFECT_MODES.ADD:\n        default:\n          effect = (source.value ?? 0).signedString();\n      }\n      tooltip += `${source.label}: ${effect}<br>`;\n    });\n\n    return tooltip;\n  }\n\n  private _filterOverrides() {\n    const overrides = foundry.utils.flattenObject(this.overrides);\n    for (const k of Object.keys(overrides)) {\n      if (k.startsWith('@')) {\n        delete overrides[k];\n      }\n    }\n    this.overrides = foundry.utils.expandObject(overrides);\n  }\n\n  protected override _onUpdate(\n    changed: Actor.UpdateData,\n    options: Actor.Database.OnUpdateOperation,\n    userId: string,\n  ) {\n    super._onUpdate(changed, options, userId);\n    if (\n      foundry.utils.hasProperty(changed, 'system.bennies') &&\n      this.hasPlayerOwner\n    ) {\n      ui.players?.render(true);\n    }\n    if (\n      foundry.utils.hasProperty(options, 'swade.wounds.value') ||\n      foundry.utils.hasProperty(options, 'swade.fatigue.value')\n    ) {\n      const isDamage = foundry.utils.hasProperty(changed, 'system.wounds.value')\n        ? changed.system.wounds.value > options.swade!.wounds!.value!\n        : foundry.utils.hasProperty(changed, 'system.fatigue.value')\n          ? changed.system.fatigue.value > options.swade!.fatigue!.value!\n          : false;\n      const tokens = this.getActiveTokens(true, false);\n      for (const token of tokens) {\n        token.ring?.flashColor(\n          isDamage ? Color.from('#D41159') : Color.from('#1A85FF'),\n          {\n            duration: 1000,\n            easing: CONFIG.Token.ring.ringClass.createSpikeEasing(0.4),\n          },\n        );\n      }\n    }\n  }\n}\n\nexport default SwadeActor;\n\ntype ArmorLocation = ValueOf<typeof constants.ARMOR_LOCATIONS>;\n\ninterface ArmorCalcContext {\n  name: string;\n  armor: number;\n  isNaturalArmor: boolean;\n}\n","import { RollModifier } from '../../../interfaces/additional.interface';\nimport { Logger } from '../../Logger';\nimport { constants } from '../../constants';\nimport { GroupData } from '../../data/actor';\nimport { getStatusEffectDataById, isFirstOwner } from '../../util';\nimport SwadeActor from '../actor/SwadeActor';\nimport SwadeItem from '../item/SwadeItem';\n\ndeclare global {\n  interface DocumentClassConfig {\n    ActiveEffect: typeof SwadeActiveEffect;\n  }\n  interface FlagConfig {\n    ActiveEffect: {\n      swade: {\n        related?: Record<string, ActiveEffect.CreateData>;\n      };\n    };\n  }\n}\n\nexport default class SwadeActiveEffect<\n  Subtype extends ActiveEffect.SubType = ActiveEffect.SubType,\n> extends ActiveEffect<Subtype> {\n  static override defaultName(\n    context: foundry.abstract.Document.DefaultNameContext<\n      ActiveEffect.SubType,\n      Exclude<ActiveEffect.Parent, null>\n    > = {},\n  ): string {\n    // Base active effect should just be called \"Active Effect\"\n    if (!('type' in context) || context.type === 'base') {\n      return game.i18n.format('DOCUMENT.New', {\n        type: game.i18n.localize('DOCUMENT.ActiveEffect'),\n      });\n    }\n    return super.defaultName(context);\n  }\n\n  get affectsItems() {\n    const affectedItems = new Array<SwadeItem>();\n    this.changes.forEach((c: ActiveEffect.EffectChangeData) =>\n      affectedItems.push(...this._getAffectedItems(this.parent!, c)),\n    );\n    return affectedItems.length > 0;\n  }\n\n  get statusId() {\n    return this.statuses.first();\n  }\n\n  override get isSuppressed(): boolean {\n    if (this.parent?.type === 'group') return true;\n    return false;\n  }\n\n  /** A convenience accessor that returns the effect's containing actor, if it has one */\n  get actor(): SwadeActor | undefined {\n    const parent = this.parent;\n    if (parent instanceof SwadeActor) return parent;\n    if (parent instanceof SwadeItem && parent.actor instanceof SwadeActor)\n      return parent.actor;\n  }\n\n  get expiresAtStartOfTurn(): boolean {\n    const expiration = this.system.expiration ?? -1;\n    return [\n      constants.STATUS_EFFECT_EXPIRATION.StartOfTurnAuto,\n      constants.STATUS_EFFECT_EXPIRATION.StartOfTurnPrompt,\n    ].includes(expiration);\n  }\n\n  get expiresAtEndOfTurn(): boolean {\n    const expiration = this.system.expiration ?? -1;\n    return [\n      constants.STATUS_EFFECT_EXPIRATION.EndOfTurnAuto,\n      constants.STATUS_EFFECT_EXPIRATION.EndOfTurnPrompt,\n    ].includes(expiration);\n  }\n\n  get expirationText(): string {\n    const expiration = this.system.expiration ?? -1;\n    switch (expiration) {\n      case constants.STATUS_EFFECT_EXPIRATION.StartOfTurnAuto:\n        return game.i18n.localize('SWADE.Expiration.BeginAuto');\n      case constants.STATUS_EFFECT_EXPIRATION.StartOfTurnPrompt:\n        return game.i18n.localize('SWADE.Expiration.BeginPrompt');\n      case constants.STATUS_EFFECT_EXPIRATION.EndOfTurnAuto:\n        return game.i18n.localize('SWADE.Expiration.EndAuto');\n      case constants.STATUS_EFFECT_EXPIRATION.EndOfTurnPrompt:\n        return game.i18n.localize('SWADE.Expiration.EndPrompt');\n      default: // None\n        return game.i18n.localize('SWADE.Expiration.None');\n    }\n  }\n\n  /**\n   * Filters through active effects to apply them to items, e.g. skills and weapons\n   * * match[0] = the whole expression\n   * * match[1] = ItemType\n   * * match[2] = Item Name or ID\n   * * match[3] = attribute key\n   */\n  static ITEM_REGEXP = /@([a-zA-Z0-9]+)\\{(.+)\\}\\[([\\S.]+)\\]/;\n\n  static ATTR_REGEXP =\n    /system\\.attributes\\.(agility|smarts|spirit|strength|vigor)\\.die\\.modifier/;\n\n  static GLOBAL_REGEXP = /system\\.stats\\.globalMods\\.(\\w+)/;\n\n  static PT_REGEXP = /system\\.stats\\.(parry|toughness)\\.(value|armor)/;\n\n  static override migrateData(data: any) {\n    super.migrateData(data);\n    if ('changes' in data) {\n      for (const change of data.changes) {\n        const match = change.key.match(SwadeActiveEffect.ITEM_REGEXP);\n        if (match) {\n          const newKey = match[3].trim().replace(/^data\\./, 'system.');\n          change.key = `@${match[1].trim()}{${match[2].trim()}}[${newKey}]`;\n        }\n\n        //fix up effects that had an action related key\n        change.key = change.key.replaceAll(\n          'system.actions.skillMod',\n          'system.actions.traitMod',\n        );\n        change.key = change.key.replaceAll(\n          'system.actions.skill',\n          'system.actions.trait',\n        );\n        change.key = change.key.replaceAll(\n          'system.stats.speed.value',\n          'system.pace',\n        );\n        change.key = change.key.replaceAll(\n          'system.stats.speed.adjusted',\n          'system.pace',\n        );\n        change.key = change.key.replaceAll(\n          'system.stats.speed.runningDie',\n          'system.pace.running.die',\n        );\n        change.key = change.key.replaceAll(\n          'system.stats.speed.runningMod',\n          'system.pace.running.mod',\n        );\n        change.key = change.key.replaceAll('flags.swade.auras', 'system.auras');\n      }\n    }\n\n    const flags = data.flags?.swade;\n\n    if (flags) {\n      const keys = [\n        'removeEffect',\n        'expiration',\n        'loseTurnOnHold',\n        'favorite',\n        'conditionalEffect',\n      ];\n      const flags = data.flags.swade;\n      data.system ??= {};\n\n      for (const key of keys) {\n        if (key in flags) {\n          data.system[key] = flags[key];\n          delete flags[key];\n        }\n      }\n    }\n    return data;\n  }\n\n  override apply(\n    doc: SwadeActor | SwadeItem,\n    change: ActiveEffect.EffectChangeData,\n  ) {\n    const itemMatch = change.key.match(SwadeActiveEffect.ITEM_REGEXP);\n    const attrMatch = change.key.match(SwadeActiveEffect.ATTR_REGEXP);\n    const globalMatch = change.key.match(SwadeActiveEffect.GLOBAL_REGEXP);\n    const ptMatch = change.key.match(SwadeActiveEffect.PT_REGEXP);\n    if (itemMatch) {\n      this._handleItemMatch(itemMatch, change, doc);\n    } else if (\n      attrMatch &&\n      change.mode === CONST.ACTIVE_EFFECT_MODES.ADD &&\n      doc instanceof SwadeActor\n    ) {\n      this._handleAttributeMatch(attrMatch, change, doc);\n    } else if (globalMatch && doc instanceof SwadeActor) {\n      this._handleGlobalModifierMatch(globalMatch, change, doc);\n    } else if (ptMatch && doc instanceof SwadeActor) {\n      this._handlePTModifierMatch(ptMatch, change, doc);\n    } else {\n      return super.apply(doc as SwadeActor, change);\n    }\n  }\n\n  private _getAffectedItems(\n    parent: SwadeActor | SwadeItem,\n    change: ActiveEffect.EffectChangeData,\n  ) {\n    const items = new Array<SwadeItem>();\n    const match = change.key.match(SwadeActiveEffect.ITEM_REGEXP);\n    if (!match) return items;\n    //get the properties from the match\n    const type = match[1].trim().toLowerCase();\n    const name = match[2].trim();\n    //filter the items down, according to type and name/id\n    const collection =\n      parent instanceof SwadeItem ? (parent.parent?.items ?? []) : parent.items;\n    items.push(\n      ...collection.filter(\n        (i) => i.type === type && (i.name === name || i.id === name),\n      ),\n    );\n    return items;\n  }\n\n  /**\n   * Removes Effects from Items\n   * @param parent The parent object\n   */\n  private _removeEffectsFromItems(parent: SwadeActor | SwadeItem) {\n    const affectedItems = new Array<SwadeItem>();\n    this.changes.forEach((c) =>\n      affectedItems.push(...this._getAffectedItems(parent, c)),\n    );\n    for (const item of affectedItems) {\n      for (const change of this.changes as ActiveEffect.EffectChangeData[]) {\n        const match = change.key.match(SwadeActiveEffect.ITEM_REGEXP);\n        if (!match) continue;\n        const key = match[3].trim();\n        if (\n          key === 'system.die.modifier' &&\n          match[1].trim().toLowerCase() === 'skill' &&\n          change.mode === CONST.ACTIVE_EFFECT_MODES.ADD\n        ) {\n          foundry.utils.setProperty(item, 'system.effects', []);\n        } else {\n          //restore original data from source\n          const source = foundry.utils.getProperty(item._source, key);\n          foundry.utils.setProperty(item, key, source);\n        }\n      }\n      if (item.sheet?.rendered) item.sheet.render(true);\n    }\n  }\n\n  private _updateTraitRollEffects(\n    effectsArray: RollModifier[],\n    value: number | string,\n    ignore = false,\n  ): boolean {\n    if (!this.id) {\n      // Handling null ID - don't want to make un-deletable override\n      console.warn('No ID found!');\n      return false;\n    }\n    const modifier: RollModifier = {\n      label: this.name ?? game.i18n.localize('SWADE.Addi'),\n      value: Number.isNumeric(value) ? Number(value) : value,\n      effectID: this.id,\n      ignore: this.system.conditionalEffect || ignore,\n    };\n    // Technically doesn't handle an effect that adds to the same item multiple times,\n    // but necessary to avoid duplication on refresh\n    const splice: RollModifier | null = effectsArray.findSplice(\n      (e) => e.effectID === this.id,\n      modifier,\n    );\n    if (!splice) effectsArray.push(modifier);\n    return true;\n  }\n\n  private async _applyRelatedEffects() {\n    const related = this.getFlag('swade', 'related') ?? {};\n    if (!this.actor || !this.statusId) return;\n    const toCreate: ActiveEffect.CreateData[] = [];\n    for (const [id, mutation] of Object.entries(related)) {\n      const statusEffect = getStatusEffectDataById(id);\n      //skip if the effect already exists on the actor\n      if (this.actor.statuses.has(id) || !statusEffect) continue;\n      //apply the mutation if one exists\n      const effect = foundry.utils.mergeObject(\n        statusEffect,\n        { statuses: [id], ...mutation },\n        { performDeletions: true },\n      );\n      toCreate.push(effect);\n    }\n    await this.actor?.createEmbeddedDocuments('ActiveEffect', toCreate);\n  }\n\n  private _handleItemMatch(\n    match: RegExpMatchArray,\n    change: ActiveEffect.EffectChangeData,\n    doc: SwadeActor | SwadeItem,\n  ) {\n    //get the properties from the match\n    const key = match[3].trim();\n    const value = change.value;\n    //get the affected items\n    const affectedItems = this._getAffectedItems(doc, change);\n    //apply the AE to each item\n    for (const item of affectedItems) {\n      const overrides = foundry.utils.flattenObject(item.overrides ?? {});\n      // Specialized handling of modifiers so they are listed separately in the RollDialog\n      if (\n        key === 'system.die.modifier' &&\n        match[1].trim().toLowerCase() === 'skill' &&\n        change.mode === CONST.ACTIVE_EFFECT_MODES.ADD\n      ) {\n        const effectKey = 'system.effects';\n        overrides[effectKey] ??= new Array<RollModifier>();\n        this._updateTraitRollEffects(overrides[effectKey], value);\n        // NOT calling super.apply because normal apply doesn't handle objects\n        foundry.utils.setProperty(item, effectKey, overrides[effectKey]);\n      } else {\n        //mock up a new change object with the key and value we extracted from the original key and feed it into the super apply method alongside the item\n        const mockChange = { ...change, key, value };\n        // @ts-expect-error AE.apply doesn't actually require an Actor, just a Document\n        const changes = super.apply(item, mockChange);\n        Object.assign(overrides, changes);\n      }\n      item.overrides = foundry.utils.expandObject(overrides);\n    }\n  }\n\n  private _handleAttributeMatch(\n    match: RegExpMatchArray,\n    change: ActiveEffect.EffectChangeData,\n    doc: SwadeActor,\n  ) {\n    const overrides = foundry.utils.flattenObject(doc.overrides ?? {});\n    const effectKey = 'system.attributes.' + match[1] + '.effects';\n    if (!(effectKey in overrides))\n      overrides[effectKey] = new Array<RollModifier>();\n    this._updateTraitRollEffects(overrides[effectKey], change.value);\n    // NOT calling super.apply because normal apply doesn't handle objects\n    foundry.utils.setProperty(doc, effectKey, overrides[effectKey]);\n    doc.overrides = foundry.utils.expandObject(overrides);\n  }\n\n  private _handleGlobalModifierMatch(\n    match: RegExpMatchArray,\n    change: ActiveEffect.EffectChangeData,\n    doc: SwadeActor,\n  ) {\n    if (doc.system instanceof GroupData) return; // Really shouldn't be a group\n    if (\n      change.mode === CONST.ACTIVE_EFFECT_MODES.ADD &&\n      doc.system.stats.globalMods.hasOwnProperty(match[1])\n    ) {\n      const overrides = foundry.utils.flattenObject(doc.overrides ?? {});\n      const effectKey = 'system.stats.globalMods.' + match[1];\n      if (!(effectKey in overrides))\n        overrides[effectKey] = new Array<RollModifier>();\n      this._updateTraitRollEffects(overrides[effectKey], change.value, false);\n      // NOT calling super.apply because normal apply doesn't handle objects\n      foundry.utils.setProperty(doc, effectKey, overrides[effectKey]);\n      doc.overrides = foundry.utils.expandObject(overrides);\n    } else {\n      Logger.warn(\n        'Invalid Global Modifier ' + change.key + 'on effect ' + this.id,\n      );\n    }\n  }\n\n  private _handlePTModifierMatch(\n    match: RegExpMatchArray,\n    change: ActiveEffect.EffectChangeData,\n    doc: SwadeActor,\n  ) {\n    // Really shouldn't be a group\n    if (doc.system instanceof GroupData) return;\n    if (change.mode === CONST.ACTIVE_EFFECT_MODES.CUSTOM) {\n      super.apply(doc, change);\n      return;\n    }\n    const autoCalc =\n      match[1] === 'parry'\n        ? doc.system.details.autoCalcParry\n        : doc.system.details.autoCalcToughness;\n    const target =\n      match[2] === 'armor'\n        ? 'armorEffects' // Armor gets its own display\n        : autoCalc\n          ? 'effects'\n          : 'sources';\n    doc.system.stats[match[1]][target]?.push({\n      label: this.name,\n      value: Number(change.value),\n      mode: change.mode,\n    });\n  }\n\n  /** This functions checks the effect expiration behavior and either auto-deletes or prompts for deletion */\n  async expire() {\n    if (!isFirstOwner(this.parent)) {\n      return game.swade.sockets.removeStatusEffect(this.uuid);\n    }\n\n    const statusId = this.statusId ?? '';\n    if (game.swade.effectCallbacks.has(statusId)) {\n      const callbackFn = game.swade.effectCallbacks.get(statusId, {\n        strict: true,\n      });\n      return callbackFn(this);\n    }\n\n    const expiration = this.system.expiration;\n    const startOfTurnAuto =\n      expiration === constants.STATUS_EFFECT_EXPIRATION.StartOfTurnAuto;\n    const startOfTurnPrompt =\n      expiration === constants.STATUS_EFFECT_EXPIRATION.StartOfTurnPrompt;\n    const endOfTurnAuto =\n      expiration === constants.STATUS_EFFECT_EXPIRATION.EndOfTurnAuto;\n    const endOfTurnPrompt =\n      expiration === constants.STATUS_EFFECT_EXPIRATION.EndOfTurnPrompt;\n\n    if (startOfTurnAuto || endOfTurnAuto) {\n      await this.delete();\n    } else if (startOfTurnPrompt || endOfTurnPrompt) {\n      await this.promptEffectDeletion();\n    }\n  }\n\n  isExpired(pointInTurn: 'start' | 'end'): boolean {\n    const isRightPointInTurn =\n      (pointInTurn === 'start' && this.expiresAtStartOfTurn) ||\n      (pointInTurn === 'end' && this.expiresAtEndOfTurn);\n    const remaining = this.duration?.remaining ?? 0;\n    return isRightPointInTurn && remaining < 1;\n  }\n\n  async promptEffectDeletion() {\n    const title = game.i18n.format('SWADE.RemoveEffectTitle', {\n      label: this.name,\n    });\n    const content = game.i18n.format('SWADE.RemoveEffectBody', {\n      label: this.name,\n      parent: this.parent?.name,\n    });\n    const buttons: Record<string, DialogButton> = {\n      yes: {\n        label: game.i18n.localize('Yes'),\n        icon: '<i class=\"fas fa-check\"></i>',\n        callback: () => this.delete(),\n      },\n      no: {\n        label: game.i18n.localize('No'),\n        icon: '<i class=\"fas fa-times\"></i>',\n      },\n      reset: {\n        label: game.i18n.localize('SWADE.ActiveEffects.ResetDuration'),\n        icon: '<i class=\"fas fa-repeat\"></i>',\n        callback: async () => {\n          await this.resetDuration();\n        },\n      },\n    };\n    new Dialog({ title, content, buttons }).render(true);\n  }\n\n  async resetDuration() {\n    await this.update({\n      duration: {\n        startRound: game.combat?.round ?? 1,\n        startTime: game.time.worldTime,\n      },\n    });\n  }\n\n  protected override async _onUpdate(\n    changed: ActiveEffect.UpdateData,\n    options: ActiveEffect.Database.OnUpdateOperation,\n    userId: string,\n  ) {\n    await super._onUpdate(changed, options, userId);\n    if (this.system.loseTurnOnHold) {\n      const activeCombat = game.combats?.active;\n      if (!this.actor || !activeCombat) return;\n      // If the Actor is a Token, get the combatant by the Token ID instead of Actor ID because Tokens share Actor IDs. Otherwise, get the combatant by Actor ID.\n      const combatant = this.actor.isToken\n        ? activeCombat?.getCombatantsByToken(\n            this.actor.token?.id as string,\n          )?.[0]\n        : activeCombat?.getCombatantsByActor(this.actor.id as string)?.[0];\n      if (combatant?.getFlag('swade', 'roundHeld')) {\n        await combatant?.update({ 'flags.swade.turnLost': true });\n        await combatant?.toggleHold();\n      }\n    }\n  }\n\n  protected override async _preUpdate(\n    changed: ActiveEffect.UpdateData,\n    options: ActiveEffect.Database.PreUpdateOptions,\n    user: User.Implementation,\n  ) {\n    super._preUpdate(changed, options, user);\n    //return early if the parent isn't an actor or we're not actually affecting items\n    if (this.affectsItems && this.parent) {\n      this._removeEffectsFromItems(this.parent);\n    }\n  }\n\n  protected override async _preDelete(\n    options: ActiveEffect.Database.PreDeleteOptions,\n    user: User.Implementation,\n  ) {\n    super._preDelete(options, user);\n    const parent = this.parent;\n    //remove the effects from the item\n    if (this.affectsItems && parent instanceof SwadeActor) {\n      this._removeEffectsFromItems(parent);\n    }\n    // Get the active Combat if there is one.\n    const combat = game.combats?.active;\n    const combatant = this?.actor?.getCombatant(combat);\n    if (combat && combatant) {\n      // If status is Holding, turn off Hold for Combatant.\n      if (this.statusId === 'holding') {\n        await combatant?.update({ 'flags.swade.-=roundHeld': null });\n      }\n    }\n  }\n\n  protected override async _preCreate(\n    data: ActiveEffect.CreateData,\n    options: ActiveEffect.Database.PreUpdateOptions,\n    user: User.Implementation,\n  ): Promise<boolean | void> {\n    //make sure active effects can't be added to group actors\n    if (this.parent?.type === 'group') return false;\n    super._preCreate(data, options, user);\n    if (!data.img) {\n      let path = 'systems/swade/assets/icons/active-effect.svg';\n      if (this.parent instanceof SwadeItem) path = this.parent.img as string;\n      this.updateSource({ img: path });\n    }\n    const isDefaultName = data.name === SwadeActiveEffect.defaultName();\n    if (this.parent instanceof SwadeItem && (!data.name || isDefaultName)) {\n      this.updateSource({ name: this.parent.name });\n    }\n    if (!this.origin && this.parent) {\n      this.updateSource({ origin: this.parent.uuid });\n    }\n\n    //localize names, just to be sure\n    this.updateSource({ name: game.i18n.localize(this.name) });\n\n    //automatically favorite status effects\n    if (this.statusId) this.updateSource({ 'system.favorite': true });\n\n    //set the world time at creation\n    this.updateSource({ duration: { startTime: game.time.worldTime } });\n\n    // Get the active Combat if there is one.\n    const combat = game.combats?.active;\n    const combatant = this.actor?.getCombatant(combat);\n    if (combat && combatant) {\n      // If status is Holding, turn on Hold for Combatant.\n      if (this.statusId === 'holding') {\n        await combatant.setRoundHeld(combat.current.round as number);\n      }\n      // If there's no duration value and there's a combat, at least set the combat ID which then sets a startRound and startTurn, too.\n      if (!data.duration?.combat) {\n        this.updateSource({ 'duration.combat': combat.id });\n      }\n      if (this.system.loseTurnOnHold) {\n        if (combatant.roundHeld) {\n          await Promise.allSettled([\n            combatant.update({ 'flags.swade.turnLost': true }),\n            combatant.toggleHold(),\n          ]);\n        }\n      }\n    }\n\n    //Update wild attack damage based on a flag\n    if (this.statuses.has('wild-attack')) {\n      const damageModIndex = this.changes.findIndex(\n        (c) => c.key === 'system.stats.globalMods.damage',\n      );\n      const newDamage = this.actor?.getFlag('swade', 'wildAttackDamage');\n      if (['number', 'string'].includes(typeof newDamage)) {\n        const newChanges = foundry.utils.deepClone(this.changes);\n        newChanges[damageModIndex].value = String(newDamage);\n        this.updateSource({ changes: newChanges });\n      }\n    }\n  }\n\n  protected override _onCreate(\n    data: ActiveEffect.CreateData,\n    options: ActiveEffect.Database.OnCreateOperation,\n    userId: string,\n  ): void {\n    super._onCreate(data, options, userId);\n    if (userId === game.userId) this._applyRelatedEffects();\n  }\n\n  protected override _displayScrollingStatus(enabled: boolean) {\n    super._displayScrollingStatus(enabled);\n    const tokens = (this.target as SwadeActor)?.getActiveTokens(true);\n    const isNegative = CONFIG.SWADE.negativeStatusEffects.includes(\n      this.statusId ?? '',\n    );\n\n    const negativeColor = '#D41159';\n    const positiveColor = '#1A85FF';\n    const colorCode = enabled\n      ? isNegative // if the AE is added and negative, flash negative color, else flash positive color\n        ? negativeColor\n        : positiveColor\n      : isNegative // if the AE is getting removed and negative, flash negative color, else flash positive color\n        ? positiveColor\n        : negativeColor;\n    const color = Color.from(colorCode);\n    for (const token of tokens) {\n      token.ring?.flashColor(color, {\n        duration: 1000,\n        easing: CONFIG.Token.ring?.ringClass.createSpikeEasing(0.4),\n      });\n    }\n  }\n}\n","/**\n * A class used to properly animate html `details` tags\n * @see https://css-tricks.com/how-to-animate-the-details-element/\n */\nexport class Accordion {\n  el: HTMLDetailsElement;\n  summary: HTMLElement | null;\n  content: HTMLElement | null;\n  isExpanding: boolean;\n  isClosing: boolean;\n  animation: Animation | null;\n  options: AccordionOptions;\n\n  #defaultOptions: KeyframeAnimationOptions = {\n    duration: 400,\n    easing: 'ease-in-out',\n  };\n\n  constructor(\n    el: HTMLDetailsElement,\n    contentSelector: string = '.content',\n    options?: AccordionOptions,\n  ) {\n    this.options = { ...this.#defaultOptions, ...options };\n    // Store the <details> element\n    this.el = el;\n    // Store the <summary> element\n    this.summary = el.querySelector('summary');\n    // Store the <div class=\"content\"> element\n    this.content = el.querySelector(contentSelector);\n\n    // Store the animation object (so we can cancel it if needed)\n    this.animation = null;\n    // Store if the element is closing\n    this.isClosing = false;\n    // Store if the element is expanding\n    this.isExpanding = false;\n    // Detect user clicks on the summary element\n    this.summary?.addEventListener('click', this.onClick.bind(this));\n  }\n\n  onClick(e: PointerEvent) {\n    // Stop default behavior from the browser\n    e.preventDefault();\n\n    // Stop early if we clicked on a button inside summary\n    if (e.target instanceof HTMLButtonElement) return;\n    if ((e.target as HTMLElement).parentElement instanceof HTMLButtonElement) {\n      return;\n    }\n\n    // Add an overflow on the <details> to avoid content overflowing\n    this.el.style.overflow = 'hidden';\n    // Check if the element is being closed or is already closed\n    if (this.isClosing || !this.el.open) {\n      this.open();\n      this.options.onOpen?.(this.el);\n      // Check if the element is being opened or is already open\n    } else if (this.isExpanding || this.el.open) {\n      this.shrink();\n      this.options.onClose?.(this.el);\n    }\n  }\n\n  shrink() {\n    // Set the element as \"being closed\"\n    this.isClosing = true;\n\n    // Store the current height of the element\n    const startHeight = `${this.el.offsetHeight}px`;\n    // Calculate the height of the summary\n    const endHeight = `${this.summary?.offsetHeight ?? 0}px`;\n\n    // If there is already an animation running\n    if (this.animation) {\n      // Cancel the current animation\n      this.animation.cancel();\n    }\n\n    // Start a WAAPI animation\n    this.animation = this.el.animate(\n      {\n        // Set the keyframes from the startHeight to endHeight\n        height: [startHeight, endHeight],\n      },\n      {\n        duration: this.options.duration,\n        easing: this.options.easing,\n      },\n    );\n\n    // When the animation is complete, call onAnimationFinish()\n    this.animation.onfinish = () => this.onAnimationFinish(false);\n    // If the animation is cancelled, isClosing variable is set to false\n    this.animation.oncancel = () => (this.isClosing = false);\n  }\n\n  open() {\n    // Apply a fixed height on the element\n    this.el.style.height = `${this.el.offsetHeight}px`;\n    // Force the [open] attribute on the details element\n    this.el.open = true;\n    // Wait for the next frame to call the expand function\n    window.requestAnimationFrame(() => this.expand());\n  }\n\n  expand() {\n    // Set the element as \"being expanding\"\n    this.isExpanding = true;\n    // Get the current fixed height of the element\n    const startHeight = `${this.el.offsetHeight}px`;\n    // Calculate the open height of the element (summary height + content height)\n    const endHeight = `${\n      (this.summary?.offsetHeight ?? 0) + (this.content?.offsetHeight ?? 0)\n    }px`;\n\n    // If there is already an animation running\n    if (this.animation) {\n      // Cancel the current animation\n      this.animation.cancel();\n    }\n\n    // Start a WAAPI animation\n    this.animation = this.el.animate(\n      {\n        // Set the keyframes from the startHeight to endHeight\n        height: [startHeight, endHeight],\n      },\n      {\n        duration: this.options.duration,\n        easing: this.options.easing,\n      },\n    );\n    // When the animation is complete, call onAnimationFinish()\n    this.animation.onfinish = () => this.onAnimationFinish(true);\n    // If the animation is cancelled, isExpanding variable is set to false\n    this.animation.oncancel = () => (this.isExpanding = false);\n  }\n\n  onAnimationFinish(open: boolean) {\n    // Set the open attribute based on the parameter\n    this.el.open = open;\n    // Clear the stored animation\n    this.animation = null;\n    // Reset isClosing & isExpanding\n    this.isClosing = false;\n    this.isExpanding = false;\n    // Remove the overflow hidden and the fixed height\n    this.el.style.height = this.el.style.overflow = '';\n  }\n}\n\nexport interface AccordionOptions extends KeyframeAnimationOptions {\n  onOpen?: (element: HTMLDetailsElement) => void;\n  onClose?: (element: HTMLDetailsElement) => void;\n}\n","import { constants } from '../constants';\nimport SwadeActiveEffect from '../documents/active-effect/SwadeActiveEffect';\nimport SwadeActor from '../documents/actor/SwadeActor';\nimport SwadeItem from '../documents/item/SwadeItem';\nimport { Accordion } from '../style/Accordion';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\nexport default class ActiveEffectWizard extends HandlebarsApplicationMixin(\n  ApplicationV2,\n) {\n  constructor(options) {\n    super(options);\n    this.document = options.document;\n    if (this.document instanceof SwadeItem) {\n      this.#effect.name = this.document.name;\n      this.#effect.img = this.document.img;\n    }\n  }\n\n  #effect: ActiveEffect.CreateData = {\n    name: SwadeActiveEffect.defaultName(),\n    img: 'systems/swade/assets/icons/active-effect.svg',\n  };\n\n  #changes: ChangePreview[] = [];\n  #accordions: Accordion[] = [];\n  #collapsibleStates: Record<string, boolean> = {\n    attribute: true,\n    skill: true,\n    derived: true,\n  };\n\n  currAttribute: string = 'agility';\n  currSkill: string = '';\n\n  document: SwadeActor | SwadeItem;\n\n  static override DEFAULT_OPTIONS = {\n    window: {\n      title: 'A.E.G.I.S.',\n    },\n    position: {\n      width: 800,\n      height: 800,\n    },\n    classes: [\n      'swade',\n      'active-effect-wizard',\n      'swade-application',\n      'standard-form',\n    ],\n    tag: 'form',\n    form: {\n      handler: ActiveEffectWizard.#createEffect,\n      submitOnClose: false,\n      submitOnChange: false,\n      closeOnSubmit: false,\n    },\n    actions: {\n      addChange: ActiveEffectWizard.#onAddChange,\n      deleteChange: ActiveEffectWizard.#onDeleteChange,\n      clickIcon: ActiveEffectWizard.#onClickIcon,\n    },\n  };\n\n  static override PARTS = {\n    form: {\n      template: 'systems/swade/templates/apps/active-effect-wizard.hbs',\n      scrollable: ['.presets'],\n    },\n    footer: { template: 'templates/generic/form-footer.hbs' },\n  };\n\n  /**\n   * Determine if the target of this AE is a vehicle\n   */\n  get targetIsVehicle() {\n    if (this.document instanceof SwadeActor) {\n      return this.document.type === 'vehicle';\n    } else return this.document.parent?.type === 'vehicle';\n  }\n\n  override _onChangeForm(formConfig, event) {\n    super._onChangeForm(formConfig, event);\n    const target = event.target as HTMLInputElement | HTMLSelectElement;\n    if (!target) return; // TODO: what actually do\n    const index = target.closest('li')?.dataset.index;\n    if (target.classList.contains('value')) {\n      this.#changes[Number(index)].value = target.value;\n    } else if (target.classList.contains('mode')) {\n      this.#changes[Number(index)].mode = Number(target.value);\n    } else if (target.classList.contains('target')) {\n      this[target.name] = target.value;\n    }\n    const formData = new FormDataExtended(this.form);\n    foundry.utils.mergeObject(this.#effect, formData.object);\n    this.render();\n  }\n\n  override async _onRender(context, options) {\n    await super._onRender(context, options);\n    this.#setupAccordions();\n  }\n\n  override async _prepareContext(options) {\n    const context = await super._prepareContext(options);\n    return foundry.utils.mergeObject(context, {\n      isVehicle: this.targetIsVehicle,\n      effect: this.#effect,\n      changes: this.#changes,\n      collapsibleStates: this.#collapsibleStates,\n      expirationOptions: this.#getExpirationOptions(),\n      skillSuggestions: this.#getSkillSuggestions(),\n      derivedPresets: this.#getDerivedPresets(),\n      globalModPresets: this.#getGlobalModPresets(),\n      otherPresets: this.#getOtherStatsPresets(),\n      attributes: {\n        agility: 'SWADE.AttrAgi',\n        smarts: 'SWADE.AttrSma',\n        spirit: 'SWADE.AttrSpr',\n        strength: 'SWADE.AttrStr',\n        vigor: 'SWADE.AttrVig',\n      },\n      currAttribute: this.currAttribute,\n      currSkill: this.currSkill,\n      changeModes: {\n        [foundry.CONST.ACTIVE_EFFECT_MODES.ADD]: 'EFFECT.MODE_ADD',\n        [foundry.CONST.ACTIVE_EFFECT_MODES.OVERRIDE]: 'EFFECT.MODE_OVERRIDE',\n        [foundry.CONST.ACTIVE_EFFECT_MODES.UPGRADE]: 'EFFECT.MODE_UPGRADE',\n      },\n      buttons: [\n        {\n          type: 'submit',\n          icon: 'fa-solid fa-arrow-down-to-line',\n          label: 'SWADE.ActiveEffects.Add',\n        },\n      ],\n    });\n  }\n\n  static async #createEffect(\n    this: ActiveEffectWizard,\n    _event: SubmitEvent,\n    _form: HTMLFormElement,\n    _formData: FormDataExtended,\n  ) {\n    this.#prepareChanges();\n    const data = foundry.utils.mergeObject(this.#effect, {\n      transfer:\n        this.document instanceof SwadeItem && this.document.type !== 'power', // only transfer on non-power items\n    });\n\n    await getDocumentClass('ActiveEffect').create(data, {\n      renderSheet: this.#changes.length === 0,\n      parent: this.document as SwadeActor | SwadeItem,\n    });\n    this.close();\n  }\n\n  #getSkillSuggestions(): string[] {\n    if (this.document instanceof SwadeActor) {\n      return this.document.itemTypes.skill.map((skill) => skill.name!);\n    } else if (this.document.parent instanceof SwadeActor) {\n      return this.document.parent.itemTypes.skill.map((skill) => skill.name!);\n    }\n    return [];\n  }\n\n  #getDerivedPresets(): ActiveEffectPreset[] {\n    if (this.targetIsVehicle) {\n      return [\n        {\n          label: game.i18n.localize('SWADE.Tough'),\n          key: 'system.toughness.total',\n        },\n        {\n          label: game.i18n.localize('SWADE.Armor'),\n          key: 'system.toughness.armor',\n        },\n      ];\n    } else {\n      return [\n        {\n          label: game.i18n.localize('SWADE.Tough'),\n          key: 'system.stats.toughness.value',\n        },\n        {\n          label: game.i18n.localize('SWADE.Armor'),\n          key: 'system.stats.toughness.armor',\n        },\n        {\n          label: game.i18n.localize('SWADE.Parry'),\n          key: 'system.stats.parry.value',\n        },\n      ];\n    }\n  }\n\n  #getGlobalModPresets(): ActiveEffectPreset[] {\n    return [\n      {\n        label: game.i18n.localize('SWADE.GlobalMod.Trait'),\n        key: 'system.stats.globalMods.trait',\n      },\n      {\n        label: game.i18n.localize('SWADE.GlobalMod.Agility'),\n        key: 'system.stats.globalMods.agility',\n      },\n      {\n        label: game.i18n.localize('SWADE.GlobalMod.Smarts'),\n        key: 'system.stats.globalMods.smarts',\n      },\n      {\n        label: game.i18n.localize('SWADE.GlobalMod.Spirit'),\n        key: 'system.stats.globalMods.spirit',\n      },\n      {\n        label: game.i18n.localize('SWADE.GlobalMod.Strength'),\n        key: 'system.stats.globalMods.strength',\n      },\n      {\n        label: game.i18n.localize('SWADE.GlobalMod.Vigor'),\n        key: 'system.stats.globalMods.vigor',\n      },\n      {\n        label: game.i18n.localize('SWADE.GlobalMod.Attack'),\n        key: 'system.stats.globalMods.attack',\n      },\n      {\n        label: game.i18n.localize('SWADE.GlobalMod.Damage'),\n        key: 'system.stats.globalMods.damage',\n      },\n      {\n        label: game.i18n.localize('SWADE.GlobalMod.AP'),\n        key: 'system.stats.globalMods.ap',\n      },\n    ];\n  }\n\n  #getOtherStatsPresets(): ActiveEffectPreset[] {\n    if (this.targetIsVehicle) {\n      return [\n        {\n          label: game.i18n.localize('SWADE.Size'),\n          key: 'system.size',\n        },\n        {\n          label: game.i18n.localize('SWADE.IgnWounds'),\n          key: 'system.wounds.ignored',\n        },\n        {\n          label: game.i18n.localize('SWADE.WoundsMax'),\n          key: 'system.wounds.max',\n        },\n      ];\n    } else {\n      return [\n        {\n          label: game.i18n.localize('SWADE.Size'),\n          key: 'system.stats.size',\n        },\n        {\n          label: game.i18n.localize('SWADE.Pace'),\n          key: 'system.pace',\n        },\n        {\n          label: game.i18n.localize('SWADE.RunningDie'),\n          key: 'system.pace.running.die',\n        },\n        {\n          label: game.i18n.localize('SWADE.RunningMod'),\n          key: 'system.pace.running.mod',\n        },\n        {\n          label: game.i18n.localize('SWADE.EncumbranceSteps'),\n          key: 'system.attributes.strength.encumbranceSteps',\n        },\n        {\n          label: game.i18n.localize('SWADE.IgnWounds'),\n          key: 'system.wounds.ignored',\n        },\n        {\n          label: game.i18n.localize('SWADE.WoundsMax'),\n          key: 'system.wounds.max',\n        },\n        {\n          label: game.i18n.localize('SWADE.BenniesMax'),\n          key: 'system.bennies.max',\n        },\n        {\n          label: game.i18n.localize('SWADE.FatigueMax'),\n          key: 'system.fatigue.max',\n        },\n        {\n          label: game.i18n.localize(\n            'SWADE.EffectCallbacks.Shaken.UnshakeModifier',\n          ),\n          key: 'system.attributes.spirit.unShakeBonus',\n        },\n        {\n          label: game.i18n.localize('SWADE.DamageApplicator.SoakModifier'),\n          key: 'system.attributes.vigor.soakBonus',\n        },\n        {\n          label: game.i18n.localize(\n            'SWADE.EffectCallbacks.Stunned.UnStunModifier',\n          ),\n          key: 'system.attributes.vigor.unStunBonus',\n        },\n        {\n          label: game.i18n.localize(\n            'SWADE.EffectCallbacks.BleedingOut.BleedOutModifier',\n          ),\n          key: 'system.attributes.vigor.bleedOut.modifier',\n        },\n        {\n          label: game.i18n.localize(\n            'SWADE.EffectCallbacks.BleedingOut.IgnoreWounds',\n          ),\n          key: 'system.attributes.vigor.bleedOut.ignoreWounds',\n        },\n        {\n          label: game.i18n.localize('SWADE.WealthDie.Sides'),\n          key: 'system.details.wealth.die',\n        },\n        {\n          label: game.i18n.localize('SWADE.WealthDie.WildSides'),\n          key: 'system.details.wealth.wild-die',\n        },\n        {\n          label: game.i18n.localize('SWADE.WealthDie.Modifier'),\n          key: 'system.details.wealth.modifier',\n        },\n      ];\n    }\n  }\n\n  #getExpirationOptions(): Record<number, string> {\n    return {\n      [constants.STATUS_EFFECT_EXPIRATION.StartOfTurnAuto]:\n        'SWADE.Expiration.BeginAuto',\n      [constants.STATUS_EFFECT_EXPIRATION.StartOfTurnPrompt]:\n        'SWADE.Expiration.BeginPrompt',\n      [constants.STATUS_EFFECT_EXPIRATION.EndOfTurnAuto]:\n        'SWADE.Expiration.EndAuto',\n      [constants.STATUS_EFFECT_EXPIRATION.EndOfTurnPrompt]:\n        'SWADE.Expiration.EndPrompt',\n    };\n  }\n\n  #prepareChanges() {\n    this.#effect.changes = this.#changes.map((c) => {\n      return {\n        key: c.key,\n        mode: c.mode,\n        value: c.value,\n      };\n    });\n  }\n\n  static #onAddChange(\n    this: ActiveEffectWizard,\n    _event: PointerEvent,\n    currentTarget: HTMLElement,\n  ) {\n    const details = currentTarget.closest('details');\n    const keyPart = currentTarget.dataset.key as string;\n    const category = details?.dataset.category as string;\n    const target =\n      (details?.querySelector<HTMLInputElement | HTMLSelectElement>('.target')\n        ?.value as string) ?? currentTarget.innerText;\n\n    let label = '';\n    let key = '';\n    if (category === 'skill') {\n      if (!target) {\n        return ui.notifications.warn('Please enter a skill name first!');\n      }\n      label = `${target.capitalize()} ${currentTarget.innerText}`.trim();\n      key = `@${category.capitalize()}{${target}}[system.${keyPart}]`;\n    } else if (category === 'attribute') {\n      label = `${target.capitalize()} ${currentTarget.innerText}`.trim();\n      key = `system.attributes.${target}.${keyPart}`;\n    } else {\n      label = target;\n      key = keyPart;\n    }\n\n    this.#changes?.push({\n      label: label,\n      key: key,\n      mode: foundry.CONST.ACTIVE_EFFECT_MODES.ADD,\n    });\n    this.render({ force: true });\n  }\n\n  static #onDeleteChange(\n    this: ActiveEffectWizard,\n    _event: PointerEvent,\n    target: HTMLElement,\n  ) {\n    const index = target.closest('li')?.dataset.index;\n    this.#changes.splice(Number(index), 1);\n    this.render({ force: true });\n  }\n\n  #setupAccordions() {\n    this.form\n      ?.querySelectorAll<HTMLDetailsElement>('.presets details')\n      .forEach((el) => {\n        this.#accordions.push(new Accordion(el, '.content', { duration: 200 }));\n        const id = el.dataset.category as string;\n        el.querySelector('summary')?.addEventListener('click', () => {\n          const states = this.#collapsibleStates;\n          const currentState = Boolean(states[id]);\n          states[id] = !currentState;\n        });\n      });\n  }\n\n  static #onClickIcon(\n    this: ActiveEffectWizard,\n    _event: PointerEvent,\n    _target: HTMLElement,\n  ) {\n    new foundry.applications.apps.FilePicker.implementation({\n      current: this.#effect.img as string,\n      type: 'image',\n      callback: this.#onChangeIcon.bind(this),\n    }).render({ force: true });\n  }\n\n  #onChangeIcon(path: string, _picker: FilePicker) {\n    this.#effect.img = path;\n    this.render({ force: true });\n  }\n}\n\ninterface ActiveEffectPreset {\n  label: string;\n  key: string;\n  group?: string;\n}\n\ninterface ChangePreview extends Partial<ActiveEffect.EffectChangeData> {\n  label: string;\n}\n","import { Advance } from '../../interfaces/Advance.interface';\nimport { constants } from '../constants';\nimport SwadeActor from '../documents/actor/SwadeActor';\nimport { getRankFromAdvanceAsString } from '../util';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\nexport class AdvanceEditor extends HandlebarsApplicationMixin(ApplicationV2) {\n  constructor({ advance, actor, ...options }: AdvanceEditorConfiguration) {\n    super(options);\n    if (actor.type !== 'character' && actor.type !== 'npc') {\n      throw TypeError(`Actor type ${actor.type} not permissible`);\n    }\n    this.#actor = actor;\n    this.#advance = advance;\n  }\n\n  #actor: SwadeActor;\n  #advance: Advance;\n\n  get actor() {\n    return this.#actor;\n  }\n\n  get advance() {\n    return this.#advance;\n  }\n\n  get advances() {\n    return foundry.utils.getProperty(\n      this.actor,\n      'system.advances.list',\n    ) as Collection<Advance>;\n  }\n\n  static override DEFAULT_OPTIONS = {\n    window: {\n      title: 'SWADE.Advances.EditorTitle',\n      contentClasses: ['standard-form'],\n    },\n    position: {\n      width: 420,\n      height: 'auto',\n    },\n    classes: ['swade', 'advance-editor', 'swade-application'],\n    tag: 'form',\n    form: {\n      handler: AdvanceEditor.onSubmit,\n      submitOnClose: false,\n      closeOnSubmit: false,\n      submitOnChange: false,\n    },\n  };\n\n  static override PARTS = {\n    form: { template: 'systems/swade/templates/apps/advanceEditor.hbs' },\n    footer: { template: 'templates/generic/form-footer.hbs' },\n  };\n\n  override async _prepareContext(options) {\n    const context = foundry.utils.mergeObject(\n      await super._prepareContext(options),\n      {\n        advance: this.advance,\n        rank: getRankFromAdvanceAsString(this.advance.sort ?? 0),\n        advanceTypes: this.#getAdvanceTypes(),\n        owner: this.actor.isOwner,\n        notes:\n          await foundry.applications.ux.TextEditor.implementation.enrichHTML(\n            this.advance.notes,\n            {\n              async: true,\n              secrets: this.actor.isOwner,\n            },\n          ),\n        buttons: [\n          {\n            type: 'submit',\n            icon: 'fa-solid fa-floppy-disk',\n            label: 'Save Changes',\n          },\n        ],\n      },\n    );\n    return context;\n  }\n\n  static async onSubmit(\n    this: AdvanceEditor,\n    event: SubmitEvent,\n    _form: HTMLFormElement,\n    formData: FormDataExtended,\n  ) {\n    const expanded = foundry.utils.expandObject(formData.object);\n    const sortHasChanged = expanded.sort !== this.advance.sort;\n    // Merge data to update\n    const advance: Advance = foundry.utils.mergeObject(this.advance, {\n      notes: expanded.advance.notes,\n      planned: expanded.planned,\n      type: expanded.type,\n      sort: Math.clamp(expanded.sort, 1, this.advances.size),\n    });\n    if (sortHasChanged) return this.#handleSortingChange(advance);\n    // Normal update operation\n    this.advances.set(advance.id, advance);\n    await this.actor.update(\n      { 'system.advances.list': this.advances.toJSON() },\n      { diff: false },\n    );\n    await this.render({ force: true });\n    if (event.submitter) this.close();\n  }\n\n  #getAdvanceTypes(): Record<number, string> {\n    return {\n      [constants.ADVANCE_TYPE.EDGE]: 'SWADE.Advances.Types.Edge',\n      [constants.ADVANCE_TYPE.SINGLE_SKILL]: 'SWADE.Advances.Types.SingleSkill',\n      [constants.ADVANCE_TYPE.TWO_SKILLS]: 'SWADE.Advances.Types.TwoSkills',\n      [constants.ADVANCE_TYPE.ATTRIBUTE]: 'SWADE.Advances.Types.Attribute',\n      [constants.ADVANCE_TYPE.HINDRANCE]: 'SWADE.Advances.Types.Hindrance',\n    };\n  }\n\n  #handleSortingChange(advance: Advance) {\n    //remove the old advance\n    if (this.advances.has(advance.id)) this.advances.delete(advance.id);\n    const arr = this.advances.toJSON();\n    //calculate new index\n    const newIndex = Math.max(0, advance.sort - 1);\n    //insert new advance into array\n    arr.splice(newIndex, 0, advance);\n    //update sort values based on index\n    arr.forEach((a, i) => (a.sort = i + 1));\n    //yeet\n    return this.actor.update({ 'system.advances.list': arr }, { diff: false });\n  }\n}\n\nexport interface AdvanceEditorConfiguration\n  extends Partial<foundry.applications.api.ApplicationV2.Configuration> {\n  advance: Advance;\n  actor: SwadeActor;\n}\n","import { DieSidesOption } from '../../globals';\nimport SwadeActor from '../documents/actor/SwadeActor';\nimport { getDieSidesRange } from '../util';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\nexport default class AttributeManager extends HandlebarsApplicationMixin(\n  ApplicationV2,\n) {\n  constructor({ actor, ...options }: AttributeManagerConfiguration) {\n    if (!(actor instanceof Actor)) throw new Error('Not an Actor!');\n    super(options);\n    this.#actor = actor;\n  }\n\n  #actor: SwadeActor;\n\n  static override DEFAULT_OPTIONS = {\n    classes: ['swade', 'attribute-manager', 'swade-application'],\n    position: {\n      width: 600,\n      height: 'auto',\n    },\n    window: {\n      contentClasses: ['standard-form'],\n    },\n    tag: 'form',\n    form: {\n      handler: AttributeManager.onSubmit,\n      submitOnClose: false,\n      submitOnChange: true,\n      closeOnSubmit: false,\n    },\n  };\n\n  static override PARTS = {\n    form: { template: 'systems/swade/templates/apps/attribute-manager.hbs' },\n    footer: { template: 'templates/generic/form-footer.hbs' },\n  };\n\n  override get id(): string {\n    return `${this.actor.id}-attributeManager`;\n  }\n\n  override get title(): string {\n    return game.i18n.format('SWADE.AttributeManager.Title', {\n      name: this.actor.name,\n    });\n  }\n\n  get actor(): SwadeActor {\n    return this.#actor;\n  }\n\n  override async _prepareContext(options) {\n    const context: AttributeManagerRenderContext = foundry.utils.mergeObject(\n      await super._prepareContext(options),\n      {\n        isExtra: !this.actor.isWildcard,\n        dieSides:\n          this.actor.type === 'character'\n            ? getDieSidesRange(4, 20)\n            : getDieSidesRange(4, 24),\n        wildDieSides: getDieSidesRange(4, 12),\n        dieSidesWithMinimum:\n          this.actor.type === 'character'\n            ? getDieSidesRange(1, 20)\n            : getDieSidesRange(1, 24),\n        actor: this.actor,\n        buttons: [\n          {\n            type: 'submit',\n            icon: 'fa-solid fa-floppy-disk',\n            label: 'Save Changes',\n          },\n        ],\n      },\n    );\n    return context;\n  }\n\n  static async onSubmit(\n    this: AttributeManager,\n    event: SubmitEvent,\n    _form: HTMLFormElement,\n    formData: FormDataExtended,\n  ) {\n    await this.actor.update(formData.object);\n    await this.render({ force: true });\n    if (event.submitter) this.close();\n  }\n}\n\ninterface AttributeManagerConfiguration\n  extends Partial<foundry.applications.api.ApplicationV2.Configuration> {\n  actor: SwadeActor;\n}\n\ninterface AttributeManagerRenderContext\n  extends Partial<foundry.applications.api.ApplicationV2.RenderContext> {\n  isExtra: boolean;\n  dieSides: DieSidesOption[];\n  wildDieSides: DieSidesOption[];\n  dieSidesWithMinimum: DieSidesOption[];\n  actor: SwadeActor;\n}\n","import { ActorMetadata, ItemMetadata, JournalMetadata } from '../../globals';\nimport { Logger } from '../Logger';\nimport { SWADE } from '../config';\nimport { constants } from '../constants';\nimport SwadeItem from '../documents/item/SwadeItem';\n\nexport class CompendiumTOC<\n  DocumentClass extends\n    | Actor.ImplementationClass\n    | Item.ImplementationClass\n    | JournalEntry.ImplementationClass,\n  RenderContext extends CompendiumTOCData &\n    foundry.applications.sidebar.apps.Compendium.RenderContext,\n  Configuration extends TOCApplicationOptions<CompendiumTOCMetadata> &\n    foundry.applications.sidebar.apps.Compendium.Configuration,\n> extends foundry.applications.sidebar.apps.Compendium<\n  DocumentClass,\n  RenderContext,\n  Configuration,\n  foundry.applications.api.ApplicationV2.RenderOptions\n> {\n  #disclaimer?: string;\n  #fullTextSearch: boolean;\n  #dragDrop: foundry.applications.ux.DragDrop[];\n  #filters: foundry.applications.ux.SearchFilter[];\n\n  static override DEFAULT_OPTIONS = {\n    window: {\n      resizable: true,\n    },\n    position: {\n      width: 800,\n    },\n    dragDrop: [\n      { dropSelector: null, dragSelector: '.toc-entry' },\n      { dropSelector: null, dragSelector: '.journal' },\n    ],\n    filters: [\n      { inputSelector: '[name=\"search\"]', contentSelector: '.content' },\n      { inputSelector: '[name=\"category\"]', contentSelector: '.content' },\n    ],\n    actions: {\n      toggleSearchMode: CompendiumTOC.#onToggleSearchMode,\n      createDocument: CompendiumTOC.#onCreateDocument,\n      openDocument: CompendiumTOC.#onOpenDocument,\n    },\n    classes: ['swade-application', 'compendium-toc'],\n  };\n\n  static override PARTS = {\n    directory: { template: 'systems/swade/templates/apps/compendium-toc.hbs' },\n  };\n\n  static ALLOWED_TYPES = ['Actor', 'Item', 'JournalEntry'];\n\n  static CF_ENTITY = '#[CF_tempEntity]';\n\n  constructor(options?: Configuration) {\n    super(options);\n    this.#disclaimer = options?.disclaimer;\n    this.#fullTextSearch = false;\n    this.#dragDrop = this.#createDragDropHandlers();\n    this.#filters = this.#createFiltersHandlers();\n  }\n\n  #createDragDropHandlers() {\n    return this.options.dragDrop.map((d) => {\n      d.permissions = {\n        dragstart: this._canDragStart.bind(this),\n        drop: this._canDragDrop.bind(this),\n      };\n      d.callbacks = {\n        dragstart: this._onDragStart.bind(this),\n        drop: this._onDrop.bind(this),\n      };\n      return new foundry.applications.ux.DragDrop.implementation(d);\n    });\n  }\n\n  #createFiltersHandlers() {\n    return this.options.filters.map((f) => {\n      f.callback = this._onSearchFilter.bind(this);\n      // f.initial = this.element.querySelector(f.inputSelector)?.value;\n      return new foundry.applications.ux.SearchFilter(f);\n    });\n  }\n\n  get isJournal(): boolean {\n    return this.documentName === 'JournalEntry';\n  }\n\n  get isActor(): boolean {\n    return this.documentName === 'Actor';\n  }\n\n  get columnWidth(): string {\n    switch (this.documentName) {\n      case 'JournalEntry':\n        return '230px';\n      default:\n        return '300px';\n    }\n  }\n\n  get maxColumns(): number {\n    switch (this.documentName) {\n      case 'JournalEntry':\n        return 3;\n      default:\n        return 5;\n    }\n  }\n\n  protected override _initializeApplicationOptions(options) {\n    options = super._initializeApplicationOptions(options);\n    options.classes ??= [];\n    const toRemove = [\n      'tab',\n      'sidebar-tab',\n      'compendium-directory',\n      'directory',\n      'themed',\n      'theme-light',\n      'theme-dark',\n    ];\n    options.classes = options.classes.filter((c) => !toRemove.includes(c));\n    return options;\n  }\n\n  override async _onRender(context, options) {\n    await super._onRender(context, options);\n    const html = this.element;\n    this.#dragDrop.forEach((d) => d.bind(html));\n    this.#filters.forEach((f) => f.bind(html));\n    html\n      .querySelectorAll<HTMLDivElement>('.content')\n      .forEach((e) => (e.style.columnWidth = this.columnWidth));\n    new ResizeObserver(this._onObserveResize.bind(this)).observe(html);\n\n    const { colorScheme } = game.settings.get('core', 'uiConfig');\n    if (colorScheme.interface)\n      this.element.classList.remove('themed', `theme-${colorScheme.interface}`);\n  }\n\n  override async _prepareContext(options) {\n    const context = await super._prepareContext(options);\n    const tocContext: CompendiumTOCData = {\n      isJournal: this.isJournal,\n      isActor: this.isActor,\n      header: game.i18n.localize('SWADE.CompendiumTOC.Header'),\n      wildCardMarker: CONFIG.SWADE.wildCardIcons.compendium,\n      columnWidth: this.columnWidth,\n      disclaimer: this.#disclaimer,\n      searchMode: {\n        icon: 'fa-search',\n        tooltip: 'SIDEBAR.SearchModeName',\n      },\n    };\n\n    if (this.#fullTextSearch) {\n      tocContext.searchMode.icon = 'fa-file-magnifying-glass';\n      tocContext.searchMode.tooltip = 'SIDEBAR.SearchModeFull';\n    }\n\n    if (this.isJournal) {\n      tocContext.entries = await this._getJournalEntries();\n    } else {\n      tocContext.categories = await this._groupContent();\n    }\n\n    if (this.isActor) {\n      tocContext.actorCategories = Array.from(\n        this.collection.index.reduce(\n          (acc, actor) => acc.add(actor.system?.category ?? ''),\n          new Set(['']),\n        ),\n      );\n    }\n    return foundry.utils.mergeObject(context, tocContext);\n  }\n\n  protected override _onDragStart(event: DragEvent) {\n    const src = event.currentTarget as HTMLElement;\n    if (!src.dataset.entryId) return;\n    const indexData = this.collection.index.get(src.dataset.entryId);\n    if (!indexData) return;\n    const dragData = {\n      type: this.documentName,\n      uuid: indexData.uuid,\n    };\n    event.dataTransfer?.setData('text/plain', JSON.stringify(dragData));\n  }\n\n  protected async _onDrop(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    try {\n      const data = JSON.parse(event.dataTransfer!.getData('text/plain')) as {\n        type: string;\n        uuid: string;\n      };\n      const entry = await fromUuid(data.uuid);\n      await super._createDroppedEntry(entry);\n    } catch (error) {\n      Logger.error(error);\n    }\n    this.render(true);\n  }\n\n  static #onToggleSearchMode(\n    this: CompendiumTOC,\n    _event: PointerEvent,\n    _target: HTMLElement,\n  ) {\n    this.#fullTextSearch = !this.#fullTextSearch;\n    this.render();\n  }\n\n  static #onCreateDocument(\n    this: CompendiumTOC,\n    _event: PointerEvent,\n    _target: HTMLElement,\n  ) {\n    this.documentClass.createDialog(\n      {},\n      {\n        renderSheet: true,\n        pack: this.collection.metadata.id,\n      },\n    );\n  }\n\n  static async #onOpenDocument(\n    this: CompendiumTOC,\n    _event: PointerEvent,\n    target: HTMLElement,\n  ) {\n    const entryId = target?.closest('[data-entry-id]')?.dataset.entryId;\n    const pageId = target?.closest('[data-page-id]')?.dataset.pageId;\n    if (!entryId) return;\n    const options: Record<string, unknown> = {};\n    if (pageId) options.pageId = pageId;\n    const doc = await this.collection.getDocument(entryId);\n    if (!doc) return;\n    if (doc.sheet instanceof Application)\n      await doc.sheet?._render(true, options);\n    else if (doc.sheet instanceof foundry.applications.api.ApplicationV2)\n      await doc.sheet.render({ force: true });\n    if (pageId) doc.sheet.goToPage(pageId);\n  }\n\n  protected override _createContextMenus() {\n    const selector = this.isJournal ? '.journal header' : '[data-entry-id]';\n    this._createContextMenu(this._getEntryContextOptions, selector, {\n      fixed: true,\n      hookName: `get${this.documentName}ContextOptions`,\n      parentClassHooks: false,\n    });\n  }\n\n  protected override _onSearchFilter(\n    _event: KeyboardEvent,\n    _query: string,\n    _rgx: RegExp,\n    html: HTMLElement,\n  ) {\n    const selector = this.isJournal ? '.page' : '.toc-entry';\n    const children = html.querySelectorAll<HTMLLIElement>(selector);\n    const pack = game.packs.get(this.collection.metadata.id, { strict: true });\n    const category = this.element.querySelector('[name=\"category\"]')?.value;\n    const queryRaw = this.element.querySelector('[name=\"search\"]')?.value ?? '';\n    const query = foundry.applications.ux.SearchFilter.cleanQuery(queryRaw);\n    const rgx = new RegExp(RegExp.escape(query), 'i');\n    let searchFields: Array<string> = [];\n    switch (this.collection.metadata.type) {\n      case 'Actor':\n        searchFields = CONFIG.SWADE.textSearch.actor;\n        break;\n      // case 'Adventure':\n      //   searchFields = CONFIG.SWADE.textSearch.adventure;\n      //   break;\n      // case 'Cards':\n      //   searchFields = CONFIG.SWADE.textSearch.cards;\n      //   break;\n      case 'Item':\n        searchFields = CONFIG.SWADE.textSearch.item;\n        break;\n      case 'JournalEntry':\n        searchFields = CONFIG.SWADE.textSearch.journalentry.concat(\n          CONFIG.JournalEntry.compendiumIndexFields,\n        );\n        break;\n      // case 'Macro':\n      //   searchFields = CONFIG.SWADE.textSearch.macro;\n      //   break;\n      // case 'Playlist':\n      //   searchFields = CONFIG.SWADE.textSearch.playlist;\n      //   break;\n      // case 'RollTable':\n      //   searchFields = CONFIG.SWADE.textSearch.rolltable;\n      //   break;\n      // case 'Scene':\n      //   searchFields = CONFIG.SWADE.textSearch.scene;\n      //   break;\n    }\n    pack.getIndex({ fields: searchFields }).then(() => {\n      const searchConfig = {\n        filters: [],\n      };\n      if (category?.length)\n        searchConfig.filters.push({\n          field: 'system.category',\n          value: category,\n        });\n      if (this.#fullTextSearch) {\n        searchConfig.query = query;\n      }\n      let searchResults = pack.search(searchConfig);\n      if (this.isJournal) searchResults = searchResults.flatMap((i) => i.pages);\n      if (!this.#fullTextSearch) {\n        searchResults = searchResults.filter((i) => rgx.test(i.name));\n      }\n      for (const li of children) {\n        if (\n          searchResults.some((e) =>\n            [li.dataset.entryId, li.dataset.pageId].includes(e._id),\n          )\n        ) {\n          li.style.display = 'flex';\n        } else {\n          li.style.display = 'none';\n        }\n      }\n      this._fitColumns(this.element, html);\n    });\n  }\n\n  protected async _groupContent(): Promise<CompendiumCategory[]> {\n    if (this.documentName === 'Item') {\n      return this._groupItems();\n    } else {\n      return this._groupActors();\n    }\n  }\n\n  protected async _groupActors(): Promise<CompendiumCategory[]> {\n    const collection = this.collection as CompendiumCollection<ActorMetadata>;\n    const documents = (await collection.getIndex({\n      fields: [\n        /** legacy data start */\n        'data.wildcard',\n        'token.img',\n        'token.scale',\n        /** legacy data end*/\n        'system.wildcard',\n        'system.category',\n        'prototypeToken.randomImg',\n        'prototypeToken.texture.src',\n        'prototypeToken.texture.scaleX',\n        'prototypeToken.texture.scaleY',\n      ],\n    })) as Collection<ActorIndexEntry>;\n    const actors = documents.filter(\n      (doc) => doc.name !== CompendiumTOC.CF_ENTITY,\n    );\n\n    const actorsByType: Record<string, ActorIndexEntry[]> = {};\n    for (const actor of actors) {\n      const type = actor.type;\n      if (!actorsByType[type]) actorsByType[type] = [];\n      actorsByType[type].push(actor);\n    }\n\n    const categories: CompendiumCategory[] = [];\n\n    for (const type in actorsByType) {\n      const actors = actorsByType[type];\n      categories.push({\n        category: game.i18n.localize(`TYPES.Actor.${type}`),\n        entries: await this._groupUnCategorized(actors),\n      });\n    }\n\n    return categories\n      .sort((a, b) => a.category.localeCompare(b.category))\n      .filter((cat) => cat.groups?.length || cat.entries?.length);\n  }\n\n  protected async _groupItems(): Promise<CompendiumCategory[]> {\n    const collection = this.collection as CompendiumCollection<ItemMetadata>;\n    const documents = await collection.getDocuments();\n    const items = documents.filter(\n      (doc) => doc.name !== CompendiumTOC.CF_ENTITY,\n    );\n\n    //set up category groups\n    const categories: CompendiumCategory[] = [];\n\n    //always group powers by type and then rank\n    const powers: foundry.abstract.Document.Stored<SwadeItem<'power'>>[] =\n      items.filter((i) => i.type === 'power');\n    if (powers.length) {\n      categories.push({\n        category: game.i18n.localize('TYPES.Item.power'),\n        groups: this._groupPowers(powers),\n      });\n    }\n    const edges: foundry.abstract.Document.Stored<SwadeItem<'edge'>>[] =\n      items.filter((i) => i.type === 'edge');\n    if (edges.length) {\n      categories.push({\n        category: game.i18n.localize('TYPES.Item.edge'),\n        groups: this._groupEdges(edges),\n      });\n    }\n    const hindrances: foundry.abstract.Document.Stored<\n      SwadeItem<'hindrance'>\n    >[] = items.filter((i) => i.type === 'hindrance');\n    if (hindrances.length) {\n      categories.push({\n        category: game.i18n.localize('TYPES.Item.hindrance'),\n        entries: this._groupHindrances(hindrances),\n      });\n    }\n\n    //sort all items by type\n    const itemsByType: Record<string, Item.Stored[]> = {};\n    const leftovers = items.filter(\n      (i) => !['edge', 'power', 'hindrance'].includes(i.type),\n    );\n    for (const item of leftovers) {\n      const type = item.type;\n      if (!itemsByType[type]) itemsByType[type] = [];\n      itemsByType[type].push(item);\n    }\n\n    const itemsByCategory: Record<string, Item.Stored[]> = {};\n\n    //first we handle items by type\n    for (const type in itemsByType) {\n      const items = itemsByType[type];\n      const typeLabel = game.i18n.localize(`TYPES.Item.${type}`);\n\n      const [unCategorized, categorized] = items.partition(\n        (i) =>\n          i.canHaveCategory &&\n          !!foundry.utils.getProperty(i, 'system.category'),\n      );\n\n      //handle the un-categorized things first, which are sorted by type\n      categories.push({\n        category: typeLabel,\n        entries: await this._groupUnCategorized(unCategorized),\n      });\n\n      //sort categorized items by category\n      for (const item of categorized) {\n        const category = foundry.utils.getProperty(item, 'system.category');\n        if (!itemsByCategory[category]) {\n          itemsByCategory[category] = [];\n        }\n        itemsByCategory[category].push(item);\n      }\n    }\n\n    for (const category in itemsByCategory) {\n      const items = itemsByCategory[category];\n      categories.push({\n        category: category,\n        entries: await this._groupUnCategorized(items),\n      });\n    }\n\n    return categories\n      .sort((a, b) => a.category.localeCompare(b.category))\n      .filter((cat) => cat.groups?.length || cat.entries?.length);\n  }\n\n  protected _groupHindrances(\n    hindrances: foundry.abstract.Document.Stored<SwadeItem<'hindrance'>>[],\n  ): CompendiumEntry[] {\n    return hindrances\n      .map((hindrance) => {\n        let suffix: string;\n        if (hindrance.system.isMajor) {\n          suffix = game.i18n.localize('SWADE.Major');\n        } else if (\n          hindrance.system.severity === constants.HINDRANCE_SEVERITY.MINOR\n        ) {\n          suffix = game.i18n.localize('SWADE.Minor');\n        } else {\n          suffix = `(${game.i18n.localize('SWADE.HindMajor')} / ${game.i18n.localize('SWADE.HindMinor')})`;\n        }\n        const name = `${hindrance.name} ${suffix}`;\n        return {\n          name: name.trim(),\n          id: hindrance.id,\n          img: hindrance.img,\n        };\n      })\n      .sort((a, b) => a.name.localeCompare(b.name)) as CompendiumEntry[];\n  }\n\n  protected _groupPowers(powers: Item.Stored[]): CompendiumGroup[] {\n    const groups: Record<string, Item.Stored[]> = {};\n    for (const power of powers) {\n      const rank = foundry.utils.getProperty(power, 'system.rank') as string;\n      if (!groups[rank]) groups[rank] = [];\n      groups[rank].push(power);\n    }\n\n    return Object.entries(groups)\n      .sort((a, b) => SWADE.ranks.indexOf(a[0]) - SWADE.ranks.indexOf(b[0]))\n      .map((val) => {\n        return {\n          group: val[0],\n          entries: val[1]\n            .map((entry) => {\n              return {\n                name: entry.name as string,\n                id: entry.id,\n                img: entry.img,\n              };\n            })\n            .sort((a, b) => a.name.localeCompare(b.name)),\n        };\n      }) as CompendiumGroup[];\n  }\n\n  protected _groupEdges(\n    edges: foundry.abstract.Document.Stored<SwadeItem<'edge'>>[],\n  ): CompendiumGroup[] {\n    const groups: Record<\n      string,\n      foundry.abstract.Document.Stored<SwadeItem<'edge'>>[]\n    > = {};\n    for (const edge of edges) {\n      const cat: string = foundry.utils.getProperty(edge, 'system.category');\n      if (!groups[cat]) groups[cat] = [];\n      groups[cat].push(edge);\n    }\n    return Object.entries(groups)\n      .sort((a, b) => a[0].localeCompare(b[0]))\n      .map((val) => {\n        return {\n          group: val[0],\n          entries: val[1]\n            .map((entry) => {\n              const requirements = entry.system.requirementString ?? '';\n              return {\n                name: entry.name as string,\n                id: entry.id,\n                img: entry.img,\n                requirements: requirements.replace(/<\\/?i>/g, ''),\n              };\n            })\n            .sort((a, b) => a.name.localeCompare(b.name)),\n        };\n      }) as CompendiumGroup[];\n  }\n\n  protected async _groupUnCategorized(\n    docs: Item.Stored[] | ActorIndexEntry[],\n  ): Promise<CompendiumEntry[]> {\n    const mapped = docs.map(async (doc) => {\n      const isItem = doc?.documentName === 'Item';\n      if (isItem) {\n        const requirements = doc.system.requirementString ?? '';\n        return {\n          name: doc.name as string,\n          id: doc.id,\n          img: doc.img,\n          requirements: requirements.replace(/<\\/?i>/g, ''),\n        };\n      }\n      return {\n        name: doc.name as string,\n        id: doc._id,\n        img: await this._getActorTokenImage(doc),\n        isWildcard: this._actorIsWildcard(doc),\n      };\n    });\n    const resolved = await Promise.all(mapped);\n    return resolved.sort((a, b) => a.name.localeCompare(b.name));\n  }\n\n  protected async _getJournalEntries(): Promise<CompendiumEntry[]> {\n    const collection = this.collection as CompendiumCollection<JournalMetadata>;\n    const journals = await collection.getDocuments();\n    const entries: CompendiumEntry[] = journals\n      .filter((doc) => doc.name !== CompendiumTOC.CF_ENTITY)\n      .sort(this._sortDocs)\n      .map((doc) => {\n        let pages: CompendiumPage[] = [];\n        if (doc.pages.size > 1) {\n          pages = doc.pages\n            .map((p) => {\n              return {\n                id: p.id!,\n                name: p.name,\n                sort: p.sort,\n              };\n            })\n            .sort(this._sortDocs);\n        }\n        return {\n          name: doc.name!,\n          id: doc.id,\n          pages: pages,\n        };\n      });\n    return entries;\n  }\n\n  private _onObserveResize(\n    entries: ResizeObserverEntry[],\n    _observer: ResizeObserver,\n  ) {\n    for (const entry of entries) {\n      const content = entry.target.querySelector<HTMLElement>('.content');\n      const parent = entry.target.querySelector<HTMLElement>('.window-content');\n      if (!content || !parent) continue;\n      this._fitColumns(parent, content);\n      //move the searchbar\n      const search = entry.target.querySelector<HTMLInputElement>('.search');\n      if (entry.target.clientWidth < 400) {\n        search?.classList.remove('top-row');\n        search?.classList.add('second-row');\n      } else {\n        search?.classList.add('top-row');\n        search?.classList.remove('second-row');\n      }\n    }\n  }\n\n  private _fitColumns(parent: Element, content: HTMLElement) {\n    let isOverFlowing = content.scrollHeight > parent.clientHeight;\n    let columnCount = 1;\n    do {\n      content.style.columnCount = columnCount.toString();\n      isOverFlowing = content.scrollHeight > parent.clientHeight;\n      columnCount++;\n    } while (isOverFlowing && columnCount <= this.maxColumns);\n  }\n\n  private _sortDocs(a, b) {\n    const sort = a.sort - b.sort;\n    if (sort !== 0) return sort;\n    return a.name.localeCompare(b.name);\n  }\n\n  private _requestTokenImages(\n    actorId: string,\n    pack: string,\n  ): Promise<string[]> {\n    return new Promise((resolve, reject) => {\n      game.socket.emit('requestTokenImages', actorId, { pack }, (result) => {\n        if (result.error) return reject(new Error(result.error));\n        resolve(result.files);\n      });\n    });\n  }\n\n  private async _getActorTokenImage(actor: ActorIndexEntry): Promise<TokenArt> {\n    let path!: string;\n    let scale = 1;\n    const pack = this.collection.metadata.id;\n    const prototypeToken = actor.prototypeToken;\n    //Priority 1: Compendium Artpacks\n    if (game.swade.compendiumArt.map.has(`Compendium.${pack}.${actor._id}`)) {\n      return this._getCompendiumArt(actor);\n    }\n    //Priority 2: random token art\n    else if (prototypeToken?.randomImg) {\n      try {\n        [path] = await this._requestTokenImages(\n          actor._id,\n          this.collection.metadata.id,\n        );\n      } catch (error) {\n        Logger.error(error);\n      }\n    } else if (prototypeToken?.texture.src) {\n      //Priority 3: Normal token art\n      const texture = prototypeToken.texture;\n      path = texture.src;\n      scale = (texture.scaleX! + texture.scaleY!) / 2; // get the average\n    } else if (actor.token.img) {\n      //legacy code\n      path = actor.token.img;\n      scale = actor.token.scale;\n    } else {\n      //lowest Priority actor image\n      path = actor.img;\n    }\n\n    return { path, scale };\n  }\n\n  private _actorIsWildcard(actor: ActorIndexEntry): boolean {\n    // eslint-disable-next-line deprecation/deprecation\n    return actor.system?.wildcard || actor.data?.wildcard;\n  }\n\n  private _getCompendiumArt(actor: ActorIndexEntry): TokenArt {\n    const pack = this.collection.metadata.id;\n    const art = game.swade.compendiumArt.map.get(\n      `Compendium.${pack}.${actor._id}`,\n    );\n    let path = '';\n    let scale = 1;\n    if (art) {\n      actor.img = art.actor;\n      if (typeof art.token === 'string') {\n        path = art.token;\n      } else {\n        path = art.token.img;\n        scale = art.token.scale;\n      }\n    }\n    return { path, scale };\n  }\n}\n\n// TODO: Evaluate how much we care about keeping this\ninterface CompendiumTOCData\n  extends Partial<Compendium.Data<CompendiumTOCMetadata>> {\n  isJournal: boolean;\n  isActor: boolean;\n  header: string;\n  wildCardMarker: string;\n  columnWidth: string;\n  disclaimer?: string;\n  entries?: CompendiumEntry[];\n  categories?: CompendiumCategory[];\n  actorCategories?: string[];\n  searchMode: {\n    icon: 'fa-search' | 'fa-file-magnifying-glass';\n    tooltip: string;\n  };\n}\n\ninterface CompendiumEntry {\n  name: string;\n  id: string;\n  artwork?: TokenArt;\n  img?: string | null | TokenArt;\n  /** only relevant for actors */\n  isWildcard?: boolean;\n  /** array of pages in the journal entry */\n  pages?: CompendiumPage[];\n}\n\ninterface CompendiumPage {\n  id: string;\n  name: string;\n  sort?: number;\n}\n\nexport type CompendiumTOCMetadata = CompendiumCollection.Metadata & {\n  type: 'Actor' | 'Item' | 'JournalEntry';\n};\n\ntype TOCApplicationOptions<Metadata extends CompendiumCollection.Metadata> =\n  Compendium.Options<Metadata> & {\n    disclaimer?: string;\n  };\n\ninterface CompendiumCategory {\n  category: string;\n  groups?: CompendiumGroup[];\n  entries?: CompendiumEntry[];\n}\n\ninterface CompendiumGroup {\n  group: string;\n  entries: CompendiumEntry[];\n}\n\ninterface TokenArt {\n  path: string;\n  scale: number;\n}\n\ntype ActorIndexEntry = {\n  _id: string;\n  name: string;\n  type: 'character' | 'npc' | 'vehicle';\n  img: string;\n  data: { wildcard: boolean };\n  prototypeToken?: {\n    randomImg: boolean;\n    texture: {\n      src: string;\n    };\n  };\n  token: {\n    img: string;\n    scale: number;\n  };\n} & foundry.documents.BaseActor;\n","import { AdditionalStats } from '../../globals';\nimport { SWADE } from '../config';\nimport SwadeCards from '../documents/card/SwadeCards';\n\n/* eslint-disable @typescript-eslint/naming-convention */\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\nexport default class SettingConfigurator extends HandlebarsApplicationMixin(\n  ApplicationV2,\n) {\n  config = SWADE.settingConfig;\n\n  static override DEFAULT_OPTIONS = {\n    id: 'settingConfig',\n    window: {\n      title: 'SWADE.SettingConf',\n      resizable: false,\n      contentClasses: ['standard-form'],\n    },\n    position: {\n      width: 600,\n      height: 700,\n    },\n    classes: ['setting-config', 'sheet', 'swade-application'],\n    tag: 'form',\n    form: {\n      handler: SettingConfigurator.onSubmit,\n      closeOnSubmit: false,\n      submitOnClose: true,\n      submitOnChange: true,\n    },\n    actions: {\n      reset: SettingConfigurator.#resetSettings,\n      createChar: SettingConfigurator.#onCreateChar,\n      createItem: SettingConfigurator.#onCreateItem,\n      delete: SettingConfigurator.#onDelete,\n    },\n  };\n\n  static override PARTS = {\n    tabs: { template: 'templates/generic/tab-navigation.hbs' },\n    basics: {\n      template: 'systems/swade/templates/apps/configurator/basics.hbs',\n      scrollable: [''],\n    },\n    setting: {\n      template: 'systems/swade/templates/apps/configurator/setting.hbs',\n      scrollable: [''],\n    },\n    bennies: {\n      template: 'systems/swade/templates/apps/configurator/bennies.hbs',\n      scrollable: [''],\n    },\n    additionalStats: {\n      template:\n        'systems/swade/templates/apps/configurator/additional-stats.hbs',\n      scrollable: [''],\n    },\n    footer: { template: 'templates/generic/form-footer.hbs' },\n  };\n\n  static override TABS = {\n    sheet: {\n      tabs: [\n        { id: 'basics', label: 'SWADE.WorldBasics' },\n        { id: 'setting', label: 'SWADE.SettingRules' },\n        { id: 'bennies', label: 'SWADE.Bennies' },\n        { id: 'additionalStats', label: 'SWADE.AddStats' },\n      ],\n      initial: 'basics',\n    },\n  };\n\n  override async _prepareContext(options) {\n    const settingFields = game.settings.get('swade', 'settingFields');\n    const context = foundry.utils.mergeObject(\n      await super._prepareContext(options),\n      {\n        settingRules: {},\n        actorSettingStats: settingFields.actor,\n        itemSettingStats: settingFields.item,\n        dice3d: !!game.dice3d,\n        dtypes: {\n          String: 'SWADE.String',\n          Number: 'SWADE.Number',\n          Boolean: 'SWADE.Checkbox',\n          Die: 'SWADE.Die',\n          Selection: 'SWADE.Selection',\n        },\n        coreSkillPackChoices: this.#buildCoreSkillPackChoices(),\n        actionDeckChoices: this.#buildActionDeckChoices(),\n        discardPileChoices: this.#buildActionDeckDiscardPileChoices(),\n        injuryTableChoices: await this.#buildInjuryTableChoices(),\n        armorStackingChoices: this.#getArmorStackingChoices(),\n        wealthTypes: this.#getWealthTypes(),\n        buttons: [\n          { type: 'submit', icon: 'fa-solid fa-save', label: 'SETTINGS.Save' },\n          {\n            type: 'reset',\n            action: 'reset',\n            icon: 'fa-solid fa-undo',\n            cssClass: 'submit',\n            label: 'SETTINGS.Reset',\n          },\n        ],\n      },\n    );\n    for (const setting of this.config.settings) {\n      context.settingRules[setting] = game.settings.get('swade', setting);\n    }\n    return context;\n  }\n\n  override async _preparePartContext(partId, context, options) {\n    const partContext = await super._preparePartContext(\n      partId,\n      context,\n      options,\n    );\n    if (partId in partContext.tabs) partContext.tab = partContext.tabs[partId];\n    return partContext;\n  }\n\n  static async onSubmit(\n    this: SettingConfigurator,\n    event: SubmitEvent,\n    _form: HTMLFormElement,\n    formData: FormDataExtended,\n  ) {\n    // Gather Data\n    const expandedFormData = foundry.utils.expandObject(formData.object);\n    const formActorAttrs = expandedFormData.actorSettingStats || {};\n    const formItemAttrs = expandedFormData.itemSettingStats || {};\n\n    // Set the \"easy\" settings\n    for (const [key, settingValue] of Object.entries(\n      expandedFormData.settingRules,\n    )) {\n      if (\n        this.config.settings.includes(key) &&\n        settingValue !== game.settings.get('swade', key)\n      ) {\n        await game.settings.set('swade', key, settingValue);\n      }\n    }\n\n    // Handle the free-form attributes list\n    const settingFields = game.settings.get('swade', 'settingFields');\n    const actorStats = this.#handleKeyValidityCheck(formActorAttrs);\n    const itemStats = this.#handleKeyValidityCheck(formItemAttrs);\n    const saveValue = {\n      actor: this.#handleRemovableAttributes(actorStats, settingFields.actor),\n      item: this.#handleRemovableAttributes(itemStats, settingFields.item),\n    };\n    await game.settings.set('swade', 'settingFields', saveValue);\n\n    await this.render({ force: true });\n\n    if (event.submitter) this.close();\n  }\n\n  static async #resetSettings(\n    this: SettingConfigurator,\n    _event: PointerEvent,\n    _target: HTMLElement,\n  ) {\n    for (const setting of this.config.settings) {\n      const resetValue = game.settings.settings.get(\n        `swade.${setting}`,\n      )!.default;\n      if (game.settings.get('swade', setting) !== resetValue) {\n        await game.settings.set('swade', setting, resetValue);\n      }\n    }\n    this.render({ force: true });\n  }\n\n  async #createHelper(event: PointerEvent, isItem: boolean) {\n    const documentType = isItem ? 'item' : 'actor';\n    event.preventDefault();\n    const settingFields = game.settings.get('swade', 'settingFields') as any;\n    const form = this.form;\n    const nk = Object.keys(settingFields[documentType]).length + 1;\n    const newElement = document.createElement('div');\n    newElement.innerHTML = `<input type=\"text\" name=\"${documentType}SettingStats.attr${nk}.key\" value=\"attr${nk}\"/>`;\n    const newKey = newElement.children[0];\n    form\n      ?.querySelector('[data-application-part=\"additionalStats\"]')\n      ?.appendChild(newKey);\n    await this._onSubmitForm(this.options.form!, event);\n    await this.render({ force: true });\n  }\n\n  static async #onCreateChar(\n    this: SettingConfigurator,\n    event: PointerEvent,\n    _target: HTMLElement,\n  ) {\n    await this.#createHelper(event, false);\n  }\n\n  static async #onCreateItem(\n    this: SettingConfigurator,\n    event: PointerEvent,\n    _target: HTMLElement,\n  ) {\n    await this.#createHelper(event, true);\n  }\n\n  static async #onDelete(\n    this: SettingConfigurator,\n    event: PointerEvent,\n    target: HTMLElement,\n  ) {\n    event.preventDefault();\n    const li = target.closest('.attribute');\n    if (li) li.parentElement?.removeChild(li);\n    await this._onSubmitForm(this.options.form!, event);\n    this.render({ force: true });\n  }\n\n  #handleKeyValidityCheck(stats: AdditionalStats) {\n    const retVal: AdditionalStats = {};\n    for (const stat of Object.values(stats)) {\n      let key = stat.key!.trim();\n      if (/[\\s.]/.test(key)) {\n        const invalidKey = key;\n        key = key.slugify().replace('.', '-');\n        ui.notifications.warn(\n          game.i18n.format('SWADE.AdditionalStats.KeyErr', {\n            invalid: invalidKey,\n            key: key,\n          }),\n          { permanent: true },\n        );\n      }\n      delete stat.key;\n      retVal[key] = stat;\n    }\n    return retVal;\n  }\n\n  /**\n   * Remove attributes which are no longer use\n   * @param attributes\n   * @param base\n   */\n  #handleRemovableAttributes(\n    attributes: AdditionalStats,\n    base: AdditionalStats,\n  ) {\n    for (const k of Object.keys(base)) {\n      if (!attributes.hasOwnProperty(k)) {\n        delete attributes[k];\n      }\n    }\n    return attributes;\n  }\n\n  #getArmorStackingChoices(): Record<string, string> {\n    return {\n      core: 'SWADE.Settings.ArmorStacking.Choices.Core',\n      swpf: 'SWADE.Settings.ArmorStacking.Choices.SWPF',\n    };\n  }\n\n  #getWealthTypes(): Record<string, string> {\n    return {\n      currency: 'SWADE.Currency',\n      wealthDie: 'SWADE.WealthDie.Label',\n      none: 'SWADE.WealthSelectionNoneOther',\n    };\n  }\n\n  #buildCoreSkillPackChoices() {\n    return game.packs\n      ?.filter((p) => {\n        const index = Array.from(p.index.values()).filter(\n          //remove the CF entities\n          (e) => e.name !== '#[CF_tempEntity]',\n        );\n        const isItem = p.metadata.type === 'Item';\n        return isItem && index.every((v) => v['type'] === 'skill');\n      })\n      .reduce(\n        (acc, p) => {\n          let packName = 'System';\n          if (p.metadata['packageType'] !== 'system') {\n            packName = game.modules.get(p.metadata['packageName'])?.['title'];\n          }\n          acc[p.collection] = `${p.metadata.label} (${packName})`;\n          return acc;\n        },\n        {} as Record<string, string>,\n      );\n  }\n\n  #buildActionDeckChoices() {\n    const deckChoices: Record<string, string> = {};\n    game.cards\n      ?.filter((stack: SwadeCards) => {\n        const cards = Array.from(stack.cards.values());\n        return stack.type === 'deck' && cards.every((c) => c.type === 'poker');\n      })\n      .forEach((d) => (deckChoices[d.id] = d.name!));\n    return deckChoices;\n  }\n\n  #buildActionDeckDiscardPileChoices() {\n    const discardPiles: Record<string, string> = {};\n    game.cards\n      ?.filter((stack) => stack.type === 'pile')\n      .forEach((p) => (discardPiles[p.id] = p.name!));\n    return discardPiles;\n  }\n\n  #buildInjuryTableChoices(): OptionGroup[] {\n    const injuryTables: OptionGroup[] = [];\n\n    //add world tables, if necessary\n    if (game.tables?.contents.length) {\n      injuryTables.push({\n        group: game.i18n.localize('SWADE.SettingConfigurator.WorldTables'),\n        options: game.tables!.contents.map((t) => {\n          return { key: t.uuid as string, label: t.name as string };\n        }),\n      });\n    }\n\n    const rollTablePacks = game.packs.filter(\n      (p) => p.metadata.type === 'RollTable',\n    );\n    const worldPacks = rollTablePacks.filter(\n      (p) => p.metadata.packageType === 'world',\n    );\n\n    //add world compendium packs, if necessary\n    if (worldPacks.length) {\n      injuryTables.push({\n        group: game.i18n.localize('SWADE.SettingConfigurator.WorldCompendiums'),\n        options: worldPacks\n          .flatMap((p) => p.index.contents)\n          .map((i) => {\n            return { key: i.uuid as string, label: i.name as string };\n          }),\n      });\n    }\n\n    //add an entry for every module, if necessary\n    for (const module of game.modules.values()) {\n      const packs = rollTablePacks.filter(\n        (p) => p.metadata.packageName === module.id,\n      );\n      if (!packs.length) continue;\n      injuryTables.push({\n        group: module.title!,\n        options: packs\n          .flatMap((p) => p.index.contents)\n          .map((i) => {\n            return { key: i.uuid as string, label: i.name as string };\n          }),\n      });\n    }\n\n    injuryTables.sort((a, b) => a.group.localeCompare(b.group));\n    return injuryTables;\n  }\n}\n\ninterface OptionGroup {\n  group: string;\n  options: GroupOptions;\n}\ntype GroupOptions = Array<{ key: string; label: string }>;\n","import { AnyObject } from 'fvtt-types/utils';\nimport { AdditionalStats } from '../../globals';\nimport { AdditionalStat } from '../../interfaces/additional.interface';\nimport SwadeActor from '../documents/actor/SwadeActor';\nimport SwadeItem from '../documents/item/SwadeItem';\nimport { getDieSidesRange } from '../util';\n\nclass SwadeDocumentTweaks<\n  Document extends SwadeActor | SwadeItem,\n  RenderContext extends AnyObject,\n> extends foundry.applications.api.HandlebarsApplicationMixin(\n  foundry.applications.api.DocumentSheetV2,\n)<Document, RenderContext> {\n  settingFields: AdditionalStats;\n\n  constructor(options) {\n    super(options);\n    const settingFields = this.#getPrototypeSettingFields();\n    for (const key in settingFields) {\n      if (\n        this.document.system.additionalStats[key] &&\n        this.document.system.additionalStats[key]?.dtype\n      ) {\n        settingFields[key].useField = true;\n      }\n    }\n    this.settingFields = settingFields;\n  }\n\n  static override DEFAULT_OPTIONS = {\n    position: {\n      width: 400,\n      height: 600,\n    },\n    window: {\n      contentClasses: ['standard-form'],\n    },\n    classes: ['swade', 'doc-tweaks', 'swade-application'],\n  };\n\n  override get id() {\n    return `Swade${this.document.documentName}Tweaks-${this.document.documentName}-${this.document.id}`;\n  }\n\n  /** Add the Document name into the window title*/\n  override get title() {\n    return `${this.document.name}: ${game.i18n.localize('SWADE.Tweaks')}`;\n  }\n\n  override async _prepareContext(options) {\n    return foundry.utils.mergeObject(await super._prepareContext(options), {\n      settingFields: this.settingFields,\n      hasSettingFields: !foundry.utils.isEmpty(this.settingFields),\n      buttons: [\n        { type: 'submit', icon: 'fa-solid fa-save', label: 'Save Changes' },\n      ],\n    });\n  }\n\n  protected override _processFormData(_event, _form, formData) {\n    const expandedFormData = foundry.utils.expandObject(formData.object);\n\n    //recombine the formdata\n    foundry.utils.setProperty(\n      expandedFormData,\n      'system.additionalStats',\n      this.#handleAdditionalStats(expandedFormData),\n    );\n\n    return expandedFormData;\n  }\n\n  #getPrototypeSettingFields() {\n    const fields = game.settings.get('swade', 'settingFields');\n    let settingFields: AdditionalStats = {};\n    if (this.document instanceof SwadeActor) {\n      settingFields = fields.actor;\n    } else if (this.document instanceof SwadeItem) {\n      settingFields = fields.item;\n    }\n    return structuredClone(settingFields);\n  }\n\n  #handleAdditionalStats(expandedFormData) {\n    const formFields = expandedFormData.system.additionalStats ?? {};\n    const prototypeFields = this.#getPrototypeSettingFields();\n    const newFields = structuredClone<AdditionalStats>(\n      this.document.system.additionalStats,\n    );\n    //handle setting specific fields\n    for (const [key, field] of Object.entries<AdditionalStat>(formFields)) {\n      const fieldExistsOnDoc = this.document.system.additionalStats[key];\n      if (field.useField && fieldExistsOnDoc) {\n        // Fixes blank label when toggling Additional Stat while there's an active effect\n        if (newFields[key].label === undefined)\n          newFields[key].label = prototypeFields[key].label;\n        //update existing field\n        newFields[key].hasMaxValue = prototypeFields[key].hasMaxValue;\n        newFields[key].dtype = prototypeFields[key].dtype;\n        if (newFields[key].dtype === 'Boolean') newFields[key]['-=max'] = null;\n      } else if (field.useField && !fieldExistsOnDoc) {\n        //add new field\n        newFields[key] = prototypeFields[key];\n        switch (prototypeFields[key].dtype) {\n          case 'Die':\n          case 'String':\n            newFields[key].value = '';\n            if (prototypeFields[key].max) newFields[key].max = '';\n            break;\n          case 'Number':\n            newFields[key].value = 0;\n            if (prototypeFields[key].max) newFields[key].max = 0;\n            break;\n          case 'Boolean':\n            newFields[key].value = false;\n            break;\n        }\n      } else {\n        //delete field\n        newFields[`-=${key}`] = null;\n        delete newFields[key];\n      }\n    }\n\n    //handle \"stray\" fields that exist on the actor but have no prototype\n    for (const key in this.document.system.additionalStats) {\n      if (!prototypeFields[key]) {\n        //@ts-expect-error This is only done to delete the key\n        newFields[`-=${key}`] = null;\n      }\n    }\n    return newFields;\n  }\n\n  protected override _prepareSubmitData(event, form, formData, updateData) {\n    const submitData = super._prepareSubmitData(\n      event,\n      form,\n      formData,\n      updateData,\n    );\n    // Prevent submitting overridden values\n    const overrides = foundry.utils.flattenObject(this.document.overrides);\n    for (const k of Object.keys(overrides)) {\n      if (k.startsWith('system.')) delete submitData[`data.${k.slice(7)}`]; // Band-aid for < v10 data\n      delete submitData[k];\n    }\n    return submitData;\n  }\n}\n\nclass SwadeActorTweaks extends SwadeDocumentTweaks<SwadeActor, AnyObject> {\n  static override PARTS = {\n    tabs: { template: 'templates/generic/tab-navigation.hbs' },\n    traits: {\n      template: 'systems/swade/templates/actors/apps/tweaks/tab-traits.hbs',\n      scrollable: [''],\n    },\n    additionalStats: {\n      template:\n        'systems/swade/templates/actors/apps/tweaks/tab-additional-stats.hbs',\n      scrollable: [''],\n    },\n    auras: {\n      template: 'systems/swade/templates/actors/apps/tweaks/tab-auras.hbs',\n      scrollable: [''],\n    },\n    footer: { template: 'templates/generic/form-footer.hbs' },\n  };\n\n  static override TABS = {\n    sheet: {\n      tabs: [\n        { id: 'traits', label: 'SWADE.Summary' },\n        { id: 'additionalStats', label: 'SWADE.AddStats' },\n        { id: 'auras', label: 'SWADE.Auras.TabHeader' },\n      ],\n      initial: 'traits',\n    },\n  };\n\n  protected override _configureRenderParts(options) {\n    const hasSettingFields = !foundry.utils.isEmpty(this.settingFields);\n    const parts = super._configureRenderParts(options);\n    if (!hasSettingFields) delete parts.additionalStats;\n    if (this.document.type === 'group') delete parts.traits;\n    return parts;\n  }\n\n  override async _prepareContext(options) {\n    return foundry.utils.mergeObject(await super._prepareContext(options), {\n      isNPC: this.document.type === 'npc',\n      isVehicle: this.document.type === 'vehicle',\n      isGroup: this.document.type === 'group',\n      hasModSlots: game.settings.get('swade', 'vehicleMods'),\n      hasEnergy: game.settings.get('swade', 'vehicleEnergy'),\n      runningDieTypes: getDieSidesRange(1, 12),\n    });\n  }\n\n  override async _preparePartContext(partId, context, options) {\n    const partContext = await super._preparePartContext(\n      partId,\n      context,\n      options,\n    );\n    if (partId === 'tabs') {\n      if (!partContext.hasSettingFields)\n        delete partContext.tabs.additionalStats;\n      if (partContext.isGroup) {\n        delete partContext.tabs.traits;\n        if (partContext.tabs.additionalStats) partContext.tabs.additionalStats.active = true;\n        else partContext.tabs.auras.active = true;\n      }\n    } else if (partId === 'auras') {\n      partContext.auraFields =\n        this.document.system.schema.fields.auras.element.fields;\n    }\n    if (partId in partContext.tabs) partContext.tab = partContext.tabs[partId];\n    return partContext;\n  }\n}\n\nclass SwadeItemTweaks<\n  Document extends SwadeItem,\n  RenderContext extends AnyObject,\n> extends SwadeDocumentTweaks<Document, RenderContext> {\n  static override DEFAULT_OPTIONS = foundry.utils.mergeObject(\n    super.DEFAULT_OPTIONS,\n    {\n      actions: {\n        regenerateSWID: SwadeItemTweaks.#regenerateSWID,\n      },\n    },\n    { inplace: false },\n  );\n\n  static override PARTS = {\n    main: { template: 'systems/swade/templates/item/apps/tweaks.hbs', scrollable: [''] },\n    footer: { template: 'templates/generic/form-footer.hbs' },\n  };\n\n  static async #regenerateSWID() {\n    await this.document.regenerateSWID();\n    this.render({ force: true });\n  }\n}\n\nexport { SwadeActorTweaks, SwadeDocumentTweaks, SwadeItemTweaks };\n","import {\n  ObjectAttributeBar,\n  SingleAttributeBar,\n} from '@league-of-foundry-developers/foundry-vtt-types/src/foundry/client/data/documents/token.mjs';\nimport SwadeActor from '../documents/actor/SwadeActor';\nimport { AuraPointSource } from './AuraPointSource';\n\ndeclare global {\n  interface PlaceableObjectClassConfig {\n    Token: typeof SwadeToken;\n  }\n}\nexport default class SwadeToken extends foundry.canvas.placeables.Token {\n  declare shape: PIXI.Rectangle | PIXI.Polygon | PIXI.Circle; //TODO\n  #blk = 0x000000;\n\n  auras = new Collection<AuraPointSource>();\n\n  /**\n   * This token's shape at its canvas position\n   * thanks to stwlam for this!\n   */\n  get localShape() {\n    switch (this.shape.type) {\n      case PIXI.SHAPES.RECT:\n        return this.bounds;\n      case PIXI.SHAPES.POLY: {\n        const shape = this.shape.clone();\n        const bounds = this.bounds;\n        shape.points = shape.points.map((c, i) =>\n          i % 2 === 0 ? c + bounds.x : c + bounds.y,\n        );\n        return shape;\n      }\n      case PIXI.SHAPES.CIRC: {\n        const shape = this.shape.clone();\n        const center = this.center;\n        shape.x = center.x;\n        shape.y = center.y;\n        return shape;\n      }\n    }\n  }\n\n  protected override _drawBar(\n    number: number,\n    bar: PIXI.Graphics,\n    data: SingleAttributeBar | ObjectAttributeBar | null,\n  ): void {\n    if (data?.attribute === 'wounds') {\n      return this._drawWoundsBar(number, bar, data as ObjectAttributeBar);\n    }\n    return super._drawBar(number, bar, data);\n  }\n\n  protected _drawWoundsBar(\n    number: number,\n    bar: PIXI.Graphics,\n    data: ObjectAttributeBar,\n  ): void {\n    const { value, max } = data;\n    const colorPct = Math.clamp(value, 0, max) / max;\n    const woundColor = SwadeActor.getWoundsColor(value, max);\n\n    // Determine the container size (logic borrowed from core)\n    const w = this.w;\n    let h = Math.max(canvas!.dimensions!.size / 12, 8);\n    if (this.document.height >= 2) h *= 1.6;\n    const stroke = Math.clamp(h / 8, 1, 2);\n\n    //set up bar container\n    this._resetVitalsBar(bar, w, h, stroke);\n\n    //fill bar as wounds increase, gradually going from green to red as it fills\n    bar\n      .beginFill(woundColor, 1.0)\n      .lineStyle(stroke, this.#blk, 1.0)\n      .drawRoundedRect(0, 0, colorPct * w, h, 2);\n\n    //position the bar according to its number\n    this._setVitalsBarPosition(bar, number, h);\n  }\n\n  protected _drawFatigueBar(\n    number: number,\n    bar: PIXI.Graphics,\n    data: ObjectAttributeBar,\n  ): void {\n    const { value, max } = data;\n\n    const colorPct = Math.clamp(value, 0, max) / max;\n    const woundColor = SwadeActor.getFatigueColor(value, max);\n\n    // Determine the container size (logic borrowed from core)\n    const w = this.w;\n    let h = Math.max(canvas!.dimensions!.size / 12, 8);\n    if (this.document.height >= 2) h *= 1.6;\n    const stroke = Math.clamp(h / 8, 1, 2);\n\n    //set up bar container\n    this._resetVitalsBar(bar, w, h, stroke);\n\n    //fill bar as wounds increase, gradually going from green to red as it fills\n    bar\n      .beginFill(woundColor, 1.0)\n      .lineStyle(stroke, this.#blk, 1.0)\n      .drawRoundedRect(0, 0, colorPct * w, h, 2);\n\n    //position the bar according to its number\n    this._setVitalsBarPosition(bar, number, h);\n  }\n\n  protected _resetVitalsBar(\n    bar: PIXI.Graphics,\n    width: number,\n    height: number,\n    stroke: number,\n  ) {\n    bar\n      .clear()\n      .beginFill(this.#blk, 0.5)\n      .lineStyle(stroke, this.#blk, 1.0)\n      .drawRoundedRect(0, 0, width, height, 3);\n  }\n\n  protected _setVitalsBarPosition(\n    bar: PIXI.Graphics,\n    order: number,\n    height: number,\n  ) {\n    // Set position\n    const posY = order === 0 ? this.h - height : 0;\n    bar.position.set(0, posY);\n  }\n}\n","import { EmptyObject } from 'fvtt-types/utils';\n\ndeclare namespace PokerData {\n  interface Schema extends foundry.data.fields.DataSchema {\n    isJoker: foundry.data.fields.BooleanField<{ label: string }>;\n    suit: foundry.data.fields.NumberField<{ min: 1; max: 4 }>;\n  }\n  interface BaseData extends EmptyObject {}\n  interface DerivedData extends EmptyObject {}\n}\n\nclass PokerData extends foundry.abstract.TypeDataModel<\n  PokerData.Schema,\n  Card.Implementation,\n  PokerData.BaseData,\n  PokerData.DerivedData\n> {\n  static override defineSchema(): PokerData.Schema {\n    const fields = foundry.data.fields;\n    return {\n      isJoker: new fields.BooleanField({ label: 'SWADE.IsJoker' }),\n      suit: new fields.NumberField({ min: 1, max: 4, label: 'SWADE.CardSuit' }), // Possible that it's preferable to do this with choices\n    };\n  }\n}\n\nexport { PokerData };\n","import { PokerData } from './poker';\r\n\r\nexport { PokerData } from './poker';\r\n\r\nexport const config = {\r\n  poker: PokerData,\r\n};\r\n\r\ndeclare global {\r\n  interface DataModelConfig {\r\n    Card: {\r\n      poker: typeof PokerData;\r\n    };\r\n  }\r\n}\r\n","import { Attribute } from '../../globals';\nimport {\n  ItemAction,\n  RollModifier,\n} from '../../interfaces/additional.interface';\nimport IRollOptions from '../../interfaces/RollOptions.interface';\nimport { constants } from '../constants';\nimport { DamageRoll } from '../dice/DamageRoll';\nimport { TraitRoll } from '../dice/TraitRoll';\nimport SwadeActor from '../documents/actor/SwadeActor';\nimport SwadeItem from '../documents/item/SwadeItem';\nimport { Logger } from '../Logger';\nimport { getTrait } from '../util';\n\nexport default class ItemCardService {\n  gatherRollModifiers(ctx: ModifierDeterminationContext): RollModifier[] {\n    const { item, html, action, actionObj } = ctx;\n    const mods: RollModifier[] = [];\n\n    //if it's a power and the No Power Points rule is in effect add the power cost as a modifier to the roll\n    if (item.type === 'power' && game.settings.get('swade', 'noPowerPoints')) {\n      const ppCost =\n        html.querySelector<HTMLInputElement>('input.pp-adjust')\n          ?.valueAsNumber ?? 0;\n      let modifier = Math.ceil(ppCost / 2);\n      modifier = Math.min(modifier * -1, modifier);\n      if (\n        action === 'formula' ||\n        actionObj?.type === constants.ACTION_TYPE.TRAIT\n      ) {\n        mods.push({\n          label: game.i18n.localize('TYPES.Item.power'),\n          value: modifier,\n        });\n      }\n    }\n\n    return mods;\n  }\n\n  async handleFormulaAction(\n    item: SwadeItem,\n    actor: SwadeActor,\n    additionalMods: RollModifier[] = [],\n  ) {\n    const traitName = foundry.utils.getProperty(item, 'system.actions.trait');\n    if (!item.canExpendResources()) {\n      // TODO: Refactor to be more accurate & more general (probably grab from the PP cost box?)\n      Logger.warn('SWADE.NotEnoughAmmo', { localize: true, toast: true });\n      return null;\n    }\n    additionalMods.push(...item.traitModifiers);\n    const trait = getTrait(traitName, actor);\n    const roll = await this.#doTraitAction(trait, actor, {\n      additionalMods,\n      item,\n    });\n    if (roll && !item.isMeleeWeapon) await item.consume();\n    this.#callActionHook(item, actor, 'formula', roll);\n    return roll;\n  }\n\n  async handleDamageAction(\n    item: SwadeItem,\n    actor: SwadeActor,\n    additionalMods: RollModifier[] = [],\n  ) {\n    const dmgMod = this.#getDamageMod(item);\n    if (dmgMod) additionalMods.push(dmgMod);\n    const roll = await item.rollDamage({ additionalMods });\n    this.#callActionHook(item, actor, 'damage', roll);\n    return roll;\n  }\n\n  /**\n   * Handles misc actions\n   * @param item The item that this action is used on\n   * @param actor The actor who has the item\n   * @param key The action key\n   * @returns the evaluated roll\n   */\n  async handleAdditionalAction(\n    item: SwadeItem,\n    actor: SwadeActor,\n    action: ItemAction | undefined,\n    key: string,\n    additionalMods: RollModifier[] = [],\n    event?: Event,\n  ): Promise<TraitRoll | DamageRoll | null> {\n    if (!action) return null;\n    let roll: TraitRoll | DamageRoll | null = null;\n\n    if (\n      action.type === constants.ACTION_TYPE.TRAIT ||\n      action.type === constants.ACTION_TYPE.RESIST\n    ) {\n      roll = await this.#handleTraitAction(action, item, actor, additionalMods);\n    } else if (action.type === constants.ACTION_TYPE.DAMAGE) {\n      //Do Damage stuff\n      roll = await this.#handleDamageAction(action, item, additionalMods);\n    } else if (action.type === constants.ACTION_TYPE.MACRO) {\n      await this.#handleMacroAction(action, item, event);\n      return null;\n    }\n    this.#callActionHook(item, actor, key, roll);\n    return roll;\n  }\n\n  async handlePowerPoints(\n    item: SwadeItem,\n    actor: SwadeActor,\n    btn: HTMLButtonElement,\n    html: HTMLElement,\n  ): Promise<void> {\n    //bail early if the No Power points rule is in effect\n    if (game.settings.get('swade', 'noPowerPoints')) return;\n    const ppCost =\n      html.querySelector<HTMLInputElement>('input.pp-adjust')?.valueAsNumber ??\n      0;\n    const adjustment = btn.dataset.adjust;\n\n    if (item.type === 'power') {\n      //handle Power Item Card PP adjustment\n      const arcane = foundry.utils.getProperty(item, 'system.arcane');\n      const key = `system.powerPoints.${arcane || 'general'}.value`;\n      const oldPP = foundry.utils.getProperty(actor, key) as number;\n      if (adjustment === 'plus') {\n        await actor.update({ [key]: oldPP + ppCost });\n      } else if (adjustment === 'minus') {\n        await actor.update({ [key]: oldPP - ppCost });\n      }\n    } else if (item.type === 'weapon' && item.isArcaneDevice) {\n      //handle Arcane Device Item Card PP adjustment\n      const key = 'system.powerPoints.value';\n      const oldPP = foundry.utils.getProperty(item, key) as number;\n      if (adjustment === 'plus') {\n        await item.update({ [key]: oldPP + ppCost });\n      } else if (adjustment === 'minus') {\n        await item.update({ [key]: oldPP - ppCost });\n      }\n    }\n  }\n\n  async #handleTraitAction(\n    action: ItemAction,\n    item: SwadeItem,\n    actor: SwadeActor,\n    additionalMods: RollModifier[],\n  ): Promise<TraitRoll | null> {\n    //set the trait name and potentially override it via the action\n    const traitName =\n      action.override ||\n      foundry.utils.getProperty(item, 'system.actions.trait');\n\n    //find the trait and either get the skill item or the key of the attribute\n    const trait = getTrait(traitName, actor);\n\n    if (action.modifier) {\n      additionalMods.push({\n        label: action.name,\n        value: action.modifier,\n      });\n    }\n\n    if (\n      item.type === 'weapon' &&\n      !item.canExpendResources(action.resourcesUsed ?? 1)\n    ) {\n      Logger.warn('SWADE.NotEnoughAmmo', { localize: true, toast: true });\n      return null;\n    }\n\n    additionalMods.push(...item.traitModifiers);\n\n    const roll = await this.#doTraitAction(trait, actor, {\n      flavour: action.name,\n      rof: action.dice,\n      additionalMods,\n      item: item,\n    });\n    const shouldConsume =\n      !!roll &&\n      item.type === 'weapon' &&\n      action.type === constants.ACTION_TYPE.TRAIT;\n    if (shouldConsume) {\n      await item.consume(action.resourcesUsed ?? 1);\n    }\n    return roll;\n  }\n\n  async #handleDamageAction(\n    action: ItemAction,\n    item: SwadeItem,\n    additionalMods: RollModifier[],\n  ): Promise<DamageRoll | null> {\n    const dmgMod = this.#getDamageMod(item);\n    if (dmgMod) additionalMods.push(dmgMod);\n    if (action.modifier) {\n      additionalMods.push({\n        label: action.name,\n        value: action.modifier,\n      });\n    }\n    return item.rollDamage({\n      dmgOverride: action.override,\n      isHeavyWeapon: action.isHeavyWeapon,\n      flavour: action.name,\n      ap: action.ap,\n      additionalMods,\n    });\n  }\n\n  async #handleMacroAction(\n    action: ItemAction,\n    item: SwadeItem,\n    event?: Event,\n  ): Promise<void> {\n    if (!action.uuid) return;\n    const macro = (await fromUuid(action.uuid)) as Macro | null;\n    if (!macro) {\n      Logger.warn(\n        game.i18n.format('SWADE.CouldNotFindMacro', { uuid: action.uuid }),\n        { toast: true },\n      );\n    }\n    let targetActor;\n    let targetToken;\n    if (action.macroActor === constants.MACRO_ACTOR.SELF) {\n      targetActor = item.actor;\n    } else if (action.macroActor === constants.MACRO_ACTOR.TARGET) {\n      targetToken = game.user!.targets.first();\n      if (targetToken) targetActor = targetToken.actor;\n      if (!targetActor) {\n        ui.notifications.error('SWADE.CouldNotFindTarget', {\n          localize: true,\n        });\n      }\n    }\n    await macro?.execute({\n      actor: targetActor,\n      item,\n      token: targetToken,\n      event,\n    });\n  }\n\n  #getDamageMod(item: SwadeItem): RollModifier | null {\n    const value: string | undefined = foundry.utils.getProperty(\n      item,\n      'system.actions.dmgMod',\n    );\n    if (!value) return null;\n\n    let label = '';\n    //localize the label if it's not parsed from roll data\n    if (!value.startsWith('@')) {\n      label = `${item.name} ${game.i18n.localize('SWADE.ItemDmgMod')}`; // Localize the label and include the item name\n    }\n    return { label, value };\n  }\n\n  async #doTraitAction(\n    trait: string | SwadeItem | undefined,\n    actor: SwadeActor,\n    options: IRollOptions,\n  ): Promise<TraitRoll | null> {\n    const rollSkill = trait instanceof SwadeItem || !trait;\n    const rollAttribute = typeof trait === 'string';\n    if (rollSkill) {\n      //get the id from the item or null if there was no trait\n      const id = trait instanceof SwadeItem ? trait.id : null;\n      return actor.rollSkill(id, options);\n    } else if (rollAttribute) {\n      return actor.rollAttribute(trait as Attribute, options);\n    } else {\n      return null;\n    }\n  }\n\n  #callActionHook(\n    item: SwadeItem,\n    actor: SwadeActor,\n    action: string,\n    roll: TraitRoll | DamageRoll | null,\n  ) {\n    if (!roll) return; // Do not trigger the hook if the roll was cancelled\n    /** @category Hooks */\n    Hooks.call('swadeAction', actor, item, action, roll, game.userId);\n  }\n}\n\ninterface ModifierDeterminationContext {\n  html: HTMLElement;\n  item: SwadeItem;\n  action: string;\n  actionObj: ItemAction | undefined;\n}\n","import { EmptyObject } from 'fvtt-types/utils';\nimport { ItemActions } from '../../../globals';\nimport { ItemAction } from '../../../interfaces/additional.interface';\nimport SwadeMeasuredTemplate from '../../canvas/SwadeMeasuredTemplate';\nimport { constants } from '../../constants';\nimport type SwadeActor from '../../documents/actor/SwadeActor';\nimport SwadeItem from '../../documents/item/SwadeItem';\n\nimport { DamageRoll } from '../../dice/DamageRoll';\nimport { TraitRoll } from '../../dice/TraitRoll';\nimport { Logger } from '../../Logger';\nimport ItemCardService from '../../models/ItemCardService';\nimport { VehicleData } from '../actor';\n\ndeclare namespace ItemCardData {\n  interface Schema extends foundry.data.fields.DataSchema {\n    uuid: foundry.data.fields.DocumentUUIDField<{\n      blank: false;\n      required: true;\n    }>;\n  }\n  interface BaseData extends EmptyObject {}\n  interface DerivedData extends EmptyObject {}\n}\n\nclass ItemCardData extends foundry.abstract.TypeDataModel<\n  ItemCardData.Schema,\n  ChatMessage.Implementation,\n  ItemCardData.BaseData,\n  ItemCardData.DerivedData\n> {\n  static override defineSchema(): ItemCardData.Schema {\n    const fields = foundry.data.fields;\n    return {\n      uuid: new fields.DocumentUUIDField({ blank: false, required: true }),\n    };\n  }\n\n  /** A list of selectors for action button groups that should be hidden if the party seeing the message is not the author */\n  static #TO_HIDE = [\n    '.trait-rolls',\n    '.damage-rolls',\n    '.template-controls',\n    '.pp-controls',\n    '.arcane-device-controls',\n    '.pp-counter',\n    '.ammo-counter',\n    '.reload-controls',\n    '.benny-reroll',\n    '.free-reroll',\n  ];\n\n  _item: SwadeItem | null = null;\n  #handler = new ItemCardService();\n\n  get macros(): { id: string; uuid: string }[] {\n    if (!this._item) return [];\n    const additionalActions: ItemActions =\n      foundry.utils.getProperty(this._item, 'system.actions.additional') || {};\n    return Object.entries(additionalActions)\n      .filter(([_k, v]) => v.type === constants.ACTION_TYPE.MACRO)\n      .map(([k, v]) => {\n        return { id: k, uuid: v.uuid ?? '' };\n      });\n  }\n\n  get cardActor(): SwadeActor | null {\n    return this._item?.parent ?? null;\n  }\n\n  async renderHTML({\n    canDelete = false,\n    canClose = false,\n    ..._rest\n  } = {}): Promise<HTMLElement> {\n    this._item = fromUuidSync(this.uuid) as SwadeItem | null;\n\n    let content: string;\n    if (!this._item) content = this._renderMissingItemHTML();\n    else content = await this._renderFoundItemHTML();\n\n    //render the message shell\n    const html = await this._renderMessageShell(content, canDelete, canClose);\n\n    //hide unused elements\n    this._hideChatActionButtons(html);\n    await this._hideMacroButtons(html);\n\n    //display magazine tooltip, if necessary\n    this._magazineTooltip(html);\n    //attach listeners\n    this._attachButtonListeners(html);\n    return html;\n  }\n\n  /** Attaches listeners to the rendered HTMLElement */\n  protected _attachButtonListeners(html: HTMLElement) {\n    html\n      .querySelectorAll<HTMLButtonElement>('button[data-action]')\n      .forEach((btn) =>\n        btn.addEventListener('click', (ev) =>\n          this._handleButtonClick(ev, btn, html),\n        ),\n      );\n\n    html\n      .querySelector<HTMLElement>('.card-header .item-name')\n      ?.addEventListener('click', () => {\n        html\n          .querySelector<HTMLElement>('.card-content')\n          ?.classList.toggle('expanded');\n      });\n  }\n\n  protected async _handleButtonClick(\n    event: MouseEvent,\n    btn: HTMLButtonElement,\n    html: HTMLElement,\n  ) {\n    event.preventDefault();\n    const actor = this._getActor();\n    const action = btn.dataset.action as string;\n\n    if (!this._item || !actor || !action) return;\n\n    const actionObj = foundry.utils.getProperty(\n      this._item,\n      'system.actions.additional.' + action,\n    ) as ItemAction | undefined;\n\n    let roll: TraitRoll | DamageRoll | null = null;\n    const additionalMods = this.#handler.gatherRollModifiers({\n      item: this._item,\n      html,\n      action,\n      actionObj,\n    });\n\n    switch (action) {\n      case 'refresh':\n        await this._refreshMessage();\n        break;\n      case 'template':\n        SwadeMeasuredTemplate.fromPreset(btn.dataset.template!, this._item);\n        break;\n      case 'reload':\n        await this._item.reload();\n        await this._refreshMessage();\n        break;\n      case 'consume':\n        await this._item.consume();\n        await this._refreshMessage();\n        break;\n      case 'pp-adjust':\n        await this.#handler.handlePowerPoints(this._item, actor, btn, html);\n        await this._refreshMessage();\n        break;\n      case 'damage':\n        roll = await this.#handler.handleDamageAction(\n          this._item,\n          actor,\n          additionalMods,\n        );\n        break;\n      case 'formula':\n        roll = await this.#handler.handleFormulaAction(\n          this._item,\n          actor,\n          additionalMods,\n        );\n        break;\n      case 'arcane-device':\n        roll = await actor.makeArcaneDeviceSkillRoll(\n          foundry.utils.getProperty(this._item, 'system.arcaneSkillDie'),\n        );\n        break;\n      default:\n        // No need to call the hook here, as handleAdditionalActions already calls the hook\n        // This is so an external API can directly use handleAdditionalActions to use an action and still fire the hook\n        roll = await this.#handler.handleAdditionalAction(\n          this._item,\n          actor,\n          actionObj,\n          action,\n          additionalMods,\n        );\n        break;\n    }\n\n    //Only refresh the card if there is a roll and the item isn't a power\n    if (roll && this._item.type !== 'power') await this._refreshMessage();\n  }\n\n  protected _getActor(action?: ItemAction): SwadeActor | null {\n    let actor = this._item?.parent ?? null;\n\n    //If the item's parent is a vehicle swap in the operator\n    if (actor?.system instanceof VehicleData) {\n      if (this._item.type === 'weapon') {\n        actor = actor.system.getCrewMemberForWeapon(this._item) ?? null;\n        if (!actor) {\n          Logger.warn('Could not retrieve an assigned user for this weapon.', {\n            toast: true,\n          });\n        }\n      } else {\n        actor = actor.system.operator;\n      }\n    }\n\n    // \"Resist\" types target the actor with a currently selected token, not the\n    // one that spawned the chat card. So swap that actor in.\n    if (action?.type === constants.ACTION_TYPE.RESIST) {\n      // swap the selected token's actor in as the target for the roll\n      if (!canvas?.tokens || canvas?.tokens.controlled.length !== 1) {\n        ui.notifications.warn('SWADE.NoTokenSelectedForResistRoll', {\n          localize: true,\n        });\n        return null;\n      }\n      actor = canvas.tokens?.controlled[0].actor ?? actor;\n    }\n    return actor;\n  }\n\n  /** Remove the chat card action buttons which cannot be performed by the user */\n  protected _hideChatActionButtons(html: HTMLElement) {\n    const msg = this.parent;\n    // If the user is the message author or the actor owner, proceed\n    const actor = game.actors?.get(msg.speaker.actor ?? '');\n    if (actor?.isOwner || game.user?.isGM || msg.isAuthor) return;\n\n    // Otherwise conceal all action button sections except for\n    // resistance rolls (which can be rolled by other actors as a defense)\n    for (const selector of ItemCardData.#TO_HIDE) {\n      html.querySelectorAll<HTMLElement>(selector).forEach((e) => e.remove());\n    }\n  }\n\n  protected _magazineTooltip(html: HTMLElement) {\n    const magazine = html.querySelector<HTMLElement>(\n      '.swade.chat-card .magazine',\n    );\n\n    magazine?.addEventListener('mouseenter', async () => {\n      const loadedAmmo = this._item?.getFlag('swade', 'loadedAmmo');\n\n      const enriched = loadedAmmo\n        ? await foundry.applications.ux.TextEditor.implementation.enrichHTML(\n            `<h4>${loadedAmmo?.name}</h4>${loadedAmmo?.system!.description ?? ''}`,\n            {\n              relativeTo: this._item,\n              rollData: this._item?.getRollData() ?? {},\n              secrets: this._item?.isOwner,\n            },\n          )\n        : game.i18n.localize('SWADE.Magazine.NoneLoaded');\n\n      const content = foundry.utils.parseHTML('<span>' + enriched + '</span>');\n\n      game.tooltip.activate(magazine, {\n        html: content as HTMLElement,\n        cssClass: 'themed theme-dark',\n      });\n    });\n  }\n\n  /** Hide macros if the user can't execute them */\n  protected async _hideMacroButtons(html: HTMLElement) {\n    let hiddenCounter = 0;\n    for (const macro of this.macros) {\n      const doc = (await fromUuid(macro.uuid)) as Macro | null;\n      if (doc?.canExecute) continue;\n      html\n        .querySelectorAll<HTMLButtonElement>(\n          `button[data-action=\"${macro.id}\"]`,\n        )\n        .forEach((btn) => {\n          btn.remove();\n          hiddenCounter++;\n        });\n    }\n    const macroButtonsTotal = html.querySelectorAll<HTMLButtonElement>(\n      '.card-buttons.macros button',\n    ).length;\n    //if all macros have been hidden, then also hide the header\n    if (macroButtonsTotal <= hiddenCounter) {\n      html.querySelector<HTMLElement>('.card-buttons.macros')?.remove();\n    }\n  }\n\n  protected async _renderFoundItemHTML(): Promise<string> {\n    const data = await this._item!.getChatData();\n    return foundry.applications.handlebars.renderTemplate(\n      'systems/swade/templates/chat/item-card.hbs',\n      data,\n    ) as Promise<string>;\n  }\n\n  protected _renderMissingItemHTML(): string {\n    return `<p>Item with UUID <code>${this.uuid}</code> could not be found</p>`;\n  }\n\n  protected _getBaseMessageData(\n    canDelete: boolean,\n    canClose: boolean,\n  ): ChatMessage.MessageData {\n    const isWhisper = !!this.parent.whisper.length;\n\n    // Construct message data\n    const messageData: ChatMessage.MessageData = {\n      canDelete,\n      canClose,\n      message: this.parent.toObject(false),\n      user: game.user,\n      author: this.parent.author,\n      alias: this.parent.alias,\n      cssClass: [\n        this.parent.style === CONST.CHAT_MESSAGE_STYLES.IC ? 'ic' : null,\n        this.parent.style === CONST.CHAT_MESSAGE_STYLES.EMOTE ? 'emote' : null,\n        this.parent.blind ? 'blind' : null,\n        isWhisper ? 'whisper' : null,\n      ].filterJoin(' '),\n      isWhisper,\n      whisperTo: this.parent.whisper\n        .map((u) => game.users.get(u)?.name)\n        .filterJoin(', '),\n    };\n    return messageData;\n  }\n\n  /** Create a standard foundry message shell */\n  protected async _renderMessageShell(\n    content: string,\n    canDelete: boolean,\n    canClose: boolean,\n  ): Promise<HTMLElement> {\n    const messageData = this._getBaseMessageData(canDelete, canClose);\n    messageData.message.content = content;\n    const template = await foundry.applications.handlebars.renderTemplate(\n      CONFIG.ChatMessage.template,\n      messageData,\n    );\n    return foundry.utils.parseHTML(template) as HTMLElement;\n  }\n\n  protected async _refreshMessage() {\n    await ui.chat.updateMessage(this.parent, false);\n  }\n}\n\nexport { ItemCardData };\n","import { ItemCardData } from './itemCard';\n\nexport { ItemCardData } from './itemCard';\n\nexport const config = {\n  itemCard: ItemCardData,\n};\n\ndeclare global {\n  interface DataModelConfig {\n    ChatMessage: {\n      itemCard: typeof ItemCardData;\n    };\n  }\n}\n","import type { EmptyObject } from 'fvtt-types/utils';\nimport type SwadeCombat from '../../documents/combat/SwadeCombat';\nimport type SwadeActor from '../../documents/actor/SwadeActor';\nimport type { RollModifier } from '../../../interfaces/additional.interface';\n\nfunction baseCombatSchema() {\n  return {};\n}\n\nexport declare namespace BaseCombat {\n  interface Schema extends ReturnType<typeof baseCombatSchema> {}\n  interface BaseData extends EmptyObject {}\n  interface DerivedData extends EmptyObject {}\n}\n\nexport class BaseCombat<\n  Schema extends BaseCombat.Schema = BaseCombat.Schema,\n  BaseData extends BaseCombat.BaseData = BaseCombat.BaseData,\n  DerivedData extends BaseCombat.DerivedData = BaseCombat.DerivedData,\n> extends foundry.abstract.TypeDataModel<\n  Schema,\n  SwadeCombat,\n  BaseData,\n  DerivedData\n> {\n  static override defineSchema() {\n    return baseCombatSchema();\n  }\n\n  /**\n   * Determine roll modifiers for an actor based on the current combat type, e.g. Jokers or Complications for clubs\n   * @param actor The actor making a roll\n   * @returns An array of roll modifiers to push/concat\n   */\n  rollModifiers(actor: SwadeActor): RollModifier[] {\n    const combatant = this.parent.getCombatantsByActor(actor)[0];\n    const mods: RollModifier[] = [];\n\n    if (combatant?.hasJoker) {\n      mods.push({\n        label: game.i18n.localize('SWADE.Joker'),\n        value: actor.getFlag('swade', 'jokerBonus') ?? 2,\n      });\n    }\n\n    return mods;\n  }\n}\n","import { DeepPartial, EmptyObject } from 'fvtt-types/utils';\nimport type SwadeCombatant from '../../documents/combat/SwadeCombatant';\nimport { SWADE } from '../../config';\nimport { firstOwner } from '../../util';\n\n/**\n * External function to define the schema for the BaseCombatant type\n * Used to prevent type recursion issues\n */\nfunction baseCombatantSchema() {\n  const fields = foundry.data.fields;\n  return {\n    suitValue: new fields.NumberField(),\n    cardValue: new fields.NumberField(),\n    cardString: new fields.StringField(),\n    hasJoker: new fields.BooleanField(),\n    roundHeld: new fields.NumberField(),\n    turnLost: new fields.BooleanField(),\n    firstRound: new fields.NumberField(),\n  };\n}\n\nexport declare namespace BaseCombatantModel {\n  interface Schema extends ReturnType<typeof baseCombatantSchema> {}\n  interface BaseData extends EmptyObject {}\n  interface DerivedData extends EmptyObject {}\n}\n\nexport class BaseCombatantModel<\n  Schema extends BaseCombatantModel.Schema = BaseCombatantModel.Schema,\n  BaseData extends BaseCombatantModel.BaseData = BaseCombatantModel.BaseData,\n  DerivedData extends\n    BaseCombatantModel.DerivedData = BaseCombatantModel.DerivedData,\n> extends foundry.abstract.TypeDataModel<\n  Schema,\n  SwadeCombatant,\n  BaseData,\n  DerivedData\n> {\n  static override defineSchema() {\n    return baseCombatantSchema();\n  }\n\n  override async _preCreate(\n    data: foundry.abstract.TypeDataModel.ParentAssignmentType<\n      Schema,\n      SwadeCombatant\n    >,\n    _options: Combatant.Database.PreUpdateOptions,\n    _user: User,\n  ) {\n    const combatants = game?.combat?.combatants.size ?? 0;\n    const tokenID =\n      data.tokenId instanceof TokenDocument ? data.tokenId.id : data.tokenId;\n    const tokenIndex =\n      canvas.tokens?.controlled.map((t) => t.id).indexOf(tokenID as string) ??\n      0;\n    const sortValue = tokenIndex + combatants;\n    this.updateSource({\n      firstRound: this.parent.combat?.round,\n      cardValue: sortValue,\n      suitValue: sortValue,\n    });\n  }\n\n  override _onUpdate(\n    changed: DeepPartial<\n      foundry.abstract.TypeDataModel.ParentAssignmentType<\n        Schema,\n        SwadeCombatant\n      >\n    >,\n    options: Combatant.Database.OnUpdateOperation,\n    userId: string,\n  ) {\n    super._onUpdate(changed, options, userId);\n    const hasCardChanged =\n      foundry.utils.hasProperty(changed, 'system.cardValue') ||\n      foundry.utils.hasProperty(changed, 'system.suitValue');\n    const holdRemoved =\n      foundry.utils.getProperty(changed, 'system.roundHeld') === null;\n    if (hasCardChanged && !holdRemoved && game.userId === userId) {\n      this.handOutBennies();\n    }\n  }\n\n  /** Checks if this combatant has a joker and hands out bennies based on the actor type and disposition */\n  async handOutBennies() {\n    if (\n      !game.settings.get('swade', 'jokersWild') ||\n      this.parent.groupId ||\n      !this.parent.hasJoker ||\n      !this.parent\n    )\n      return;\n    await this.#createJokersWildMessage();\n    // TODO: This is actually going to be a collection, rather than an array\n    const combatants = this.parent.parent!.combatants;\n    const isTokenHostile =\n      this.parent.token?.disposition === CONST.TOKEN_DISPOSITIONS.HOSTILE;\n    //Give bennies to PCs\n    if (this.parent.actor?.type === 'character') {\n      await this.#friendlyBennies(combatants);\n    } else if (this.parent.actor?.type === 'npc' && isTokenHostile) {\n      await this.#adversaryBennies(combatants);\n    }\n  }\n\n  async #friendlyBennies(combatants: foundry.utils.Collection<SwadeCombatant>) {\n    //filter combatants for PCs and give them bennies\n    const pcs = combatants.filter((c) => c.actor?.type === 'character');\n    await this.#triggerBennies(pcs);\n  }\n\n  async #adversaryBennies(\n    combatants: foundry.utils.Collection<SwadeCombatant>,\n  ) {\n    //give all GMs a benny\n    const gmUsers = game.users!.filter((u) => u.active && u.isGM);\n    for (const gm of gmUsers) await gm.getBenny();\n    //give all enemy wildcards a benny\n    const hostiles = combatants.filter((c) => {\n      const isHostile =\n        c.token?.disposition === CONST.TOKEN_DISPOSITIONS.HOSTILE;\n      return c.actor?.type === 'npc' && isHostile && c.actor?.isWildcard;\n    });\n    await this.#triggerBennies(hostiles);\n  }\n\n  async #triggerBennies(combatants: SwadeCombatant[]) {\n    for (const c of combatants) {\n      if (c.actor?.isOwner) await c.actor?.getBenny();\n      else\n        game.swade.sockets.giveBenny(\n          [firstOwner(c.actor)?.id as string],\n          [c.actor?.uuid ?? ''],\n        );\n    }\n  }\n\n  async #createJokersWildMessage() {\n    await getDocumentClass('ChatMessage').create({\n      author: game.userId,\n      content: await foundry.applications.handlebars.renderTemplate(SWADE.bennies.templates.joker, {\n        speaker: game.user,\n      }),\n    });\n  }\n}\n","import type { EmptyObject } from 'fvtt-types/utils';\n\nfunction baseCombatantGroupSchema() {\n  const fields = foundry.data.fields;\n  return {\n    leader: new fields.DocumentIdField({ readonly: false }),\n    suitValue: new fields.NumberField(),\n    cardValue: new fields.NumberField(),\n    cardString: new fields.StringField(),\n    hasJoker: new fields.BooleanField(),\n    roundHeld: new fields.NumberField(),\n    turnLost: new fields.BooleanField(),\n    firstRound: new fields.NumberField(),\n  };\n}\n\ndeclare namespace BaseCombatantGroupModel {\n  interface Schema extends ReturnType<typeof baseCombatantGroupSchema> {}\n  interface BaseData extends EmptyObject {}\n  interface DerivedData extends EmptyObject {}\n}\n\nclass BaseCombatantGroupModel<\n  Schema extends\n    BaseCombatantGroupModel.Schema = BaseCombatantGroupModel.Schema,\n  BaseData extends\n    BaseCombatantGroupModel.BaseData = BaseCombatantGroupModel.BaseData,\n  DerivedData extends\n    BaseCombatantGroupModel.DerivedData = BaseCombatantGroupModel.DerivedData,\n> extends foundry.abstract.TypeDataModel<\n  Schema,\n  foundry.abstract.Document.Any,\n  BaseData,\n  DerivedData\n> {\n  static override defineSchema() {\n    return baseCombatantGroupSchema();\n  }\n\n  /**\n   * @returns The leader as a combatant, or first member, else undefined.\n   */\n  get leaderCombatant() {\n    if (this.leader) {\n      const c = this.parent.members.find((c) => c.id === this.leader);\n      if (c) return c;\n    }\n    return this.parent.members.first();\n  }\n}\n\nexport { BaseCombatantGroupModel };\n","import { BaseCombat } from './baseCombat';\r\n\r\nfunction chaseSchema() {\r\n  const fields = foundry.data.fields;\r\n  return {\r\n    maneuvering: new fields.SetField(\r\n      new fields.StringField({ required: true, blank: false }),\r\n    ),\r\n  };\r\n}\r\n\r\nexport class Chase extends BaseCombat<ReturnType<typeof chaseSchema>> {\r\n  static override defineSchema(): {} {\r\n    return chaseSchema();\r\n  }\r\n}\r\n","import type { RollModifier } from '../../../interfaces/additional.interface';\nimport type SwadeActor from '../../documents/actor/SwadeActor';\nimport { BaseCombat } from './baseCombat';\n\nfunction dramaticTaskSchema() {\n  const fields = foundry.data.fields;\n  return {\n    tokens: new fields.SchemaField({\n      value: new fields.NumberField({\n        min: 0,\n        initial: 0,\n        nullable: false,\n        integer: true,\n      }),\n      max: new fields.NumberField({\n        min: 1,\n        initial: 6,\n        nullable: false,\n        integer: true,\n      }),\n    }),\n    maxRounds: new fields.NumberField({\n      min: 1,\n      initial: 4,\n      nullable: false,\n      integer: true,\n      label: 'SWADE.DramaticTask.MaxRounds.Label',\n      hint: 'SWADE.DramaticTask.MaxRounds.Hint',\n    }),\n  };\n}\n\nexport class DramaticTask extends BaseCombat<\n  ReturnType<typeof dramaticTaskSchema>\n> {\n  static override defineSchema(): {} {\n    return dramaticTaskSchema();\n  }\n\n  override rollModifiers(actor: SwadeActor): RollModifier[] {\n    const combatant = this.parent.getCombatantsByActor(actor)[0];\n    const mods = super.rollModifiers(actor);\n\n    if (combatant?.suitValue === 1) {\n      mods.push({\n        label: game.i18n.localize('SWADE.Complication'),\n        value: -2,\n      });\n    }\n    return mods;\n  }\n}\n","import { BaseCombat } from './baseCombat';\nimport { BaseCombatantModel } from './baseCombatant';\nimport { BaseCombatantGroupModel } from './baseCombatantGroup';\nimport { Chase } from './chase';\nimport { DramaticTask } from './dramaticTask';\n\nexport { BaseCombat, BaseCombatantModel as BaseCombatant, Chase, DramaticTask };\n\nexport const combatConfig = {\n  base: BaseCombat,\n  chase: Chase,\n  dramaticTask: DramaticTask,\n};\n\nexport const combatantConfig = {\n  base: BaseCombatantModel,\n};\n\nexport const combatantGroupConfig = {\n  base: BaseCombatantGroupModel,\n};\n\ndeclare global {\n  interface DataModelConfig {\n    Combat: {\n      base: typeof BaseCombat;\n      chase: typeof Chase;\n      dramaticTask: typeof DramaticTask;\n    };\n    Combatant: {\n      base: typeof BaseCombatantModel;\n    };\n    CombatantGroup: {\n      base: typeof BaseCombatantGroupModel;\n    };\n  }\n}\n","import { constants } from '../../constants';\nimport type SwadeActiveEffect from '../../documents/active-effect/SwadeActiveEffect';\n\nfunction baseEffectSchema() {\n  const fields = foundry.data.fields;\n\n  return {\n    removeEffect: new fields.BooleanField({ label: 'SWADE.RemoveEffectLabel' }),\n    expiration: new fields.NumberField({\n      choices: foundry.utils.invertObject(constants.STATUS_EFFECT_EXPIRATION),\n      nullable: true,\n      label: 'SWADE.Expiration.Behavior',\n    }),\n    loseTurnOnHold: new fields.BooleanField({\n      label: 'SWADE.Expiration.LooseTurnOnHold',\n    }),\n    favorite: new fields.BooleanField({ label: 'SWADE.Favorite' }),\n    conditionalEffect: new fields.BooleanField({\n      label: 'SWADE.ActiveEffects.Conditional',\n    }),\n  };\n}\n\ndeclare namespace BaseEffectData {\n  type Schema = ReturnType<typeof baseEffectSchema>;\n}\n\nclass BaseEffectData extends foundry.abstract.TypeDataModel<\n  BaseEffectData.Schema,\n  SwadeActiveEffect<'base'>\n> {\n  static override defineSchema(): BaseEffectData.Schema {\n    return baseEffectSchema();\n  }\n}\n\nexport { BaseEffectData };\n","import { DeepPartial } from 'fvtt-types/utils';\nimport type SwadeActiveEffect from '../../documents/active-effect/SwadeActiveEffect';\n\n/**\n * @returns Schema definition for ModifierData\n */\nfunction modifierSchema() {\n  const fields = foundry.data.fields;\n\n  return {\n    cost: new fields.NumberField({\n      initial: null,\n      integer: true,\n      label: 'SWADE.ActiveEffects.ModifierCost.Label',\n      hint: 'SWADE.ActiveEffects.ModifierCost.Hint',\n    }),\n    // Null means unlimited. Nonlinear options should be implemented as separate choices.\n    limit: new fields.NumberField({\n      initial: 1,\n      integer: true,\n      min: 1,\n      label: 'SWADE.ActiveEffects.ModifierLimit.Label',\n      hint: 'SWADE.ActiveEffects.ModifierLimit.Hint',\n    }),\n    level: new fields.NumberField({\n      initial: 1,\n      integer: true,\n      min: 1,\n      label: 'SWADE.ActiveEffects.ModifierLevel.Label',\n      hint: 'SWADE.ActiveEffects.ModifierLevel.Hint',\n    }),\n  };\n}\n\ndeclare namespace ModifierData {\n  type Schema = ReturnType<typeof modifierSchema>;\n}\n\n/**\n * A data model to represent effects that modify the items they are contained on\n */\nclass ModifierData extends foundry.abstract.TypeDataModel<\n  ModifierData.Schema,\n  SwadeActiveEffect<'modifier'>\n> {\n  static override defineSchema() {\n    return modifierSchema();\n  }\n\n  protected override async _preCreate(\n    data: foundry.abstract.TypeDataModel.ParentAssignmentType<\n      ModifierData.Schema,\n      ActiveEffect<'modifier'>\n    >,\n    options: ActiveEffect.Database.PreCreateOptions,\n    user: User.Implementation,\n  ) {\n    const allowed = await super._preCreate(data, options, user);\n    if (allowed === false) return false;\n    if (this.parent instanceof Actor) return false;\n    if (data.transfer) {\n      console.warn('All Modifiers must be non-transferred');\n    }\n    data.transfer = false;\n    this.parent.updateSource({ transfer: false });\n  }\n\n  protected override async _preUpdate(\n    changed: DeepPartial<\n      foundry.abstract.TypeDataModel.ParentAssignmentType<\n        ModifierData.Schema,\n        ActiveEffect<'modifier'>\n      >\n    >,\n    options: ActiveEffect.Database.PreUpdateOptions,\n    user: User.Implementation,\n  ) {\n    const allowed = await super._preUpdate(changed, options, user);\n    if (allowed === false) return false;\n    if (changed.transfer) {\n      delete changed.transfer;\n      console.warn('All Modifiers must be non-transferred');\n    }\n  }\n}\n\nexport { ModifierData };\n","import { BaseEffectData } from './base';\nimport { ModifierData } from './modifier';\n\nexport { BaseEffectData } from './base';\n\nexport const config = {\n  base: BaseEffectData,\n  modifier: ModifierData,\n};\n\ndeclare global {\n  interface DataModelConfig {\n    ActiveEffect: {\n      base: typeof BaseEffectData;\n      modifier: typeof ModifierData;\n    };\n  }\n}\n","import { EmptyObject } from 'fvtt-types/utils';\n\ndeclare namespace HeadquartersData {\n  interface Schema extends foundry.data.fields.DataSchema {\n    advantage: foundry.data.fields.HTMLField<{ label: string }>;\n    complication: foundry.data.fields.HTMLField<{ label: string }>;\n    upgrades: foundry.data.fields.HTMLField<{ label: string }>;\n    form: foundry.data.fields.SchemaField<{\n      description: foundry.data.fields.HTMLField<{ label: string }>;\n      acquisition: foundry.data.fields.HTMLField<{ label: string }>;\n      maintenance: foundry.data.fields.HTMLField<{ label: string }>;\n    }>;\n  }\n  interface BaseData extends EmptyObject {}\n  interface DerivedData extends EmptyObject {}\n}\n\nclass HeadquartersData extends foundry.abstract.TypeDataModel<\n  HeadquartersData.Schema,\n  JournalEntryPage.ConfiguredInstance,\n  HeadquartersData.BaseData,\n  HeadquartersData.DerivedData\n> {\n  static override defineSchema(): HeadquartersData.Schema {\n    const fields = foundry.data.fields;\n    return {\n      advantage: new fields.HTMLField({\n        label: 'SWADE.Headquarters.Advantage',\n      }),\n      complication: new fields.HTMLField({\n        label: 'SWADE.Headquarters.Complication',\n      }),\n      upgrades: new fields.HTMLField({ label: 'SWADE.Headquarters.Upgrades' }),\n      form: new fields.SchemaField({\n        description: new fields.HTMLField({\n          label: 'SWADE.Headquarters.Description',\n        }),\n        acquisition: new fields.HTMLField({\n          label: 'SWADE.Headquarters.Acquisition',\n        }),\n        maintenance: new fields.HTMLField({\n          label: 'SWADE.Headquarters.Maintenance',\n        }),\n      }),\n    };\n  }\n}\n\nexport { HeadquartersData };\n","import { HeadquartersData } from './headquarters';\r\n\r\nexport { HeadquartersData } from './headquarters';\r\n\r\nexport const config = {\r\n  headquarters: HeadquartersData,\r\n};\r\n\r\ndeclare global {\r\n  interface DataModelConfig {\r\n    JournalEntryPage: {\r\n      headquarters: typeof HeadquartersData;\r\n    };\r\n  }\r\n}\r\n","export default class Benny extends foundry.dice.terms.DiceTerm {\n  constructor(termData: foundry.dice.terms.DiceTerm.TermData) {\n    termData.faces = 2;\n    super(termData);\n  }\n\n  /** @override */\n  static override DENOMINATION = 'b';\n\n  /** @override */\n  override get isDeterministic(): boolean {\n    return false;\n  }\n\n  /** @override */\n  override getResultLabel(_result: foundry.dice.terms.DiceTerm.Result): string {\n    return 'b';\n  }\n}\n","import { SWADE } from './config';\n\n/** Creates a chat message for GM Bennies */\nexport async function createGmBennyAddMessage(\n  user: User = game.user!,\n  given?: boolean,\n) {\n  let template;\n  const data = { target: user, speaker: user };\n  if (given) template = SWADE.bennies.templates.add;\n  else template = SWADE.bennies.templates.gmadd;\n\n  const content = await foundry.applications.handlebars.renderTemplate(\n    template,\n    data,\n  );\n  const chatData = { content };\n  ChatMessage.implementation.create(chatData);\n}\n","import { createGmBennyAddMessage } from '../chat';\nimport { shouldShowBennyAnimation } from '../util';\n\ndeclare global {\n  interface DocumentClassConfig {\n    User: typeof SwadeUser;\n  }\n\n  interface FlagConfig {\n    User: {\n      swade: {\n        bennies?: number;\n        dsnCustomWildDieColors: DsnCustomWildDieColors;\n        dsnCustomWildDieOptions: DsnCustomWildDieOptions;\n        dsnShowBennyAnimation: boolean;\n        dsnWildDie?: string;\n        dsnWildDiePreset: string;\n        favoriteCardsDoc?: string;\n        [key: string]: unknown;\n      };\n    };\n  }\n}\n\nexport default class SwadeUser extends User {\n  get bennies() {\n    if (this.isGM) {\n      return this.getFlag('swade', 'bennies') ?? 0;\n    } else if (this.character) {\n      return this.character.bennies;\n    }\n    return 0;\n  }\n\n  async spendBenny() {\n    if (this.isGM) {\n      if (this.bennies <= 0) return;\n      const message = await foundry.applications.handlebars.renderTemplate(\n        CONFIG.SWADE.bennies.templates.spend,\n        {\n          target: game.user,\n          speaker: CONFIG.ChatMessage.documentClass.getSpeaker(),\n        },\n      );\n      const chatData = {\n        content: message,\n      };\n      if (game.settings.get('swade', 'notifyBennies')) {\n        await CONFIG.ChatMessage.documentClass.create(chatData);\n      }\n      await this.setFlag('swade', 'bennies', this.bennies - 1);\n\n      /**\n       * A hook event that is fired after a game master spends a Benny\n       * @function spendBenny\n       * @category Hooks\n       * @param {SwadeUser} user                     The user that spent the benny\n       */\n      Hooks.call('swadeSpendGameMasterBenny', this);\n\n      if (!!game.dice3d && (await shouldShowBennyAnimation())) {\n        game.dice3d.showForRoll(\n          await new Roll('1dB').evaluate(),\n          game.user!,\n          true,\n          null,\n          false,\n        );\n      }\n    } else if (this.character) {\n      await this.character.spendBenny();\n    }\n  }\n\n  async getBenny() {\n    if (this.isGM) {\n      await this.setFlag('swade', 'bennies', this.bennies + 1);\n\n      /**\n       * A hook event that is fired after a game master spends a Benny\n       * @function spendBenny\n       * @category Hooks\n       * @param {SwadeUser} user                     The user that received the benny\n       */\n      Hooks.call('swadeGetGameMasterBenny', this);\n\n      createGmBennyAddMessage(this, true);\n    } else if (this.character) {\n      await this.character.getBenny();\n    }\n  }\n\n  async refreshBennies(notify = true) {\n    if (this.isGM) {\n      const hasStaticBennies = game.settings.get('swade', 'staticGmBennies');\n      const gmBennies = hasStaticBennies\n        ? game.settings.get('swade', 'gmBennies')\n        : game.users.filter((u) => u.active && !u.isGM).length;\n      await this.setFlag('swade', 'bennies', gmBennies);\n\n      /**\n       * Called when a GM refreshes their bennies.\n       * @param {SwadeUser} user            The GM User\n       */\n      Hooks.callAll('swadeRefreshGmBennies', this);\n    } else if (this.character) {\n      await this.character.refreshBennies(notify);\n    }\n    ui.players?.render(true);\n  }\n\n  protected override async _onUpdate(\n    changed: foundry.documents.BaseUser.UpdateData,\n    options: User.Database.OnUpdateOperation,\n    userId: string,\n  ) {\n    await super._onUpdate(changed, options, userId);\n\n    // If the user is a gm and their bennies were changed, re-render the players display\n    if (\n      this.isGM &&\n      foundry.utils.getProperty(changed, 'flags.swade.bennies') !== undefined\n    )\n      ui.players.render(true);\n  }\n}\n\nexport interface DsnCustomWildDieColors {\n  labelColor: string;\n  diceColor: string;\n  outlineColor: string;\n  edgeColor: string;\n}\nexport interface DsnCustomWildDieOptions {\n  texture: Array<string>;\n  material: 'plastic' | 'metal' | 'glass' | 'wood' | 'chrome';\n  font: string;\n}\n","declare global {\n  interface DocumentClassConfig {\n    Cards: typeof SwadeCards;\n  }\n}\n\nexport default class SwadeCards extends Cards {\n  /**\n   * Draw cards for initiative\n   * @param to - The cards document to which the cards are deposited\n   * @param number - How many cards to draw\n   * @param how - How to draw the, e.g. from the top of the deck\n   * @returns an array of the drawn cards, in the order they were drawn\n   */\n  async dealForInitiative(\n    to: Cards,\n    number = 1,\n    how: foundry.CONST.CARD_DRAW_MODES = foundry.CONST.CARD_DRAW_MODES.TOP,\n  ): Promise<Card[]> {\n    // validate\n    if (this.type !== 'deck') {\n      throw new Error('You can only deal cards for Initiative from a Deck');\n    }\n\n    // Draw from the sorted stack\n    const drawn = this._drawCards(\n      number,\n      how,\n    ) as foundry.abstract.Document.Stored<Card>[];\n\n    // Process the card data\n    const toCreate = new Array<Card.CreateData>();\n    const toUpdate = new Array<foundry.documents.BaseCard.UpdateData>();\n    const toDelete = new Array<string>();\n    for (const card of drawn) {\n      const createData = card.toObject();\n      if (card.isHome || !createData.origin) createData.origin = this.id;\n      toCreate.push(createData);\n      if (card.isHome) toUpdate.push({ _id: card.id, drawn: true });\n      else toDelete.push(card.id);\n    }\n\n    // yeet the data\n    await Promise.all([\n      to.createEmbeddedDocuments('Card', toCreate, { keepId: true }),\n      this.deleteEmbeddedDocuments('Card', toDelete),\n    ]);\n    const updated = await this.updateEmbeddedDocuments('Card', toUpdate);\n    return updated as foundry.abstract.Document.Stored<Card>[];\n  }\n}\n","import { RollModifier } from '../../interfaces/additional.interface';\nimport { constants } from '../constants';\nimport { VehicleData } from '../data/actor/vehicle';\nimport { DamageRoll } from '../dice/DamageRoll';\nimport SwadeUser from '../documents/SwadeUser';\nimport SwadeActor from '../documents/actor/SwadeActor';\nimport type SwadeChatMessage from '../documents/chat/SwadeChatMessage';\nimport { getStatusEffectDataById } from '../util';\n\n// Create string variable for the SWADE CSS class for App Windows.\nconst appCssClasses = ['swade-app'];\n\nexport async function damageApplicator(message: SwadeChatMessage) {\n  // Get a significant roll from the chat message.\n  const roll = message.significantRoll;\n  // If there's not a significant roll  or it's not a damage roll, return.\n  if (!roll || !(roll instanceof DamageRoll)) return;\n  // Collect the user's controlled tokens.\n  const controlledTokens = game?.canvas?.tokens?.controlled;\n  // If there are not any controlled tokens, issue a warning.\n  if (!controlledTokens?.length) {\n    // If no targets selected, issue warning notification.\n    return ui.notifications.warn('SWADE.DamageApplicator.NoTargetsSelected', {\n      localize: true,\n    });\n  }\n\n  // Get the damage and ap from the roll data\n  const damageContext: DamageContext = {\n    isHeavyWeapon: roll.isHeavyWeapon,\n    status: Status.NONE,\n    wounds: {\n      applied: 0,\n      taken: 0,\n      soaked: 0,\n    },\n    damage: {\n      total: roll.total ?? 0,\n      ap: roll.ap ?? 0,\n    },\n  };\n\n  // For each token controlled...\n  for (const token of controlledTokens) {\n    // Get the actor from the token data.\n    const actor = token.actor!;\n    // Trigger calculation of Wounds\n    calcWounds(actor.uuid, damageContext);\n  }\n}\n\n// Function for translating damage to Wounds.\nexport async function calcWounds(\n  targetUuid: string,\n  damageContext: DamageContext,\n) {\n  const actor = await fromUuid(targetUuid);\n\n  if (!(actor instanceof SwadeActor)) return;\n  // Get Toughness values.\n  let armor = 0;\n  let value = 0;\n  // If it's not a vehicle\n  if (!(actor.system instanceof VehicleData)) {\n    // Get the values from the stats child object.\n    armor = Number(actor.system.stats.toughness.armor);\n    value = Number(actor.system.stats.toughness.value);\n  } else if (actor.system instanceof VehicleData) {\n    // If the Actor is a vehicle, get the values from the system object.\n    armor = Number(actor.system.toughness.armor);\n    value = Number(actor.system.toughness.total);\n  }\n  // AP vs Armor\n  const apNeg = Math.min(damageContext.damage.ap, armor);\n  // Calculate Toughness after subtracting AP.\n  const newT = value - apNeg;\n  // Calculate how much the damage is over the relative Toughness.\n  // Doesn't use DamageRoll.successes because of the need to adjust damage\n  const excess = damageContext.damage.total - newT;\n  // Translate damage raises to Wounds.\n  let woundsInflicted = Math.floor(excess / 4);\n  // Check if Wound Cap is in play.\n  const woundCap = game.settings.get('swade', 'woundCap');\n  // If Wound Cap, limit Wounds inflicted (i.e. Wounds to Soak) to 4\n  if (woundCap && woundsInflicted > 4) {\n    woundsInflicted = 4;\n  }\n  // Set default status to apply as none.\n  let statusToApply = Status.NONE;\n  // If damage meets or beats Toughness without a raise.\n  if (excess >= 0 && excess < 4) {\n    // Set status to Shaken.\n    statusToApply = Status.SHAKEN;\n    // If already shaken, set status to wounded and wounds inflicted to 1.\n    if (\n      // @ts-expect-error isShaken is undefined, which is falsy and works fine\n      actor.system.status.isShaken &&\n      woundsInflicted === 0 &&\n      !actor.getFlag('swade', 'hardy')\n    ) {\n      woundsInflicted = 1;\n      statusToApply = Status.WOUNDED;\n      damageContext.doubleShaken = true;\n    }\n    // If damage is at least a raise over Toughness, set status to wounded\n  } else if (excess >= 4) {\n    statusToApply = Status.WOUNDED;\n  }\n\n  /**\n   * A hook event that is fired before wounds are calculated\n   * Returning `false` in a hook callback will cancel the workflow entirely\n   * @category Hooks\n   * @since 3.3.0\n   * @param {SwadeActor} actor              The actor that is being damaged\n   * @param {DamageContext} damageContext   The damage context\n   * @param {number} woundsInflicted        The amount of wounds that will be inflicted\n   * @param {Status} statusToApply          The resulting status that would be applied\n   */\n  const permit = Hooks.call(\n    'swadePreCalcWounds',\n    actor,\n    damageContext,\n    woundsInflicted,\n    statusToApply,\n  );\n\n  if (permit !== false) {\n    // Trigger Soak prompt.\n    await soakPrompt(actor, damageContext, woundsInflicted, statusToApply);\n  }\n}\n\nfunction removeButtons(\n  buttons: foundry.applications.api.DialogV2.Button<any>[],\n  actions: string[],\n) {\n  for (const action of actions) {\n    const index = buttons.findIndex((button) => button.action === action);\n    if (index !== -1) buttons.splice(index, 1);\n  }\n}\n\n// Function for prompting to Soak.\nasync function soakPrompt(\n  actor: SwadeActor,\n  damageContext: DamageContext,\n  woundsInflicted: number,\n  statusToApply: Status,\n) {\n  const speaker = ChatMessage.getSpeaker({ actor });\n  const name = speaker.alias;\n\n  // Set singular Wound or plural Wounds for chat message\n  const woundsText = `${woundsInflicted} ${\n    woundsInflicted > 1\n      ? game.i18n.localize('SWADE.Wounds')\n      : game.i18n.localize('SWADE.Wound')\n  }`;\n  // Text for Wounds about to be taken.\n  let message = game.i18n.format(\n    'SWADE.DamageApplicator.WoundsAboutToBeTaken',\n    {\n      name: name,\n      wounds: woundsText,\n    },\n  );\n\n  // Create a title and prompt variable to be assigned later.\n  let title = '';\n  let prompt = '';\n\n  // Create a collection of buttons with an adjust button included by default.\n  const buttons: foundry.applications.api.DialogV2.Button<Promise<void>>[] = [\n    {\n      action: 'adjust',\n      label: game.i18n.localize(\n        'SWADE.DamageApplicator.SoakDialog.AdjustDamage',\n      ),\n      icon: '<i class=\"fas fa-plus-minus\"></i>',\n      callback: async (_event: PointerEvent, button: HTMLButtonElement) => {\n        const html = button.form!;\n        damageContext.damage.ap = Number(html.querySelector<HTMLInputElement>('#ap')?.value);\n        damageContext.damage.total = Number(\n          html.querySelector<HTMLInputElement>('#damage')?.value,\n        );\n        // Calculate the Wounds.\n        await calcWounds(actor.uuid, damageContext);\n      },\n    },\n    {\n      action: 'take',\n      label: game.i18n.format('SWADE.DamageApplicator.SoakDialog.TakeWounds', {\n        wounds: woundsText,\n      }),\n      icon: '<i class=\"fas fa-droplet\"></i>',\n      callback: async () => {\n        const existingWounds = actor.system.wounds.value;\n        const maxWounds = actor.system.wounds.max;\n        const totalWounds = existingWounds + woundsInflicted;\n        const newWoundsValue =\n          totalWounds < maxWounds ? totalWounds : maxWounds;\n        await actor.update({ 'system.wounds.value': newWoundsValue });\n        if (totalWounds > maxWounds) {\n          await applyIncapacitated(actor);\n        } else {\n          await applyShaken(actor);\n          await ChatMessage.create({\n            content: game.i18n.format(\n              'SWADE.DamageApplicator.Result.IsShakenWithWounds',\n              {\n                name: name,\n                wounds: woundsText,\n              },\n            ),\n            speaker: speaker,\n          });\n        }\n        if (\n          actor.isWildcard &&\n          game.settings.get('swade', 'grittyDamage') &&\n          !damageContext.doubleShaken\n        ) {\n          await rollInjuryTable();\n        }\n        /**\n         * A hook event that is fired after damage has been applied, intended for things like other injury table conditions\n         * @category Hooks\n         * @param {SwadeActor} actor            The actor taking the damage\n         * @param {DamageContext} damageContext Additional information people calling the hook might need\n         */\n        damageContext.status = statusToApply;\n        damageContext.wounds.applied = woundsInflicted;\n        damageContext.wounds.taken = totalWounds - existingWounds;\n\n        Hooks.call('swadeTakeDamage', actor, damageContext);\n      },\n    },\n    {\n      action: 'applyShaken',\n      label: game.i18n.format('SWADE.DamageApplicator.SoakDialog.ApplyShaken'),\n      icon: '<i class=\"fas fa-face-hushed\"></i>',\n      callback: async () => {\n        message = game.i18n.format('SWADE.DamageApplicator.Result.IsShaken', {\n          name: name,\n        });\n\n        // Apply Shaken Status Effect.\n        await applyShaken(actor);\n        // Output chat message.\n        await ChatMessage.create({ content: message, speaker: speaker });\n\n        /**\n         * A hook event that is fired after damage has been applied, intended for things like other injury table conditions\n         * @category Hooks\n         * @param {SwadeActor} actor            The actor taking the damage\n         * @param {DamageContext} damageContext Additional information people calling the hook might need\n         */\n\n        damageContext.status = statusToApply;\n\n        Hooks.call('swadeTakeDamage', actor, damageContext);\n      },\n    },\n    {\n      action: 'accept',\n      label: game.i18n.localize('SWADE.DamageApplicator.SoakDialog.Accept'),\n      icon: '<i class=\"fas fa-check\"></i>',\n      callback: async () => {\n        await ChatMessage.create({\n          content: game.i18n.format(\n            'SWADE.DamageApplicator.Result.NoSignificantDamage',\n            {\n              name: name,\n            },\n          ),\n          speaker: speaker,\n        });\n\n        /**\n         * A hook event that is fired after damage has been applied, intended for things like other injury table conditions\n         * @category Hooks\n         * @param {SwadeActor} actor            The actor taking the damage\n         * @param {DamageContext} damageContext Additional information people calling the hook might need\n         */\n\n        damageContext.status = statusToApply;\n\n        Hooks.call('swadeTakeDamage', actor, damageContext);\n      },\n    },\n    {\n      action: 'soakBenny',\n      label: game.i18n.localize('SWADE.DamageApplicator.SoakDialog.Benny'),\n      icon: '<i class=\"fas fa-droplet-slash\"></i>',\n      callback: async () => {\n        actor.spendBenny();\n        await attemptSoak(\n          actor,\n          woundsInflicted,\n          statusToApply,\n          woundsText,\n          damageContext,\n        );\n      },\n    },\n    {\n      action: 'soakGmBenny',\n      label: game.i18n.localize('SWADE.DamageApplicator.SoakDialog.GMBenny'),\n      icon: '<i class=\"fas fa-droplet-slash\"></i>',\n      callback: async () => {\n        game.user?.spendBenny();\n        await attemptSoak(\n          actor,\n          woundsInflicted,\n          statusToApply,\n          woundsText,\n          damageContext,\n        );\n      },\n    },\n    {\n      action: 'soakFree',\n      label: game.i18n.localize('SWADE.DamageApplicator.SoakDialog.Free'),\n      icon: '<i class=\"fas fa-droplet-slash\"></i>',\n      callback: async () => {\n        await attemptSoak(\n          actor,\n          woundsInflicted,\n          statusToApply,\n          woundsText,\n          damageContext,\n        );\n      },\n    },\n  ];\n\n  // Is the Actor a Wild Card out of Bennies?\n  const actorHasBennies = actor.isWildcard && actor.bennies > 0;\n  // Is the User a GM?\n  const isGM = game.user?.isGM;\n  // Is the GM out of Bennies?\n  const gmHasBennies = isGM && game?.user?.bennies && game.user.bennies > 0;\n  // Create the default button variable because this will be conditional.\n  let defaultButton = '';\n\n  // If status is not Wounded...\n  if (statusToApply !== Status.WOUNDED) {\n    // Delete Soak and Take Wounds buttons.\n    removeButtons(buttons, ['take', 'soakBenny', 'soakGmBenny', 'soakFree']);\n\n    // Set the title\n    title = game.i18n.format(\n      'SWADE.DamageApplicator.SoakDialog.UnwoundedTitle',\n      { name: name },\n    );\n\n    // If the status is Shaken...\n    if (statusToApply === Status.SHAKEN) {\n      // Delete general accept button.\n      removeButtons(buttons, ['accept']);\n\n      // Set the prompt text.\n      prompt = game.i18n.format(\n        'SWADE.DamageApplicator.SoakDialog.ShakenPrompt',\n        { name: name },\n      );\n      // Set the default button to Apply Shaken\n      defaultButton = 'applyShaken';\n    } else if (statusToApply === Status.NONE) {\n      // Delete Apply Shaken Button\n      removeButtons(buttons, ['applyShaken']);\n\n      // If there is no damage applied at all, change prompt to unharmed.\n      prompt = game.i18n.format(\n        'SWADE.DamageApplicator.SoakDialog.UnharmedPrompt',\n        { name: name },\n      );\n      defaultButton = 'accept';\n    }\n  } else {\n    // In all other circumstances, set the title to Wounded title.\n    title = game.i18n.format('SWADE.DamageApplicator.SoakDialog.WoundedTitle', {\n      name: name,\n    });\n    // Set the prompt text to Wounded text\n    prompt = game.i18n.format(\n      'SWADE.DamageApplicator.SoakDialog.WoundedPrompt',\n      { name: name, wounds: woundsText },\n    );\n\n    // Since status to apply is Wounded delete Apply Shaken and Accept buttons\n    removeButtons(buttons, ['applyShaken', 'accept']);\n    // If the Actor does not have Bennies, delete the button for spending Actor Bennies\n    if (!actorHasBennies) removeButtons(buttons, ['soakBenny']);\n    // If the user is a GM and does not have Bennies, delete the button for spending GM Bennies.\n    if (!gmHasBennies) removeButtons(buttons, ['soakGmBenny']);\n\n    // Set default button to take the Wounds.\n    defaultButton = 'take';\n  }\n  const trueDefault = buttons.find((button) => button.action === defaultButton);\n  if (trueDefault) trueDefault.default = true;\n  // Construct the Dialog and render it.\n  const adjustDamage = new Handlebars.SafeString(\n    game.i18n.format('SWADE.DamageApplicator.AdjustDamagePrompt', {\n      name: name,\n    }),\n  );\n  const content = await foundry.applications.handlebars.renderTemplate(\n    'systems/swade/templates/apps/damage/soak.hbs',\n    { damageContext, adjustDamage, prompt: new Handlebars.SafeString(prompt) },\n  );\n  foundry.applications.api.DialogV2.wait({\n    window: {\n      title: title,\n    },\n    classes: appCssClasses,\n    content: content,\n    buttons: buttons,\n  });\n}\n\n// Function to roll for Soaking Wounds.\nasync function attemptSoak(\n  actor: SwadeActor,\n  woundsInflicted: number,\n  statusToApply: Status,\n  woundsText: string,\n  damageContext: DamageContext,\n  bestSoakAttempt: number = 0,\n  options?: {\n    reroll?: boolean;\n  },\n) {\n  if (actor.system instanceof VehicleData) {\n    // No handling for vehicle soaks... yet\n    return ui.notifications.warn(\n      'SWADE.DamageApplicator.SoakDialog.NoVehicleSoak',\n      {\n        localize: true,\n      },\n    );\n  }\n  const soakModifiers: RollModifier[] = [\n    {\n      label: game.i18n.localize('SWADE.DamageApplicator.SoakModifier'),\n      value: actor.system.attributes.vigor.soakBonus,\n    },\n  ];\n  if (game.settings.get('swade', 'unarmoredHero') && actor.isUnarmored) {\n    soakModifiers.push({\n      label: game.i18n.localize('SWADE.Settings.UnarmoredHero.Name'),\n      value: 2,\n    });\n  }\n  if (options?.reroll) {\n    soakModifiers.push(...actor.system.stats.globalMods.bennyTrait);\n  }\n  // Roll Vigor and get the data.\n  const vigorRoll = await actor.rollAttribute('vigor', {\n    title: game.i18n.localize('SWADE.DamageApplicator.SoakDialog.SoakRoll'),\n    flavour: game.i18n.localize('SWADE.DamageApplicator.SoakDialog.SoakRoll'),\n    additionalMods: soakModifiers,\n    isRerollable: false,\n  });\n\n  if (game.dice3d) {\n    game.dice3d\n      .waitFor3DAnimationByMessageID(vigorRoll?.messageId)\n      .then(() => applySoak());\n  } else {\n    applySoak();\n  }\n\n  async function applySoak() {\n    const speaker = ChatMessage.getSpeaker({ actor });\n    const name = speaker.alias;\n\n    let message = '';\n    // Calculate how many Wounds have been Soaked with the roll\n    const woundsSoaked = vigorRoll?.successes ?? 0;\n    // Get the number of current Wounds the Actor has.\n    const existingWounds = actor.system.wounds.value;\n    // Get the maximum amount of Wounds the Actor can suffer before Incapacitation.\n    const maxWounds = actor.system.wounds.max;\n    // Calculate how many Wounds are remaining after Soaking.\n    let woundsRemaining = woundsInflicted - woundsSoaked;\n    // If there are no remaining Wounds, output message that they Soaked all the Wounds.\n    if (woundsRemaining <= 0) {\n      statusToApply = Status.NONE;\n      message = game.i18n.format('SWADE.DamageApplicator.Result.SoakedAll', {\n        name: name,\n      });\n      await ChatMessage.create({ content: message, speaker: speaker });\n\n      const isShaken = actor.system.status.isShaken;\n      // If they're already Shaken, remove the Status Effect.\n      if (isShaken) await actor.toggleActiveEffect('shaken', { active: false });\n\n      /**\n       * A hook event that is fired after damage has been applied, intended for things like other injury table conditions\n       * @category Hooks\n       * @param {SwadeActor} actor            The actor taking the damage\n       * @param {DamageContext} damageContext Additional information people calling the hook might need\n       */\n      damageContext.status = statusToApply;\n      damageContext.wounds.soaked = woundsSoaked;\n\n      Hooks.call('swadeTakeDamage', actor, damageContext);\n    } else {\n      // Otherwise, calculate how many Wounds the Actor now has.\n      const totalWounds = existingWounds + woundsRemaining;\n      // Set the Wounds, but if it's beyond the maximum, set it to the maximum.\n      const newWoundsValue = totalWounds < maxWounds ? totalWounds : maxWounds;\n      if (bestSoakAttempt !== 0 && woundsRemaining > bestSoakAttempt) {\n        // If they already attempted to Soak, set Wounds remaining to whatever their best roll yielded so far.\n        woundsRemaining = bestSoakAttempt;\n      }\n      // Construct text for number of Wounds remaining.\n      const woundsRemainingText = `${woundsRemaining} ${\n        woundsRemaining > 1 || woundsRemaining === 0\n          ? game.i18n.localize('SWADE.Wounds')\n          : game.i18n.localize('SWADE.Wound')\n      }`;\n\n      // Build default buttons\n      const buttons: foundry.applications.api.DialogV2.Button<Promise<void>>[] =\n        [\n          {\n            action: 'take',\n            label: game.i18n.format(\n              'SWADE.DamageApplicator.RerollSoakDialog.TakeWounds',\n              {\n                wounds: woundsRemainingText,\n              },\n            ),\n            icon: '<i class=\"fas fa-droplet\"></i>',\n            default: true,\n            callback: async () => {\n              // Construct text for the new Wounds value to be accepted (singular or plural Wounds).\n              const newWoundsValueText = `${newWoundsValue} ${\n                newWoundsValue > 1 || newWoundsValue === 0 // newWoundsValue should never be zero here\n                  ? game.i18n.localize('SWADE.Wounds')\n                  : game.i18n.localize('SWADE.Wound')\n              }`;\n              // Update Wounds on the Actor\n              await actor.update({\n                'system.wounds.value': newWoundsValue,\n              });\n              // Apply status effects based on Shaken or Incapacitated.\n              if (totalWounds > maxWounds) {\n                // If their total Wounds is greater than their max Wounds, apply Status Effects: Incapacitated.\n                await applyIncapacitated(actor);\n              } else {\n                // If their total Wounds not greater than their max Wounds, apply Status Effects: Shaken.\n                await applyShaken(actor);\n                message = game.i18n.format(\n                  'SWADE.DamageApplicator.Result.IsShakenWithWounds',\n                  {\n                    name: name,\n                    wounds: newWoundsValueText,\n                  },\n                );\n              }\n              // Output Chat Message.\n              if (message) {\n                await ChatMessage.create({\n                  content: message,\n                  speaker: speaker,\n                });\n              }\n\n              // If Gritty Damage is in play, roll on the Injury Table.\n              if (\n                actor.isWildcard &&\n                game.settings.get('swade', 'grittyDamage') &&\n                !damageContext.doubleShaken\n              ) {\n                await rollInjuryTable();\n              }\n\n              /**\n               * A hook event that is fired after damage has been applied, intended for things like other injury table conditions\n               * @category Hooks\n               * @param {SwadeActor} actor            The actor taking the damage\n               * @param {DamageContext} damageContext Additional information people calling the hook might need\n               */\n              damageContext.status = statusToApply;\n              damageContext.wounds.applied = woundsRemaining;\n              damageContext.wounds.taken = newWoundsValue - existingWounds;\n              damageContext.wounds.soaked = Math.min(\n                woundsSoaked,\n                woundsInflicted,\n              );\n\n              Hooks.call('swadeTakeDamage', actor, damageContext);\n            },\n          },\n          {\n            action: 'rerollBenny',\n            label: game.i18n.localize(\n              'SWADE.DamageApplicator.RerollSoakDialog.Benny',\n            ),\n            icon: '<i class=\"fas fa-dice\"></i>',\n            callback: async () => {\n              actor.spendBenny();\n              await attemptSoak(\n                actor,\n                woundsInflicted,\n                statusToApply,\n                woundsText,\n                damageContext,\n                woundsRemaining,\n                { reroll: true },\n              );\n            },\n          },\n          {\n            action: 'rerollGmBenny',\n            label: game.i18n.localize(\n              'SWADE.DamageApplicator.RerollSoakDialog.GMBenny',\n            ),\n            icon: '<i class=\"fas fa-dice\"></i>',\n            callback: async () => {\n              game.user?.spendBenny();\n              await attemptSoak(\n                actor,\n                woundsInflicted,\n                statusToApply,\n                woundsText,\n                damageContext,\n                woundsRemaining,\n                { reroll: true },\n              );\n            },\n          },\n          {\n            action: 'rerollFree',\n            label: game.i18n.localize(\n              'SWADE.DamageApplicator.RerollSoakDialog.Free',\n            ),\n            icon: '<i class=\"fas fa-dice\"></i>',\n            callback: async () => {\n              await attemptSoak(\n                actor,\n                woundsInflicted,\n                statusToApply,\n                woundsText,\n                damageContext,\n                woundsRemaining,\n              );\n            },\n          },\n        ];\n      // Is the Actor a Wild Card out of Bennies?\n      const actorHasBennies = actor.isWildcard && actor.bennies > 0;\n      // Is the User a GM?\n      const isGM = game.user?.isGM;\n      // Is the GM out of Bennies?\n      const gmHasBennies = isGM && game?.user?.bennies && game.user.bennies > 0;\n\n      // If the Actor does not have Bennies, delete the button for spending Actor Bennies\n      if (!actorHasBennies) removeButtons(buttons, ['rerollBenny']);\n      // If the user is a GM and does not have Bennies, delete the button for spending GM Bennies.\n      if (!gmHasBennies) removeButtons(buttons, ['rerollGmBenny']);\n\n      let content = game.i18n.format(\n        'SWADE.DamageApplicator.RerollSoakDialog.Prompt',\n        {\n          name: name,\n          wounds: woundsRemainingText,\n        },\n      );\n\n      // Crit fail check to deny rerolling soaks. Per RAW Extras can't soak,\n      //  so no need to handle the confirmation die\n      if (vigorRoll?.isCritfail && !game.settings.get('swade', 'dumbLuck')) {\n        removeButtons(buttons, ['rerollBenny', 'rerollGmBenny', 'rerollFree']);\n\n        content = game.i18n.format(\n          'SWADE.DamageApplicator.RerollSoakDialog.PromptCritFail',\n          {\n            name: name,\n            wounds: woundsRemainingText,\n          },\n        );\n      }\n\n      // Create and render Dialog.\n      foundry.applications.api.DialogV2.wait({\n        window: {\n          title: game.i18n.format(\n            'SWADE.DamageApplicator.RerollSoakDialog.Title',\n            {\n              name: name,\n            },\n          ),\n        },\n        content: content,\n        buttons: buttons,\n        classes: appCssClasses,\n      });\n    }\n  }\n}\n\n// Function for applying Shaken Status Effect\nasync function applyShaken(actor: SwadeActor) {\n  if (actor.system instanceof VehicleData) return;\n  // If they're not already Shaken, apply the Status Effect.\n  if (!actor.system.status.isShaken) {\n    await actor.toggleActiveEffect('shaken', { active: true });\n  }\n}\n\n// Function for applying the Incapacitated Status Effect\nasync function applyIncapacitated(actor: SwadeActor) {\n  const speaker = ChatMessage.getSpeaker({ actor });\n  const name = speaker.alias;\n\n  const statuses: ToggleStatus[] = [];\n  const statusIncapacitated = getStatusEffectDataById('incapacitated');\n  if (statusIncapacitated) {\n    statuses.push({\n      effectData: statusIncapacitated,\n      options: { active: true, overlay: true },\n    });\n  }\n  if (Hooks.call('swadeIncapacitation', actor, statuses) && actor.isWildcard) {\n    let resistRoll: number = await resistInjury(actor);\n    const ignoreBleedOut =\n      game.settings.get('swade', 'heroesNeverDie') ||\n      actor.getFlag('swade', 'ignoreBleedOut');\n    if (ignoreBleedOut && resistRoll === constants.ROLL_RESULT.CRITFAIL)\n      resistRoll = constants.ROLL_RESULT.FAIL;\n    let message = '';\n    const statusBleedingOut = getStatusEffectDataById('bleeding-out');\n    switch (resistRoll) {\n      case constants.ROLL_RESULT.CRITFAIL:\n        message = game.i18n.format(\n          'SWADE.DamageApplicator.Incapacitation.Dies',\n          { name: name },\n        );\n        break;\n      case constants.ROLL_RESULT.FAIL:\n        await rollInjuryTable();\n        message = game.i18n.format(\n          ignoreBleedOut\n            ? 'SWADE.DamageApplicator.Incapacitation.PermanentInjuryHND'\n            : 'SWADE.DamageApplicator.Incapacitation.PermanentInjury',\n          { name: name },\n        );\n        // If there's an Status Effect data for Bleeding Out.\n        if (statusBleedingOut && !ignoreBleedOut) {\n          const incapIndex = statuses.findIndex(\n            (s) => s.effectData.id === 'incapacitated',\n          );\n          statuses[incapIndex].options.overlay = false;\n          statuses.push({\n            effectData: statusBleedingOut,\n            options: { active: true, overlay: true },\n          });\n        }\n        break;\n      case constants.ROLL_RESULT.SUCCESS:\n        await rollInjuryTable();\n        message = game.i18n.format(\n          'SWADE.DamageApplicator.Incapacitation.TemporaryInjury',\n          { name: name },\n        );\n        break;\n      default: // Raises\n        await rollInjuryTable();\n        message = game.i18n.format(\n          'SWADE.DamageApplicator.Incapacitation.ShortInjury',\n          { name: name },\n        );\n        break;\n    }\n    await ChatMessage.create({ content: message, speaker: speaker });\n  }\n  statuses.forEach((s) => {\n    actor.toggleActiveEffect(s.effectData, s.options);\n  });\n}\n\nasync function resistInjury(\n  actor: SwadeActor,\n  bestRoll: number = constants.ROLL_RESULT.CRITFAIL,\n): Promise<number> {\n  const speaker = ChatMessage.getSpeaker({ actor });\n  const name = speaker.alias;\n\n  const vigorRoll = await actor.rollAttribute('vigor', {\n    title: game.i18n.localize(\n      'SWADE.DamageApplicator.Incapacitation.InjuryRoll',\n    ),\n    flavour: game.i18n.localize(\n      'SWADE.DamageApplicator.Incapacitation.InjuryRoll',\n    ),\n    isRerollable: false,\n  });\n\n  const result: number = vigorRoll?.successes ?? constants.ROLL_RESULT.FAIL;\n\n  if (result > constants.ROLL_RESULT.SUCCESS)\n    return constants.ROLL_RESULT.RAISE;\n  else if (result === constants.ROLL_RESULT.CRITFAIL)\n    return constants.ROLL_RESULT.CRITFAIL;\n\n  bestRoll = Math.max(bestRoll, result);\n\n  const incapLabel: string = game.i18n.localize(\n    result === constants.ROLL_RESULT.SUCCESS\n      ? 'SWADE.DamageApplicator.Incapacitation.TakeSuccess'\n      : 'SWADE.DamageApplicator.Incapacitation.TakeFail',\n  );\n\n  // Build default buttons\n  const buttons: foundry.applications.api.DialogV2.Button<Object>[] = [\n    {\n      action: 'take',\n      label: incapLabel,\n      icon: '<i class=\"fa-solid fa-skull\"></i>',\n      default: true,\n      callback: () => new Object({ reroll: false, who: null }),\n    },\n    {\n      action: 'rerollBenny',\n      label: game.i18n.localize(\n        'SWADE.DamageApplicator.RerollSoakDialog.Benny',\n      ),\n      icon: '<i class=\"fas fa-dice\"></i>',\n      callback: () => new Object({ reroll: true, who: actor }),\n    },\n    {\n      action: 'rerollGmBenny',\n      label: game.i18n.localize(\n        'SWADE.DamageApplicator.RerollSoakDialog.GMBenny',\n      ),\n      icon: '<i class=\"fas fa-dice\"></i>',\n      callback: () => new Object({ reroll: false, who: game.user }),\n    },\n    {\n      action: 'rerollFree',\n      label: game.i18n.localize('SWADE.DamageApplicator.RerollSoakDialog.Free'),\n      icon: '<i class=\"fas fa-dice\"></i>',\n      callback: () => new Object({ reroll: true, who: null }),\n    },\n  ];\n  // Is the Actor a Wild Card out of Bennies?\n  const actorHasBennies = actor.isWildcard && actor.bennies > 0;\n  // Is the User a GM?\n  const isGM = game.user?.isGM;\n  // Is the GM out of Bennies?\n  const gmHasBennies = isGM && game?.user?.bennies && game.user.bennies > 0;\n\n  // If the Actor does not have Bennies, delete the button for spending Actor Bennies\n  if (!actorHasBennies) removeButtons(buttons, ['rerollBenny']);\n  // If the user is a GM and does not have Bennies, delete the button for spending GM Bennies.\n  if (!gmHasBennies) removeButtons(buttons, ['rerollGmBenny']);\n\n  const dialogResult: RerollDialogReturn =\n    await foundry.applications.api.DialogV2.wait({\n      window: {\n        title: game.i18n.format('SWADE.DamageApplicator.Incapacitation.Title', {\n          name: name,\n        }),\n      },\n      content: game.i18n.format(\n        'SWADE.DamageApplicator.Incapacitation.Prompt',\n        {\n          name: name,\n        },\n      ),\n      buttons: buttons,\n      classes: appCssClasses,\n    });\n\n  if (dialogResult.reroll) {\n    if (dialogResult.who) dialogResult.who?.spendBenny();\n    const newRoll = await resistInjury(actor, bestRoll);\n    if (newRoll === constants.ROLL_RESULT.CRITFAIL) return newRoll;\n    bestRoll = Math.max(newRoll, bestRoll);\n  }\n  return bestRoll;\n}\n\n// Function for rolling on the Injury Table.\nasync function rollInjuryTable() {\n  // Get the Injury Table from settings.\n  const injuryTable = (await fromUuid(\n    game.settings.get('swade', 'injuryTable'),\n  )) as RollTable;\n  // If a table is found, draw from the table.\n  if (injuryTable) {\n    await injuryTable.draw();\n  } else {\n    // Issue an error if no table is selected.\n    ui.notifications.error('SWADE.DamageApplicator.NoInjuryTable', {\n      localize: true,\n    });\n  }\n}\n\nenum Status {\n  NONE,\n  SHAKEN,\n  WOUNDED,\n}\n\n/**\n * An interface that supports the swadeTakeDamage hook\n * @category Interfaces\n */\ninterface DamageContext {\n  /** Whether or not the damage source is flagged as a heavy weapon */\n  isHeavyWeapon?: boolean;\n  /** Was this a result of a second shaken result? */\n  doubleShaken?: boolean;\n  /** The Status inflicted by the damage */\n  status?: Status;\n  wounds: {\n    /** The number of wounds the actor would outright take */\n    applied?: number;\n    /** The actual final number of wounds the actor is taking, mitigated by the actor's max wounds */\n    taken?: number;\n    /** The number of wounds soaked by the actor, capped by the wounds inflicted */\n    soaked?: number;\n  };\n  damage: {\n    /** Raw damage value, after adjustments */\n    total: number;\n    /** AP value, after adjustments */\n    ap: number;\n  };\n}\n\n/**\n * An interface that supports the swadeTakeDamage hook\n * @category Interfaces\n */\ninterface ToggleStatus {\n  effectData: CONFIG.StatusEffect;\n  options: {\n    overlay: boolean;\n    active: boolean;\n  };\n}\n\ninterface RerollDialogReturn {\n  reroll: boolean;\n  who: SwadeActor | SwadeUser;\n}\n","import { RollModifier } from '../../../interfaces/additional.interface';\nimport { damageApplicator } from '../../apps/DamageApplicator';\nimport { constants } from '../../constants';\nimport { DamageRoll } from '../../dice/DamageRoll';\nimport { SwadeRoll } from '../../dice/SwadeRoll';\nimport { TraitRoll } from '../../dice/TraitRoll';\nimport { Accordion } from '../../style/Accordion';\nimport { count } from '../../util';\n\ndeclare global {\n  interface DocumentClassConfig {\n    ChatMessage: typeof SwadeChatMessage;\n  }\n\n  interface FlagConfig {\n    ChatMessage: {\n      swade?: {\n        targets?: { name: string; uuid: string }[];\n        isRedraw?: boolean;\n        pickedCard?: string;\n        cards?: any[]; //TODO properly set card source data type\n        rollMode?: string;\n        [key: string]: unknown;\n      };\n      core?: {\n        canPopout?: boolean;\n        RollTable?: string;\n      };\n    };\n  }\n}\n\nexport default class SwadeChatMessage extends ChatMessage {\n  /** Returns the most significant roll for this chat message */\n  get significantRoll(): SwadeRoll | undefined {\n    return this.rolls[this.rolls.length - 1] as SwadeRoll | undefined;\n  }\n\n  get isCritfail(): boolean {\n    const actor = this.speakerActor;\n    //just return false if there's no actor.\n    if (!actor) return false;\n    const roll = this.significantRoll;\n    const rollIsCritFail = !!roll?.isCritfail;\n    const isGroupRoll = roll instanceof TraitRoll && roll.groupRoll;\n    if (actor.isWildcard || isGroupRoll) return rollIsCritFail;\n    return (\n      rollIsCritFail &&\n      this.rolls\n        .filter((r: SwadeRoll) => r.isCritFailConfirmationRoll)\n        .every((r: SwadeRoll) => r.total === 1)\n    );\n  }\n\n  /** returns whether the message depicts a card draw result */\n  get isCardDraw(): boolean {\n    return (\n      !!this.getFlag('swade', 'pickedCard') && !!this.getFlag('swade', 'cards')\n    );\n  }\n\n  get isRollTableResult(): boolean {\n    return !!this.getFlag('core', 'RollTable');\n  }\n\n  get isSwadeRoll(): boolean {\n    return this.isRoll && this.rolls.every((r: Roll) => r instanceof SwadeRoll);\n  }\n\n  /** returns the index of the message in the list of all messages */\n  get index(): number {\n    return game.messages!.contents.findIndex((m) => m.id === this.id);\n  }\n\n  override async renderHTML(options = {}): Promise<HTMLElement> {\n    if (this.isCardDraw) {\n      const rendered = await this.#renderCardDraw();\n      if (rendered) this.content = rendered;\n      else return document.createElement('div');\n    } else if (this.isSwadeRoll && !this.isRollTableResult) {\n      const messageData = await this.#getSwadeRollMessageData(options);\n      const html = await this.#renderSwadeRollMessage(messageData);\n      Hooks.callAll('renderChatMessageHTML', this, html, messageData);\n      return html;\n    }\n    return super.renderHTML(options);\n  }\n\n  // and later\n  _onClickDiceRoll(event: PointerEvent) {\n    event.stopPropagation();\n    const target = event.currentTarget as HTMLElement;\n    target.classList.toggle('expanded');\n  }\n\n  async #renderCardDraw(): Promise<string> {\n    const msgType = game.settings.get('swade', 'initMessage');\n    const cards = this.getFlag('swade', 'cards')!.map((c) => {\n      return {\n        id: c._id,\n        face: c.faces[c.face].img,\n        name: c.faces[c.face].name || c.name,\n      };\n    });\n    const pickedCard = this.getFlag('swade', 'pickedCard');\n    const isRedraw = this.getFlag('swade', 'isRedraw');\n    const [[picked], discarded] = cards.partition((c) => c.id !== pickedCard);\n    if (msgType === constants.INIT_MESSAGE_TYPE.OFF && !isRedraw) {\n      return ''; //empty message\n    } else {\n      return foundry.applications.handlebars.renderTemplate(\n        'systems/swade/templates/chat/card-draw-result.hbs',\n        {\n          isRedraw,\n          picked,\n          discarded,\n          largeMsg: msgType === constants.INIT_MESSAGE_TYPE.LARGE,\n          index: this.index,\n        },\n      );\n    }\n  }\n\n  async #getSwadeRollMessageData(options): Promise<ChatMessage.MessageData> {\n    const { canDelete = this.isAuthor, canClose = false } = options;\n    // Determine some metadata\n    const data = this.toObject(false);\n    data.content = await foundry.applications.ux.TextEditor.implementation.enrichHTML(this.content, {\n      rollData: this.getRollData(),\n    });\n\n    // Construct message data\n    const isWhisper = !!this.whisper.length;\n    const messageData: ChatMessage.MessageData = {\n      canDelete,\n      canClose,\n      message: data,\n      user: game.user,\n      author: this.author,\n      alias: this.alias,\n      cssClass: [\n        this.style === CONST.CHAT_MESSAGE_STYLES.IC ? 'ic' : null,\n        this.style === CONST.CHAT_MESSAGE_STYLES.EMOTE ? 'emote' : null,\n        this.blind ? 'blind' : null,\n        isWhisper ? 'whisper' : null,\n      ].filterJoin(' '),\n      isWhisper,\n      whisperTo: this.whisper\n        .map((u) => game.users.get(u)?.name)\n        .filterJoin(', '),\n    };\n    return messageData;\n  }\n\n  async #renderSwadeRollMessage(\n    messageData: ChatMessage.MessageData,\n  ): Promise<HTMLElement> {\n    await this.#renderSwadeRollContent(messageData);\n\n    // Render the chat message\n    let html = await foundry.applications.handlebars.renderTemplate(\n      CONFIG.ChatMessage.template,\n      messageData,\n    );\n    html = foundry.utils.parseHTML(html) as HTMLElement;\n    this.#attachRollMessageListeners(html);\n\n    return html;\n  }\n\n  async #renderSwadeRollContent(messageData: ChatMessage.MessageData) {\n    const data = messageData.message;\n    // Suppress the \"to:\" whisper flavor for private rolls\n    if (this.blind || this.whisper.length) messageData.isWhisper = false;\n\n    // Display standard Roll HTML content\n    if (this.isContentVisible) {\n      data.content = await this.#renderMessageBody(false, data.content);\n    } else {\n      // Otherwise, show \"rolled privately\" messages for Roll content\n      const name = this.author?.name ?? game.i18n.localize('CHAT.UnknownUser');\n      data.flavor = game.i18n.format('CHAT.PrivateRollContent', { user: name });\n      data.content = await this.#renderMessageBody(true);\n      messageData.alias = name;\n    }\n  }\n\n  #attachRollMessageListeners(html: HTMLElement) {\n    html\n      .querySelectorAll('.dice-roll')\n      .forEach((el) =>\n        el.addEventListener('click', this._onClickDiceRoll.bind(this)),\n      );\n\n    html\n      .querySelector('.swade-roll-message button.free-reroll')\n      ?.addEventListener('click', SwadeRoll.rerollFree);\n    html\n      .querySelectorAll('.swade-roll-message button.benny-reroll')\n      .forEach((btn) => btn.addEventListener('click', SwadeRoll.rerollBenny));\n    html\n      .querySelector('.swade-roll-message .confirm-critfail')\n      ?.addEventListener('click', () => TraitRoll.confirmCritfail(this));\n\n    html\n      .querySelector('.swade-roll-message button.calculate-wounds')\n      ?.addEventListener('click', () => damageApplicator(this));\n    html\n      .querySelectorAll<HTMLDetailsElement>('details.modifiers')\n      .forEach((detail) => new Accordion(detail));\n    html\n      .querySelectorAll<HTMLLIElement>('.swade-roll-message .target')\n      .forEach((target) => {\n        target.addEventListener('mouseenter', (ev) => {\n          if (!canvas.ready) return;\n          const target = ev.currentTarget as HTMLLIElement;\n          const tokenDoc = fromUuidSync(\n            target.dataset.tokenUuid ?? '',\n          ) as TokenDocument | null;\n          const tokenObj = tokenDoc?.object;\n          if (tokenObj?.isVisible && !tokenObj?.controlled) {\n            tokenObj?._onHoverIn(ev);\n          }\n        });\n        target.addEventListener('mouseleave', (ev) => {\n          if (!canvas.ready) return;\n          const target = ev.currentTarget as HTMLLIElement;\n          const tokenDoc = fromUuidSync(\n            target.dataset.tokenUuid ?? '',\n          ) as TokenDocument | null;\n          const tokenObj = tokenDoc?.object;\n          if (tokenObj?.isVisible && !tokenObj?.controlled) {\n            tokenObj?._onHoverOut(ev);\n          }\n        });\n        target.addEventListener('click', (ev) => {\n          if (!canvas.ready) return;\n          const target = ev.currentTarget as HTMLLIElement;\n          const tokenDoc = fromUuidSync(\n            target.dataset.tokenUuid ?? '',\n          ) as TokenDocument | null;\n          if (tokenDoc?.object?.isVisible) tokenDoc?.object?.control();\n        });\n      });\n  }\n\n  async #renderRolls(isPrivate: boolean): Promise<string> {\n    if (isPrivate) return this.significantRoll!.render({ isPrivate });\n    let html = '';\n    for (let i = 0; i < this['rolls'].length; i++) {\n      const roll = this['rolls'][i] as Roll;\n      const displayResult = roll === this.significantRoll;\n      if (roll instanceof SwadeRoll) {\n        let flavor = game.i18n.localize(`SWADE.Rolls.${roll.constructor.name}`);\n        if (roll.isCritFailConfirmationRoll) {\n          flavor =\n            roll.total === 1\n              ? game.i18n.localize('SWADE.Rolls.Critfail.Confirmed')\n              : game.i18n.localize('SWADE.Rolls.Critfail.Unconfirmed');\n        }\n        html += await roll.render({ isPrivate, displayResult, flavor });\n      } else {\n        html += await roll.render({ isPrivate });\n      }\n    }\n    return html;\n  }\n\n  #formatModifiers(): RollModifier[] {\n    return this.significantRoll?.modifiers.filter((v) => !v.ignore) ?? []; //remove the disabled modifiers\n  }\n\n  async #renderMessageBody(isPrivate: boolean, content?: string) {\n    const roll = this.significantRoll;\n    const isTraitRoll = roll instanceof TraitRoll;\n    const targets = this.getFlag('swade', 'targets') ?? [];\n    return foundry.applications.handlebars.renderTemplate(\n      'systems/swade/templates/chat/dice/roll-message.hbs',\n      {\n        lockReroll: this.isCritfail && !game.settings.get('swade', 'dumbLuck'),\n        modifiers: this.#formatModifiers(),\n        rerolled: roll?.getRerollLabel(),\n        groupRoll: isTraitRoll && roll.groupRoll,\n        isCritfail: this.isCritfail && !isPrivate,\n        hasConfirmedCritfail: this.hasConfirmedCritfail(),\n        isWildCard: this.speakerActor?.isWildcard,\n        isDamageRoll: roll instanceof DamageRoll && !isPrivate,\n        isPrivate: isPrivate,\n        notRerollable: !roll?.isRerollable,\n        isGM: game.user?.isGM,\n        isAuthor: this.isAuthor || game.user?.isGM,\n        rolls: await this.#renderRolls(isPrivate),\n        targets: targets,\n        content: content,\n      },\n    );\n  }\n\n  hasConfirmedCritfail(): boolean {\n    const roll = this.significantRoll;\n    const isTraitRoll = roll instanceof TraitRoll;\n    if (!roll || !isTraitRoll) return false;\n    if (this.speakerActor?.isWildcard) return !!roll.isCritfail;\n    const pool = roll.terms[0] as foundry.dice.terms.PoolTerm;\n    const hasMultipleTraitDice = pool.dice.length > 1;\n    const hasConfirmedCritfail = this['rolls'].find(\n      (r: SwadeRoll) => r.isCritFailConfirmationRoll && r.total === 1,\n    );\n    if (hasMultipleTraitDice) {\n      return count(pool.dice, (d) => d.total === 1) > pool.dice.length / 2;\n    }\n    return !!hasConfirmedCritfail;\n  }\n}\n","import type SwadeCombat from '../documents/combat/SwadeCombat';\r\nimport type SwadeCombatant from '../documents/combat/SwadeCombatant';\r\n\r\nexport class AmbushAssistant extends Application {\r\n  #combat: SwadeCombat;\r\n  #categories = {\r\n    unassigned: new Array<SwadeCombatant>(),\r\n    hold: new Array<SwadeCombatant>(),\r\n    draw: new Array<SwadeCombatant>(),\r\n    noTurn: new Array<SwadeCombatant>(),\r\n  };\r\n\r\n  static override get defaultOptions(): ApplicationOptions {\r\n    return foundry.utils.mergeObject(super.defaultOptions, {\r\n      id: 'ambush-assistant',\r\n      title: game.i18n.localize('SWADE.AmbushAssistant.Title'),\r\n      classes: ['swade-app', 'ambush-assistant'],\r\n      template: 'systems/swade/templates/apps/ambush-assistant.hbs',\r\n      dragDrop: [{ dragSelector: '.combatant', dropSelector: '.column' }],\r\n      width: 800,\r\n      height: 500,\r\n    } satisfies Partial<ApplicationOptions>);\r\n  }\r\n\r\n  constructor(combat: SwadeCombat, options?: ApplicationOptions) {\r\n    super(options);\r\n    this.#combat = combat;\r\n    this.#categories.unassigned = combat.combatants.contents.filter(\r\n      (c) => !c.group || c.isGroupLeader,\r\n    ) as SwadeCombatant[];\r\n  }\r\n\r\n  override activateListeners(jquery: JQuery<HTMLElement>): void {\r\n    const html = jquery[0];\r\n\r\n    html.querySelectorAll<HTMLElement>('.column').forEach((e) => {\r\n      e.addEventListener('dragenter', this._onDragEnter.bind(this));\r\n      e.addEventListener('dragleave', this._onDragLeave.bind(this));\r\n    });\r\n\r\n    html\r\n      .querySelector('button[type=\"submit\"]')\r\n      ?.addEventListener('click', this.submit.bind(this));\r\n  }\r\n\r\n  override async getData(options?: Partial<ApplicationOptions>) {\r\n    return foundry.utils.mergeObject(await super.getData(options), {\r\n      ...this.#categories,\r\n      submissionLocked: this.#categories.unassigned.length !== 0,\r\n    });\r\n  }\r\n\r\n  async submit() {\r\n    for (const noTurn of this.#categories.noTurn) {\r\n      await Promise.all((noTurn.group?.members ?? [noTurn]).map((m) => m.setTurnLost(true)));\r\n    }\r\n    await this.#combat.startCombat();\r\n    let initiative = 1000;\r\n    for (const hold of this.#categories.hold) {\r\n      const toHold = hold.group?.members ?? [hold];\r\n      await Promise.all(toHold.map((c) => c.toggleHold()));\r\n      await Promise.all(toHold.map((c) => c.setRoundHeld(0.1)));\r\n      await hold.update({ initiative: (initiative -= 1) });\r\n      // Need each of them to be offset by a small decrement for properly placing interruptors.\r\n      for (const c of toHold) {\r\n        if (c.group && c.isGroupLeader) continue;\r\n        await c.update({ initiative: (initiative -= 0.01) });\r\n      }\r\n    }\r\n    await this.close();\r\n  }\r\n\r\n  protected override _onDrop(event: DragEvent): void {\r\n    const target = event.currentTarget as HTMLElement;\r\n\r\n    target.classList.remove('drag-highlight');\r\n\r\n    const { id, category } = JSON.parse(\r\n      event.dataTransfer!.getData('text/plain'),\r\n    ) as AmbushDropData;\r\n    const targetCategory = target.closest<HTMLElement>('.column')?.dataset\r\n      .category as string;\r\n\r\n    if (category === targetCategory) return;\r\n\r\n    if (!id || !category) return;\r\n\r\n    const combatant = this.#categories[category].findSplice((c) => c.id === id);\r\n    if (!combatant) throw new Error();\r\n    this.#categories[targetCategory].push(combatant);\r\n    this.render(true);\r\n  }\r\n\r\n  protected override _onDragStart(event: DragEvent): void {\r\n    const target = event.currentTarget as HTMLElement;\r\n    const id = target.dataset.combatantId;\r\n    const category = target.closest<HTMLElement>('.column')?.dataset.category;\r\n    event.dataTransfer?.setData('text/plain', JSON.stringify({ id, category }));\r\n  }\r\n\r\n  protected _onDragLeave(event: DragEvent) {\r\n    (event.currentTarget as HTMLElement).classList.remove('drag-highlight');\r\n  }\r\n\r\n  protected _onDragEnter(event: DragEvent) {\r\n    (event.currentTarget as HTMLElement).classList.add('drag-highlight');\r\n  }\r\n}\r\n\r\ninterface AmbushDropData {\r\n  id: string;\r\n  category: 'unassigned' | 'hold' | 'draw' | 'noTurn';\r\n}\r\n","import SwadeCards from '../documents/card/SwadeCards';\r\n\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\r\n\r\nexport class CardPicker extends HandlebarsApplicationMixin(ApplicationV2) {\r\n  constructor({\r\n    ctx,\r\n    resolve,\r\n    ...options\r\n  }: CardPickConfiguration) {\r\n    super(options);\r\n    this.#initContext(ctx);\r\n    this.#callback = resolve;\r\n  }\r\n\r\n  #ctx: CardPickContext;\r\n  #callback: (result: CardPickResult) => void;\r\n  #isResolved = false;\r\n\r\n  static asPromise({ ctx, ...options }: Omit<CardPickConfiguration, 'resolve'>): Promise<CardPickResult> {\r\n    return new Promise<CardPickResult>(\r\n      (resolve) => new CardPicker({ctx, resolve, ...options}).render({ force: true }),\r\n    );\r\n  }\r\n\r\n  static override DEFAULT_OPTIONS = {\r\n    classes: ['card-picker', 'swade-application'],\r\n    window: {\r\n      contentClasses: ['standard-form']\r\n    },\r\n    position: {\r\n      width: 400,\r\n      height: 'auto'\r\n    },\r\n    actions: {\r\n      submit: this.#onSubmit,\r\n      redraw: this.#onRedraw\r\n    }\r\n  };\r\n\r\n  static override PARTS = {\r\n    picker: { template: 'systems/swade/templates/apps/card-picker.hbs' },\r\n    footer: { template: 'templates/generic/form-footer.hbs' }\r\n  };\r\n\r\n  override get title() {\r\n    return game.i18n.format('SWADE.PickACard', {\r\n      name: this.#ctx.combatantName,\r\n    });\r\n  }\r\n\r\n  get #cards(): Card[] {\r\n    return this.#ctx.cards;\r\n  }\r\n\r\n  override async _prepareContext(options) {\r\n    const context = foundry.utils.mergeObject(await super._prepareContext(options), {\r\n      cards: this.#cards,\r\n      oldCard: this.#ctx.oldCardId,\r\n      highestCardID: foundry.utils.deepClone(this.#cards).sort(this.#sortCards.bind(this))[0].id,\r\n      buttons: [\r\n        { type: 'button', action: 'submit', icon: 'fa-solid fa-check', label: 'SWADE.Ok' },\r\n      ]\r\n    });\r\n\r\n    if (this.#allowRedraw()) {\r\n      context.buttons.push({ type: 'button', action: 'redraw', icon: 'fa-solid fa-plus', label: 'SWADE.Redraw' });\r\n    }\r\n\r\n    return context;\r\n  }\r\n\r\n  #initContext(ctx: CardPickContext): void {\r\n    if (ctx.isQuickDraw) {\r\n      ctx.enableRedraw =\r\n        ctx.enableRedraw || !ctx.cards.every((card) => card.value! <= 5);\r\n    }\r\n\r\n    this.#ctx = ctx;\r\n  }\r\n\r\n  static #onSubmit(\r\n    this: CardPicker,\r\n    _event: PointerEvent,\r\n    _target: HTMLElement\r\n  ) {\r\n    const cardId = this.element.querySelector('input[name=card]:checked')?.dataset.cardId as string | undefined;\r\n    const picked = this.#cards.find((c) => c.id === cardId);\r\n    this.#resolve({\r\n      cards: this.#cards,\r\n      picked: picked || this.#getFallBackCard(),\r\n    });\r\n  }\r\n\r\n  #resolve(result: CardPickResult) {\r\n    this.#isResolved = true;\r\n    this.#callback(result);\r\n    this.close();\r\n  }\r\n\r\n  static async #onRedraw(\r\n    this: CardPicker,\r\n    _event: PointerEvent,\r\n    _target: HTMLElement\r\n  ) {\r\n    const discardPile: Cards = game.cards!.get(\r\n      game.settings.get('swade', 'actionDeckDiscardPile'),\r\n      { strict: true },\r\n    );\r\n    const cards = await this.#ctx.deck.dealForInitiative(discardPile);\r\n    this.#cards.push(...cards);\r\n    this.render();\r\n  }\r\n\r\n  #allowRedraw(): boolean {\r\n    if (this.#ctx.isQuickDraw) {\r\n      return this.#cards.every((card) => card.value! <= 5);\r\n    }\r\n    return !!this.#ctx.oldCardId || !!this.#ctx.enableRedraw;\r\n  }\r\n\r\n  #getFallBackCard(): Card {\r\n    let picked: Card | undefined;\r\n    if (this.#ctx.oldCardId) {\r\n      picked = this.#cards.find((c) => c.id === this.#ctx.oldCardId);\r\n    } else {\r\n      picked = this.#cards.find((c) => c.system['isJoker']) || this.#cards[0];\r\n    }\r\n    return picked as Card;\r\n  }\r\n\r\n  #sortCards(a: Card, b: Card): number {\r\n    const cardA = a.value ?? 0;\r\n    const cardB = b.value ?? 0;\r\n    const card = cardB - cardA;\r\n    if (card !== 0) return card;\r\n    const suitA = a.system['suit'] ?? 0;\r\n    const suitB = b.system['suit'] ?? 0;\r\n    return suitB - suitA;\r\n  }\r\n\r\n  protected override _onClose(options) {\r\n    super._onClose(options);\r\n    if (!this.#isResolved) {\r\n      this.#callback({\r\n        cards: this.#cards,\r\n        picked: this.#getFallBackCard(),\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport interface CardPickResult {\r\n  picked: Card;\r\n  cards: Card[];\r\n}\r\n\r\ninterface CardPickConfiguration extends Partial<foundry.applications.api.ApplicationV2.Configuration> {\r\n  ctx: CardPickContext,\r\n  resolve: (result: CardPickResult) => void\r\n}\r\n\r\nexport interface CardPickContext {\r\n  /** a deck from which to draw cards, should the need arise */\r\n  deck: SwadeCards;\r\n  /** an array of cards */\r\n  cards: Card[];\r\n  /** name of the combatant */\r\n  combatantName: string;\r\n  /** id of the old card, if you're picking cards for a redraw */\r\n  oldCardId?: string;\r\n  /** determines whether a redraw is allowed */\r\n  enableRedraw?: boolean;\r\n  /** determines whether this draw includes the Quick edge */\r\n  isQuickDraw?: boolean;\r\n}\r\n","import { Logger } from '../Logger';\nimport type SwadeUser from '../documents/SwadeUser';\nimport type SwadeCombatant from '../documents/combat/SwadeCombatant';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\nexport class PlayerCardDrawHerder extends HandlebarsApplicationMixin(ApplicationV2) {\n  declare ctx: HerderInternalContext;\n  \n  constructor(\n    ctx: HerderConstructionContext,\n    resolve: () => void,\n    options?: Partial<foundry.applications.api.ApplicationV2.Configuration>,\n  ) {\n    super(options);\n    this.#callback = resolve;\n    this.ctx = this.#initContext(ctx);\n    this.#promptAllPlayers();\n  }\n  \n  #isResolved = false;\n  #callback: () => void;\n\n  static asPromise(ctx: HerderConstructionContext): Promise<void> {\n    return new Promise((resolve) => new PlayerCardDrawHerder(ctx, resolve).render({ force: true }));\n  }\n\n  static override DEFAULT_OPTIONS = {\n    window: {\n      title: 'SWADE.PlayerCardDrawHelper.Title',\n      contentClasses: ['standard-form'],\n    },\n    classes: ['swade-application'],\n    position: {\n      width: 400,\n      height: 'auto'\n    },\n    actions: {\n      close: this.#onClose\n    }\n  };\n\n  static override PARTS = {\n    herder: { template: 'systems/swade/templates/apps/player-card-draw-herder.hbs' },\n    footer: { template: 'templates/generic/form-footer.hbs' }\n  };\n\n  static #onClose(\n    this: PlayerCardDrawHerder,\n    _event: PointerEvent,\n    _target: HTMLElement\n  ) {\n    return this.close();\n  }\n\n  override async _prepareContext(options) {\n    const context = foundry.utils.mergeObject(await super._prepareContext(options), {\n      draws: this.ctx.draws.map((draw) => ({\n        user: draw.user.name,\n        combatant: draw.combatant.name,\n        icon: this.#getIconForDraw(draw)\n      })),\n      buttons: [\n        { type: 'button', action: 'close', label: 'Close' }\n      ]\n    });\n\n    return context;\n  }\n\n  #initContext(ctx: HerderConstructionContext): HerderInternalContext {\n    const internal = { ...ctx };\n    internal.draws = internal.draws.map((draw) => {\n      return {\n        ...draw,\n        state: PlayerDrawState.PENDING,\n      };\n    }) as PlayerDrawInternal[];\n    return internal as HerderInternalContext;\n  }\n\n  async #promptAllPlayers() {\n    for (const draw of this.ctx.draws) {\n      Logger.debug('Waiting for user' + draw.user.name);\n      //mark the user as drawing\n      this.#markPlayer(draw.user.id as string, PlayerDrawState.DRAWING);\n      await this.#promptPlayerForInitiative(\n        draw.user.id as string,\n        draw.combatant.id as string,\n      );\n    }\n    this.#resolve();\n  }\n\n  async #promptPlayerForInitiative(userId: string, combatantId: string) {\n    let hookId: number;\n\n    //build and execute the main show\n    await new Promise<void>((resolve) => {\n      //register the hook\n      hookId = Hooks.on(\n        'updateCombatant',\n        (\n          combatant: SwadeCombatant,\n          _changed: Combatant.UpdateData,\n          _options: Combatant.Database.OnUpdateOperation,\n          triggeringUser: string,\n        ) => {\n          if (triggeringUser !== userId || combatant.id !== combatantId) return;\n          Logger.debug(`User ${game.users?.get(userId)?.name} drew a card!`);\n          //clean up\n          this.#cancelHook(hookId);\n          this.#markPlayer(triggeringUser, PlayerDrawState.DONE);\n          resolve();\n        },\n      );\n      //poke the player client\n      game.swade.sockets.promptInitiative(\n        this.ctx.combatId,\n        userId,\n        combatantId,\n      );\n    });\n  }\n\n  #cancelHook(id: number) {\n    Hooks.off('updateCombatant', id);\n  }\n\n  #markPlayer(userId: string, newState: PlayerDrawState) {\n    const draw = this.ctx.draws.find((draw) => draw.user.id === userId);\n    if (draw) draw.state = newState;\n    setTimeout(() => this.render());\n  }\n\n  #resolve() {\n    this.#isResolved = true;\n    this.#callback();\n  }\n\n  #getIconForDraw(draw: PlayerDrawInternal): Handlebars.SafeString {\n    const style: string[] = [];\n    const classes: string[] = ['fa-xl', 'fa-solid'];\n    switch (draw.state) {\n      case PlayerDrawState.PENDING:\n        classes.push('fa-hourglass');\n        style.push('color: var(--color-text-dark-inactive)');\n        break;\n      case PlayerDrawState.DRAWING:\n        classes.push('fa-cards', 'fa-fade');\n        style.push(\n          'color: var(--color-level-info)',\n          '--fa-animation-duration: 2s',\n        );\n        break;\n      case PlayerDrawState.DONE:\n        classes.push('fa-check');\n        style.push('color: var(--color-level-success)');\n        break;\n    }\n    return new Handlebars.SafeString(\n      `<i class='${classes.join(' ')}' style='${style.join(';')}'></i>`,\n    );\n  }\n\n  protected override _onClose(options) {\n    super._onClose(options);\n    if (!this.#isResolved) this.#callback();\n  }\n}\n\nexport interface HerderConstructionContext {\n  combatId: string;\n  draws: PlayerDraw[];\n}\n\nexport interface PlayerDraw {\n  user: SwadeUser;\n  combatant: SwadeCombatant;\n}\n\ninterface HerderInternalContext {\n  combatId: string;\n  draws: PlayerDrawInternal[];\n}\n\ninterface PlayerDrawInternal extends PlayerDraw {\n  state: PlayerDrawState;\n}\n\nenum PlayerDrawState {\n  PENDING = 'pending',\n  DRAWING = 'drawing',\n  DONE = 'done',\n}\n","import { Updates } from '../../../globals';\nimport { reshuffleActionDeck } from '../../util';\n\nimport { DeepPartial } from 'fvtt-types/utils';\nimport { AmbushAssistant } from '../../apps/AmbushAssistant';\nimport { CardPickResult, CardPicker } from '../../apps/CardPicker';\nimport { PlayerCardDrawHerder } from '../../apps/PlayerCardDrawHerder';\nimport SwadeUser from '../SwadeUser';\nimport type SwadeActiveEffect from '../active-effect/SwadeActiveEffect';\nimport SwadeCards from '../card/SwadeCards';\nimport SwadeCombatant from './SwadeCombatant';\n\ndeclare global {\n  interface DocumentClassConfig {\n    Combat: typeof SwadeCombat;\n  }\n}\n\nexport default class SwadeCombat<\n  out SubType extends Combat.SubType = Combat.SubType,\n> extends Combat<SubType> {\n  /** an internal helper flag that's being checked to see if we're currently asking to advance the round */\n  #roundAdvanceDialog: boolean = false;\n\n  /** Compares two combatants by name. */\n  static nameSortCombatants(a: SwadeCombatant, b: SwadeCombatant): number {\n    if (a.name === b.name) return SwadeCombat.#idSortCombatants(a, b);\n    return a.name! > b.name! ? 1 : -1;\n  }\n\n  /** Compares two combatants by ID. */\n  static #idSortCombatants(a: SwadeCombatant, b: SwadeCombatant): number {\n    return a.id! > b.id! ? 1 : -1;\n  }\n\n  static INITIATIVE_SOUND = 'systems/swade/assets/card-flip.wav';\n\n  /**\n   * @privateRemarks Adapted from v13 implementation\n   */\n  static override async createDialog(\n    data = {},\n    createOptions = {},\n    dialogOptions: DeepPartial<foundry.applications.api.DialogV2.WaitOptions> = {},\n  ): Promise<SwadeCombat | null | undefined> {\n    const typeOptions = Object.entries(CONFIG.Combat.typeLabels).map(\n      ([value, label]) => ({ value, label }),\n    );\n    const typeSelect = foundry.applications.fields.createSelectInput({\n      options: typeOptions,\n      value: 'base',\n      localize: true,\n      name: 'type',\n    });\n    const typeGroup = foundry.applications.fields.createFormGroup({\n      label: game.i18n.localize('Type'),\n      input: typeSelect,\n    });\n\n    let html = typeGroup.outerHTML;\n\n    if (game.scenes.current) {\n      const linkInput = document.createElement('input');\n      linkInput.type = 'checkbox';\n      linkInput.name = 'scene';\n      linkInput.setAttribute('checked', '');\n      linkInput.setAttribute('value', game.scenes.current.id);\n      const linkGroup = foundry.applications.fields.createFormGroup({\n        label: game.i18n.localize('SWADE.Combat.LinkScene'),\n        input: linkInput,\n      });\n      html += linkGroup.outerHTML;\n    }\n\n    //inputs for dramatic task relevant data\n    html += CONFIG.Combat.dataModels.dramaticTask.schema\n      .getField('maxRounds')\n      ?.toFormGroup({ classes: ['slim', 'hidden'], localize: true })?.outerHTML;\n\n    html += CONFIG.Combat.dataModels.dramaticTask.schema\n      .getField('tokens.max')\n      ?.toFormGroup({\n        label: 'SWADE.DramaticTask.MaxTokens.Label',\n        hint: 'SWADE.DramaticTask.MaxTokens.Hint',\n        classes: ['slim', 'hidden'],\n        localize: true,\n      })?.outerHTML;\n\n    // Collect data\n    const label = game.i18n.localize(this.metadata.label);\n    const title = game.i18n.format('DOCUMENT.Create', { type: label });\n\n    // Render the confirmation dialog window\n    return foundry.applications.api.DialogV2.prompt<{}, SwadeCombat>(\n      foundry.utils.mergeObject(\n        {\n          content: html,\n          window: { title },\n          position: { width: 360 },\n          ok: {\n            label: title,\n            callback: (_event: PointerEvent, button: HTMLButtonElement) => {\n              const fd = new FormDataExtended(button.form as HTMLFormElement);\n              foundry.utils.mergeObject(data, fd.object);\n              return this.create(data, {\n                renderSheet: false,\n                ...createOptions,\n              });\n            },\n          },\n          rejectClose: false,\n          render: (_event: Event, dialog: foundry.applications.api.DialogV2) => {\n            const html = dialog.element;\n            const typeSelect = html.querySelector<HTMLSelectElement>(\n              'select[name=\"type\"]',\n            );\n            const roundsInput = html\n              .querySelector<HTMLDivElement>('input[name=\"system.maxRounds\"]')\n              ?.closest('.form-group');\n            const tokenInput = html\n              .querySelector<HTMLDivElement>('input[name=\"system.tokens.max\"]')\n              ?.closest('.form-group');\n\n            typeSelect?.addEventListener('change', () => {\n              if (typeSelect.value === 'dramaticTask') {\n                roundsInput?.classList.remove('hidden');\n                tokenInput?.classList.remove('hidden');\n              } else {\n                roundsInput?.classList.add('hidden');\n                tokenInput?.classList.add('hidden');\n              }\n            });\n          },\n        },\n        dialogOptions,\n      ),\n    );\n  }\n\n  get actionDeck(): SwadeCards {\n    return game.cards!.get(game.settings.get('swade', 'actionDeck'), {\n      strict: true,\n    });\n  }\n\n  get automaticInitiative(): boolean {\n    return game.settings.get('swade', 'autoInit');\n  }\n\n  #initSoundData: foundry.audio.AudioHelper.PlayData = {\n    src: SwadeCombat.INITIATIVE_SOUND,\n    volume: 0.8,\n    autoplay: true,\n    loop: false,\n  };\n\n  #debouncedCombatSound: SwadeCombat['_playCombatSound'] =\n    foundry.utils.debounce(super._playCombatSound, 200);\n\n  override async rollInitiative(\n    ids: string | string[],\n    { messageOptions, updateTurn }: Combat.InitiativeOptions = {},\n  ) {\n    // Structure input data\n    ids = Array.isArray(ids) ? ids : [ids];\n\n    const currentId = this.combatant?.id;\n    const messages: ChatMessage.CreateData[] = [];\n    const combatantUpdates: Combatant.UpdateData[] = [];\n    const groupUpdates: Updates[] = [];\n\n    //Check if enough cards are available\n    if (ids.length > this.actionDeck.availableCards.length) {\n      const message = game.i18n.format('SWADE.NoCardsLeft', {\n        needed: ids.length,\n        current: this.actionDeck.availableCards.length,\n      });\n      ui.notifications.warn(message);\n      return this;\n    }\n    // Iterate over Combatants, performing an initiative draw for each\n    for (const id of ids) {\n      // Get Combatant data\n      const c = this.combatants.get(id, { strict: true }) as SwadeCombatant;\n      if (!c.isOwner) continue;\n      const roundHeld = !!c.roundHeld;\n      //Do not draw cards for defeated, holding or non-leader grouped combatants\n      if (\n        c.isDefeated ||\n        roundHeld ||\n        (c.group && !c.isGroupLeader) ||\n        c.turnLost\n      )\n        continue;\n\n      // Set up edges\n      let hasHesitant = false;\n      let hasQuick = false;\n      const actorModel = c.actor?.system;\n      if (actorModel && 'initiative' in actorModel) {\n        hasHesitant = actorModel.initiative.hasHesitant ?? false;\n        hasQuick = actorModel.initiative.hasQuick ?? false;\n      }\n      const isIncapacitated = c.isIncapacitated;\n\n      // Figure out how many cards to draw\n      const cardsToDraw = c.cardsToDraw;\n\n      // Draw initiative\n      let pickedCard: Card;\n      let cardsToPickFrom = await this.drawCard(cardsToDraw);\n      const isRedraw = typeof c.initiative === 'number' && !roundHeld;\n\n      if (isRedraw) {\n        // handle redraws\n        const oldCard = this.findCard(c?.cardValue!, c?.suitValue!);\n        if (oldCard) {\n          cardsToPickFrom.push(oldCard);\n          const result = await this.pickACard({\n            cards: cardsToPickFrom,\n            combatantName: c.name!,\n            oldCardId: oldCard?.id!,\n          });\n          pickedCard = result.picked;\n          cardsToPickFrom = result.cards;\n        } else {\n          pickedCard = cardsToPickFrom[0];\n        }\n      } else if (isIncapacitated) {\n        pickedCard = cardsToPickFrom[0];\n      } else if (hasHesitant) {\n        // Hesitant\n        const joker = cardsToPickFrom.find((c) => c.system['isJoker']);\n        if (joker) {\n          // if one of the cards drawn was a joker, simply use that\n          pickedCard = joker;\n        } else {\n          //sort cards to pick the lower one\n          cardsToPickFrom.sort((a, b) => {\n            const cardA = a.value!;\n            const cardB = b.value!;\n            const card = cardA - cardB;\n            if (card !== 0) return card;\n            const suitA = a.system['suit'] as number;\n            const suitB = b.system['suit'] as number;\n            const suit = suitA - suitB;\n            return suit;\n          });\n          pickedCard = cardsToPickFrom[0];\n        }\n      } else if (cardsToDraw > 1) {\n        //Level Headed\n        const result = await this.pickACard({\n          cards: cardsToPickFrom,\n          combatantName: c.name!,\n          enableRedraw: hasQuick,\n          isQuickDraw: hasQuick,\n        });\n        pickedCard = result.picked;\n        cardsToPickFrom = result.cards;\n      } else if (hasQuick) {\n        pickedCard = cardsToPickFrom[0];\n        const cardValue = pickedCard.value!;\n        //if the card value is less than 5 then pick a card otherwise use the card\n        if (cardValue <= 5) {\n          const result = await this.pickACard({\n            cards: [pickedCard],\n            combatantName: c.name!,\n            enableRedraw: true,\n            isQuickDraw: true,\n          });\n          pickedCard = result.picked;\n          cardsToPickFrom = result.cards;\n        }\n      } else {\n        //normal card draw\n        pickedCard = cardsToPickFrom[0];\n      }\n      const systemData = {\n        cardValue: pickedCard.value!,\n        suitValue: pickedCard.system['suit'],\n        hasJoker: pickedCard.system['isJoker'],\n        cardString: pickedCard.description,\n      };\n\n      const initiative =\n        (pickedCard.value as number) +\n        (pickedCard?.system['suit'] as number) / 10;\n\n      const update = {\n        _id: id,\n        initiative,\n        system: systemData,\n      };\n\n      //Handle group leader changes\n      combatantUpdates.push(update);\n      if (c.isGroupLeader) {\n        groupUpdates.push({\n          _id: c.group.id,\n          initiative: update.initiative,\n        });\n      }\n\n      // Construct chat message data\n      const messageData = foundry.utils.mergeObject(\n        {\n          speaker: ChatMessage.getSpeaker({\n            actor: c.actor,\n            token: c.token,\n            alias: c.name,\n          }),\n          whisper:\n            c.token?.hidden || c.hidden\n              ? game?.users?.filter((u) => u.isGM)\n              : [],\n          content: '', //keep the content empty so we don't trigger validation warnings\n          'flags.swade': {\n            isRedraw,\n            pickedCard: pickedCard.id,\n            cards: cardsToPickFrom.map((c) => c.toObject()),\n          },\n        },\n        messageOptions,\n      );\n      messages.push(messageData);\n    }\n\n    if (!combatantUpdates.length) return this;\n\n    // Update the combat instance with the new combatants\n    await this.updateEmbeddedDocuments('Combatant', combatantUpdates);\n    await this.updateEmbeddedDocuments('CombatantGroup', groupUpdates);\n\n    // Create multiple chat messages\n    this._playInitiativeSound();\n    await getDocumentClass('ChatMessage').createDocuments(messages);\n\n    const activeCombatants = this.combatants.filter((c) => !c.isDefeated);\n    if (activeCombatants.every((c) => !!c.initiative)) {\n      await this.update({ turn: 0 });\n      this._handleStartOfTurnExpirations();\n    } else if (updateTurn && currentId) {\n      // Ensure the turn order remains with the same combatant\n      await this.update({\n        turn: this.turns.findIndex((t) => t.id === currentId),\n      });\n    }\n\n    // Return the updated Combat\n    return this;\n  }\n\n  override _sortCombatants(a: SwadeCombatant, b: SwadeCombatant): number {\n    const currentRound = game.combat?.round ?? 0;\n\n    if (\n      (a.roundHeld && currentRound !== a.roundHeld) ||\n      (b.roundHeld && currentRound !== b.roundHeld)\n    ) {\n      const isOnHoldA = a.roundHeld && (a.roundHeld ?? 0 < currentRound);\n      const isOnHoldB = b.roundHeld && (b.roundHeld ?? 0 < currentRound);\n      if (isOnHoldA && !isOnHoldB) return -1;\n      if (!isOnHoldA && isOnHoldB) return 1;\n    }\n    if (b.initiative === a.initiative) {\n      return SwadeCombat.nameSortCombatants(a, b);\n    } else {\n      return super._sortCombatants(a, b);\n    }\n  }\n\n  protected override _onCreateDescendantDocuments<\n    DescendantDocumentType extends Combat.DescendantClass,\n    Parent extends Combat.Stored,\n    CreateData extends\n      foundry.abstract.Document.CreateDataFor<DescendantDocumentType>,\n    Operation extends foundry.abstract.types.DatabaseCreateOperation<\n      CreateData,\n      Parent,\n      false\n    >,\n  >(\n    parent: Parent,\n    collection: DescendantDocumentType['metadata']['collection'],\n    documents: InstanceType<DescendantDocumentType>,\n    data: CreateData[],\n    options: foundry.abstract.Document.Database.CreateOptions<Operation>,\n    userId: string,\n  ) {\n    super._onCreateDescendantDocuments(\n      parent,\n      collection,\n      documents,\n      data,\n      options,\n      userId,\n    );\n    if (collection === 'groups')\n      this.#onModifyCombatantGroups(parent, documents, options);\n  }\n\n  protected override _onUpdateDescendantDocuments<\n    DescendantDocumentType extends Combat.DescendantClass,\n    Parent extends Combat.Stored,\n    UpdateData extends\n      foundry.abstract.Document.UpdateDataFor<DescendantDocumentType>,\n    Operation extends foundry.abstract.types.DatabaseUpdateOperation<\n      UpdateData,\n      Parent\n    >,\n  >(\n    parent: Parent,\n    collection: DescendantDocumentType['metadata']['collection'],\n    documents: InstanceType<DescendantDocumentType>,\n    changes: UpdateData[],\n    options: foundry.abstract.Document.Database.UpdateOptions<Operation>,\n    userId: string,\n  ) {\n    super._onUpdateDescendantDocuments(\n      parent,\n      collection,\n      documents,\n      changes,\n      options,\n      userId,\n    );\n    if (collection === 'groups')\n      this.#onModifyCombatantGroups(parent, documents, options);\n  }\n\n  protected override _onDeleteDescendantDocuments<\n    DescendantDocumentType extends Combat.DescendantClass,\n    Parent extends Combat.Stored,\n    Operation extends foundry.abstract.types.DatabaseDeleteOperation<Parent>,\n  >(\n    parent: Parent,\n    collection: DescendantDocumentType['metadata']['collection'],\n    documents: InstanceType<DescendantDocumentType>,\n    ids: string[],\n    options: foundry.abstract.Document.Database.DeleteOptions<Operation>,\n    userId: string,\n  ) {\n    super._onDeleteDescendantDocuments(\n      parent,\n      collection,\n      documents,\n      ids,\n      options,\n      userId,\n    );\n    if (collection === 'groups')\n      this.#onModifyCombatantGroups(parent, documents, options);\n  }\n\n  #onModifyCombatantGroups(parent: Combat.Stored, _documents, options) {\n    this.setupTurns();\n    if (ui.combat.viewed === parent && options.render !== false)\n      ui.combat.render();\n  }\n\n  /**\n   * Draws cards from the Action Cards deck\n   * @param count number of cards to draw\n   * @returns an array with the drawn cards\n   */\n  async drawCard(count = 1): Promise<Card[]> {\n    const pileId = game.settings.get('swade', 'actionDeckDiscardPile');\n    const discardPile = game.cards!.get(pileId, { strict: true });\n    return this.actionDeck.dealForInitiative(discardPile, count);\n  }\n\n  /** Ask the user to pick a card for a given combatant name */\n  async pickACard(ctx: CardPickContext): Promise<CardPickResult> {\n    return CardPicker.asPromise({ ctx: { ...ctx, deck: this.actionDeck } });\n  }\n\n  /**\n   * Find a card from the deck based on it's suit and value\n   * @param cardValue\n   * @param cardSuit\n   */\n  findCard(cardValue: number, cardSuit: number): Card | undefined {\n    return this.actionDeck.cards.find(\n      (c) =>\n        c.type === 'poker' &&\n        c.value === cardValue &&\n        c.system['suit'] === cardSuit,\n    );\n  }\n\n  override async resetAll() {\n    for (const combatant of this.combatants) {\n      const update = this._getInitResetUpdate(combatant as SwadeCombatant);\n      if (update) combatant.updateSource(update);\n    }\n    for (const group of this.groups) {\n      group.updateSource({\n        initiative: group.system.leaderCombatant._source.initiative,\n      });\n    }\n    await this.update(\n      {\n        turn: 0,\n        combatants: this.combatants.toObject(),\n        groups: this.groups.toObject(),\n      },\n      { diff: false },\n    );\n    return this;\n  }\n\n  override async startCombat() {\n    //Init autoroll\n    if (this.automaticInitiative) {\n      // if automatic init is on we draw cards\n      await this._promptAllPlayersForInitiative();\n      //grab the NPCs, we're drawing them locally\n      await this.rollNPC();\n    }\n    return super.startCombat();\n  }\n\n  startSurpriseCombat() {\n    new AmbushAssistant(this).render(true);\n  }\n\n  toggleGroupExpand(groupId) {\n    const group = this.groups.get(groupId);\n    group._expanded = !group._expanded;\n    return ui.combat.render({ parts: ['tracker'] });\n  }\n\n  override async nextTurn() {\n    await this._handleEndOfTurnExpirations();\n    const turn = this.turn ?? -1;\n\n    // Determine the next turn number\n    let next: number | null = null;\n    if (this.settings.skipDefeated) {\n      for (const [i, t] of this.turns.entries()) {\n        if (i <= turn) continue;\n        // Skip defeated, lost turns\n        if (t.isDefeated || t.turnLost) continue;\n        next = i;\n        break;\n      }\n    } else {\n      next = turn + 1;\n    }\n\n    // Maybe advance to the next round\n    const round = this.round;\n    if (this.round === 0 || next === null || next >= this.turns.length) {\n      return this.nextRound();\n    }\n\n    // Update the document, passing data through a hook first\n    const updateData = { round, turn: next };\n    const updateOptions = { advanceTime: CONFIG.time.turnTime, direction: 1 };\n    Hooks.callAll('combatTurn', this, updateData, updateOptions);\n    await this.update(updateData, updateOptions);\n    await this._handleStartOfTurnExpirations();\n    if (this.combatant?.group && !this.combatant.group._expanded) {\n      await this.toggleGroupExpand(this.combatant.group.id);\n    }\n    return this;\n  }\n\n  override async nextRound() {\n    if (game.user.isGM) await this._nextRoundAsGM();\n    else await this._nextRoundAsUser();\n    if (this.combatant?.group && !this.combatant.group._expanded) {\n      await this.toggleGroupExpand(this.combatant.group.id);\n    }\n    return this;\n  }\n\n  override async previousRound() {\n    const revert = await Dialog.confirm({\n      title: game.i18n.localize('SWADE.Combat.RevertRoundTitle'),\n      content:\n        '<p>' + game.i18n.localize('SWADE.Combat.RevertRoundContent') + '</p>',\n      defaultYes: true,\n      rejectClose: false,\n      options: { classes: [...Dialog.defaultOptions.classes, 'swade-app'] },\n    });\n    if (!revert) return this;\n    return super.previousRound();\n  }\n\n  /**\n   * Called by CombatTracker#_onCombatControl\n   */\n  async resetDeck() {\n    await reshuffleActionDeck();\n    ui.notifications.info('SWADE.ActionDeckResetNotification', {\n      localize: true,\n    });\n  }\n\n  protected _getInitResetUpdate(\n    combatant: SwadeCombatant,\n  ): Record<string, unknown> | undefined {\n    const roundHeld = combatant.roundHeld;\n    const turnLost = combatant.turnLost;\n    if (roundHeld) {\n      if (turnLost) {\n        return {\n          initiative: null,\n          system: {\n            hasJoker: false,\n            '-=turnLost': null,\n          },\n        };\n      } else {\n        //keep the card\n        return;\n      }\n    } else if (!roundHeld || turnLost) {\n      return {\n        initiative: null,\n        system: {\n          suitValue: null,\n          cardValue: null,\n          hasJoker: false,\n          cardString: '',\n          turnLost: false,\n        },\n      };\n    }\n    return {\n      initiative: null,\n      system: {\n        suitValue: null,\n        cardValue: null,\n        hasJoker: false,\n        cardString: '',\n        turnLost: false,\n      },\n    };\n  }\n\n  protected async _handleStartOfTurnExpirations() {\n    if (!this.combatant || this.combatant.isDefeated) return;\n    const expirations =\n      this.combatant?.actor?.effects.filter(\n        (effect: SwadeActiveEffect) =>\n          effect.isTemporary && effect.isExpired('start'),\n      ) ?? [];\n    for (const effect of expirations) {\n      await effect.expire();\n    }\n  }\n\n  protected async _handleEndOfTurnExpirations() {\n    if (!this.combatant || this.combatant.isDefeated) return;\n    const expirations =\n      this.combatant?.actor?.effects.filter(\n        (effect) => effect.isTemporary && effect.isExpired('end'),\n      ) ?? [];\n    for (const effect of expirations) {\n      await effect.expire();\n    }\n  }\n\n  protected async _playInitiativeSound() {\n    if (!game.settings.get('swade', 'initiativeSound')) return;\n    foundry.audio.AudioHelper.play(this.#initSoundData, true);\n  }\n\n  protected override _playCombatSound(type: string): void {\n    if (this.turn === this.turns.length - 1 && type === 'nextUp') return; //skip if it's the last turn in the round\n    this.#debouncedCombatSound(type);\n  }\n\n  protected async _nextRoundAsGM() {\n    if (this.#roundAdvanceDialog) return;\n    this.#roundAdvanceDialog = true; //set the flag\n    //run the dialog\n    const advance = await foundry.applications.api.DialogV2.confirm({\n      window: { title: game.i18n.localize('SWADE.Combat.AdvanceRoundTitle') },\n      content:\n        '<p>' + game.i18n.localize('SWADE.Combat.AdvanceRoundContent') + '</p>',\n      rejectClose: false,\n      classes: ['swade-app'],\n    });\n    this.#roundAdvanceDialog = false; //unset the flag\n    if (!advance) return;\n    //reset the deck if a joker had been drawn\n    if (this.combatants.some((c: SwadeCombatant) => c.hasJoker)) {\n      await reshuffleActionDeck();\n      ui.notifications.info('SWADE.DeckShuffled', { localize: true });\n    }\n\n    //reset the combatants\n    await this.resetAll();\n\n    //advance the round to the next one\n    await super.nextRound();\n\n    //no auto init, we're done;\n    if (!this.automaticInitiative) return;\n\n    // if automatic init is on we draw cards\n    await this._promptAllPlayersForInitiative();\n    //grab the NPCs, we're drawing them locally\n    await this.rollNPC();\n  }\n\n  /** As a user emit a socket event that asks a Game master to trigger the next round workflow and roll the owned tokens */\n  protected _nextRoundAsUser() {\n    game.swade.sockets.newRound(this.id!);\n  }\n\n  protected async _promptAllPlayersForInitiative() {\n    const [localDraws, remoteDraws] = this.combatants\n      .filter(\n        (c: SwadeCombatant) =>\n          c.hasPlayerOwner &&\n          !c.isNPC &&\n          c.initiative === null &&\n          (!c.group || c.isGroupLeader),\n      )\n      .map((c: SwadeCombatant) => {\n        return { combatant: c, user: c.players[0]! };\n      })\n      .sort((a, b) => a.user.name.localeCompare(b.user.name))\n      .partition((v) => this._determineIfRemoteDraw(v.user, v.combatant));\n\n    for (const { combatant } of localDraws) {\n      await this.rollInitiative(combatant.id as string);\n    }\n    if (remoteDraws.length > 0) {\n      await PlayerCardDrawHerder.asPromise({\n        draws: remoteDraws,\n        combatId: this.id as string,\n      });\n    }\n  }\n\n  protected _determineIfRemoteDraw(\n    user: SwadeUser,\n    combatant: SwadeCombatant,\n  ): boolean {\n    if (!combatant.actor || !('initiative' in combatant.actor.system))\n      return false;\n    const initiative = combatant.actor.system.initiative;\n    const edges =\n      initiative.hasLevelHeaded ||\n      initiative.hasImpLevelHeaded ||\n      initiative.hasQuick;\n    const groupOwner = !combatant.group || combatant.group.isOwner;\n    return user.active && edges && groupOwner;\n  }\n\n  override async _preDelete(\n    options: Combat.Database.PreDeleteOptions,\n    user: User.Implementation,\n  ) {\n    await super._preDelete(options, user);\n    const jokerDrawn = this.combatants.some((c: SwadeCombatant) => c.hasJoker);\n\n    //reset the deck when combat is ended\n    if (jokerDrawn) {\n      await reshuffleActionDeck();\n      ui.notifications.info('SWADE.DeckShuffled', { localize: true });\n    }\n\n    //remove the holding status from any combatants that have it\n    await Promise.allSettled(\n      this.combatants\n        .filter((c) => c.actor?.statuses.has('holding') ?? false)\n        .flatMap((c) =>\n          c.actor?.effects.filter((e) => e.statuses.has('holding')),\n        )\n        .map((e) => e.delete()),\n    );\n  }\n}\n\ninterface CardPickContext {\n  /** an array of cards */\n  cards: Card[];\n  /** name of the combatant */\n  combatantName: string;\n  /** id of the old card, if you're picking cards for a redraw */\n  oldCardId?: string;\n  /** determines whether a redraw is allowed */\n  enableRedraw?: boolean;\n  /** determines whether this draw includes the Quick edge */\n  isQuickDraw?: boolean;\n}\n","import { AnyMutableObject } from 'fvtt-types/utils';\nimport { Updates } from '../../../globals';\nimport { Logger } from '../../Logger';\nimport { getStatusEffectDataById } from '../../util';\n// import type SwadeCombat from './SwadeCombat';\n\ndeclare global {\n  interface DocumentClassConfig {\n    Combatant: typeof SwadeCombatant;\n  }\n}\n\nexport default class SwadeCombatant<\n  out SubType extends Combatant.SubType = Combatant.SubType,\n> extends Combatant<SubType> {\n  static override migrateData(data: AnyMutableObject) {\n    const flags = data.flags?.swade;\n\n    if (flags) {\n      const keys = [\n        'suitValue',\n        'cardValue',\n        'cardString',\n        'hasJoker',\n        'roundHeld',\n        'turnLost',\n        'firstRound',\n      ];\n      data.system ??= {};\n\n      for (const key of keys) {\n        if (key in flags) {\n          data.system[key] = flags[key];\n          delete flags[key];\n        }\n      }\n    }\n\n    return super.migrateData(data);\n  }\n\n  get isIncapacitated(): boolean {\n    return (this.actor &&\n      'isIncapacitated' in this.actor.system &&\n      this.actor.system.isIncapacitated) as boolean;\n  }\n\n  override get isDefeated(): boolean {\n    if (!this.actor?.isWildcard) {\n      return this.isIncapacitated || super.isDefeated;\n    }\n    return super.isDefeated;\n  }\n\n  get suitValue() {\n    return this.system.suitValue;\n  }\n\n  async setCardValue(cardValue: number) {\n    return this.update({ 'system.cardValue': cardValue });\n  }\n\n  get cardValue() {\n    return this.system.cardValue;\n  }\n\n  async setSuitValue(suitValue: number) {\n    return this.update({ 'system.suitValue': suitValue });\n  }\n\n  get cardString() {\n    return this.system.cardString;\n  }\n\n  async setCardString(cardString: string) {\n    return this.update({ 'system.cardString': cardString });\n  }\n\n  get hasJoker() {\n    return !!this.system.hasJoker;\n  }\n\n  async setJoker(joker: boolean) {\n    return this.update({ 'system.hasJoker': joker });\n  }\n\n  get isGroupLeader() {\n    if (!this.group) return false;\n    else {\n      if (this.group.system?.leader)\n        return this.group.system.leader === this.id;\n      else return this.group.members?.first() === this;\n    }\n  }\n\n  async setIsGroupLeader(groupLeader: boolean) {\n    if (!this.group) return null;\n    return this.group.update({ 'system.leader': groupLeader ? this.id : null });\n  }\n\n  async unsetIsGroupLeader() {\n    return this.group?.update({ 'system.leader': null });\n  }\n\n  get roundHeld() {\n    return this.system.roundHeld;\n  }\n\n  async setRoundHeld(roundHeld: number) {\n    return this.update({ 'system.roundHeld': roundHeld });\n  }\n\n  get turnLost() {\n    return !!this.system.turnLost;\n  }\n\n  async setTurnLost(turnLost: boolean) {\n    return this.update({ 'system.turnLost': turnLost });\n  }\n\n  get cardsToDraw(): number {\n    let cardsToDraw = 1;\n    if (!!this.initiative && !this.roundHeld) return cardsToDraw;\n    const actor = this.actor;\n    if (!actor || !('initiative' in actor.system)) return cardsToDraw;\n    const initiative = actor.system.initiative;\n    if (initiative?.hasLevelHeaded || initiative?.hasHesitant) cardsToDraw = 2;\n    if (initiative?.hasImpLevelHeaded) cardsToDraw = 3;\n    if (actor.type !== 'vehicle' && this.isIncapacitated) cardsToDraw = 1;\n    return cardsToDraw;\n  }\n\n  async assignNewActionCard(cardId: string) {\n    const combat = this.combat;\n    if (!combat) return;\n    //grab the action deck;\n    const deck = game.cards!.get(game.settings.get('swade', 'actionDeck'), {\n      strict: true,\n    });\n    const card = deck.cards.get(cardId, { strict: true });\n\n    const cardValue = card.value as number;\n    const suitValue = card.system['suit'] as number;\n    const hasJoker = card.system['isJoker'] as boolean;\n    const cardString = card.description;\n\n    //move the card to the discard pile, if its not drawn\n    if (!card.drawn) {\n      const discardPile = game.cards!.get(\n        game.settings.get('swade', 'actionDeckDiscardPile'),\n        { strict: true },\n      );\n      await card.discard(discardPile, { chatNotification: false });\n    }\n\n    //update the combatant with the new card\n    const updates = new Array<Updates>();\n    const initiative = cardValue + suitValue / 10;\n    updates.push({\n      _id: this.id,\n      initiative,\n      system: { cardValue, suitValue, hasJoker, cardString },\n    });\n\n    await combat?.updateEmbeddedDocuments('Combatant', updates);\n  }\n\n  async toggleHold() {\n    if (!this.parent) return;\n    const data = getStatusEffectDataById('holding');\n    if (!data) throw new Error('Could not find an effect with ID of \"holding\"');\n    if (!this.roundHeld) {\n      const round = Math.max(this.parent.round, 1);\n      await Promise.all([\n        this.setRoundHeld(round),\n        this.actor?.toggleActiveEffect(data, { active: true }),\n      ]);\n    } else {\n      await Promise.all([\n        this.update({ 'system.-=roundHeld': null }),\n        this.actor?.toggleActiveEffect(data, { active: false }),\n      ]);\n    }\n    await this.parent.debounceSetup(); //hold icon wouldn't always clear\n  }\n\n  async toggleTurnLost() {\n    if (!this.parent) return;\n    const data = getStatusEffectDataById('holding');\n    if (!data) throw new Error('Could not find an effect with ID of \"holding\"');\n    if (!this.turnLost) {\n      await this.update({\n        system: {\n          turnLost: true,\n          '-=roundHeld': null,\n        },\n      });\n      await this.actor?.toggleActiveEffect(data, { active: false });\n    } else {\n      await this.update({\n        system: {\n          roundHeld: this.parent.round,\n          turnLost: false,\n        },\n      });\n      await this.actor?.toggleActiveEffect(data, { active: false });\n    }\n  }\n\n  async actNow() {\n    if (!this.parent || !game.user?.isGM) return;\n    const data = getStatusEffectDataById('holding');\n    if (!data) throw new Error('Could not find an effect with ID of \"holding\"');\n    let targetCombatant = this.parent.combatant as SwadeCombatant | undefined;\n    if (this.id === targetCombatant?.id) {\n      targetCombatant = this.parent.turns.find((c) => !c.roundHeld)!;\n    }\n    const targetInitiative = targetCombatant?.initiative ?? 0;\n    let initiative = targetInitiative + 0.0001;\n    // Get the other turns that interrupted this target combatant\n    const otherInterruptors = this.parent.turns.filter(\n      (t) =>\n        (t.initiative ?? 0) < targetInitiative + 1 &&\n        (t.initiative ?? 0) > targetInitiative,\n    );\n    for (const t of otherInterruptors) {\n      // Decrement the initiative to be assigned by a tiny decimal value per other interruptor.\n      if (Math.abs((t.initiative ?? 0) - initiative) < Number.EPSILON)\n        initiative = (t.initiative ?? 0) - 0.000001;\n    }\n    await this.update({\n      initiative,\n      system: {\n        cardValue: targetCombatant?.cardValue,\n        suitValue: targetCombatant?.suitValue,\n        cardString: '',\n        '-=roundHeld': null,\n      },\n    });\n    await this.actor?.toggleActiveEffect(data, { active: false });\n    await this.parent.update({\n      turn: this.parent.turns.findIndex((c) => c.id === this.id),\n    });\n    await this.parent.render(false);\n  }\n\n  async actAfterCurrentCombatant() {\n    if (!this.parent || !game.user?.isGM) return;\n    const data = getStatusEffectDataById('holding');\n    if (!data) throw new Error('Could not find an effect with ID of \"holding\"');\n    const currentCombatant = this.parent.combatant as SwadeCombatant;\n    await this.update({\n      initiative: (currentCombatant?.initiative ?? 0) - 0.0001,\n      system: {\n        cardValue: currentCombatant?.cardValue,\n        suitValue: currentCombatant?.suitValue,\n        cardString: '',\n        '-=roundHeld': null,\n      },\n    });\n    await this.actor?.toggleActiveEffect(data, { active: false });\n    await this.parent.update({\n      turn: this.parent.turns.findIndex((c) => c.id === currentCombatant?.id),\n    });\n    await this.parent.render(false);\n  }\n\n  override async _preCreate(\n    data: Combatant.CreateData,\n    options: Combatant.Database.PreUpdateOptions,\n    user: User.Implementation,\n  ) {\n    if (this.actor?.type === 'group') {\n      Logger.warn('SWADE.Validation.NoGroupCombatants', {\n        localize: true,\n        toast: true,\n      });\n      return false;\n    }\n    const allowed = await super._preCreate(data, options, user);\n    if (allowed === false) return false;\n  }\n}\n","import { constants } from './constants';\nimport { TraitRoll } from './dice/TraitRoll';\nimport SwadeActiveEffect from './documents/active-effect/SwadeActiveEffect';\nimport SwadeActor from './documents/actor/SwadeActor';\n\n/** @internal */\nexport function registerEffectCallbacks() {\n  const effectCallbacks = game.swade.effectCallbacks;\n  effectCallbacks.set('shaken', removeShaken);\n  effectCallbacks.set('stunned', removeStunned);\n  effectCallbacks.set('bleeding-out', bleedOut);\n  effectCallbacks.set('wild-attack', wildAttack);\n}\n\nasync function wildAttack(effect: SwadeActiveEffect) {\n  const parent = effect.parent;\n  if (!(parent instanceof SwadeActor)) return;\n  await parent.toggleActiveEffect('vulnerable');\n  await effect.delete();\n}\n\nasync function removeShaken(effect: SwadeActiveEffect) {\n  await new Promise((resolve) => {\n    let roll: TraitRoll | null = null;\n    let processed = false;\n    const buttons: foundry.applications.api.DialogV2.Button<Promise<void>>[] = [\n      {\n        action: 'roll',\n        label: game.i18n.localize('SWADE.EffectCallbacks.Shaken.RollSpirit'),\n        icon: '<i class=\"fas fa-dice\"></i>',\n        callback: async () => {\n          processed = true;\n          const parent = effect.parent;\n          if (!(parent instanceof SwadeActor) || parent?.type === 'vehicle') {\n            return;\n          }\n          const flavor = game.i18n.localize(\n            'SWADE.EffectCallbacks.Shaken.Flavor',\n          );\n          roll = await parent.rollAttribute('spirit', {\n            title: flavor,\n            flavour: flavor,\n            additionalMods: [\n              {\n                label: game.i18n.localize(\n                  'SWADE.EffectCallbacks.Shaken.UnshakeModifier',\n                ),\n                value: parent.system.attributes.spirit.unShakeBonus,\n              },\n            ],\n          });\n          if (\n            (roll?.successes ?? constants.ROLL_RESULT.FAIL) >=\n            constants.ROLL_RESULT.SUCCESS\n          ) {\n            await effect.delete();\n            ui.notifications.info('SWADE.EffectCallbacks.Shaken.Success', {\n              localize: true,\n            });\n          }\n          resolve(roll);\n        },\n      },\n      {\n        action: 'benny',\n        label: game.i18n.localize('SWADE.BenniesSpend'),\n        icon: '<i class=\"fas fa-coins\"></i>',\n        callback: async () => {\n          processed = true;\n          const parent = effect.parent;\n          if (!(parent instanceof SwadeActor)) return;\n          await parent?.spendBenny();\n          await effect.delete();\n          resolve(roll);\n        },\n      },\n      {\n        action: 'gmBenny',\n        label: game.i18n.localize('SWADE.BenniesSpendGM'),\n        icon: '<i class=\"fas fa-coins\"></i>',\n        callback: async () => {\n          processed = true;\n          const parent = effect.parent;\n          if (!(parent instanceof SwadeActor)) return;\n          await game.user?.spendBenny();\n          await effect.delete();\n          resolve(roll);\n        },\n      },\n    ];\n\n    if (!game.user?.isGM) buttons.pop();\n\n    const content = game.i18n.localize('SWADE.EffectCallbacks.Shaken.Question');\n    const data: foundry.applications.api.DialogV2.Configuration = {\n      window: {\n        title: game.i18n.format('SWADE.EffectCallbacks.Shaken.Title', {\n          name: effect.parent?.name,\n        }),\n      },\n      content: `<p>${content}</p>`,\n      buttons,\n      default: 'roll',\n      close: async () => {\n        if (!processed) {\n          await effect.resetDuration();\n          resolve(roll);\n        }\n      },\n      render: (_ev, dialog: foundry.applications.api.DialogV2) => {\n        const html = dialog.element;\n        const button = html.querySelector('button[data-action=\"benny\"]');\n        const gmButton = html.querySelector('button[data-action=\"gmBenny\"]');\n        const gmHasNoBennies = game.user?.isGM && game.user.bennies <= 0;\n        const characterHasNoBennies =\n          effect.parent instanceof SwadeActor && effect.parent.bennies <= 0;\n        if (characterHasNoBennies && button) button.disabled = true;\n        if (gmHasNoBennies && gmButton) gmButton.disabled = true;\n      },\n      classes: ['dialog', 'dialog-buttons-column', 'swade-app'],\n    };\n    foundry.applications.api.DialogV2.wait(data);\n  });\n}\n\nasync function removeStunned(effect: SwadeActiveEffect) {\n  const parent = effect.parent;\n  if (!(parent instanceof SwadeActor)) return;\n  const flavour = game.i18n.localize('SWADE.EffectCallbacks.Stunned.Title');\n  const roll = await parent.rollAttribute('vigor', {\n    title: flavour,\n    flavour,\n    additionalMods: [\n      {\n        label: game.i18n.localize(\n          'SWADE.EffectCallbacks.Stunned.UnStunModifier',\n        ),\n        value: parent.system.attributes.vigor.unStunBonus,\n      },\n    ],\n  });\n  const result = roll?.successes ?? constants.ROLL_RESULT.FAIL;\n  //no roll or failed\n  if (result < constants.ROLL_RESULT.SUCCESS) {\n    ui.notifications.info('SWADE.EffectCallbacks.Stunned.Fail', {\n      localize: true,\n    });\n    return;\n  }\n  //normal success, still vulnerable\n  if (result === constants.ROLL_RESULT.SUCCESS) {\n    await effect.delete();\n    ui.notifications.info('SWADE.EffectCallbacks.Stunned.Success', {\n      localize: true,\n    });\n    return;\n  }\n\n  if (result >= constants.ROLL_RESULT.RAISE) {\n    await effect.delete();\n    ui.notifications.info('SWADE.EffectCallbacks.Stunned.Raise', {\n      localize: true,\n    });\n    return;\n  }\n}\n\nasync function bleedOut(effect: SwadeActiveEffect) {\n  const parent = effect.parent;\n  if (!(parent instanceof SwadeActor)) return;\n\n  const flavor = game.i18n.localize('SWADE.EffectCallbacks.BleedingOut.Title');\n  const roll = await parent.rollAttribute('vigor', {\n    title: flavor,\n    flavour: flavor,\n    additionalMods: [\n      {\n        label: game.i18n.localize(\n          'SWADE.EffectCallbacks.BleedingOut.BleedOutModifier',\n        ),\n        value: parent.system.attributes.vigor.bleedOut.modifier,\n      },\n    ],\n    ignoreWounds: parent.system.attributes.vigor.bleedOut.ignoreWounds,\n  });\n  const result = roll?.successes ?? constants.ROLL_RESULT.FAIL;\n  //death\n  if (result < constants.ROLL_RESULT.SUCCESS) {\n    //delete existing temporary effects so that they don't interfere\n    const toDelete = parent.effects\n      .filter((e) => e.isTemporary)\n      .map((e) => e.id!);\n    await parent.deleteEmbeddedDocuments('ActiveEffect', toDelete);\n\n    //set overlay\n    await parent.toggleActiveEffect(CONFIG.specialStatusEffects.DEFEATED, {\n      overlay: true,\n    });\n\n    //mark combatant defeated in turn tracker\n    const tokens = parent.getActiveTokens();\n    const toUpdate = new Array<Record<string, unknown>>();\n    for (const token of tokens) {\n      if (!token.combatant) continue;\n      toUpdate.push({ _id: token.combatant.id, defeated: true });\n    }\n    if (toUpdate.length) {\n      await game.combat?.updateEmbeddedDocuments('Combatant', toUpdate);\n    }\n    ui.notifications.info('SWADE.EffectCallbacks.BleedingOut.Fail', {\n      localize: true,\n    });\n    return;\n  }\n  //hanging on\n  if (result === constants.ROLL_RESULT.SUCCESS) {\n    ui.notifications.info('SWADE.EffectCallbacks.BleedingOut.Success', {\n      localize: true,\n    });\n    return;\n  }\n\n  //stabilizing\n  if (result >= constants.ROLL_RESULT.RAISE) {\n    await effect.delete();\n    ui.notifications.info('SWADE.EffectCallbacks.BleedingOut.Raise', {\n      localize: true,\n    });\n    return;\n  }\n}\n","import { EquipState } from '../globals';\nimport { SWADE } from './config';\nimport { constants } from './constants';\nimport SwadeCombatant from './documents/combat/SwadeCombatant';\nimport SwadeItem from './documents/item/SwadeItem';\n\n/*****************************\n * General Utility Helpers\n *****************************/\n\nfunction add(a, b) {\n  const result = parseInt(a) + parseInt(b);\n  return result.signedString();\n}\n\nfunction multiply(a: number, b: number) {\n  return a * b;\n}\n\nfunction isEven(number: number): boolean {\n  return number % 2 === 0;\n}\n\nfunction isOdd(number: number): boolean {\n  return !isEven(number);\n}\n\nfunction signedString(num) {\n  const result = parseInt(num);\n  if (isNaN(result)) return '';\n  return result.signedString();\n}\n\nfunction rotate(number: number) {\n  const rotationVal = (number % 5) + 2;\n  if (rotationVal > 4) return 2;\n  else return rotationVal;\n}\n\nfunction formatNumber(num) {\n  return Math.round((num + Number.EPSILON) * 1000) / 1000;\n}\n\nfunction capitalize(str: string) {\n  return str.capitalize();\n}\n\nfunction isEmpty(value) {\n  return Handlebars.Utils.isEmpty(value);\n}\n\nfunction eachInMap(map: Map<any, any>, block: Handlebars.HelperOptions) {\n  let output = '';\n  for (const [key, value] of map) {\n    output += block.fn({ key, value });\n  }\n  return output;\n}\n\nfunction stringify(obj: any) {\n  return JSON.stringify(\n    Object.hasOwn(obj, 'toObject') ? obj.toObject() : obj,\n    null,\n    2,\n  );\n}\n\n/** A replacement radioboxes helper that enables the use of numeric values */\nfunction radioBoxes(\n  name: string,\n  choices: Record<string | number, string>,\n  options: Handlebars.HelperOptions,\n) {\n  const checked = options.hash['checked'] ?? null;\n  const localize = options.hash['localize'] ?? false;\n  let html = '';\n  for (const key in choices) {\n    let label = choices[key];\n    if (localize) label = game.i18n.localize(label);\n    const isNumeric = Number.isNumeric(key);\n    const value = isNumeric ? Number(key) : key;\n    const isChecked = checked === value;\n    html += `<label class=\"checkbox\"><input type=\"radio\" name=\"${name}\" value=\"${value}\" ${\n      isChecked ? 'checked' : ''\n    } ${isNumeric ? 'data-dtype=\"Number\"' : ''}> ${label}</label>`;\n  }\n  return new Handlebars.SafeString(html);\n}\n\n/*****************************\n * Helpers for sheets\n *****************************/\n\nfunction collapsible(states: Record<string, boolean>, id: string) {\n  const currentlyOpen = Boolean(states[id]);\n  return currentlyOpen ? 'open' : '';\n}\n\nfunction localizeSkillAttribute(attribute: string, useShorthand = false) {\n  if (!attribute) return '';\n  return game.i18n.localize(\n    useShorthand\n      ? SWADE.attributes[attribute].short\n      : SWADE.attributes[attribute].long,\n  );\n}\n\nfunction advanceType(type: number) {\n  switch (type) {\n    case constants.ADVANCE_TYPE.EDGE:\n      return game.i18n.localize('SWADE.Advances.Types.Edge');\n    case constants.ADVANCE_TYPE.SINGLE_SKILL:\n      return game.i18n.localize('SWADE.Advances.Types.SingleSkill');\n    case constants.ADVANCE_TYPE.TWO_SKILLS:\n      return game.i18n.localize('SWADE.Advances.Types.TwoSkills');\n    case constants.ADVANCE_TYPE.ATTRIBUTE:\n      return game.i18n.localize('SWADE.Advances.Types.Attribute');\n    case constants.ADVANCE_TYPE.HINDRANCE:\n      return game.i18n.localize('SWADE.Advances.Types.Hindrance');\n    default:\n      return 'Unknown';\n  }\n}\n\nfunction modifier(str: string) {\n  str = str === '' || str === null ? '0' : str;\n  const value = typeof str == 'string' ? parseInt(str) : str;\n  return value == 0 ? '' : value > 0 ? ` + ${value}` : ` - ${-value}`;\n}\n\nfunction canBeEquipped(item: SwadeItem) {\n  return item['system']['equippable'] || item['system']['isVehicular'];\n}\n\nfunction displayEmbedded(array: any[] = []) {\n  const collection = new Map(array);\n  const entities: string[] = [];\n  collection.forEach((val: any, key: string) => {\n    const type =\n      val.type === 'ability'\n        ? game.i18n.localize('SWADE.SpecialAbility')\n        : game.i18n.localize(`TYPES.Item.${val.type}`);\n\n    let majorMinor = '';\n    if (val.type === 'hindrance') {\n      if (val.data.major) {\n        majorMinor = game.i18n.localize('SWADE.Major');\n      } else {\n        majorMinor = game.i18n.localize('SWADE.Minor');\n      }\n    }\n\n    entities.push(\n      `<li class=\"flexrow\">\n          <img src=\"${val.img}\" alt=\"${type}\" class=\"effect-icon\" />\n          <span class=\"effect-label\">${type} - ${val.name} ${majorMinor}</span>\n          <span class=\"effect-controls\">\n            <a class=\"delete-embedded\" data-Id=\"${key}\">\n              <i class=\"fas fa-trash\"></i>\n            </a>\n          </span>\n        </li>`,\n    );\n  });\n  return `<ul class=\"effects-list\">${entities.join('\\n')}</ul>`;\n}\n\n/*****************************\n * Combatant related Helpers\n *****************************/\n\nfunction combatantColor(id: string): string | undefined {\n  const fallback = 'transparent';\n  const c = game.combat?.combatants.get(id) as SwadeCombatant;\n  if (!c) return fallback;\n  if (c.groupId) return groupColor(c.groupId);\n  else if (c.isDefeated) return '#fff';\n  else return groupColor(id);\n}\n\nfunction groupColor(id: string): string | undefined {\n  const fallback = 'transparent';\n  const c = game.combat?.combatants.get(id);\n  if (!c) return fallback;\n  const groupColor = c.getFlag('swade', 'groupColor');\n  if (groupColor) return groupColor || fallback;\n\n  if (c.players?.length) {\n    return c.players[0].color;\n  } else {\n    return game.users.activeGM?.color;\n  }\n}\n\n/*****************************\n * Embedded content related Helpers\n *****************************/\n\n// This helper will take a system-formatted damage string and reformat it to the format used in the PEG sources.\n// Right now this just removes the '@' and capitalizes and 'str' values\n// aka @str+1d6 formats to Str+1d6\nfunction formatDamage(damageStr: string) {\n  return damageStr.replace('@', '').replace('str', 'Str');\n}\n\n// This helper will take in the locations property found on armor items and will return the list of locations that have armor values in a\n// localized string formatted list for display\nfunction formatArmorLocations(locations: any) {\n  // Translate hit locations\n  const armorLocations: string[] = [];\n  const headLocation = game.i18n.localize('SWADE.Head');\n  const torsoLocation = game.i18n.localize('SWADE.Torso');\n  const armsLocation = game.i18n.localize('SWADE.Arms');\n  const legsLocation = game.i18n.localize('SWADE.Legs');\n\n  // Create an array of locations based on whether there are values there\n  if (locations.head) armorLocations.push(headLocation);\n  if (locations.torso) armorLocations.push(torsoLocation);\n  if (locations.arms) armorLocations.push(armsLocation);\n  if (locations.legs) armorLocations.push(legsLocation);\n\n  // Use localized list formatting\n  const formatter = game.i18n.getListFormatter({\n    style: 'long',\n    type: 'unit',\n  });\n\n  return formatter.format(armorLocations);\n}\n\n// This helper will take in the hindrance severity value and format it to an appropriate localized display if the value is 'either', otherwise just return\n// the singular localization value represented\nfunction formatHindranceSeverity(severity: string) {\n  const minorSeverity = game.i18n.localize('SWADE.HindMinor');\n  const majorSeverity = game.i18n.localize('SWADE.HindMajor');\n\n  // If it's just minor or major, return their respective localizations.\n  if (severity !== 'minor' && severity !== 'major' && severity !== 'either')\n    return '';\n  if (severity === 'minor') return minorSeverity;\n  if (severity === 'major') return majorSeverity;\n\n  // If it's 'either' then localize the list of both combined\n  if (this.severity === 'either') {\n    const formatter = game.i18n.getListFormatter({\n      style: 'long',\n      type: 'disjunction',\n    });\n    const severities = [minorSeverity, majorSeverity];\n    return formatter.format(severities);\n  }\n}\n\n/*****************************\n * Equipment related Helpers\n *****************************/\n\nfunction equipStatus(state: EquipState) {\n  let icon = '';\n  switch (state) {\n    case constants.EQUIP_STATE.STORED:\n      icon = '<i class=\"fas fa-archive\"></i>';\n      break;\n    case constants.EQUIP_STATE.CARRIED:\n      icon = '<i class=\"fas fa-shopping-bag\"></i>';\n      break;\n    case constants.EQUIP_STATE.EQUIPPED:\n      icon = '<i class=\"fas fa-tshirt\"></i>';\n      break;\n    case constants.EQUIP_STATE.OFF_HAND:\n      icon = '<i class=\"fas fa-hand-paper\"></i>';\n      break;\n    case constants.EQUIP_STATE.MAIN_HAND:\n      icon = '<i class=\"fas fa-hand-paper fa-flip-horizontal\"></i>';\n      break;\n    case constants.EQUIP_STATE.TWO_HANDS:\n      icon = '<i class=\"fas fa-sign-language\"></i>';\n      break;\n  }\n  return new Handlebars.SafeString(icon);\n}\n\nfunction equipStatusLabel(state: EquipState) {\n  const states = {\n    [constants.EQUIP_STATE.STORED]: game.i18n.localize(\n      'SWADE.ItemEquipStatus.Stored',\n    ),\n    [constants.EQUIP_STATE.CARRIED]: game.i18n.localize(\n      'SWADE.ItemEquipStatus.Carried',\n    ),\n    [constants.EQUIP_STATE.OFF_HAND]: game.i18n.localize(\n      'SWADE.ItemEquipStatus.OffHand',\n    ),\n    [constants.EQUIP_STATE.EQUIPPED]: game.i18n.localize(\n      'SWADE.ItemEquipStatus.Equipped',\n    ),\n    [constants.EQUIP_STATE.MAIN_HAND]: game.i18n.localize(\n      'SWADE.ItemEquipStatus.MainHand',\n    ),\n    [constants.EQUIP_STATE.TWO_HANDS]: game.i18n.localize(\n      'SWADE.ItemEquipStatus.TwoHands',\n    ),\n  };\n  return new Handlebars.SafeString(states[state]);\n}\n\nfunction prepareFormRendering(path: string, options: Handlebars.HelperOptions) {\n  const {\n    classes,\n    label,\n    hint,\n    rootId,\n    stacked,\n    units,\n    widget,\n    source,\n    document,\n    ...inputConfig\n  } = options.hash;\n  inputConfig.localize ??= true;\n  const groupConfig = {\n    label,\n    hint,\n    rootId,\n    stacked,\n    widget,\n    localize: inputConfig.localize,\n    units,\n    classes: typeof classes === 'string' ? classes.split(' ') : [],\n  };\n  const doc: ClientDocument =\n    document ??\n    options.data.root.item ??\n    options.data.root.actor ??\n    options.data.root.document;\n  let field: foundry.data.fields.DataField;\n  if (path.startsWith('system') && 'system' in doc) {\n    const splitPath = path.split('.');\n    splitPath.shift();\n    field = doc.system.schema.getField(splitPath.join('.'));\n  } else {\n    field = doc.schema.getField(path);\n  }\n\n  if (!('value' in inputConfig)) {\n    inputConfig.value = foundry.utils.getProperty(\n      source ? doc._source : doc,\n      path,\n    );\n  }\n  return { field, inputConfig, groupConfig };\n}\n\nfunction formGroupSimple(path: string, options: Handlebars.HelperOptions) {\n  const { field, inputConfig, groupConfig } = prepareFormRendering(\n    path.toString(),\n    options,\n  );\n  const group = field.toFormGroup(groupConfig, inputConfig);\n  return new Handlebars.SafeString(group.outerHTML);\n}\n\nfunction formInputSimple(path: string, options: Handlebars.HelperOptions) {\n  const { field, inputConfig } = prepareFormRendering(path.toString(), options);\n  const group = field.toInput(inputConfig);\n  return new Handlebars.SafeString(group.outerHTML);\n}\n\n/** @internal */\nexport function registerCustomHelpers() {\n  Handlebars.registerHelper({\n    readonly: (val) => (val ? 'readonly' : ''),\n    add,\n    multiply,\n    signedString,\n    isOdd,\n    isEven,\n    formatNumber,\n    rotate,\n    isEmpty,\n    collapsible,\n    stringify,\n    radioBoxes,\n    localizeSkillAttribute,\n    advanceType,\n    modifier,\n    canBeEquipped,\n    displayEmbedded,\n    capitalize,\n    combatantColor,\n    eachInMap,\n    equipStatus,\n    equipStatusLabel,\n    formGroupSimple,\n    formInputSimple,\n    formatDamage,\n    formatArmorLocations,\n    formatHindranceSeverity,\n  });\n}\n","import { AuraPointSource } from '../canvas/AuraPointSource';\nimport SwadeToken from '../canvas/SwadeToken';\nimport SwadeActiveEffect from '../documents/active-effect/SwadeActiveEffect';\n\nexport function registerAuraHooks() {\n  Hooks.on('canvasInit', () => {\n    CONFIG.Canvas.auras = {\n      collection: new foundry.utils.Collection<AuraPointSource>(),\n      filter:\n        foundry.canvas.rendering.filters.VisualEffectsMaskingFilter.create({\n          mode: foundry.canvas.rendering.filters.VisualEffectsMaskingFilter\n            .FILTER_MODES.BACKGROUND,\n          visionTexture: canvas.masks.vision.renderTexture,\n        }),\n    };\n    canvas.effects.auras = CONFIG.Canvas.auras.collection;\n  });\n\n  Hooks.on('drawGridLayer', (layer: GridLayer) => {\n    layer.auras = layer.addChild(new PIXI.Container());\n    layer.auras.filters = [CONFIG.Canvas.auras.filter];\n    canvas.effects.visualEffectsMaskingFilters.add(CONFIG.Canvas.auras.filter);\n  });\n\n  Hooks.on('tearDownGridLayer', (_layer: GridLayer) => {\n    canvas.effects.visualEffectsMaskingFilters.delete(\n      CONFIG.Canvas.auras.filter,\n    );\n  });\n\n  Hooks.on('drawToken', (token: SwadeToken) => {\n    addAuras(token);\n    updateAurasForToken(token);\n  });\n\n  Hooks.on('updateToken', (doc: TokenDocument, changes: any) => {\n    if (!doc.rendered) return;\n    const keys = ['x', 'y', 'disposition'];\n    if (keys.some((key) => foundry.utils.hasProperty(changes, key))) {\n      updateAurasForToken(doc.object as SwadeToken);\n    }\n  });\n\n  Hooks.on('destroyToken', (token: SwadeToken) => {\n    token.auras.forEach((aura) => {\n      aura._destroy();\n      CONFIG.Canvas.auras.collection.delete(aura.sourceId);\n    });\n    token.auras.clear();\n  });\n\n  Hooks.on('updateActiveEffect', (effect: SwadeActiveEffect) => {\n    if (!game.canvas.ready) return;\n    if (effect.changes.some((e) => e.key.startsWith('system.auras'))) {\n      effect.actor?.getActiveTokens().forEach((t) => addAuras(t));\n      updateAllAuras();\n    }\n  });\n\n  Hooks.on('initializeLightSources', () => updateAllAuras());\n  Hooks.on('controlToken', () => updateAllAuras());\n  Hooks.on('hoverToken', () => updateAllAuras());\n  Hooks.on('refreshToken', (token: SwadeToken) => {\n    game.settings.get('core', 'visionAnimation')\n      ? updateAurasForToken(token)\n      : refreshAuras();\n  });\n}\n\nfunction addAuras(token: SwadeToken) {\n  if (!token.actor) return missingActorMsg(token);\n  for (const id in token.actor.system.auras) {\n    if (token.auras.has(id)) continue;\n    token.auras.set(id, new AuraPointSource({ object: token, id }));\n  }\n}\n\nfunction updateAllAuras() {\n  for (const token of canvas.tokens.placeables) {\n    updateAurasForToken(token);\n  }\n}\n\nfunction updateAurasForToken(token: SwadeToken) {\n  if (!token.actor) {\n    Array.from(token.auras.entries()).forEach(([id, aura]) => {\n      removeAura(token, aura, id);\n    });\n    return missingActorMsg(token);\n  }\n  const origin = token.getCenterPoint();\n  const auraData = token.actor.system.auras;\n  for (const [id, aura] of token.auras.entries()) {\n    const data = auraData[id];\n    if (!data) {\n      removeAura(token, aura, id);\n      continue;\n    }\n    const { externalRadius } = token;\n    aura.initialize({\n      x: origin.x,\n      y: origin.y,\n      disabled: !data.enabled,\n      radius: canvas.dimensions?.size * data.radius + externalRadius,\n      externalRadius: externalRadius,\n      rotation: token.document.rotation,\n      preview: token.isPreview,\n      walls: data.walls,\n    });\n    aura.add();\n\n    CONFIG.Canvas.auras.collection.set(aura.sourceId, aura);\n  }\n  refreshAuras();\n}\n\nfunction refreshAuras() {\n  canvas.interface.grid?.auras?.removeChildren();\n  for (const aura of CONFIG.Canvas.auras.collection) {\n    if (!aura.active) continue;\n    canvas.interface.grid?.auras?.addChild(aura.graphics);\n  }\n}\n\nfunction removeAura(token: SwadeToken, aura: AuraPointSource, id: string) {\n  CONFIG.Canvas.auras.collection.delete(aura.sourceId);\n  aura._destroy();\n  token.auras.delete(id);\n}\n\nfunction missingActorMsg(token: SwadeToken) {\n  console.warn(`Token ${token.name} (${token.document.uuid}) has no actor!`);\n}\n","interface CardData {\n  name: string;\n  img: string;\n  cardValue: number;\n  suitValue: number;\n  isJoker: boolean;\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\nexport default class ActionCardEditor extends HandlebarsApplicationMixin(\n  ApplicationV2,\n) {\n  constructor({ cards, ...options }: ActionCardEditorConfiguration) {\n    super(options);\n    this.#cards = cards;\n  }\n\n  #cards: Cards;\n\n  static override DEFAULT_OPTIONS = {\n    window: {\n      title: 'SWADE.ActionCardEditor',\n      contentClasses: ['standard-form'],\n    },\n    position: {\n      width: 600,\n      height: 'auto',\n    },\n    classes: ['swade', 'action-card-editor', 'swade-application'],\n    tag: 'form',\n    form: {\n      handler: ActionCardEditor.onSubmit,\n      closeOnSubmit: false,\n      submitOnClose: false,\n    },\n    actions: {\n      addCard: ActionCardEditor.#onAddCard,\n      showCard: ActionCardEditor.#onShowCard,\n      deleteCard: ActionCardEditor.#onDeleteCard,\n    },\n  };\n\n  static override PARTS = {\n    form: {\n      template: 'systems/swade/templates/apps/action-card-editor.hbs',\n      scrollable: ['.card-list'],\n    },\n    footer: { template: 'templates/generic/form-footer.hbs' },\n  };\n\n  override get id(): string {\n    return `actionCardEditor-${this.cards.id}`;\n  }\n\n  get cards() {\n    return this.#cards;\n  }\n\n  override async _prepareContext(options) {\n    const context = foundry.utils.mergeObject(\n      await super._prepareContext(options),\n      {\n        deckName: this.cards.name,\n        cards: Array.from(this.cards.cards.values()).sort(this._sortCards),\n        suitOptions: this.#getSuitOptions(),\n        cardValues: this.#getCardValues(),\n        buttons: [\n          {\n            type: 'submit',\n            icon: 'fa-regular fa-save',\n            label: 'SETTINGS.Save',\n          },\n        ],\n      },\n    );\n    return context;\n  }\n\n  #getSuitOptions(): Record<number, string> {\n    return {\n      4: 'SWADE.Cards.Spades',\n      3: 'SWADE.Cards.Hearts',\n      2: 'SWADE.Cards.Diamonds',\n      1: 'SWADE.Cards.Clubs',\n      99: 'SWADE.Cards.Jokers',\n    };\n  }\n\n  #getCardValues(): Record<number, string> {\n    return {\n      2: 'SWADE.Cards.Two',\n      3: 'SWADE.Cards.Three',\n      4: 'SWADE.Cards.Four',\n      5: 'SWADE.Cards.Five',\n      6: 'SWADE.Cards.Six',\n      7: 'SWADE.Cards.Seven',\n      8: 'SWADE.Cards.Eight',\n      9: 'SWADE.Cards.Nine',\n      10: 'SWADE.Cards.Ten',\n      11: 'SWADE.Cards.Jack',\n      12: 'SWADE.Cards.Queen',\n      13: 'SWADE.Cards.King',\n      14: 'SWADE.Cards.Ace',\n      99: 'SWADE.Cards.RedJoker',\n      98: 'SWADE.Cards.BlackJoker',\n      97: 'SWADE.Cards.BlueJoker',\n      96: 'SWADE.Cards.GreenJoker',\n    };\n  }\n\n  static async onSubmit(\n    this: ActionCardEditor,\n    _event: SubmitEvent,\n    _form: HTMLFormElement,\n    formData: FormDataExtended,\n  ) {\n    const data = foundry.utils.expandObject(formData.object);\n    const cards = Object.entries(data.card) as [string, CardData][];\n    const updates = new Array<Record<string, unknown>>();\n    for (const [id, value] of cards) {\n      const newData: Card.CreateData = {\n        name: value.name,\n        faces: [\n          {\n            name: value.name,\n            img: value.img,\n          },\n        ],\n        value: value.cardValue,\n        system: {\n          isJoker: value.suitValue > 90,\n          suit: value.suitValue,\n        },\n      };\n      //grab the current card and diff it against the object we got from the form\n      const current = this.cards.cards.get(id, { strict: true });\n      const diff = foundry.utils.diffObject(current.toObject(), newData);\n      //skip if there's no differences\n      if (foundry.utils.isEmpty(diff)) continue;\n      //set the ID for the update\n      diff['_id'] = id;\n      updates.push(foundry.utils.flattenObject(diff));\n    }\n    await this.cards.updateEmbeddedDocuments('Card', updates);\n    this.render({ force: true });\n  }\n\n  private _sortCards(a: Card, b: Card) {\n    const suitA = a.system['suit'];\n    const suitB = b.system['suit'];\n    const suit = suitB - suitA;\n    if (suit !== 0) return suit;\n    const cardA = a.value ?? 0;\n    const cardB = b.value ?? 0;\n    const card = cardB - cardA;\n    return card;\n  }\n\n  static #onShowCard(\n    this: ActionCardEditor,\n    _event: PointerEvent,\n    target: HTMLElement,\n  ) {\n    const id = target.dataset.id!;\n    const card = this.cards.cards.get(id);\n    if (!card) return;\n    new foundry.applications.apps.ImagePopout({\n      src: card.currentFace?.img!,\n    }).render({ force: true });\n  }\n\n  static async #onAddCard(\n    this: ActionCardEditor,\n    _event: PointerEvent,\n    _target: HTMLElement,\n  ) {\n    const newCard = await CONFIG.Card.documentClass.create(\n      {\n        name: game.i18n.format('DOCUMENT.New', {\n          type: game.i18n.localize('DOCUMENT.Card'),\n        }),\n        type: 'poker',\n        faces: [\n          {\n            img: 'systems/swade/assets/ui/ace-white.svg',\n            name: 'New Card',\n          },\n        ],\n        face: 0,\n        origin: this.cards.id,\n      },\n      { parent: this.cards },\n    );\n    if (newCard) {\n      await this.render({ force: true });\n      this.element.querySelector('.card-list')?.scrollIntoView(false);\n    }\n  }\n\n  static async #onDeleteCard(\n    this: ActionCardEditor,\n    _event: PointerEvent,\n    target: HTMLElement,\n  ) {\n    const card = this.cards.cards.get(target.dataset.id);\n    if (!card) return;\n    const text = game.i18n.format('SWADE.DeleteEmbeddedCardPrompt', {\n      card: card.name,\n    });\n    await foundry.applications.api.DialogV2.confirm({\n      content: `<p class=\"text-center\">${text}</p>`,\n      classes: ['dialog', 'swade-app'],\n      yes: {\n        callback: async () => {\n          await card.delete();\n          this.render({ force: true });\n        },\n      },\n    });\n  }\n}\n\nexport interface ActionCardEditorConfiguration\n  extends Partial<foundry.applications.api.ApplicationV2.Configuration> {\n  cards: Cards;\n}\n","import type { CCMGridConfig } from '../types/CCM';\n\nconst { createFormGroup, createNumberInput, createSelectInput } =\n  foundry.applications.fields;\n\nexport async function layoutChase(deck: Cards) {\n  // Now requires CCM\n  const ccmModule = game.modules.get('complete-card-management');\n  if (!ccmModule) {\n    return ui.notifications.error('SWADE.NoCCMInstall', { localize: true });\n  } else if (!ccmModule.active) {\n    return ui.notifications.error('SWADE.NoCCMActive', { localize: true });\n  }\n\n  //return if no canvas or scene is available\n  if (!canvas || !canvas.ready || !canvas.scene) {\n    return ui.notifications.warn('SWADE.NoSceneAvailable', { localize: true });\n  }\n\n  if (!deck || deck.type !== 'deck') {\n    return ui.notifications.warn('SWADE.ChaseNoDeck', { localize: true });\n  }\n\n  const layout = document.createElement('fieldset');\n  const legend = document.createElement('legend');\n  legend.innerText = game.i18n.localize('SWADE.ChaseLayout');\n  layout.prepend(legend);\n  const rowInput = createNumberInput({\n    name: 'rows',\n    min: 1,\n    max: 54,\n    step: 1,\n    value: 1,\n  });\n  const rows = createFormGroup({\n    input: rowInput,\n    label: game.i18n.localize('SWADE.ChaseRows'),\n  });\n  const columnInput = createNumberInput({\n    name: 'columns',\n    min: 1,\n    max: 54,\n    step: 1,\n    value: 9,\n  });\n  const columns = createFormGroup({\n    input: columnInput,\n    label: game.i18n.localize('SWADE.ChaseColumns'),\n  });\n  const discardOptions = game.cards.reduce((acc, stack: Cards) => {\n    if (stack.type === 'pile')\n      acc.push({ value: stack.id!, label: stack.name });\n    return acc;\n  }, [] as foundry.applications.fields.FormSelectOption[]);\n  const discardInput = createSelectInput({\n    name: 'to',\n    options: discardOptions,\n  });\n  const discard = createFormGroup({\n    input: discardInput,\n    label: game.i18n.localize('SWADE.ChaseDiscard'),\n  });\n  layout.append(rows, columns, discard);\n\n  const gridConfig = await foundry.applications.api.DialogV2.prompt<\n    Partial<foundry.applications.api.DialogV2.WaitOptions>,\n    CCMGridConfig\n  >({\n    window: {\n      title: 'SWADE.SetUpChase',\n      contentClasses: ['standard-form'],\n    },\n    content: layout.outerHTML,\n    ok: {\n      callback: async (_event, button, _dialog) => ({\n        from: deck,\n        to: game.cards.get(button.form?.elements['to'].value),\n        rows: button.form?.elements['rows'].value,\n        columns: button.form?.elements['columns'].value,\n      }),\n    },\n    rejectClose: false,\n  });\n\n  if (!gridConfig) return;\n\n  try {\n    await ccm!.api.grid(gridConfig);\n  } catch (error) {\n    ui.notifications.warn('SWADE.ChaseLayoutError', { localize: true });\n  }\n\n  // TODO: Integrate CCM with Types so this is properly typed\n  canvas['cards'].activate();\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\r\nexport class MigrationCounter {\r\n  #current = 0;\r\n  #max = 0;\r\n\r\n  constructor(max: number) {\r\n    this.#max = max;\r\n    SceneNavigation.displayProgressBar({ label: 'Migrating', pct: 0 });\r\n  }\r\n\r\n  increment() {\r\n    this.#current += 1;\r\n    const pct = this.#current / this.#max;\r\n    SceneNavigation.displayProgressBar({\r\n      label: 'Migration',\r\n      pct: Math.round(pct * 100),\r\n    });\r\n  }\r\n\r\n  reset(max?: number) {\r\n    if (max) this.#max = max;\r\n    this.#current = 0;\r\n  }\r\n}\r\n","import { Logger } from '../Logger';\r\n\r\nexport async function triggerServersideMigration(\r\n  pack: CompendiumCollection<CompendiumCollection.Metadata>,\r\n) {\r\n  if (!game.user?.isGM) throw new Error();\r\n  const collection = pack.collection;\r\n  Logger.debug(\r\n    `Beginning migration for Compendium pack ${collection}, please be patient.`,\r\n  );\r\n  await SocketInterface.dispatch('manageCompendium', {\r\n    type: collection,\r\n    action: 'migrate',\r\n    data: collection,\r\n  });\r\n  Logger.debug(`Successfully migrated Compendium pack ${collection}.`);\r\n  return pack;\r\n}\r\n","/* eslint-disable deprecation/deprecation */\nimport { ReloadType } from '../../globals';\nimport { Logger } from '../Logger';\nimport { constants } from '../constants';\nimport { VehicleData } from '../data/actor';\nimport type SwadeUser from '../documents/SwadeUser';\nimport SwadeActiveEffect from '../documents/active-effect/SwadeActiveEffect';\nimport SwadeActor from '../documents/actor/SwadeActor';\nimport SwadeItem from '../documents/item/SwadeItem';\nimport { ItemGrant } from '../documents/item/SwadeItem.interface';\nimport { MigrationCounter } from '../models/MigrationCounter';\nimport { slugify } from '../util';\nimport { triggerServersideMigration } from './migrationUtils';\n\nexport async function migrateWorld() {\n  const version = game.system.version;\n\n  Logger.info(\n    `Applying SWADE System Migration for version ${version}. Please be patient and do not close your game or shut down your server.`,\n    { permanent: true, toast: true },\n  );\n\n  // Gather the World Actors/Items to migrate\n  const actors = game\n    .actors!.map((a) => [a, true])\n    .concat(\n      Array.from(game.actors.invalidDocumentIds).map((id) => [\n        game.actors!.getInvalid(id),\n        false,\n      ]),\n    );\n\n  const items = game\n    .items!.map((i) => [i, true])\n    .concat(\n      Array.from(game.items.invalidDocumentIds).map((id) => [\n        game.items!.getInvalid(id),\n        false,\n      ]),\n    );\n\n  const packs = game.packs.filter((p) =>\n    ['Actor', 'Item', 'Scene'].includes(p.documentName),\n  );\n\n  const counter = new MigrationCounter(\n    items.length +\n      actors.length +\n      packs.length +\n      game.scenes!.size +\n      game.users!.size,\n  );\n\n  // Migrate World Actors\n  for (const [actor, valid] of actors) {\n    try {\n      await dedupeActorActiveEffects(actor);\n      await _migratePTModifiers(actor);\n      const source = valid\n        ? actor.toObject()\n        : game.data.actors?.find((a) => a._id === actor.id);\n      const updateData = migrateActorData(source);\n      if (!foundry.utils.isEmpty(updateData)) {\n        console.log(`Migrating Actor document ${actor.name}`);\n        await actor.update(updateData, { enforceTypes: false, diff: valid });\n      }\n    } catch (err) {\n      err.message = `Failed swade system migration for Actor ${actor.name}: ${err.message}`;\n      console.error(err);\n    } finally {\n      counter.increment();\n    }\n  }\n\n  // Migrate World Items\n  for (const [item, valid] of items) {\n    try {\n      const source = valid\n        ? item.toObject()\n        : game.data.items?.find((i) => i._id === item.id);\n      const updateData = migrateItemData(source);\n      if (!foundry.utils.isEmpty(updateData)) {\n        console.log(`Migrating Item document ${item.name}`);\n        await item.update(updateData, { enforceTypes: false, diff: valid });\n      }\n    } catch (err) {\n      err.message = `Failed swade system migration for Item ${item.name}: ${err.message}`;\n      console.error(err);\n    } finally {\n      counter.increment();\n    }\n  }\n\n  // Migrate Actor Override Tokens\n  for (const scene of game.scenes!) {\n    try {\n      for (const token of scene.tokens) {\n        token.delta._createSyntheticActor({ reinitializeCollections: true });\n        if (token.actorLink) continue; //skip linked tokens as they are already handled by the world actor migration\n        const actor = token.actor;\n        await dedupeActorActiveEffects(actor);\n        await _migratePTModifiers(actor);\n        const updateData = migrateActorData(actor?.toObject());\n        if (foundry.utils.isEmpty(updateData)) continue;\n        await actor?.update(updateData);\n      }\n      const updateData = migrateSceneData(scene);\n      if (!foundry.utils.isEmpty(updateData)) {\n        console.log(`Migrating Scene document ${scene.name}`);\n        await scene.update(updateData, { enforceTypes: false });\n        // If we do not do this, then synthetic token actors remain in cache\n        // with the un-updated actorData.\n        for (const token of scene.tokens.filter((t) => !t.actorLink)) {\n          token.delta._createSyntheticActor({ reinitializeCollections: true });\n        }\n      }\n    } catch (err) {\n      err.message = `Failed swade system migration for Scene ${scene.name}: ${err.message}`;\n      console.error(err);\n    } finally {\n      counter.increment();\n    }\n  }\n\n  // Migrate users\n  for (const user of game.users!) {\n    try {\n      const updateData = migrateUser(user);\n      if (!foundry.utils.isEmpty(updateData)) {\n        Logger.info(`Migrating User document ${user.name}`);\n        await user.update(updateData, { enforceTypes: false });\n      }\n    } catch (err) {\n      err.message = `Failed swade system migration for user ${user.name}: ${err.message}`;\n      Logger.error(err);\n    } finally {\n      counter.increment();\n    }\n  }\n\n  // Migrate Compendium Packs\n  for (const pack of packs) {\n    await migrateCompendium(pack);\n    counter.increment();\n  }\n\n  // Set the migration as complete\n  await game.settings.set('swade', 'systemMigrationVersion', version);\n  Logger.info(`SWADE System Migration to version ${version} completed!`, {\n    permanent: true,\n    toast: true,\n  });\n}\n\n/* -------------------------------------------- */\n\n/**\n * Apply migration rules to all Entities within a single Compendium pack\n * @param pack The compendium to migrate. Only Actor, Item or Scene compendiums are processed\n */\nexport async function migrateCompendium(\n  pack: CompendiumCollection<CompendiumCollection.Metadata>,\n) {\n  const documentName = pack.documentName;\n  if (!['Actor', 'Item', 'Scene'].includes(documentName)) return;\n\n  // Unlock the pack for editing\n  const wasLocked = pack.locked;\n  await pack.configure({ locked: false });\n\n  // Begin by requesting server-side data model migration and get the migrated content\n  await triggerServersideMigration(pack);\n  const documents = await pack.getDocuments();\n\n  // Iterate over compendium entries - applying fine-tuned migration functions\n  for (const doc of documents) {\n    let updateData: Record<string, any> = {};\n    try {\n      switch (documentName) {\n        case 'Actor':\n          await dedupeActorActiveEffects(doc as SwadeActor);\n          await _migratePTModifiers(doc as SwadeActor);\n          updateData = migrateActorData(doc.toObject());\n          break;\n        case 'Item':\n          updateData = migrateItemData(doc.toObject());\n          break;\n        case 'Scene':\n          updateData = migrateSceneData(doc.toObject());\n          break;\n      }\n\n      // Save the entry, if data was changed\n      if (foundry.utils.isEmpty(updateData)) continue;\n      await doc.update(updateData);\n      Logger.debug(\n        `Migrated ${documentName} document ${doc.name} in Compendium ${pack.collection}`,\n      );\n    } catch (err) {\n      // Handle migration failures\n      err.message = `Failed swade system migration for document ${doc.name} in pack ${pack.collection}: ${err.message}`;\n      Logger.error(err);\n    }\n  }\n\n  // Apply the original locked status for the pack\n  await pack.configure({ locked: wasLocked });\n  Logger.debug(\n    `Migrated all ${documentName} documents from Compendium ${pack.collection}`,\n  );\n}\n\n/* -------------------------------------------- */\n\nexport function migrateUser(user: SwadeUser) {\n  const updateData: UpdateData = {};\n  _migrateWildDieFlag(user, updateData);\n  return updateData;\n}\n\n/* -------------------------------------------- */\n\n/**\n * Migrate any active effects attached to the provided parent.\n * @param {object} parent           Data of the parent being migrated.\n * @returns {object[]}              Updates to apply on the embedded effects.\n */\nexport function migrateEffects(parent) {\n  if (!parent.effects) return {};\n  return parent.effects.reduce((arr, e) => {\n    const effectData =\n      e instanceof CONFIG.ActiveEffect.documentClass ? e.toObject() : e;\n    const effectUpdate = migrateEffectData(effectData);\n    if (!foundry.utils.isEmpty(effectUpdate)) {\n      effectUpdate._id = effectData._id;\n      arr.push(foundry.utils.expandObject(effectUpdate));\n    }\n    return arr;\n  }, []);\n}\n\n/* -------------------------------------------- */\n\n/* Update all compendium packs using the new system data model. */\n//TODO re-enable once datamodel has been implemented\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nasync function refreshAllCompendiums() {\n  for (const pack of game.packs) {\n    await refreshCompendium(pack);\n  }\n}\n\n/* -------------------------------------------- */\n\n/**\n * Update all Documents in a compendium using the new system data model.\n * @param pack  Pack to refresh.\n */\nasync function refreshCompendium(\n  pack: CompendiumCollection<CompendiumCollection.Metadata>,\n) {\n  if (!pack?.documentName) return;\n  // swade.moduleArt.suppressArt = true;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  const DocumentClass = getDocumentClass(pack.documentName);\n  const wasLocked = pack.locked;\n  await pack.configure({ locked: false });\n  await pack.migrate();\n\n  ui.notifications.info(`Beginning to refresh Compendium ${pack.collection}`);\n  const documents = await pack.getDocuments();\n  for (const doc of documents) {\n    const data = doc.toObject();\n    await doc.delete();\n    await DocumentClass.create(data, {\n      keepId: true,\n      keepEmbeddedIds: true,\n      pack: pack.collection,\n    });\n  }\n  await pack.configure({ locked: wasLocked });\n  // swade.moduleArt.suppressArt = false;\n  ui.notifications.info(\n    `Refreshed all documents from Compendium ${pack.collection}`,\n  );\n}\n\n/* -------------------------------------------- */\n\n/* -------------------------------------------- */\n/*  Document Type Migration Helpers             */\n/* -------------------------------------------- */\n\n/**\n * Migrate a single Actor document to incorporate latest data model changes\n * Return an Object of updateData to be applied\n * @param {object} actor    The actor data object to update\n * @return {Object}         The updateData to apply\n */\nexport function migrateActorData(actor: ActorData) {\n  const updateData: UpdateData = {};\n\n  // Actor Data Updates\n  _migrateVehicleOperator(actor, updateData);\n  _migrateGeneralPowerPoints(actor, updateData);\n\n  // Migrate embedded effects\n  if (actor.effects) {\n    const effects = migrateEffects(actor);\n    if (effects.length > 0) updateData.effects = effects;\n  }\n\n  // Migrate Owned Items\n  if (!actor.items) return updateData;\n  const items = actor.items.reduce((arr, i) => {\n    // Migrate the Owned Item\n    const itemData = i instanceof CONFIG.Item.documentClass ? i.toObject() : i;\n    const itemUpdate = migrateItemData(itemData);\n\n    // Update the Owned Item\n    if (!foundry.utils.isEmpty(itemUpdate)) {\n      itemUpdate._id = i._id;\n      arr.push(foundry.utils.expandObject(itemUpdate));\n    }\n\n    return arr;\n  }, new Array<UpdateData>());\n\n  if (items.length > 0) updateData.items = items;\n  return updateData;\n}\n\n/* -------------------------------------------- */\n\n/**\n * Migrate a single Item document to incorporate latest data model changes\n *\n * @param {object} item             Item data to migrate\n * @returns {object}                The updateData to apply\n */\nexport function migrateItemData(item: Item.CreateData) {\n  const updateData: UpdateData = {};\n  _migrateWeaponAPToNumber(item, updateData);\n  _migratePowerEquipToFavorite(item, updateData);\n  _migrateItemEquipState(item, updateData);\n  _migrateWeaponAutoReload(item, updateData);\n  _ensureBatteryMaxCharges(item, updateData);\n  _fixWorldItemGrants(item, updateData);\n  _generateSWID(item, updateData);\n  _setRangeType(item, updateData);\n\n  // Migrate embedded effects\n  if (item.effects) {\n    const effects = migrateEffects(item);\n    if (effects.length > 0) updateData.effects = effects;\n  }\n\n  return updateData;\n}\n\n/* -------------------------------------------- */\n\n/**\n * Migrate a single Scene document to incorporate changes to the data model of it's actor data overrides\n * Return an Object of updateData to be applied\n * @param {Object} scene  The Scene data to Update\n * @return {Object}       The updateData to apply\n */\nexport function migrateSceneData(_scene: Scene | SceneData) {\n  const updateData: UpdateData = {};\n  return updateData;\n}\n\n/* -------------------------------------------- */\n\n/**\n * Migrate the provided active effect data.\n * @param {object} _effect           Effect data to migrate.\n * @returns {object}                The updateData to apply.\n */\nexport function migrateEffectData(_effect: ActiveEffectData) {\n  const updateData: UpdateData = {};\n  _effect.changes.forEach((c) => {\n    if (c.key === 'system.stats.parry.modifier')\n      c.key = 'system.stats.parry.value';\n    if (c.key === 'system.stats.toughness.modifier')\n      c.key = 'system.stats.toughness.value';\n  });\n  updateData.changes = _effect.changes;\n  return updateData;\n}\n\n/* -------------------------------------------- */\n\n/**\n * Purge the data model of any inner objects which have been flagged as _deprecated.\n * @param {object} data   The data to clean\n * @private\n */\nexport function removeDeprecatedObjects(data: Item.CreateData | ActorData) {\n  for (const [k, v] of Object.entries(data)) {\n    if (getType(v) === 'Object') {\n      if (v['_deprecated'] === true) {\n        Logger.info(`Deleting deprecated object key ${k}`);\n        delete data[k];\n      } else removeDeprecatedObjects(v);\n    }\n  }\n  return data;\n}\n\nexport async function dedupeActorActiveEffects(actor: SwadeActor) {\n  const toDelete = new Array<string>();\n  const filteredEffects: SwadeActiveEffect[] = actor.appliedEffects.filter(\n    (e) => e.parent instanceof SwadeItem,\n  );\n\n  for (const effect of filteredEffects) {\n    actor.effects\n      .filter((e) => e.name === effect.name)\n      .forEach((e) => {\n        const parentId = effect.parent.id as string;\n        if (e.origin.includes('.Item.' + parentId)) toDelete.push(e.id!);\n      });\n  }\n  await actor.deleteEmbeddedDocuments('ActiveEffect', toDelete);\n}\n\nasync function _migratePTModifiers(actor: SwadeActor) {\n  if (actor.system instanceof VehicleData) return;\n  const parryModifier = actor._source.system.stats.parry.modifier ?? 0;\n  const toughModifier = actor._source.system.stats.toughness.modifier ?? 0;\n  const effects = new Array<ActiveEffect.CreateData>();\n  const updateData: UpdateData = {};\n  if (parryModifier) {\n    updateData['system.stats.parry.modifier'] = 0;\n    effects.push({\n      name:\n        game.i18n.localize('SWADE.Addi') +\n        ' ' +\n        game.i18n.localize('SWADE.Parry'),\n      changes: [\n        {\n          key: 'system.stats.parry.value',\n          value: parryModifier,\n          mode: CONST.ACTIVE_EFFECT_MODES.ADD,\n          priority: null,\n        },\n      ],\n      description: 'Created by 3.1 Migration',\n    });\n  }\n  if (toughModifier) {\n    updateData['system.stats.toughness.modifier'] = 0;\n    effects.push({\n      name:\n        game.i18n.localize('SWADE.Addi') +\n        ' ' +\n        game.i18n.localize('SWADE.Tough'),\n      changes: [\n        {\n          key: 'system.stats.toughness.value',\n          value: toughModifier,\n          mode: CONST.ACTIVE_EFFECT_MODES.ADD,\n          priority: null,\n        },\n      ],\n      description: 'Created by 3.1 Migration',\n    });\n  }\n  if (effects.length > 0) {\n    actor.createEmbeddedDocuments('ActiveEffect', effects);\n    actor.updateSource(updateData);\n  }\n}\n\nfunction _migrateVehicleOperator(\n  data: Actor.UpdateData,\n  updateData: UpdateData,\n) {\n  if (data.type !== 'vehicle') return updateData;\n  const driverId = data.system.driver?.id;\n  const hasOldID = !!driverId && driverId.split('.').length === 1;\n  if (hasOldID) {\n    updateData['system.driver.id'] = `Actor.${driverId}`;\n  }\n  return updateData;\n}\n\nfunction _migrateGeneralPowerPoints(\n  data: Actor.UpdateData,\n  updateData: UpdateData,\n) {\n  if (data.type === 'vehicle') return updateData;\n\n  const isOld =\n    foundry.utils.hasProperty(data, 'system.powerPoints.value') &&\n    foundry.utils.hasProperty(data, 'system.powerPoints.max');\n  if (!isOld) return updateData;\n\n  //migrate basic PP\n  const powerPoints = data.system.powerPoints;\n  updateData['system.powerPoints.general.value'] = powerPoints.value;\n  updateData['system.powerPoints.general.max'] = powerPoints.max;\n  updateData['system.powerPoints.-=max'] = null;\n  updateData['system.powerPoints.-=value'] = null;\n\n  //migrate prototype Token\n  if (data.prototypeToken.bar1.attribute === 'powerPoints') {\n    updateData['prototypeToken.bar1.attribute'] = 'powerPoints.general';\n  }\n  if (data.prototypeToken.bar2.attribute === 'powerPoints') {\n    updateData['prototypeToken.bar2.attribute'] = 'powerPoints.general';\n  }\n\n  //check the active effects\n  const effects = new Array<ActiveEffect.CreateData>();\n  for (const effect of data.effects) {\n    const changes = new Array<ActiveEffect.EffectChangeData>();\n    for (const change of effect.changes) {\n      if (change.key === 'system.powerPoints.value') {\n        changes.push({\n          ...change,\n          key: 'system.powerPoints.general.value',\n        });\n      }\n      if (change.key === 'system.powerPoints.max') {\n        changes.push({\n          ...change,\n          key: 'system.powerPoints.general.max',\n        });\n      }\n    }\n    if (changes.length > 0) {\n      effects.push({ _id: effect._id, changes: changes });\n    }\n  }\n  if (effects.length > 0) updateData.effects = effects;\n}\n\nfunction _migrateWeaponAPToNumber(\n  data: Item.CreateData,\n  updateData: UpdateData,\n) {\n  if (data.type !== 'weapon') return updateData;\n\n  if (data.system.ap && typeof data.system.ap === 'string') {\n    updateData['system.ap'] = Number(data.system.ap);\n  }\n}\n\nfunction _migratePowerEquipToFavorite(\n  data: Item.CreateData,\n  updateData: UpdateData,\n) {\n  if (data.type !== 'power') return updateData;\n  const isOld = foundry.utils.hasProperty(data, 'system.equipped');\n  if (isOld) {\n    updateData['system.favorite'] = foundry.utils.getProperty(\n      data,\n      'system.equipped',\n    );\n    updateData['system.-=equipped'] = null;\n    updateData['system.-=equippable'] = null;\n  }\n}\n\nfunction _migrateItemEquipState(data: Item.CreateData, updateData: UpdateData) {\n  if (\n    data.type !== 'armor' &&\n    data.type !== 'weapon' &&\n    data.type !== 'shield' &&\n    data.type !== 'gear'\n  ) {\n    return;\n  }\n  const isOld = foundry.utils.hasProperty(data, 'system.equipped');\n  if (!isOld) return;\n  updateData['system.-=equipped'] = null;\n  if (data.type === 'weapon') {\n    updateData['system.equipStatus'] = data.system.equipped\n      ? constants.EQUIP_STATE.MAIN_HAND\n      : constants.EQUIP_STATE.CARRIED;\n  } else {\n    updateData['system.equipStatus'] = data.system.equipped\n      ? constants.EQUIP_STATE.EQUIPPED\n      : constants.EQUIP_STATE.CARRIED;\n  }\n  return updateData;\n}\n\nfunction _migrateWildDieFlag(user: SwadeUser, updateData: UpdateData) {\n  const dsnWildDie = user?.getFlag('swade', 'dsnWildDie');\n  const isOld = dsnWildDie === 'none';\n  if (!isOld) return;\n\n  updateData['flags.swade'] = {\n    '-=dsnWildDie': null,\n    dsnWildDiePreset: 'none',\n  };\n\n  return updateData;\n}\n\nfunction _migrateWeaponAutoReload(\n  data: Item.CreateData,\n  updateData: UpdateData,\n) {\n  if (data.type !== 'weapon') return;\n  const hasOld = foundry.utils.hasProperty(data, 'system.autoReload');\n  if (!hasOld) return;\n  const autoReload = data.system.autoReload;\n  updateData['system.reloadType'] = autoReload\n    ? constants.RELOAD_TYPE.NONE\n    : constants.RELOAD_TYPE.FULL;\n  //remove the old property\n  updateData['system.-=autoReload'] = null;\n}\n\nfunction _ensureBatteryMaxCharges(\n  data: Item.CreateData,\n  updateData: UpdateData,\n) {\n  if (data.type !== 'consumable') return;\n  if (data.system.subtype === constants.CONSUMABLE_TYPE.BATTERY) {\n    updateData['system.charges.max'] = 100;\n  }\n}\n\nfunction _fixWorldItemGrants(data: Item.CreateData, updateData: UpdateData) {\n  if (!data.system.grants) return;\n  updateData['system.grants'] = structuredClone(data.system.grants);\n  for (const grant of updateData['system.grants'] as Array<ItemGrant>) {\n    if (grant.uuid.startsWith('Item.Item.')) {\n      const newUUID = grant.uuid.split('.');\n      newUUID.shift(); //discard the first part\n      grant.uuid = newUUID.join('.');\n    }\n  }\n}\n\nfunction _generateSWID(data: Item.CreateData, updateData: UpdateData) {\n  if (data.system.swid === constants.RESERVED_SWID.DEFAULT) {\n    updateData['system.swid'] = slugify(data.name);\n  }\n}\n\nfunction _setRangeType(data: Item.CreateData, updateData: UpdateData) {\n  if (data.type !== 'weapon' || data.system.rangeType !== null) return;\n  const hasShots = !!data.system.shots;\n  const hasRange = !!data.system.range;\n  const reload = data.system.reloadType as ReloadType;\n\n  let rangeType;\n\n  if (!hasShots && !hasRange) {\n    rangeType = constants.WEAPON_RANGE_TYPE.MELEE;\n  } else if (hasShots && hasRange) {\n    if (reload === constants.RELOAD_TYPE.SELF) {\n      rangeType = constants.WEAPON_RANGE_TYPE.MIXED;\n    } else {\n      rangeType = constants.WEAPON_RANGE_TYPE.RANGED;\n    }\n  } else {\n    rangeType = constants.WEAPON_RANGE_TYPE.MIXED;\n  }\n  updateData['system.rangeType'] = rangeType;\n}\n\ntype UpdateData = Record<string, any>;\n","import type { EditorView } from 'prosemirror-view';\n\n/** This plugin is used when dropping a TableResult onto a editor to give the user a choice between\n * creating a content link or instead grabbing the TableResult and inserting the content.\n */\nexport class ProseMirrorTableResultDropFillerPlugin extends ProseMirror.ProseMirrorPlugin {\n  static override build(schema, options = {}) {\n    const plugin = new ProseMirrorTableResultDropFillerPlugin(schema, options);\n    return new ProseMirror.Plugin({\n      props: { handleDrop: plugin._onDrop.bind(plugin) },\n    });\n  }\n\n  declare schema: any;\n\n  _onDrop(view: EditorView, event: DragEvent, _slice, moved: boolean) {\n    //Bail early if the slice has just been moved\n    if (moved) return;\n    // Get the drag data.\n    const pos = view.posAtCoords({ left: event.clientX, top: event.clientY });\n    const data = foundry.applications.ux.TextEditor.implementation.getDragEventData(event) as {\n      type: string;\n      uuid: string;\n    };\n    if (!data.type) return;\n    fromUuid(data.uuid).then((doc) => {\n      if (\n        doc instanceof TableResult &&\n        doc.type === CONST.TABLE_RESULT_TYPES.TEXT\n      ) {\n        this.#handleFill(view, doc, pos);\n      } else {\n        this.#handleCreateContentLink(view, data, pos);\n      }\n    });\n    // Return true to indicate the drop event should be consumed.\n    event.stopPropagation();\n    return true;\n  }\n\n  async #handleCreateContentLink(view: EditorView, data: any, pos: Position) {\n    const options: Record<string, unknown> = {};\n    const selection = view.state.selection;\n    if (!selection.empty) {\n      const content = selection.content().content;\n      options.label = content.textBetween(0, content.size);\n    }\n    const link = await foundry.applications.ux.TextEditor.implementation.getContentLink(data, options);\n    if (!link) return;\n    const tr = view.state.tr;\n    if (selection.empty && pos) tr.insertText(link, pos.pos);\n    else tr.replaceSelectionWith(this.schema.text(link));\n    view.dispatch(tr);\n    // Focusing immediately only seems to work in Chrome. In Firefox we must yield execution before attempting to\n    // focus, otherwise the cursor becomes invisible until the user manually unfocuses and refocuses.\n    setTimeout(view.focus.bind(view), 0);\n  }\n\n  async #handleFill(view: EditorView, result: TableResult, pos: Position) {\n    const textRaw = result.text;\n    const selection = view.state.selection;\n    if (!selection.empty) {\n      const content = selection.content().content;\n      content.textBetween(0, content.size);\n    }\n    const tr = view.state.tr;\n    const newNodes = this.#transformText(textRaw);\n    const firstNode = view.state.doc.content.child(0);\n    if (firstNode.type.name === 'paragraph' && firstNode.content.size < 1) {\n      tr.delete(0, 0);\n      tr.insert(0, newNodes);\n    } else if (selection.empty && pos) {\n      tr.insert(pos.pos, newNodes);\n    } else {\n      tr.replaceSelectionWith(newNodes);\n    }\n    view.dispatch(tr);\n    // Focusing immediately only seems to work in Chrome. In Firefox we must yield execution before attempting to\n    // focus, otherwise the cursor becomes invisible until the user manually unfocuses and refocuses.\n    setTimeout(view.focus.bind(view), 0);\n  }\n\n  #transformText(text: string) {\n    return ProseMirror.dom.parseString(text, this.schema);\n  }\n}\n\ntype Position = ReturnType<EditorView['posAtCoords']>;\n","import { ArtworkMappingFile } from '../../interfaces/ArtworkMapping.interface';\r\nimport { Logger } from '../Logger';\r\nimport { isObject } from '../util';\r\n/**\r\n * Thanks goes out to lebombjames and the starfinder system on whose code this is based\r\n */\r\n\r\n/**\r\n * Pull actor and token art from module.json files, which will replace default images on compendium actors and their\r\n * prototype tokens.\r\n *\r\n *\r\n * Examples of valid maps\r\n *\r\n *  \"some.pack-name\": {\r\n *    \"someId\": {\r\n *      \"actor\": \"some/path/to/an/image.webp\",\r\n *      \"token\": {\r\n *        \"img\": \"some/path/to/an/image.webp\",\r\n *        \"scale\": 2\r\n *      }\r\n *    },\r\n *    \"someOtherId\": {\r\n *      \"actor\": \"some/other/path/to/an/image.webp\",\r\n *      \"token\": some/other/path/to/an/image.webp\"\r\n *      }\r\n *    }\r\n *  }\r\n *\r\n */\r\nexport async function registerCompendiumArt() {\r\n  game.swade.compendiumArt.map.clear(); // Clear any existing map\r\n  const modules = [...game.modules.entries()].filter(([_key, m]) => m.active); // Get a list of active modules\r\n\r\n  for (const [id, module] of modules) {\r\n    const mappingFlag = foundry.utils.getProperty(\r\n      module,\r\n      `flags.${id}.swade-art`,\r\n    );\r\n    const moduleArt = await getArtMap(mappingFlag); // Get maps from any active modules\r\n    if (!moduleArt) continue;\r\n\r\n    for (const [packName, art] of Object.entries(moduleArt)) {\r\n      const pack = game.packs.get(packName);\r\n      if (!pack) {\r\n        Logger.warn(\r\n          `Failed pack lookup from module art registration (${id}): ${packName}`,\r\n        );\r\n        continue;\r\n      }\r\n\r\n      const index = pack.indexed ? pack.index : await pack.getIndex();\r\n      for (const [actorId, paths] of Object.entries(art)) {\r\n        const record = index.get(actorId); // Find the current actor in the index\r\n        if (!record) continue;\r\n\r\n        record.img = paths.actor; // Set the actor's art in the index, which is used by compendium windows\r\n        game.swade.compendiumArt.map.set(\r\n          `Compendium.${packName}.${actorId}`,\r\n          paths,\r\n        ); // Push the actor ID and art to the map\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param {object|string|null} art Either an art mapping object, or a file path to a JSON.\r\n * @returns {object|null} An art object, or null\r\n */\r\nasync function getArtMap(art): Promise<ArtworkMappingFile | null> {\r\n  if (!art) {\r\n    return null;\r\n  } else if (isArtMappingObject(art)) {\r\n    return art;\r\n  } else if (typeof art === 'string') {\r\n    // Instead of being in a module.json file, the art map is in a separate JSON file referenced by path\r\n    try {\r\n      const response = (await foundry.utils.fetchJsonWithTimeout(\r\n        art,\r\n      )) as ArtworkMappingFile;\r\n      if (!response) {\r\n        Logger.warn(`Failed loading art mapping file at ${art}`);\r\n        return null;\r\n      }\r\n      return isArtMappingObject(response) ? response : null;\r\n    } catch (error) {\r\n      if (error instanceof Error) {\r\n        Logger.warn(error.message);\r\n      }\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n/**\r\n *\r\n * @param {object} record An art object\r\n * @returns {boolean} Whether the object is a valid compendium art object or not\r\n */\r\nfunction isArtMappingObject(record: ArtworkMappingFile): boolean {\r\n  return (\r\n    isObject(record) && // Ensure the map is an object\r\n    Object.values(record).every(\r\n      (packToArt) =>\r\n        isObject(packToArt) && // Ensure each entry is an object with a pack name\r\n        Object.values(packToArt).every(\r\n          (art) =>\r\n            (isObject(art) && // Ensure each within the pack object is an object with an actor ID\r\n              typeof art.actor === 'string') || // Within an actor object, there must be an actor string, which is a file path\r\n            (isObject(art.token) &&\r\n              typeof art.token.img === 'string' &&\r\n              typeof art.token === 'string' && // token can be a file path, or an object containing the file path and the token scale\r\n              (art.token.scale === undefined ||\r\n                typeof art.token.scale === 'number')),\r\n        ),\r\n    )\r\n  );\r\n}\r\n","export async function setupWorld() {\r\n  await setupActionDeck();\r\n  await setupDiscardPile();\r\n}\r\n\r\nasync function setupActionDeck() {\r\n  //check the action deck\r\n  const actionDeckId = game.settings.get('swade', 'actionDeck');\r\n  const actionDeck = game.cards?.get(actionDeckId);\r\n  //return early if both the deck and the ID exist in the world\r\n  if (actionDeckId && actionDeck) return;\r\n  ui.notifications.info('SWADE.NoActionDeckFound', { localize: true });\r\n  const preset = CONFIG.Cards.presets.actionDeck;\r\n  const data = await foundry.utils.fetchJsonWithTimeout(preset.src);\r\n  const cardsCls = getDocumentClass('Cards');\r\n  const newActionDeck = await cardsCls.create(data as any);\r\n  await game.settings.set('swade', 'actionDeck', newActionDeck?.id!);\r\n  await newActionDeck?.shuffle({ chatNotification: false });\r\n}\r\n\r\nasync function setupDiscardPile() {\r\n  //check the action deck discard pile\r\n  const discardPileId = game.settings.get('swade', 'actionDeckDiscardPile');\r\n  const discardPile = game.cards?.get(discardPileId);\r\n  //return early if both the discard pile and the ID exist in the world\r\n  if (discardPileId && discardPile) return;\r\n  ui.notifications.info('SWADE.NoActionDeckDiscardPileFound', {\r\n    localize: true,\r\n  });\r\n  const cardsCls = getDocumentClass('Cards');\r\n  const newDiscardPile = await cardsCls.create({\r\n    name: 'Action Cards Discard Pile',\r\n    type: 'pile',\r\n  });\r\n  await game.settings.set(\r\n    'swade',\r\n    'actionDeckDiscardPile',\r\n    newDiscardPile?.id!,\r\n  );\r\n}\r\n","import { SWADE } from '../config';\nimport SwadeUser from '../documents/SwadeUser';\n\nexport default class PlayerBennyDisplay {\n  element: HTMLElement;\n  player: SwadeUser;\n  counter: HTMLSpanElement;\n\n  get bennies() {\n    if (this.player.isGM) {\n      return this.player.getFlag('swade', 'bennies') ?? 0;\n    } else if (this.player.character) {\n      return this.player.character.bennies;\n    } else {\n      return 'X';\n    }\n  }\n\n  constructor(element: HTMLElement) {\n    //Gather the data\n    const userId = element.dataset.userId!;\n    const player = game.users!.get(userId, { strict: true });\n    //return early if there's not actually anything to display\n    if (!player.isGM && !player.character) return;\n    this.element = element;\n    this.player = player;\n    this.#initialize();\n  }\n\n  #initialize() {\n    //Create counter\n    this.counter = document.createElement('span');\n    this.counter.classList.add('bennies-count');\n    this.counter.addEventListener(\n      'mouseleave',\n      this.updateBennyCount.bind(this),\n    );\n    this.counter.addEventListener('mouseover', this.onMouseOver.bind(this));\n\n    if (game.user?.isGM) {\n      this._initGameMaster();\n    } else {\n      this.#initPlayer();\n    }\n    //append the counter to the player list\n    this.element.append(this.counter);\n  }\n\n  /** GM interactive interface */\n  private _initGameMaster() {\n    this.counter.classList.add('bennies-gm');\n    this.counter.innerHTML = this.bennies.toString();\n    const callback = this.player.isGM ? this.onSpendBenny : this.onGiveBenny;\n    this.counter.addEventListener('click', callback.bind(this));\n    this.counter.title = this.player.isGM\n      ? game.i18n.localize('SWADE.BenniesSpend')\n      : game.i18n.localize('SWADE.BenniesGive');\n  }\n\n  /** Player view */\n  #initPlayer() {\n    this.counter.innerHTML = this.bennies.toString();\n    if (this.player.character && game.userId === this.player.id) {\n      this.counter.addEventListener('click', this.onSpendBenny.bind(this));\n      this.counter.title = game.i18n.localize('SWADE.BenniesSpend');\n    }\n  }\n\n  updateBennyCount(ev?: PointerEvent) {\n    ev?.preventDefault();\n    this.counter.innerHTML = this.bennies.toString();\n  }\n\n  onMouseOver() {\n    if (game.user?.isGM && this.player.character) {\n      this.counter.innerHTML = this.player.isGM ? '-' : '+';\n    } else if (this.player.character && game.userId === this.player.id) {\n      this.counter.innerHTML = '-';\n    }\n  }\n\n  async onGiveBenny(ev?: PointerEvent) {\n    ev?.preventDefault();\n    await this.player.getBenny();\n    this.updateBennyCount(ev);\n  }\n\n  async onSpendBenny(ev?: PointerEvent) {\n    ev?.preventDefault();\n    await this.player.spendBenny();\n    this.updateBennyCount(ev);\n  }\n\n  static async refreshAll() {\n    for (const user of game.users!.values()) {\n      await user.refreshBennies(false);\n    }\n\n    const npcWildcardsToRefresh = game.actors!.filter(\n      (a) => a.type === 'npc' && a.isWildcard,\n    );\n\n    const hardChoices = game.settings.get('swade', 'hardChoices');\n    for (const actor of npcWildcardsToRefresh) {\n      if (hardChoices) await actor.update({ 'system.bennies.value': 0 });\n      else await actor.refreshBennies(false);\n    }\n\n    if (game.settings.get('swade', 'notifyBennies')) {\n      const message = await foundry.applications.handlebars.renderTemplate(\n        SWADE.bennies.templates.refreshAll,\n        {},\n      );\n      CONFIG.ChatMessage.documentClass.create({\n        content: message,\n      });\n    }\n    ui.players?.render(true);\n  }\n}\n","import type SwadeUser from '../documents/SwadeUser';\nimport type SwadeActor from '../documents/actor/SwadeActor';\n\nexport class UserSummary {\n  element: HTMLElement;\n  player: HTMLElement;\n  user: SwadeUser;\n\n  get userIsGM(): boolean {\n    return this.user.isGM;\n  }\n\n  constructor(element: HTMLElement) {\n    //Gather the data\n    const userId = element.dataset.userId!;\n    const user = game.users!.get(userId, { strict: true });\n    //return early if there's not actually anything to display\n    if (!user.isGM && !user.character) return;\n    this.element = element;\n    this.user = user;\n    this.player = element.querySelector<HTMLElement>('.player-name')!;\n    this.#initialize();\n  }\n\n  #initialize() {\n    this.player.removeAttribute('data-tooltip');\n    this.player.addEventListener('mouseenter', this.#onMouseEnter.bind(this));\n    this.player.addEventListener('mouseleave', () => game.tooltip.deactivate());\n  }\n\n  async #onMouseEnter(event: MouseEvent) {\n    const userId = (event.target as HTMLElement).closest<HTMLLIElement>(\n      '[data-user-id]',\n    )?.dataset.userId as string;\n    const user = game.users!.get(userId, { strict: true });\n    const actor = user.character as SwadeActor;\n    let text = '';\n    if (game.user?.isGM && user.isGM) {\n      //GM hovering GM\n      text = this.#getGmText();\n    } else if (actor?.permission > CONST.DOCUMENT_OWNERSHIP_LEVELS.LIMITED) {\n      //Player hovering Player\n      text = this.#getUserText(actor);\n    } else {\n      return;\n    }\n    game.tooltip.activate(event.target as HTMLElement, {\n      html: text,\n      cssClass: 'swade-user-summary themed theme-dark',\n    });\n  }\n\n  #getFullUsername(): string {\n    const charName = this.user.character?.name;\n    const suffix = this.user.isGM ? 'GM' : charName;\n    return `${this.user.name} [${suffix}]`;\n  }\n\n  #getUserText(actor: SwadeActor): string {\n    const html = `\n    <h4 class=\"header\">{{name}}</h4>\n    <h5>{{localize \"SWADE.Hindrances\"}}</h5>\n    <ul>\n      {{#each hindrances}}\n        <li>{{name}} {{#if system.isMajor}}{{localize \"SWADE.Major\"}}{{else}}{{localize \"SWADE.Minor\"}}{{/if}}</li>\n      {{/each}}\n    </ul>`;\n    const template = Handlebars.compile(html);\n    const data = {\n      name: this.#getFullUsername(),\n      hindrances: actor.itemTypes.hindrance,\n    };\n    return template(data, {\n      allowProtoMethodsByDefault: true,\n      allowProtoPropertiesByDefault: true,\n    });\n  }\n\n  #getGmText(): string {\n    const html = `\n    <h4 class=\"noborder\">{{localize \"SWADE.NpcWildCardsOnScene\"}}</h4>\n    {{#each wildcards}}\n      {{#if tokens}}\n        <h5 class=\"header\">{{localize i18n}}</h5>\n          <ul>\n          {{#each tokens}}\n            <li>{{name}}: {{localize \"SWADE.BenniesCount\" count=actor.system.bennies.value}}</li>\n          {{/each}}\n          </ul>\n      {{/if}}\n    {{/each}}`;\n    const template = Handlebars.compile(html);\n    const data = {\n      name: this.#getFullUsername(),\n      wildcards: this.#getWildCardList(),\n    };\n    return template(data, {\n      allowProtoMethodsByDefault: true,\n      allowProtoPropertiesByDefault: true,\n    });\n  }\n\n  #getWildCardList() {\n    const wildcards: { i18n: string; tokens: TokenDocument[] }[] = [\n      { i18n: 'TOKEN.DISPOSITION.SECRET', tokens: [] },\n      { i18n: 'TOKEN.DISPOSITION.HOSTILE', tokens: [] },\n      { i18n: 'TOKEN.DISPOSITION.NEUTRAL', tokens: [] },\n      { i18n: 'TOKEN.DISPOSITION.FRIENDLY', tokens: [] },\n    ];\n    const tokens: TokenDocument[] = game.scenes?.viewed?.tokens?.contents ?? [];\n    tokens\n      .filter((t) => !t.actor.hasPlayerOwner && t.actor.isWildcard)\n      .forEach((t) => {\n        //disposition goes from -2 (secret) to 1 (friendly) so we add 2 to line it up with the array index\n        const disposition = t['disposition'] + 2;\n        wildcards[disposition].tokens.push(t);\n      });\n    return wildcards;\n  }\n}\n","import { Attribute } from '../../globals';\r\nimport { SWADE } from '../config';\r\nimport SwadeActor from '../documents/actor/SwadeActor';\r\nimport SwadeItem from '../documents/item/SwadeItem';\r\n\r\nconst attributes = new Set(Object.keys(SWADE.attributes));\r\n\r\nexport async function onHotbarDrop(\r\n  _hotbar: Hotbar,\r\n  data: DropData,\r\n  slot: number,\r\n) {\r\n  if (data.type === 'Item') return onDropItem(data, slot);\r\n  if (data.type === 'Attribute') return onDropAttribute(data, slot);\r\n}\r\n\r\nasync function onDropItem(data: DropData, slot: number) {\r\n  const item = (await fromUuid(data.uuid)) as SwadeItem;\r\n  if (!item) return;\r\n  // Create the macro command\r\n  const macro = await CONFIG.Macro.documentClass.create({\r\n    name: item.name as string,\r\n    img: item.img as string,\r\n    type: CONST.MACRO_TYPES.SCRIPT,\r\n    command: `game.swade.rollItemMacro(\"${item?.name}\");`,\r\n  });\r\n  await game.user?.assignHotbarMacro(macro!, slot);\r\n}\r\n\r\nasync function onDropAttribute(data: DropData, slot: number) {\r\n  const attribute = data.attribute as string;\r\n  // Create the macro command\r\n  const macro = await CONFIG.Macro.documentClass.create({\r\n    name: SWADE.attributes[attribute].long,\r\n    img: 'systems/swade/assets/icons/attribute.svg',\r\n    type: CONST.MACRO_TYPES.SCRIPT,\r\n    command: `game.swade.rollItemMacro(\"${attribute}\");`,\r\n  });\r\n  await game.user?.assignHotbarMacro(macro!, slot);\r\n}\r\n\r\n/**\r\n * A simple function to allow quick access to an item such as a skill or weapon. Skills are rolled while other items are posted to the chat as a chatcard\r\n * @param identifier the name of the item that should be called\r\n */\r\nexport function rollItemMacro(identifier: string) {\r\n  const speaker = ChatMessage.getSpeaker();\r\n  let actor: SwadeActor | undefined = undefined;\r\n  if (speaker.token) actor = game.actors?.tokens[speaker.token];\r\n  if (!actor && speaker.actor) actor = game.actors?.get(speaker.actor);\r\n  if (!actor?.isOwner) return null;\r\n\r\n  if (attributes.has(identifier)) {\r\n    return onRollAttribute(actor, identifier as Attribute);\r\n  }\r\n  return onRollItem(actor, identifier);\r\n}\r\n\r\nasync function onRollItem(actor: SwadeActor, identifier: string) {\r\n  const item = actor.items.getName(identifier) as SwadeItem;\r\n  if (!item) {\r\n    return ui.notifications.warn(\r\n      `Your controlled Actor does not have an item named ${identifier}`,\r\n    );\r\n  }\r\n  //Roll the skill\r\n  if (item.type === 'skill') {\r\n    return item.roll();\r\n  } else {\r\n    // Show the item\r\n    return item.show();\r\n  }\r\n}\r\n\r\nfunction onRollAttribute(actor: SwadeActor, attribute: Attribute) {\r\n  return actor.rollAttribute(attribute);\r\n}\r\n\r\ninterface DropData {\r\n  type: string;\r\n  uuid: string;\r\n  attribute?: Attribute;\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport type { Plugin } from 'prosemirror-state';\nimport { CanvasDropData } from '../../globals';\nimport CharacterSummarizer from '../CharacterSummarizer';\nimport { Logger } from '../Logger';\nimport ActionCardEditor from '../apps/ActionCardEditor';\nimport { CompendiumTOC } from '../apps/CompendiumTOC';\nimport SwadeToken from '../canvas/SwadeToken';\nimport * as chaseUtils from '../chaseUtils';\nimport * as chat from '../chat';\nimport { SWADE } from '../config';\nimport { constants } from '../constants';\nimport { BaseEffectData } from '../data/effect/base';\nimport { ModifierData } from '../data/effect/modifier';\nimport SwadeActor from '../documents/actor/SwadeActor';\nimport SwadeCards from '../documents/card/SwadeCards';\nimport SwadeChatMessage from '../documents/chat/SwadeChatMessage';\nimport SwadeCombat from '../documents/combat/SwadeCombat';\nimport * as migrations from '../migration/migration';\nimport { ProseMirrorTableResultDropFillerPlugin } from '../models/ProseMirrorTableResultDropFillerPlugin';\nimport { registerCompendiumArt } from '../setup/compendiumArt';\nimport * as setup from '../setup/setupHandler';\nimport PlayerBennyDisplay from '../style/PlayerBennyDisplay';\nimport { UserSummary } from '../style/UserSummary';\nimport { stringToHTML } from '../util';\nimport { onHotbarDrop } from './hotbarDrop';\n\n/** Hook callbacks for core hooks surrounding system setup and functionality */\nexport default class SwadeCoreHooks {\n  static onSetup() {\n    registerCompendiumArt();\n\n    // Improve discoverability of map notes\n    game.settings.settings.get('core.notesDisplayToggle').default = true;\n  }\n\n  static async onReady() {\n    //set up the compendium tables of content\n    for (const pack of game.packs) {\n      const isRightType = ['Actor', 'Item', 'JournalEntry'].includes(\n        pack.metadata.type,\n      );\n      const tocBlockList = game.settings.get('swade', 'tocBlockList');\n      const isBlocked = tocBlockList[pack.collection];\n      if (isRightType && !isBlocked) {\n        // @ts-expect-error The type check isn't properly narrowing\n        pack.apps = [new CompendiumTOC({ collection: pack })];\n      }\n    }\n\n    SWADE.diceConfig.flags = {\n      dsnShowBennyAnimation: {\n        type: Boolean,\n        default: true,\n        label: game.i18n.localize('SWADE.ShowBennyAnimation'),\n        hint: game.i18n.localize('SWADE.ShowBennyAnimationDesc'),\n      },\n      dsnWildDiePreset: {\n        type: String,\n        default: 'none',\n        label: game.i18n.localize('SWADE.WildDiePreset'),\n        hint: game.i18n.localize('SWADE.WildDiePresetDesc'),\n      },\n      dsnWildDie: {\n        type: String,\n        default: 'none',\n        label: game.i18n.localize('SWADE.WildDieTheme'),\n        hint: game.i18n.localize('SWADE.WildDieThemeDesc'),\n      },\n      dsnCustomWildDieColors: {\n        type: Object,\n        default: {\n          labelColor: '#000000',\n          diceColor: game.user?.color,\n          outlineColor: game.user?.color,\n          edgeColor: game.user?.color,\n        },\n      },\n      dsnCustomWildDieOptions: {\n        type: Object,\n        default: {\n          font: 'auto',\n          material: 'auto',\n          texture: 'none',\n        },\n      },\n    };\n\n    //setup world and do migrations\n    if (game.user?.isGM) {\n      //set up the world if needed\n      await setup.setupWorld();\n\n      // Determine whether a system migration is required and feasible\n      const currentVersion = game.settings.get(\n        'swade',\n        'systemMigrationVersion',\n      );\n      //TODO Adjust this version every time a migration needs to be triggered\n      const needsMigrationVersion = '3.2.3';\n      //Minimal compatible version needed for the migration\n      const compatibleMigrationVersion = '3.0.0';\n      //If the needed migration version is newer than the old migration version then migrate the world\n      const needsMigration = foundry.utils.isNewerVersion(\n        needsMigrationVersion,\n        currentVersion,\n      );\n      if (needsMigration) {\n        // Perform the migration\n        if (\n          currentVersion !== '0.0.0' &&\n          !foundry.utils.isNewerVersion(\n            currentVersion,\n            compatibleMigrationVersion,\n          )\n        ) {\n          Logger.warn('SWADE.SysMigrationWarning', {\n            toast: true,\n            permanent: true,\n            localize: true,\n          });\n        }\n        await migrations.migrateWorld();\n      }\n    }\n\n    // set the system as ready\n    game.swade.ready = true;\n\n    /**\n     * @category Hooks\n     * This hook is called once swade is done setting up itself\n     */\n    Hooks.callAll('swadeReady');\n  }\n\n  static onI18nInit() {\n    //localize the ranks\n    SWADE.ranks = SWADE.ranks.map((rank) => game.i18n.localize(rank));\n\n    //localize the scales\n    SWADE.scales = SWADE.scales.map((scale) => game.i18n.localize(scale));\n\n    //localize the prototype modifiers\n    for (const group of SWADE.prototypeRollGroups) {\n      group.name = game.i18n.localize(group.name);\n      for (const modifier of group.modifiers) {\n        modifier.label = game.i18n.localize(modifier.label);\n      }\n    }\n\n    //set the localized parry skill\n    [CONFIG.statusEffects, SWADE.statusEffects].forEach((arr) => {\n      const proneParryModifier = arr\n        .find((e) => e.id === 'prone')\n        ?.changes?.find((c) => c.key?.startsWith('@Skill'));\n      if (proneParryModifier) {\n        proneParryModifier.key = `@Skill{${game.settings.get(\n          'swade',\n          'parryBaseSkill',\n        )}}[system.die.modifier]`;\n      }\n    });\n\n    //localize the Attributes\n    for (const attribute in SWADE.attributes) {\n      const { long, short } = SWADE.attributes[attribute];\n      SWADE.attributes[attribute] = {\n        long: game.i18n.localize(long),\n        short: game.i18n.localize(short),\n      };\n    }\n  }\n\n  static onRenderActorDirectory(\n    app: ActorDirectory,\n    html: HTMLElement,\n    _data: any,\n  ) {\n    // Mark all Wildcards in the Actors sidebars with an icon\n    const entries = html.querySelectorAll<HTMLLIElement>(\n      '.directory-item.entry.actor',\n    );\n    const wildcards = app.collection.filter(\n      (a) => a.isWildcard && a.type === 'character',\n    );\n\n    //if the player is not a GM, then don't mark the NPC wildcards\n    if (!game.settings.get('swade', 'hideNPCWildcards') || game.user?.isGM) {\n      const npcWildcards = app.collection.filter(\n        (a) => a.isWildcard && a.type === 'npc',\n      );\n      wildcards.push(...npcWildcards);\n    }\n\n    entries.forEach((element) => {\n      const actorID = element.dataset.entryId;\n      if (!actorID) return;\n      const isWildcard = !!wildcards.find((a) => a.id === actorID);\n      if (!isWildcard) return;\n      const thumbnail = element.querySelector<HTMLImageElement>('.thumbnail');\n      thumbnail?.insertAdjacentHTML('afterend', '<img class=\"wildcard-icon\">');\n    });\n  }\n\n  static onRenderSettings(app: Settings, html: HTMLElement) {\n    //get system info\n    const systemInfo = html.querySelector('.info div.system');\n\n    //create system links\n    const systemLinks = document.createElement('div');\n    systemLinks.classList.add('system-links');\n    const links: Array<{ label: string; url?: string; click?: EventListener }> =\n      [\n        {\n          label: game.i18n.localize('SWADE.SystemLinks.ReportAnIssue'),\n          url: 'https://gitlab.com/peginc/swade/-/issues/new',\n        },\n        {\n          label: game.i18n.localize('SWADE.SystemLinks.Changelog'),\n          url: game.system.changelog as string,\n        },\n        {\n          label: game.i18n.localize('SWADE.SystemLinks.Wiki'),\n          click: (_ev) => game.packs.get('swade.system-docs')?.render(true),\n        },\n      ];\n\n    //insert links links\n    links.forEach((link) => {\n      const anchor = document.createElement('a');\n      anchor.innerText = link.label;\n      if (link.url) {\n        anchor.href = link.url;\n      }\n      if (link.click) {\n        anchor.addEventListener('click', link.click);\n      }\n\n      systemLinks.append(anchor);\n    });\n\n    systemInfo!.after(systemLinks);\n  }\n\n  static async onGetActorContextOptions(\n    app: foundry.applications.api.ApplicationV2,\n    options: ContextMenu.Entry[],\n  ) {\n    const newOptions: ContextMenu.Entry[] = [];\n\n    // Don't want to add to context menu for compendium entries\n    if (app instanceof foundry.applications.sidebar.apps.Compendium) return;\n\n    // Invoke character summarizer on selected character\n    newOptions.push({\n      name: 'SWADE.ShowCharacterSummary',\n      icon: '<i class=\"fa-solid fa-users\"></i>',\n      callback: (li) => {\n        const actor = game.actors!.get(li.dataset.entryId, { strict: true });\n        CharacterSummarizer.summarizeCharacters([actor]);\n      },\n      condition: (li) => {\n        const actor = game.actors!.get(li.dataset.entryId, { strict: true });\n        return (\n          actor.permission > CONST.DOCUMENT_OWNERSHIP_LEVELS.LIMITED &&\n          CharacterSummarizer.isSupportedActorType(actor)\n        );\n      },\n    });\n    options.splice(0, 0, ...newOptions);\n  }\n\n  static onRenderCompendiumDirectory(\n    app: CompendiumDirectory,\n    html: HTMLElement,\n    _data: any,\n    _options: any,\n  ) {\n    const tocBlockList = game.settings.get('swade', 'tocBlockList');\n    for (const li of html.querySelectorAll('li.directory-item')) {\n      const pack = li.dataset.pack as string;\n      const statusIcons = li.querySelector<HTMLDivElement>('.status-icons')!;\n      if (tocBlockList[pack]) {\n        const template = document.createElement('template');\n        template.innerHTML = '<i class=\"fa-solid fa-align-slash\"></i>';\n        statusIcons.prepend(template.content.firstChild!);\n      }\n    }\n  }\n\n  static async onRenderCompendium(\n    app: CompendiumCollection<CompendiumCollection.Metadata>,\n    html: HTMLElement,\n    _data: any,\n    _options: any,\n  ) {\n    //don't mark if the user is not a GM\n    if (game.settings.get('swade', 'hideNPCWildcards') && !game.user?.isGM)\n      return;\n    //Mark Wildcards in the compendium\n    if (app.documentName === 'Actor') {\n      //@ts-expect-error collection is now a CompendiumCollection\n      const content = await app.collection.getIndex('system.wildcard');\n      const ids: string[] = content\n        .filter(\n          (a: SwadeActor) =>\n            (a.type === 'character' ||\n              foundry.utils.getProperty(a, 'system.wildcard')) &&\n            a.name !== '#[CF_tempEntity]',\n        )\n        .map((actor) => actor._id);\n\n      const found = html.querySelectorAll('.directory-item');\n      found.forEach((el) => {\n        const id = el.dataset.entryId!;\n        if (ids.includes(id)) {\n          const name = el.children[1];\n          name.insertAdjacentHTML('afterbegin', '<img class=\"wildcard-icon\">');\n        }\n      });\n    }\n  }\n\n  static onGetCardsContextOptions(\n    app: foundry.applications.api.ApplicationV2,\n    options: ContextMenu.Entry[],\n  ) {\n    // Don't want to add to context menu for compendium entries\n    if (app instanceof foundry.applications.sidebar.apps.Compendium) return;\n\n    const actionCardEditor: ContextMenu.Entry = {\n      name: 'SWADE.OpenACEditor',\n      icon: '<i class=\"fa-solid fa-edit\"></i>',\n      condition: (li) => {\n        const deck = game.cards!.get(li.dataset.entryId, { strict: true });\n        return (\n          deck.type === 'deck' &&\n          deck.isOwner &&\n          deck.cards.contents.every((c) => c.type === 'poker')\n        );\n      },\n      callback: async (li) => {\n        const deck = game.cards!.get(li.dataset.entryId, { strict: true });\n        new ActionCardEditor({ cards: deck }).render({ force: true });\n      },\n    };\n    const chaseLayout: ContextMenu.Entry = {\n      name: 'SWADE.LayOutChaseWithDeck',\n      icon: '<i class=\"fa-solid fa-shipping-fast\"></i>',\n      condition: (li) => {\n        //return early if there's no canvas or scene to lay out cards\n        if (!canvas || !canvas.ready || !canvas.scene) return false;\n        const cardsID = li.dataset.entryId;\n        const deck = game.cards!.get(cardsID, { strict: true });\n        const isActionDeck =\n          game.settings.get('swade', 'actionDeck') === cardsID;\n        return (\n          deck.type === 'deck' &&\n          !isActionDeck &&\n          deck.cards.contents.every((c) => c.type === 'poker')\n        );\n      },\n      callback: (li) => {\n        const deck = game.cards!.get(li.dataset.entryId, { strict: true });\n        chaseUtils.layoutChase(deck);\n      },\n    };\n    const setActionDeck: ContextMenu.Entry = {\n      name: 'SWADE.SetActionDeck',\n      icon: '<i class=\"fas fa-swords\"></i>',\n      condition: (li) => {\n        const cardsID = li.dataset.entryId;\n        const deck = game.cards!.get(cardsID, { strict: true });\n        const isActionDeck =\n          game.settings.get('swade', 'actionDeck') === cardsID;\n        return (\n          deck.type === 'deck' &&\n          !isActionDeck &&\n          deck.cards.contents.every((c) => c.type === 'poker')\n        );\n      },\n      callback: async (li) => {\n        const deckId = li.dataset.entryId;\n        game.settings.set('swade', 'actionDeck', deckId);\n      },\n    };\n\n    options.push(actionCardEditor, chaseLayout, setActionDeck);\n  }\n\n  static onGetCompendiumContextOptions(\n    app: foundry.applications.api.ApplicationV2,\n    options: ContextMenu.Entry[],\n  ) {\n    options.push(\n      {\n        name: 'SWADE.CompendiumTOC.Toggle',\n        icon: '<i class=\"fa-solid fa-book\"></i>',\n        condition: (li) => {\n          const pack = game.packs.get(li.dataset.pack, { strict: true });\n          const rightType = CompendiumTOC.ALLOWED_TYPES.includes(\n            pack.metadata.type,\n          );\n          return !!game.user?.isGM && rightType;\n        },\n        callback: async (li) => {\n          const confirmation = await foundry.applications.api.DialogV2.confirm({\n            window: {\n              title: game.i18n.localize('SWADE.CompendiumTOC.Dialog.Title'),\n            },\n            content: `<p>${game.i18n.localize(\n              'SWADE.CompendiumTOC.Dialog.Content',\n            )}</p>`,\n            defaultYes: false,\n          });\n          if (!confirmation) return;\n          const tocBlockList = game.settings.get('swade', 'tocBlockList');\n          const packId = li.dataset.pack as string;\n          const isCurrentlyBlocked = tocBlockList[packId] ?? false;\n          Logger.debug(`Toggling ${packId} to ${!isCurrentlyBlocked}`);\n          //set the new value\n          tocBlockList[packId] = !isCurrentlyBlocked;\n          await game.settings.set('swade', 'tocBlockList', tocBlockList);\n          //reload all clients to load the new settings.\n          if (game.user?.isGM) game.socket?.emit('reload');\n          foundry.utils.debouncedReload();\n        },\n      },\n      {\n        name: 'SWADE.MigrateCompendium',\n        icon: '<i class=\"fa-solid fa-right-left\"></i>',\n        condition: (li) => {\n          const pack = game.packs.get(li.dataset.pack, { strict: true });\n          const isRightPackType = ['Actor', 'Item', 'Scene'].includes(\n            pack.metadata.type,\n          );\n          return !!game.user?.isGM && isRightPackType;\n        },\n        callback: async (li) =>\n          await migrations.migrateCompendium(\n            game.packs.get(li.dataset.pack, { strict: true }),\n          ),\n      },\n    );\n  }\n\n  /** Add roll data to the message for formatting of dice pools*/\n  static onRenderChatMessageHTML(\n    msg: SwadeChatMessage,\n    html: HTMLElement,\n    _data: Parameters<Hooks.StaticCallbacks['renderChatMessage']>[2],\n  ) {\n    const makeTableResultsDraggable = () => {\n      const results = html.querySelectorAll<HTMLElement>(\n        '.table-draw .table-result',\n      );\n      if (!results.length) return;\n      results.forEach((e) => {\n        e.draggable = true;\n        e.addEventListener('dragstart', (ev) => {\n          const dragData = game.tables\n            ?.get(msg.getFlag('core', 'RollTable') ?? '')\n            ?.results.get(e.dataset.resultId as string)\n            .toDragData();\n          if (!dragData) return;\n          ev.dataTransfer?.setData('text/plain', JSON.stringify(dragData));\n        });\n      });\n    };\n\n    if (msg.getFlag('core', 'RollTable') && msg.rolls) {\n      makeTableResultsDraggable();\n    }\n  }\n\n  static async onUpdateCombat(\n    _document: SwadeCombat,\n    _change: any,\n    _options: any,\n    _userId: string,\n  ) {\n    ui.combat.scrollToTurn();\n  }\n\n  /** Change current GM Bennies count */\n  static async onUserConnected(user: User.Implementation, connected: boolean) {\n    const gm = game.users.activeGM;\n    const hasStaticBennies = game.settings.get('swade', 'staticGmBennies');\n    if (user.isGM || hasStaticBennies || !gm?.isSelf) return false;\n    const newBennies = connected ? gm.bennies + 1 : gm.bennies - 1;\n    await gm.setFlag('swade', 'bennies', newBennies);\n    ui.players?.render({ force: true });\n  }\n\n  /** Add benny management to the player list */\n  static async onRenderPlayers(\n    _list: PlayerList,\n    html: HTMLElement,\n    _options: any,\n  ) {\n    const users = html.querySelectorAll<HTMLLIElement>('.player');\n    //add the Benny Display;\n    users.forEach((el) => new PlayerBennyDisplay(el));\n    users.forEach((el) => new UserSummary(el));\n  }\n\n  static onRenderUserConfig(\n    app: UserConfig,\n    html: HTMLElement,\n    data: Record<string, unknown>,\n  ) {\n    // resize the element so it'll fit the new stuff\n    html.style.height = 'auto';\n\n    //get possible\n    const possibleCardsDocs = game.cards!.filter(\n      (c) =>\n        c.type === 'hand' &&\n        c.permission === CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER,\n    );\n\n    const form = html.querySelector<HTMLDivElement>('.standard-form');\n    const footer = html.querySelector<HTMLDivElement>('.form-footer');\n    if (!form || !footer) return;\n\n    //return early to avoid double rendering\n    if (html.querySelector('div.swade-favorite-cards')) return;\n\n    const userConfigLabel = game.i18n.localize(\n      'SWADE.Keybindings.OpenFavoriteCards.UserConfigLabel',\n    );\n    const options = possibleCardsDocs.map((c) => {\n      const favoriteCards = game.user?.getFlag('swade', 'favoriteCardsDoc');\n      const sel = c.id === favoriteCards ? 'selected' : '';\n      return `<option value=\"${c.id}\" ${sel}>${c.name}</option>`;\n    });\n\n    const template = `\n    <fieldset>\n      <legend>${userConfigLabel}</legend>\n      <div class=\"form-group stacked swade-favorite-cards\">\n        <select name=\"flags.swade.favoriteCardsDoc\">\n        <option value=\"\">${game.i18n.localize('SWADE.Keybindings.OpenFavoriteCards.HandNone')}</option>\n        ${options.join('\\n')}\n        </select>\n      </div>\n    </fieldset>\n    `;\n\n    form.insertBefore(stringToHTML<HTMLFieldSetElement>(template), footer);\n  }\n\n  static onHotbarDrop(\n    _hotbar: Hotbar,\n    data: { type: string; uuid: string },\n    slot: number,\n  ) {\n    if (data.type === 'Item' || data.type === 'Attribute') {\n      onHotbarDrop(_hotbar, data, slot);\n      return false;\n    }\n  }\n\n  static onGetUserContextOptions(\n    app: foundry.applications.api.ApplicationV2,\n    context: ContextMenu.Entry[],\n  ) {\n    const players = app.element;\n    if (!players) return;\n    context.push(\n      {\n        name: game.i18n.localize('SWADE.BenniesGive'),\n        icon: '<i class=\"fa-solid fa-plus\"></i>',\n        condition: (li) =>\n          game.user!.isGM && game.users?.get(li.dataset.userId!)!.isGM!,\n        callback: async (li) => {\n          const selectedUser = game.users?.get(li.dataset.userId!)!;\n          await selectedUser.setFlag(\n            'swade',\n            'bennies',\n            (selectedUser.getFlag('swade', 'bennies') ?? 0) + 1,\n          );\n          ui.players?.render({ force: true });\n          if (game.settings.get('swade', 'notifyBennies')) {\n            //In case one GM gives another GM a benny a different message should be displayed\n            const givenEvent = selectedUser !== game.user;\n            chat.createGmBennyAddMessage(selectedUser, givenEvent);\n          }\n        },\n      },\n      {\n        name: game.i18n.localize('SWADE.BenniesRefresh'),\n        icon: '<i class=\"fa-solid fa-sync\"></i>',\n        condition: () => game.user!.isGM,\n        callback: (li) => game.users?.get(li.dataset.userId!)?.refreshBennies(),\n      },\n      {\n        name: game.i18n.localize('SWADE.AllBenniesRefresh'),\n        icon: '<i class=\"fa-solid fa-sync\"></i>',\n        condition: () => game.user!.isGM,\n        callback: () => PlayerBennyDisplay.refreshAll(),\n      },\n      {\n        name: game.i18n.localize('SWADE.BenniesAdjustGM'),\n        icon: '<i class=\"fa-solid fa-coins\"></i>',\n        condition: (li) =>\n          game.user!.isGM && game.users?.get(li.dataset.userId!)!.isGM!,\n        callback: async (li) => {\n          const gm = game.users?.get(li.dataset.userId!);\n          const hasStaticBennies = game.settings.get(\n            'swade',\n            'staticGmBennies',\n          );\n          const gmBennies = hasStaticBennies\n            ? game.settings.get('swade', 'gmBennies')\n            : game.users.filter((u) => u.active && !u.isGM).length;\n          await foundry.applications.api.DialogV2.wait({\n            window: { title: game.i18n.localize('SWADE.BenniesAdjustGM') },\n            position: {\n              left: ui.players.element.offsetLeft,\n              top: ui.players.element.offsetTop - 183,\n            },\n            content: `\n                <p>${game.i18n.localize('SWADE.BenniesAdjustGMText')}</p>\n                <label\n                  style=\"display: block; width: max-content;\"\n                  for\"gm-bennies\">\n                  ${game.i18n.localize('SWADE.Bennies')}:\n                  <input\n                    id=\"gm-bennies\"\n                    type=\"number\"\n                    min=\"0\"\n                    style=\"width: 5ch; height: .75lh; text-align: center;\"\n                    name=\"gm-bennies\"\n                    value=\"${gmBennies}\"\n                    autofocus\n                  >\n                </label>\n            `,\n            buttons: [\n              {\n                action: 'cancel',\n                label: game.i18n.localize('SWADE.Cancel'),\n              },\n              {\n                action: 'submit',\n                label: game.i18n.localize('SWADE.ButtonSubmit'),\n                default: true,\n                callback: async (_event, button, _dialog) =>\n                  await gm?.setFlag(\n                    'swade',\n                    'bennies',\n                    Number(button.form!.elements['gm-bennies'].value),\n                  ),\n              },\n            ],\n          });\n        },\n      },\n    );\n  }\n\n  // TODO: Properly type this\n  static onGetSceneControlButtons(\n    sceneControlButtons: Record<string, SceneControls.Control>,\n  ) {\n    //get the measured template tools\n    const measure = sceneControlButtons.templates;\n    //add buttons\n    const numTools = Object.keys(measure.tools).length;\n    const newTemplateButtons = SWADE.measuredTemplatePresets.map((t, i) => ({\n      ...t.button,\n      order: numTools + i,\n    }));\n    measure.tools.clear.order = numTools + newTemplateButtons.length;\n    foundry.utils.mergeObject(\n      measure.tools,\n      newTemplateButtons.reduce((acc, t) => ({ ...acc, [t.name]: t }), {}),\n    );\n  }\n\n  static async onRenderCombatantConfig(\n    app: CombatantConfig,\n    html: HTMLFormElement,\n    options: any,\n  ) {\n    // resize the element so it'll fit the new stuff\n    html.style.height = 'auto';\n\n    //remove the old initiative input\n    html\n      .querySelector('input[name=\"initiative\"]')\n      ?.closest('div.form-group')\n      ?.remove();\n\n    //grab cards and sort them\n    const deck: SwadeCards = game.cards.get(\n      game.settings.get('swade', 'actionDeck'),\n      {\n        strict: true,\n      },\n    );\n\n    const cards = Array.from(deck.cards.values() as Card[]).sort((a, b) => {\n      const cardA = a.value!;\n      const cardB = b.value!;\n      const card = cardA - cardB;\n      if (card !== 0) return card;\n      const suitA = a.system['suit'] as number;\n      const suitB = b.system['suit'] as number;\n      const suit = suitA - suitB;\n      return suit;\n    });\n\n    //prep list of cards for selection\n\n    const cardList = new Array<any>();\n    for (const card of cards) {\n      const cardValue = card.value!;\n      const suitValue = card.system['suit'];\n      const color =\n        suitValue === 2 || suitValue === 3 ? 'color: red;' : 'color: black;';\n      const isDealt =\n        options.document.cardValue === cardValue &&\n        options.document.suitValue === suitValue;\n\n      const isAvailable = card?.drawn ? 'text-decoration: line-through;' : '';\n\n      cardList.push({\n        id: card.id,\n        isDealt,\n        color,\n        isAvailable,\n        name: card.name,\n        cardString: card.description,\n        isJoker: card.system['isJoker'],\n      });\n    }\n    const numberOfJokers = cards.filter(\n      (card) => card.system['isJoker'],\n    ).length;\n\n    //render and inject new HTML\n    const path = 'systems/swade/templates/combatant-config-cardlist.hbs';\n    const elementTemplate = document.createElement('template');\n    elementTemplate.innerHTML =\n      await foundry.applications.handlebars.renderTemplate(path, {\n        cardList,\n        numberOfJokers,\n      });\n    html.querySelector('footer')?.before(...elementTemplate.content.children);\n\n    //Attach click event to button which will call the combatant update as we can't easily modify the submit function of the FormApplication\n    html\n      .querySelector('footer button')\n      ?.addEventListener('click', async (ev: PointerEvent) => {\n        const selectedCard = (ev.currentTarget as HTMLButtonElement)\n          .closest('.combatant-config')\n          ?.querySelector<HTMLInputElement>('input[name=action-card]:checked');\n        if (!selectedCard) return;\n        const cardId = selectedCard.dataset.cardId as string;\n        await app.document.assignNewActionCard(cardId);\n      });\n  }\n\n  static onRenderActiveEffectConfig(\n    app: foundry.applications.sheets.ActiveEffectConfig,\n    html: HTMLElement,\n  ) {\n    const effect = app.document;\n    if (effect.system instanceof BaseEffectData) {\n      const systemSchema = effect.system.schema;\n\n      const conditionalGroup =\n        systemSchema.fields.conditionalEffect.toFormGroup(\n          { localize: true },\n          { value: effect.system.conditionalEffect, disabled: !app.isEditable },\n        );\n\n      const expirationOptions: foundry.applications.fields.FormSelectOption[] =\n        [\n          {\n            label: 'SWADE.Expiration.BeginAuto',\n            value: String(constants.STATUS_EFFECT_EXPIRATION.StartOfTurnAuto),\n          },\n          {\n            label: 'SWADE.Expiration.BeginPrompt',\n            value: String(constants.STATUS_EFFECT_EXPIRATION.StartOfTurnPrompt),\n          },\n          {\n            label: 'SWADE.Expiration.EndAuto',\n            value: String(constants.STATUS_EFFECT_EXPIRATION.EndOfTurnAuto),\n          },\n          {\n            label: 'SWADE.Expiration.EndPrompt',\n            value: String(constants.STATUS_EFFECT_EXPIRATION.EndOfTurnPrompt),\n          },\n        ];\n      const expirationGroup = systemSchema.fields.expiration.toFormGroup(\n        { localize: true },\n        {\n          options: expirationOptions,\n          localize: true,\n          value: effect.system.expiration,\n          blank: 'SWADE.Expiration.None',\n          disabled: !app.isEditable,\n          dataset: { dtype: 'Number' }, // necessary in v12, can be removed in v13\n        },\n      );\n      const loseTurnOnHoldGroup =\n        systemSchema.fields.loseTurnOnHold.toFormGroup(\n          { localize: true },\n          { value: effect.system.loseTurnOnHold, disabled: !app.isEditable },\n        );\n\n      const noneActive = !html.querySelector('section.active');\n\n      const tab = `\n        <a ${noneActive ? 'class=\"active\"' : ''}data-action=\"tab\" data-group=\"sheet\" data-tab=\"expiration\">\n          <i class=\"fa-solid fa-step-forward\"></i> ${game.i18n.localize(\n            'SWADE.Expiration.TabLabel',\n          )}\n        </a>\n      `;\n      const durationSection = `\n        <section class=\"tab${noneActive ? ' active' : ''}\" data-group=\"sheet\" data-tab=\"expiration\" data-application-part=\"expiration\">\n          ${game.i18n.localize('SWADE.Expiration.Description')}\n          ${expirationGroup.outerHTML}\n          ${loseTurnOnHoldGroup.outerHTML}\n        </section>\n      `;\n\n      html\n        .querySelector('section[data-tab=\"details\"] .form-group.stacked')\n        ?.insertAdjacentElement('afterend', conditionalGroup);\n      html\n        .querySelector('nav.sheet-tabs a[data-tab=\"duration\"]')\n        ?.insertAdjacentHTML('afterend', tab);\n      if (!html.querySelector('section.tab[data-tab=\"expiration\"]')) {\n        html\n          .querySelector('section[data-tab=\"duration\"]')\n          ?.insertAdjacentHTML('afterend', durationSection);\n      }\n    } else if (effect.system instanceof ModifierData) {\n      const costGroup = effect.system.schema.fields.cost.toFormGroup(\n        { localize: true },\n        { value: effect.system.cost },\n      );\n      const limitGroup = effect.system.schema.fields.limit.toFormGroup(\n        { localize: true },\n        { value: effect.system.limit },\n      );\n      const levelGroup = effect.system.schema.fields.level.toFormGroup(\n        { localize: true },\n        { value: effect.system.level },\n      );\n      const descriptionGroup = html.querySelector(\n        'section[data-tab=\"details\"] .form-group.stacked',\n      );\n      // insert in reverse order because afterend usage\n      descriptionGroup?.insertAdjacentElement('afterend', levelGroup);\n      descriptionGroup?.insertAdjacentElement('afterend', limitGroup);\n      descriptionGroup?.insertAdjacentElement('afterend', costGroup);\n      app.setPosition();\n    }\n  }\n\n  static onHotReload({\n    packageType,\n    packageId,\n    content,\n    path,\n    extension,\n  }: HotReloadData) {\n    //return the hook early if it's not a swade system change;\n    if (packageType !== 'system' && packageId !== 'swade') return;\n    //stop the hook on empty changes\n    if (!content) return false;\n    if (extension === 'js') location.reload();\n  }\n\n  static onCreateProseMirrorEditor(\n    uuid: string,\n    plugins: Record<string, Plugin>,\n    _options: unknown,\n  ) {\n    const [prefix] = uuid.split('#');\n    const doc = fromUuidSync(prefix, { strict: false });\n    if (doc instanceof JournalEntryPage && doc.type === 'headquarters') {\n      // Delete the default content link plugin.\n      delete plugins.contentLinks;\n      plugins.headquarterFiller = ProseMirrorTableResultDropFillerPlugin.build(\n        ProseMirror.defaultSchema,\n      );\n    }\n  }\n\n  static async onTargetToken(user: User, token: Token, targeted: boolean) {\n    if (!targeted) return;\n    token.ring?.flashColor(user.color, {\n      duration: 1000,\n      easing: (pt: number) => {\n        return (Math.sin(2 * Math.PI * pt - Math.PI / 2) + 1) / 2;\n      },\n    });\n  }\n\n  static async onDropCanvasData(canvas: Canvas, data: CanvasDropData) {\n    const { uuid, x, y, type } = data;\n    if (type !== 'ActiveEffect' || !canvas.tokens?.active) return;\n    //grab the tokens at the drop position\n    const tokensAtDropPosition = [...canvas.tokens.placeables]\n      .sort((a, b) => b.document.sort - a.document.sort)\n      .sort((a, b) => b.document.elevation - a.document.elevation)\n      .filter((t) => t.localShape.contains(x, y));\n    const targets = new Set<SwadeToken>(tokensAtDropPosition);\n    if (!targets?.size) return;\n    const controlled = new Set<SwadeToken>(canvas.tokens?.controlled);\n    if (controlled.size && targets.isSubset(controlled)) {\n      //add the controlled to the target if the set of targeted tokens is a subset of the controlled tokens\n      controlled.forEach((t) => targets.add(t));\n    }\n    const effect = await fromUuid(uuid);\n    if (!effect) return;\n    const effectData = foundry.utils.mergeObject(effect.toObject(), {\n      system: { favorite: true },\n      origin: effect.parent.uuid,\n    });\n    await Promise.allSettled(\n      targets.map((token) =>\n        token.actor.createEmbeddedDocuments('ActiveEffect', [effectData]),\n      ),\n    );\n  }\n}\n","import { SWADE } from '../config';\n\n/* eslint-disable @typescript-eslint/naming-convention */\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\n/**\n * This class defines a submenu for the system settings which will handle the DSN Settings\n */\nexport default class DiceSettings extends HandlebarsApplicationMixin(\n  ApplicationV2,\n) {\n  config = SWADE.diceConfig;\n  customWildDieDefaultColors = this.config.flags.dsnCustomWildDieColors.default;\n\n  static override DEFAULT_OPTIONS = {\n    id: 'diceConfig',\n    window: {\n      title: 'SWADE.DiceConf',\n      resizable: false,\n      contentClasses: ['standard-form'],\n    },\n    position: {\n      width: 500,\n      height: 'auto' as const,\n    },\n    classes: ['swade', 'setting-config', 'dice-so-nice', 'swade-application'],\n    tag: 'form',\n    form: {\n      handler: DiceSettings.onSubmit,\n      closeOnSubmit: false,\n      submitOnClose: true,\n      submitOnChange: true,\n    },\n    actions: {\n      reset: DiceSettings.#resetSettings,\n    },\n  };\n\n  static override PARTS = {\n    form: { template: 'systems/swade/templates/apps/dice-config.hbs' },\n    footer: { template: 'templates/generic/form-footer.hbs' },\n  };\n\n  override async _prepareContext(options) {\n    const settings: Record<string, any> = {};\n    for (const flag in this.config.flags) {\n      const defaultValue = this.config.flags[flag].default;\n      const value = game.user?.getFlag('swade', flag);\n      settings[flag] = {\n        module: 'swade',\n        key: flag,\n        value: typeof value === 'undefined' ? defaultValue : value,\n        name: this.config.flags[flag].label || '',\n        hint: this.config.flags[flag].hint || '',\n        type: this.config.flags[flag].type,\n        isCheckbox: this.config.flags[flag].type === Boolean,\n        isObject: this.config.flags[flag].type === Object,\n      };\n      if (flag === 'dsnWildDiePreset') {\n        settings[flag].isSelect = true;\n        settings[flag].choices = this._prepareSystemList();\n      }\n      if (flag === 'dsnWildDie') {\n        settings[flag].isSelect = true;\n        settings[flag].choices = this._prepareColorsetList();\n        settings[flag].disabled =\n          game.user?.getFlag('swade', 'dsnWildDiePreset') === 'none';\n      }\n    }\n\n    const context = foundry.utils.mergeObject(\n      await super._prepareContext(options),\n      {\n        settings,\n        hasCustomWildDie: settings['dsnWildDie'].value !== 'customWildDie',\n        noWildDie: game.user?.getFlag('swade', 'dsnWildDiePreset') === 'none',\n        textureList: game.dice3d?.exports.Utils.prepareTextureList(),\n        fontList: game.dice3d?.exports.Utils.prepareFontList(),\n        materialList: this._prepareMaterialList(),\n        buttons: [\n          { type: 'submit', icon: 'fa-solid fa-save', label: 'SETTINGS.Save' },\n          {\n            type: 'reset',\n            action: 'reset',\n            icon: 'fa-solid fa-undo',\n            cssClass: 'submit',\n            label: 'SETTINGS.Reset',\n          },\n        ],\n      },\n    );\n\n    return context;\n  }\n\n  static async onSubmit(\n    this: DiceSettings,\n    event: SubmitEvent,\n    _form: HTMLFormElement,\n    formData: FormDataExtended,\n  ) {\n    const expandedFormData = foundry.utils.expandObject(formData.object) as any;\n    const { diceColor, edgeColor, labelColor, outlineColor } =\n      this.customWildDieDefaultColors;\n\n    // Handle basic settings\n    for (const [key, value] of Object.entries(expandedFormData.swade)) {\n      await game.user?.setFlag('swade', key, value);\n    }\n\n    // Handle custom Wild Die\n    if (expandedFormData.swade.dsnWildDie === 'customWildDie') {\n      await game.user?.setFlag('swade', 'dsnCustomWildDieColors', {\n        diceColor: expandedFormData.diceColor || diceColor,\n        edgeColor: expandedFormData.edgeColor || edgeColor,\n        labelColor: expandedFormData.labelColor || labelColor,\n        outlineColor: expandedFormData.outlineColor || outlineColor,\n      });\n    }\n\n    this.render({ force: true });\n    if (event.submitter) {\n      this.close();\n      location.reload();\n    }\n  }\n\n  static async #resetSettings(\n    this: DiceSettings,\n    _event: PointerEvent,\n    _target: HTMLElement,\n  ) {\n    for (const flag in this.config.flags) {\n      const resetValue = this.config.flags[flag].default;\n      if (game.user?.getFlag('swade', flag) !== resetValue) {\n        await game.user?.setFlag('swade', flag, resetValue);\n      }\n    }\n    this.render({ force: true });\n  }\n\n  private _prepareSystemList() {\n    const systems = game.dice3d!.exports.Utils.prepareSystemList();\n    systems.none = game.i18n.localize('SWADE.DSNNone');\n    return systems;\n  }\n\n  private _prepareColorsetList() {\n    return game.dice3d!.exports.Utils.prepareColorsetList();\n  }\n\n  private _prepareMaterialList() {\n    return {\n      auto: 'DICESONICE.MaterialAuto',\n      plastic: 'DICESONICE.MaterialPlastic',\n      metal: 'DICESONICE.MaterialMetal',\n      glass: 'DICESONICE.MaterialGlass',\n      wood: 'DICESONICE.MaterialWood',\n      chrome: 'DICESONICE.MaterialChrome',\n    };\n  }\n}\n","import {\r\n  DsnCustomWildDieColors,\r\n  DsnCustomWildDieOptions,\r\n} from '../../interfaces/DiceIntegration interface';\r\nimport { Dice3D } from '../../types/DiceSoNice';\r\nimport DiceSettings from '../apps/DiceSettings';\r\nimport { PACKAGE_ID, SWADE } from '../config';\r\nimport SwadeUser from '../documents/SwadeUser';\r\n\r\n/** Hook callbacks for third-party integrations */\r\nexport default class SwadeIntegrationHooks {\r\n  static onDiceSoNiceInit(_dice3d: Dice3D) {\r\n    game.settings.registerMenu('swade', 'dice-config', {\r\n      name: game.i18n.localize('SWADE.DiceConf'),\r\n      label: game.i18n.localize('SWADE.DiceConfLabel'),\r\n      hint: game.i18n.localize('SWADE.DiceConfDesc'),\r\n      icon: 'fas fa-dice',\r\n      type: DiceSettings,\r\n      restricted: false,\r\n    });\r\n  }\r\n\r\n  static onDiceSoNiceReady(dice3d: Dice3D) {\r\n    const customWilDieColors =\r\n      game.user!.getFlag('swade', 'dsnCustomWildDieColors') ||\r\n      (SWADE.diceConfig.flags.dsnCustomWildDieColors\r\n        .default as DsnCustomWildDieColors);\r\n\r\n    const customWilDieOptions =\r\n      game.user!.getFlag('swade', 'dsnCustomWildDieOptions') ||\r\n      (SWADE.diceConfig.flags.dsnCustomWildDieOptions\r\n        .default as DsnCustomWildDieOptions);\r\n\r\n    dice3d.addSystem(\r\n      { id: 'swade', name: 'Savage Worlds Adventure Edition' },\r\n      'preferred',\r\n    );\r\n\r\n    dice3d.addColorset(\r\n      {\r\n        name: 'customWildDie',\r\n        description: 'SWADE.CustomWildDie',\r\n        category: 'DICESONICE.Colors',\r\n        foreground: customWilDieColors.labelColor,\r\n        background: customWilDieColors.diceColor,\r\n        outline: customWilDieColors.outlineColor,\r\n        edge: customWilDieColors.edgeColor,\r\n        texture: customWilDieOptions.texture,\r\n        material: customWilDieOptions.material,\r\n        font: customWilDieOptions.font,\r\n      },\r\n      'no',\r\n    );\r\n\r\n    dice3d.addDicePreset(\r\n      {\r\n        type: 'db',\r\n        system: 'swade',\r\n        colorset: 'black',\r\n        labels: [\r\n          game.settings.get('swade', 'bennyImage3DFront'),\r\n          game.settings.get('swade', 'bennyImage3DBack'),\r\n        ].filter(Boolean),\r\n        bumpMaps: [\r\n          game.settings.get('swade', '3dBennyFrontBump'),\r\n          game.settings.get('swade', '3dBennyBackBump'),\r\n        ].filter(Boolean),\r\n      },\r\n      'd2',\r\n    );\r\n  }\r\n\r\n  static onDiceSoNiceRollStart(_messageId: string, context: any) {\r\n    const user = context.user as SwadeUser;\r\n    if (user.id === game.userId) return;\r\n    const wildDie = context.roll.terms.find(\r\n      (d) => d.options.flavor === game.i18n.localize('SWADE.WildDie'),\r\n    );\r\n\r\n    const dieSystem = wildDie?.options?.appearance?.system;\r\n    //return early if the colorset is none\r\n    if (!dieSystem || dieSystem === 'none') return;\r\n\r\n    const colorSet = wildDie.options.colorset;\r\n    if (colorSet === 'customWildDie') {\r\n      // Build the custom appearance and set it\r\n      const customColors = user.getFlag('swade', 'dsnCustomWildDieColors');\r\n      const customOptions = user.getFlag('swade', 'dsnCustomWildDieOptions');\r\n      const customAppearance = {\r\n        colorset: 'custom',\r\n        foreground: customColors?.labelColor,\r\n        background: customColors?.diceColor,\r\n        edge: customColors?.edgeColor,\r\n        outline: customColors?.outlineColor,\r\n        font: customOptions?.font,\r\n        material: customOptions?.material,\r\n        texture: customOptions?.texture,\r\n        system: dieSystem,\r\n      };\r\n      foundry.utils.setProperty(\r\n        wildDie,\r\n        'options.appearance',\r\n        customAppearance,\r\n      );\r\n    } else {\r\n      // Set the preset\r\n      foundry.utils.setProperty(wildDie, 'options.colorset', colorSet);\r\n    }\r\n    // Get the dicePreset for the given die type\r\n    const dicePreset = game.dice3d?.DiceFactory.systems[dieSystem].dice.find(\r\n      (d) => d.type === 'd' + wildDie.faces,\r\n    );\r\n    if (!dicePreset) return;\r\n    if (dicePreset?.modelFile && !dicePreset.modelLoaded) {\r\n      // Load the modelFile\r\n      dicePreset.loadModel(game.dice3d?.DiceFactory.loaderGLTF);\r\n    }\r\n    // Load the textures\r\n    dicePreset.loadTextures();\r\n  }\r\n\r\n  static onDevModeReady({ registerPackageDebugFlag }: DevModeApi) {\r\n    registerPackageDebugFlag(PACKAGE_ID);\r\n  }\r\n\r\n  static onItemPilesReady() {\r\n    const versions = {\r\n      '5.0.0': {\r\n        VERSION: '1.1.0',\r\n\r\n        // The actor class type is the type of actor that will be used for the default item pile actor that is created on first item drop.\r\n        ACTOR_CLASS_TYPE: 'npc',\r\n\r\n        // The item class type is the type of item that will be used for the default loot item\r\n        ITEM_CLASS_LOOT_TYPE: '',\r\n\r\n        // The item class type is the type of item that will be used for the default weapon item\r\n        ITEM_CLASS_WEAPON_TYPE: 'weapon', \r\n\r\n        // The item class type is the type of item that will be used for the default equipment item\r\n        ITEM_CLASS_EQUIPMENT_TYPE: 'gear',\r\n\r\n        // The item quantity attribute is the path to the attribute on items that denote how many of that item that exists\r\n        ITEM_QUANTITY_ATTRIBUTE: 'system.quantity',\r\n\r\n        // The item price attribute is the path to the attribute on each item that determine how much it costs\r\n        ITEM_PRICE_ATTRIBUTE: 'system.price',\r\n\r\n        // Item types and the filters actively remove items from the item pile inventory UI that users cannot loot, such as spells, feats, and classes\r\n        ITEM_FILTERS: [\r\n          {\r\n            path: 'type',\r\n            filters: 'ancestry,edge,hindrance,skill,power,ability,action'\r\n          }\r\n        ],\r\n\r\n        // Item similarities determines how item piles detect similarities and differences in the system\r\n        ITEM_SIMILARITIES: ['name', 'type', 'system.swid'],\r\n\r\n        // Currencies in item piles is a versatile system that can accept actor attributes (a number field on the actor's sheet) or items (actual items in their inventory)\r\n        // In the case of attributes, the path is relative to the actor\r\n        // In the case of items, it is recommended you export the item with `.toObject()` and strip out any module data\r\n        CURRENCIES: [\r\n          {\r\n            type: 'attribute',\r\n            name: 'SWADE.Currency',\r\n            img: 'icons/svg/coins.svg',\r\n            abbreviation: '{#}T',\r\n            data: {\r\n              path: 'system.details.currency',\r\n            },\r\n            primary: true,\r\n            exchangeRate: 1\r\n          }\r\n        ],\r\n\r\n        CURRENCY_DECIMAL_DIGITS: 0.01\r\n      }\r\n    };\r\n\r\n    const data = Object.entries(versions).find(([version]) => {\r\n      return foundry.utils.isNewerVersion(game.system.version, version);\r\n    });\r\n\r\n    if (!data) return;\r\n\r\n    // @ts-expect-error This always exists if this function is called, bot not necessarily otherwise\r\n    return game.itempiles.API.addSystemIntegration(data[1]);\r\n  }\r\n}\r\n","/** @internal */\nexport function registerKeybindings() {\n  game.keybindings.register('swade', 'openFavoriteCardsDoc', {\n    name: 'SWADE.Keybindings.OpenFavoriteCards.Name',\n    hint: 'SWADE.Keybindings.OpenFavoriteCards.Hint',\n    precedence: CONST.KEYBINDING_PRECEDENCE.NORMAL,\n    editable: [{ key: 'KeyH' }],\n    onDown: (_ctx) => {\n      const favoriteCards = game.user?.getFlag('swade', 'favoriteCardsDoc');\n      if (!favoriteCards) {\n        ui.notifications.warn(\n          'SWADE.Keybindings.OpenFavoriteCards.NoCardsWarning',\n          { localize: true },\n        );\n        return;\n      }\n      game.cards?.get(favoriteCards)?.sheet?.render(true);\n    },\n  });\n\n  game.keybindings.register('swade', 'manageBennies', {\n    name: 'SWADE.Keybindings.Bennies.Name',\n    hint: 'SWADE.Keybindings.Bennies.Hint',\n    precedence: CONST.KEYBINDING_PRECEDENCE.NORMAL,\n    editable: [{ key: 'KeyB' }],\n    reservedModifiers: [\n      foundry.helpers.interaction.KeyboardManager.MODIFIER_KEYS.ALT,\n    ],\n    onDown: (ctx) => {\n      if (ctx.isAlt) {\n        game.user?.getBenny();\n      } else {\n        game.user?.spendBenny();\n      }\n    },\n  });\n}\n","/** @internal */\nexport async function preloadHandlebarsTemplates() {\n  const templatePaths = {\n    //NPC partials\n    'swade.npc-attributes':\n      'systems/swade/templates/actors/partials/attributes.hbs',\n    'swade.npc-summary':\n      'systems/swade/templates/actors/partials/npc-summary-tab.hbs',\n    'swade.npc-powers':\n      'systems/swade/templates/actors/partials/powers-tab.hbs',\n    'swade.npc-setting': 'systems/swade/templates/setting-fields.hbs',\n    'swade.npc-action-card':\n      'systems/swade/templates/shared-partials/action-card.hbs',\n\n    //Gear Cards\n    'swade.weapon-card':\n      'systems/swade/templates/actors/partials/weapon-card.hbs',\n    'swade.armor-card':\n      'systems/swade/templates/actors/partials/armor-card.hbs',\n    // TODO: Investigate if this is in use anywhere\n    'swade.powers-card':\n      'systems/swade/templates/actors/partials/powers-card.hbs',\n    'swade.shield-card':\n      'systems/swade/templates/actors/partials/shield-card.hbs',\n    'swade.misc-card': 'systems/swade/templates/actors/partials/misc-card.hbs',\n    'swade.consumable-card':\n      'systems/swade/templates/actors/partials/consumable-card.hbs',\n\n    // TODO: Investigate if this is in use anywhere\n    //die type list\n    'swade.die-sides': 'systems/swade/templates/die-sides-options.hbs',\n    'swade.attribute-select': 'systems/swade/templates/attribute-select.hbs',\n    // Chat\n    'swade.roll-formula': 'systems/swade/templates/chat/roll-formula.hbs',\n\n    //Items\n    'swade.effect-list': 'systems/swade/templates/effect-list.hbs',\n\n    //official sheet\n\n    //tabs\n    'swade.character-tab-summary':\n      'systems/swade/templates/actors/character/tabs/summary.hbs',\n    'swade.character-tab-edges':\n      'systems/swade/templates/actors/character/tabs/edges.hbs',\n    'swade.character-tab-effects':\n      'systems/swade/templates/actors/character/tabs/effects.hbs',\n    'swade.character-tab-inventory':\n      'systems/swade/templates/actors/character/tabs/inventory.hbs',\n    'swade.character-tab-powers':\n      'systems/swade/templates/actors/character/tabs/powers.hbs',\n    'swade.character-tab-actions':\n      'systems/swade/templates/actors/character/tabs/actions.hbs',\n    'swade.character-tab-about':\n      'systems/swade/templates/actors/character/tabs/about.hbs',\n\n    //misc partials\n    'swade.character-attributes':\n      'systems/swade/templates/actors/character/partials/attributes.hbs',\n    'swade.character-item-card':\n      'systems/swade/templates/actors/character/partials/item-card.hbs',\n    'swade.character-skill-card':\n      'systems/swade/templates/actors/character/partials/skill-card.hbs',\n    'swade.character-setting-field':\n      'systems/swade/templates/actors/character/partials/setting-fields.hbs',\n\n    //Item V2\n    'swade.item-header': 'systems/swade/templates/item/partials/header.hbs',\n    'swade.item-additional-stats':\n      'systems/swade/templates/item/partials/additional-stats.hbs',\n    'swade.item-action-properties':\n      'systems/swade/templates/item/partials/action-properties.hbs',\n    'swade.item-bonus-damage':\n      'systems/swade/templates/item/partials/bonus-damage.hbs',\n    'swade.item-equipped': 'systems/swade/templates/item/partials/equipped.hbs',\n    'swade.item-grants': 'systems/swade/templates/item/partials/grants.hbs',\n    'swade.item-templates':\n      'systems/swade/templates/item/partials/templates.hbs',\n    'swade.item-tab-powers':\n      'systems/swade/templates/item/partials/tabs/powers.hbs',\n    'swade.item-tab-description':\n      'systems/swade/templates/item/partials/tabs/description.hbs',\n    'swade.item-tab-actions':\n      'systems/swade/templates/item/partials/tabs/actions.hbs',\n    'swade.item-tab-effects':\n      'systems/swade/templates/item/partials/tabs/effects.hbs',\n  };\n\n  return foundry.applications.handlebars.loadTemplates(templatePaths);\n}\n","import { CompendiumTOC } from './CompendiumTOC';\n\n/* eslint-disable @typescript-eslint/naming-convention */\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\nexport default class CompendiumTOCSettings extends HandlebarsApplicationMixin(\n  ApplicationV2,\n) {\n  #blockList: Record<string, boolean>;\n\n  constructor(options) {\n    super(options);\n    this.#blockList = game.settings.get('swade', 'tocBlockList');\n  }\n\n  static override DEFAULT_OPTIONS = {\n    id: 'compendiumTOCSettings',\n    window: {\n      title: 'SWADE.TOCSettings.Name',\n    },\n    tag: 'form',\n    position: {\n      width: 500,\n      height: 600,\n    },\n    classes: ['swade-application', 'swade', 'toc-settings', 'standard-form'],\n    form: {\n      handler: CompendiumTOCSettings.onSubmit,\n      closeOnSubmit: true,\n      submitOnChange: false,\n      submitOnClose: false,\n    },\n  };\n\n  static override PARTS = {\n    main: {\n      template: 'systems/swade/templates/apps/compendium-toc-settings.hbs',\n    },\n    footer: { template: 'templates/generic/form-footer.hbs' },\n  };\n\n  get blockList() {\n    return this.#blockList;\n  }\n\n  override async _prepareContext(options) {\n    const context = await super._prepareContext(options);\n    context.buttons = [\n      { type: 'submit', icon: 'fa-solid fa-save', label: 'Save Changes' }, // TODO: localize\n    ];\n    const packs = game.packs.filter((p) =>\n      CompendiumTOC.ALLOWED_TYPES.includes(p.metadata.type),\n    );\n\n    const packsByType: Record<string, unknown[]> = {};\n    for (const pack of packs) {\n      const type = pack.metadata.type;\n      if (!packsByType[type]) {\n        packsByType[type] = [];\n      }\n      packsByType[type].push({\n        label: pack.metadata.label,\n        collection: pack.collection,\n        inUse: !this.blockList[pack.collection],\n      });\n    }\n\n    context.blockList = packsByType;\n    return context;\n  }\n\n  static async onSubmit(\n    _event: SubmitEvent,\n    _form: HTMLFormElement,\n    formData: FormDataExtended,\n  ) {\n    if (!game.user?.isGM) return;\n    // invert the values\n    const dataObj = formData.object;\n    for (const pack in dataObj) {\n      dataObj[pack] = !dataObj[pack];\n    }\n    await game.settings.set('swade', 'tocBlockList', dataObj);\n    game.socket?.emit('reload');\n    foundry.utils.debouncedReload();\n  }\n}\n","import { ValueOf } from 'fvtt-types/utils';\nimport { PrototypeAdditionalStat } from '../interfaces/additional.interface';\nimport CompendiumTOCSettings from './apps/CompendiumTOCSettings';\nimport SettingConfigurator from './apps/SettingConfigurator';\nimport { constants } from './constants';\n\ndeclare global {\n  interface SettingConfig {\n    'swade.systemMigrationVersion': string;\n    'swade.initiativeSound': boolean;\n    'swade.autoInit': boolean;\n    'swade.initMessage': ValueOf<typeof constants.INIT_MESSAGE_TYPE>;\n    'swade.actionDeck': string;\n    'swade.actionDeckDiscardPile': string;\n    'swade.hideNPCWildcards': boolean;\n    'swade.notifyBennies': boolean;\n    'swade.hideNpcItemChatCards': boolean;\n    'swade.useAttributeShorts': boolean;\n    'swade.coreSkills': string;\n    'swade.coreSkillsCompendium': string;\n    'swade.wealthType': 'currency' | 'wealthDie' | 'none';\n    'swade.currencyName': string;\n    'swade.npcsUseCurrency': boolean;\n    'swade.jokersWild': boolean;\n    /** @deprecated */\n    'swade.parryBaseSkill': string;\n    'swade.parryBaseSwid': string;\n    'swade.weightUnit': 'imperial' | 'metric';\n    'swade.ammoManagement': boolean;\n    'swade.ammoFromInventory': boolean;\n    'swade.npcAmmo': boolean;\n    'swade.vehicleAmmo': boolean;\n    'swade.enableConviction': boolean;\n    'swade.enableWoundPace': boolean;\n    'swade.noPowerPoints': boolean;\n    'swade.alwaysGeneralPP': boolean;\n    'swade.staticGmBennies': boolean;\n    'swade.gmBennies': number;\n    'swade.vehicleEnergy': foundry.data.fields.BooleanField;\n    'swade.vehicleMods': boolean;\n    'swade.vehicleEdges': boolean;\n    'swade.vehicleSkills': string;\n    'swade.bennyImageSheet': string;\n    'swade.bennyImage3DBack': string;\n    'swade.bennyImage3DFront': string;\n    'swade.3dBennyFrontBump': string;\n    'swade.3dBennyBackBump': string;\n    'swade.grittyDamage': boolean;\n    'swade.injuryTable': string;\n    'swade.heroesNeverDie': boolean;\n    'swade.woundCap': boolean;\n    'swade.unarmoredHero': boolean;\n    'swade.hardChoices': boolean;\n    'swade.dumbLuck': boolean;\n    'swade.applyEncumbrance': boolean;\n    'swade.highlightTemplate': boolean;\n    'swade.charSheetDefaultWidth': number;\n    'swade.settingFields': {\n      actor: Record<string, PrototypeAdditionalStat>;\n      item: Record<string, PrototypeAdditionalStat>;\n    };\n    'swade.tocBlockList': Record<string, boolean>;\n    'swade.npcStartingCurrency': number;\n    'swade.pcStartingCurrency': number;\n    'swade.armorStacking': string;\n  }\n}\n/** @internal */\nexport function registerSettings() {\n  game.settings.registerMenu('swade', 'setting-config', {\n    name: 'SWADE.SettingConf',\n    label: 'SWADE.SettingConfLabel',\n    hint: 'SWADE.SettingConfDesc',\n    icon: 'fa-solid fa-globe',\n    type: SettingConfigurator,\n    restricted: true,\n  });\n\n  game.settings.registerMenu('swade', 'toc-settings', {\n    name: 'SWADE.TOCSettings.Name',\n    label: 'SWADE.TOCSettings.Label',\n    hint: 'SWADE.TOCSettings.Hint',\n    icon: 'fa-solid fa-books',\n    type: CompendiumTOCSettings,\n    restricted: true,\n  });\n\n  /** Track the system version upon which point a migration was last applied */\n  game.settings.register('swade', 'systemMigrationVersion', {\n    name: 'System Migration Version',\n    scope: 'world',\n    config: false,\n    type: String,\n    default: '0.0.0',\n  });\n\n  game.settings.register('swade', 'initiativeSound', {\n    name: 'SWADE.Settings.CardSound.Name',\n    hint: 'SWADE.Settings.CardSound.Hint',\n    default: true,\n    scope: 'world',\n    type: Boolean,\n    config: true,\n  });\n\n  game.settings.register('swade', 'autoInit', {\n    name: 'SWADE.Settings.AutoInit.Name',\n    hint: 'SWADE.Settings.AutoInit.Hint',\n    default: true,\n    scope: 'world',\n    type: Boolean,\n    config: true,\n  });\n\n  game.settings.register('swade', 'initMessage', {\n    name: 'SWADE.Settings.CreateInitChat.Name',\n    hint: 'SWADE.Settings.CreateInitChat.Hint',\n    default: constants.INIT_MESSAGE_TYPE.LARGE,\n    scope: 'client',\n    type: String,\n    choices: {\n      [constants.INIT_MESSAGE_TYPE.OFF]: 'SWADE.CardDrawMsgSize.None',\n      [constants.INIT_MESSAGE_TYPE.COMPACT]: 'SWADE.CardDrawMsgSize.Compact',\n      [constants.INIT_MESSAGE_TYPE.LARGE]: 'SWADE.CardDrawMsgSize.Large',\n    },\n    config: true,\n    onChange: () =>\n      game.messages\n        ?.filter((m) => m.isContentVisible && m.isCardDraw)\n        .forEach((msg) => ui.chat.updateMessage(msg)),\n  });\n\n  game.settings.register('swade', 'hideNPCWildcards', {\n    name: 'SWADE.Settings.HideWC.Name',\n    hint: 'SWADE.Settings.HideWC.Hint',\n    default: true,\n    scope: 'world',\n    type: Boolean,\n    config: true,\n  });\n\n  game.settings.register('swade', 'notifyBennies', {\n    name: 'SWADE.Settings.EnableBennyNotify.Name',\n    hint: 'SWADE.Settings.EnableBennyNotify.Hint',\n    default: true,\n    scope: 'world',\n    type: Boolean,\n    config: true,\n  });\n\n  game.settings.register('swade', 'hideNpcItemChatCards', {\n    name: 'SWADE.Settings.HideNpcItemChatCards.Name',\n    hint: 'SWADE.Settings.HideNpcItemChatCards.Hint',\n    default: true,\n    scope: 'world',\n    type: Boolean,\n    config: true,\n  });\n\n  game.settings.register('swade', 'weightUnit', {\n    name: 'SWADE.Settings.WeightUnit.Name',\n    hint: 'SWADE.Settings.WeightUnit.Hint',\n    default: 'imperial',\n    scope: 'world',\n    type: String,\n    choices: {\n      imperial: game.i18n.localize('SWADE.Imperial'),\n      metric: game.i18n.localize('SWADE.Metric'),\n    },\n    config: true,\n  });\n\n  game.settings.register('swade', 'useAttributeShorts', {\n    name: 'SWADE.Settings.UseAttributeShorts.Name',\n    hint: 'SWADE.Settings.UseAttributeShorts.Hint',\n    default: false,\n    scope: 'world',\n    type: Boolean,\n    config: true,\n  });\n\n  /** @deprecated */\n  game.settings.register('swade', 'parryBaseSkill', {\n    default: 'Fighting',\n    scope: 'world',\n    requiresReload: true,\n    type: String,\n    config: false,\n  });\n\n  game.settings.register('swade', 'parryBaseSwid', {\n    name: 'SWADE.Settings.ParryBase.Name',\n    hint: 'SWADE.Settings.ParryBase.Hint',\n    default: 'fighting',\n    scope: 'world',\n    requiresReload: true,\n    type: String,\n    config: true,\n  });\n\n  game.settings.register('swade', 'actionDeck', {\n    name: 'SWADE.Settings.InitCardDeck.Name',\n    scope: 'world',\n    type: String,\n    config: false,\n    default: '',\n  });\n\n  game.settings.register('swade', 'actionDeckDiscardPile', {\n    name: 'SWADE.Settings.InitDiscardPile.Name',\n    scope: 'world',\n    type: String,\n    config: false,\n    default: '',\n  });\n\n  game.settings.register('swade', 'highlightTemplate', {\n    name: 'SWADE.Settings.HighlightTemplate.Name',\n    hint: 'SWADE.Settings.HighlightTemplate.Hint',\n    scope: 'world',\n    type: Boolean,\n    default: true,\n    config: true,\n  });\n\n  game.settings.register('swade', 'charSheetDefaultWidth', {\n    name: 'SWADE.Settings.CharSheetDefaultWidth.Name',\n    hint: 'SWADE.Settings.CharSheetDefaultWidth.Hint',\n    scope: 'world',\n    type: Number,\n    default: 650,\n    config: true,\n  });\n}\n\n/** @internal */\nexport function registerSettingRules() {\n  game.settings.register('swade', 'coreSkills', {\n    name: 'SWADE.Settings.CoreSkillsList.Name',\n    hint: 'SWADE.Settings.CoreSkillsList.Hint',\n    default: 'Athletics, Common Knowledge, Notice, Persuasion, Stealth',\n    scope: 'world',\n    type: String,\n    config: false,\n  });\n\n  game.settings.register('swade', 'coreSkillsCompendium', {\n    name: 'SWADE.Settings.CoreSkillsPack.Name',\n    hint: 'SWADE.Settings.CoreSkillsPack.Hint',\n    default: 'swade.skills',\n    type: String,\n    scope: 'world',\n    config: false,\n  });\n\n  game.settings.register('swade', 'wealthType', {\n    name: 'SWADE.Settings.WealthType.Name',\n    hint: 'SWADE.Settings.WealthType.Hint',\n    scope: 'world',\n    type: String,\n    choices: {\n      currency: 'SWADE.Currency',\n      wealthDie: 'SWADE.WealthDie.Label',\n      none: 'SWADE.WealthSelectionNoneOther',\n    },\n    default: 'currency',\n    config: false,\n  });\n\n  game.settings.register('swade', 'currencyName', {\n    name: 'SWADE.Settings.CurrencyName.Name',\n    hint: 'SWADE.Settings.CurrencyName.Hint',\n    scope: 'world',\n    type: String,\n    default: 'Currency',\n    config: false,\n  });\n\n  game.settings.register('swade', 'npcsUseCurrency', {\n    name: 'SWADE.Settings.NPCCurrency.Name',\n    hint: 'SWADE.Settings.NPCCurrency.Hint',\n    scope: 'world',\n    type: Boolean,\n    default: true,\n    config: false,\n  });\n\n  game.settings.register('swade', 'jokersWild', {\n    name: 'SWADE.Settings.JokersWild.Name',\n    hint: 'SWADE.Settings.JokersWild.Hint',\n    default: true,\n    scope: 'world',\n    type: Boolean,\n    config: false,\n  });\n\n  game.settings.register('swade', 'ammoManagement', {\n    name: 'SWADE.Settings.AmmoManagement.Name',\n    hint: 'SWADE.Settings.AmmoManagement.Hint',\n    default: false,\n    scope: 'world',\n    type: Boolean,\n    config: false,\n  });\n\n  game.settings.register('swade', 'ammoFromInventory', {\n    name: 'SWADE.Settings.PCAmmoFromInventory.Name',\n    hint: 'SWADE.Settings.PCAmmoFromInventory.Hint',\n    default: false,\n    scope: 'world',\n    type: Boolean,\n    config: false,\n  });\n\n  game.settings.register('swade', 'npcAmmo', {\n    name: 'SWADE.Settings.NPCAmmoFromInventory.Name',\n    default: false,\n    scope: 'world',\n    type: Boolean,\n    config: false,\n  });\n\n  game.settings.register('swade', 'vehicleAmmo', {\n    name: 'SWADE.Settings.VehicleAmmoFromInventory.Name',\n    default: false,\n    scope: 'world',\n    type: Boolean,\n    config: false,\n  });\n\n  game.settings.register('swade', 'enableConviction', {\n    name: 'SWADE.Settings.EnableConv.Name',\n    hint: 'SWADE.Settings.EnableConv.Hint',\n    default: false,\n    scope: 'world',\n    type: Boolean,\n    config: false,\n  });\n\n  game.settings.register('swade', 'enableWoundPace', {\n    name: 'SWADE.Settings.EnableWoundPace.Name',\n    hint: 'SWADE.Settings.EnableWoundPace.Hint',\n    default: true,\n    scope: 'world',\n    type: Boolean,\n    config: false,\n  });\n\n  game.settings.register('swade', 'noPowerPoints', {\n    name: 'SWADE.Settings.NoPowerPoints.Name',\n    hint: 'SWADE.Settings.NoPowerPoints.Hint',\n    default: false,\n    scope: 'world',\n    type: Boolean,\n    config: false,\n  });\n\n  game.settings.register('swade', 'alwaysGeneralPP', {\n    name: 'SWADE.Settings.AlwaysGeneralPP.Name',\n    hint: 'SWADE.Settings.AlwaysGeneralPP.Hint',\n    default: false,\n    scope: 'world',\n    type: Boolean,\n    config: false,\n  });\n\n  game.settings.register('swade', 'applyEncumbrance', {\n    name: 'SWADE.Settings.ApplyEncumbrance.Name',\n    hint: game.i18n.format('SWADE.Settings.ApplyEncumbrance.Hint', {\n      vigor: game.i18n.localize('SWADE.AttrVig'),\n      fatigue: game.i18n.localize('SWADE.Fatigue'),\n    }),\n    default: false,\n    scope: 'world',\n    type: Boolean,\n    config: false,\n  });\n\n  game.settings.register('swade', 'staticGmBennies', {\n    name: 'SWADE.Settings.StaticGmBennies.Name',\n    hint: 'SWADE.Settings.StaticGmBennies.Hint',\n    default: false,\n    scope: 'world',\n    type: Boolean,\n    config: false,\n  });\n\n  game.settings.register('swade', 'gmBennies', {\n    name: 'SWADE.Settings.GmBennies.Name',\n    hint: 'SWADE.Settings.GmBennies.Hint',\n    default: 0,\n    scope: 'world',\n    type: Number,\n    config: false,\n  });\n\n  game.settings.register('swade', 'vehicleEnergy', {\n    name: 'SWADE.Settings.VehicleEnergy.Name',\n    hint: 'SWADE.Settings.VehicleEnergy.Hint',\n    default: false,\n    scope: 'world',\n    type: new foundry.data.fields.BooleanField(),\n    config: false,\n  });\n\n  game.settings.register('swade', 'vehicleMods', {\n    name: 'SWADE.Settings.VehicleMods.Name',\n    hint: 'SWADE.Settings.VehicleMods.Hint',\n    default: false,\n    scope: 'world',\n    type: Boolean,\n    config: false,\n  });\n\n  game.settings.register('swade', 'vehicleEdges', {\n    name: 'SWADE.Settings.VehicleEdges.Name',\n    hint: 'SWADE.Settings.VehicleEdges.Hint',\n    default: false,\n    scope: 'world',\n    type: Boolean,\n    config: false,\n  });\n\n  game.settings.register('swade', 'vehicleSkills', {\n    name: 'SWADE.Settings.VehicleSkills.Name',\n    hint: 'SWADE.Settings.VehicleSkills.Hint',\n    default: 'Boating, Driving, Piloting, Riding',\n    scope: 'world',\n    type: String,\n    config: false,\n  });\n\n  game.settings.register('swade', 'settingFields', {\n    name: 'SWADE.Settings.ArbitFields',\n    default: { actor: {}, item: {} },\n    scope: 'world',\n    type: Object,\n    config: false,\n  });\n\n  game.settings.register('swade', 'tocBlockList', {\n    name: 'SWADE.TOCBlockList',\n    default: {},\n    scope: 'world',\n    type: Object,\n    config: false,\n  });\n\n  game.settings.register('swade', 'bennyImageSheet', {\n    name: 'SWADE.Settings.BennyImageSheet.Name',\n    hint: 'SWADE.Settings.BennyImageSheet.Hint',\n    type: String,\n    default: 'systems/swade/assets/bennie.webp',\n    scope: 'world',\n    config: false,\n  });\n\n  game.settings.register('swade', 'woundCap', {\n    name: 'SWADE.Settings.WoundCap.Name',\n    hint: 'SWADE.Settings.WoundCap.Hint',\n    type: Boolean,\n    default: false,\n    scope: 'world',\n    config: false,\n  });\n\n  game.settings.register('swade', 'unarmoredHero', {\n    name: 'SWADE.Settings.UnarmoredHero.Name',\n    hint: 'SWADE.Settings.UnarmoredHero.Hint',\n    type: Boolean,\n    default: false,\n    scope: 'world',\n    config: false,\n  });\n\n  game.settings.register('swade', 'grittyDamage', {\n    name: 'SWADE.Settings.GrittyDamage.Name',\n    hint: 'SWADE.Settings.GrittyDamage.Hint',\n    type: Boolean,\n    default: false,\n    scope: 'world',\n    config: false,\n  });\n\n  game.settings.register('swade', 'injuryTable', {\n    name: 'SWADE.Settings.InjuryTable.Name',\n    hint: 'SWADE.Settings.InjuryTable.Hint',\n    type: String,\n    default: '',\n    scope: 'world',\n    config: false,\n    choices: {},\n  });\n\n  game.settings.register('swade', 'heroesNeverDie', {\n    name: 'SWADE.Settings.HeroesNeverDie.Name',\n    hint: 'SWADE.Settings.HeroesNeverDie.Hint',\n    type: Boolean,\n    default: false,\n    scope: 'world',\n    config: false,\n  });\n\n  game.settings.register('swade', 'hardChoices', {\n    name: 'SWADE.Settings.HardChoices.Name',\n    hint: 'SWADE.Settings.HardChoices.Hint',\n    scope: 'world',\n    type: Boolean,\n    default: false,\n    config: false,\n  });\n\n  game.settings.register('swade', 'dumbLuck', {\n    name: 'SWADE.Settings.DumbLuck.Name',\n    hint: 'SWADE.Settings.DumbLuck.Hint',\n    scope: 'world',\n    type: Boolean,\n    default: false,\n    config: false,\n  });\n\n  game.settings.register('swade', 'pcStartingCurrency', {\n    name: 'SWADE.Settings.StartingCurrency.PC.Name',\n    hint: 'SWADE.Settings.StartingCurrency.PC.Hint',\n    scope: 'world',\n    type: Number,\n    default: 500,\n    config: false,\n  });\n\n  game.settings.register('swade', 'npcStartingCurrency', {\n    name: 'SWADE.Settings.StartingCurrency.NPC.Name',\n    hint: 'SWADE.Settings.StartingCurrency.NPC.Hint',\n    scope: 'world',\n    type: Number,\n    default: 0,\n    config: false,\n  });\n\n  game.settings.register('swade', 'armorStacking', {\n    name: 'SWADE.Settings.ArmorStacking.Name',\n    hint: 'SWADE.Settings.ArmorStacking.Name',\n    scope: 'world',\n    type: String,\n    default: constants.ARMOR_STACKING.CORE,\n    choices: constants.ARMOR_STACKING,\n    requiresReload: true,\n    config: false,\n  });\n}\n\n/** @internal */\nexport function register3DBennySettings() {\n  game.settings.register('swade', 'bennyImage3DFront', {\n    name: 'SWADE.Settings.Benny3DFront.Name',\n    hint: 'SWADE.Settings.Benny3DFront.Hint',\n    type: String,\n    default: 'systems/swade/assets/benny/benny-chip-front.png',\n    scope: 'world',\n    config: false,\n  });\n\n  game.settings.register('swade', 'bennyImage3DBack', {\n    name: 'SWADE.Settings.Benny3DBack.Name',\n    hint: 'SWADE.Settings.Benny3DBack.Hint',\n    type: String,\n    default: 'systems/swade/assets/benny/benny-chip-front.png',\n    scope: 'world',\n    config: false,\n  });\n\n  game.settings.register('swade', '3dBennyFrontBump', {\n    name: 'SWADE.Settings.Benny3DBackBump.Name',\n    hint: 'SWADE.Settings.Benny3DBackBump.Hint',\n    type: String,\n    default: 'systems/swade/assets/benny/benny_bump.png',\n    scope: 'world',\n    config: false,\n  });\n\n  game.settings.register('swade', '3dBennyBackBump', {\n    name: 'SWADE.Settings.Benny3DFrontBump.Name',\n    hint: 'SWADE.Settings.Benny3DFrontBump.Hint',\n    type: String,\n    default: 'systems/swade/assets/benny/benny_bump.png',\n    scope: 'world',\n    config: false,\n  });\n}\n","import {\n  AdditionalStats,\n  Attribute,\n  DieSidesOption,\n  LinkedAttribute,\n} from '../../globals';\nimport { Advance } from '../../interfaces/Advance.interface';\nimport {\n  ItemAction,\n  RollModifier,\n} from '../../interfaces/additional.interface';\nimport ItemChatCardHelper from '../ItemChatCardHelper';\nimport { Logger } from '../Logger';\nimport ActiveEffectWizard from '../apps/ActiveEffectWizard';\nimport { AdvanceEditor } from '../apps/AdvanceEditor';\nimport AttributeManager from '../apps/AttributeManager';\nimport { SwadeActorTweaks } from '../apps/SwadeDocumentTweaks';\nimport SwadeMeasuredTemplate from '../canvas/SwadeMeasuredTemplate';\nimport { SWADE } from '../config';\nimport { constants } from '../constants';\nimport { VehicleData } from '../data/actor';\nimport { ActionData } from '../data/item';\nimport SwadeActiveEffect from '../documents/active-effect/SwadeActiveEffect';\nimport SwadeActor from '../documents/actor/SwadeActor';\nimport SwadeItem from '../documents/item/SwadeItem';\nimport { Accordion } from '../style/Accordion';\nimport * as util from '../util';\n\nexport default class CharacterSheet extends foundry.appv1.sheets.ActorSheet {\n  _equipStateMenu: ContextMenu;\n  _effectCreateDropDown: ContextMenu;\n  _accordions: Record<string, { object: Accordion; open: boolean }> = {};\n\n  static override get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      classes: ['swade-official', 'sheet', 'actor'],\n      width: game.settings.get('swade', 'charSheetDefaultWidth'),\n      height: 700,\n      resizable: true,\n      scrollY: ['section.tab'],\n      tabs: [\n        {\n          group: 'primary',\n          navSelector: '.tabs',\n          contentSelector: '.sheet-body',\n          initial: 'summary',\n        },\n        {\n          group: 'about',\n          navSelector: '.about-tabs',\n          contentSelector: '.about-body',\n          initial: 'advances',\n        },\n      ],\n    });\n  }\n\n  override get template(): string {\n    const base = 'systems/swade/templates/actors/character/';\n    if (this.actor.limited) return base + 'limited.hbs';\n    return base + 'sheet.hbs';\n  }\n\n  override activateListeners(jquery: JQuery<HTMLFormElement>): void {\n    super.activateListeners(jquery);\n\n    // Everything below here is only needed if the sheet is editable\n    if (!this.options.editable) return;\n\n    const html = jquery[0];\n\n    this.#disableOverrides(html);\n    this.#setupEquipStatusMenu(html);\n    this.#setupEffectCreateMenu(html);\n    this.#setupItemContextMenu(html);\n    this.#setupAccordions(html);\n\n    // Input focus and update\n    const inputs = html.querySelectorAll('input');\n    inputs.forEach((el) =>\n      el.addEventListener('focus', (ev) => ev.currentTarget.select()),\n    );\n\n    html\n      .querySelector('[name=\"system.details.currency\"]')\n      ?.addEventListener('change', this._onChangeInputDelta.bind(this));\n\n    // Drag events for macros.\n    html.querySelectorAll('li.item, .attribute').forEach((el) => {\n      // Add draggable attribute and dragstart listener.\n      el.draggable = true;\n      el.addEventListener('dragstart', this._onDragStart.bind(this), false);\n    });\n\n    html\n      .querySelectorAll('.status input[type=\"checkbox\"]')\n      .forEach((el) =>\n        el.addEventListener('change', this._toggleStatusEffect.bind(this)),\n      );\n\n    //Display Advances on About tab\n    html\n      .querySelector('.character-detail.advances a')\n      ?.addEventListener('click', async () => {\n        this.activateTab('about', { group: 'primary' });\n        this.activateTab('advances', { group: 'about' });\n      });\n\n    //Toggle Conviction\n    html\n      .querySelector('.conviction-toggle')\n      ?.addEventListener('click', async () => {\n        await this.actor.toggleConviction();\n      });\n\n    //Roll Attribute\n    html.querySelectorAll('.attribute button').forEach((el) =>\n      el.addEventListener('click', async (ev) => {\n        const attribute = ev.currentTarget.dataset.attribute as Attribute;\n        await this.actor.rollAttribute(attribute);\n      }),\n    );\n\n    html.querySelector('.attribute-manager')?.addEventListener('click', () => {\n      new AttributeManager({ actor: this.actor }).render({ force: true });\n    });\n\n    // Roll Skill\n    html.querySelectorAll('.skill-card .skill-die').forEach((el) =>\n      el.addEventListener('click', async (ev) => {\n        const element = ev.currentTarget as HTMLElement;\n        const item = element.parentElement!.dataset.itemId!;\n        await this.actor.rollSkill(item);\n      }),\n    );\n\n    //Running Die\n    html.querySelector('.running-die')?.addEventListener('click', async () => {\n      await this.actor.rollRunningDie();\n    });\n\n    // Roll Damage\n    html.querySelectorAll('.damage-roll').forEach((el) =>\n      el.addEventListener('click', async (ev) => {\n        const id = ev.currentTarget.closest('.item')?.dataset.itemId;\n        await this.actor.items.get(id)?.rollDamage();\n      }),\n    );\n\n    // Use Consumable\n    html.querySelectorAll('.use-consumable').forEach((el) =>\n      el.addEventListener('click', async (ev) => {\n        const id = ev.currentTarget.closest('.item')?.dataset.itemId;\n        await this.actor.items.get(id)?.consume();\n      }),\n    );\n\n    //Edit Item\n    html.querySelectorAll('.item-edit').forEach((el) =>\n      el.addEventListener('click', (ev) => {\n        const li = ev.currentTarget.closest('.item');\n        const item = this.actor.items.get(li?.dataset.itemId, { strict: true });\n        item.sheet?.render(true);\n      }),\n    );\n\n    //Show Item\n    html.querySelectorAll('.item-show').forEach((el) =>\n      el.addEventListener('click', (ev) => {\n        const li = ev.currentTarget.closest('.item');\n        const item = this.actor.items.get(li?.dataset.itemId, { strict: true });\n        item.show();\n      }),\n    );\n\n    // Delete Item\n    html.querySelectorAll('.item-delete').forEach((el) =>\n      el.addEventListener('click', async (ev) => {\n        const li = ev.currentTarget.closest('.item');\n        const item = this.actor.items.get(li?.dataset.itemId);\n        item?.deleteDialog();\n      }),\n    );\n\n    html.querySelectorAll('.item-create').forEach((el) =>\n      el.addEventListener('click', async (ev) => {\n        this._inlineItemCreate(ev.currentTarget as HTMLButtonElement);\n      }),\n    );\n\n    //Item toggles\n    html.querySelectorAll('.item-toggle').forEach((el) =>\n      el.addEventListener('click', async (ev) => {\n        const target = ev.currentTarget;\n        const li = target.closest('.item');\n        const itemID = li?.dataset.itemId;\n        const item = this.actor.items.get(itemID, { strict: true });\n        const toggle = target.dataset.toggle as string;\n        await item.update(this._toggleItem(item, toggle));\n      }),\n    );\n\n    html.querySelectorAll('.effect-action').forEach((el) =>\n      el.addEventListener('click', async (ev) => {\n        const a = ev.currentTarget;\n        const effectId = a.closest('.effect')!.dataset.effectId as string;\n        const sourceId = a.closest('.effect')!.dataset.sourceId as string;\n        const sourceItem = this.actor.items.get(sourceId)!;\n        const effect = sourceId\n          ? (sourceItem.effects.get(effectId) as SwadeActiveEffect)\n          : (this.actor.effects.get(effectId) as SwadeActiveEffect);\n        if (!effect) return;\n        const action = a.dataset.action as string;\n        const toggle = a.dataset.toggle as string;\n        if (!effect) return;\n\n        switch (action) {\n          case 'edit':\n            return effect.sheet?.render({ force: true });\n          case 'delete':\n            return effect.deleteDialog();\n          case 'toggle':\n            return effect.update(this._toggleItem(effect, toggle));\n          case 'open-origin':\n            if (sourceItem) {\n              sourceItem.sheet?.render(true);\n            }\n            return;\n          default:\n            Logger.warn(`The action ${action} is not currently supported`);\n            break;\n        }\n      }),\n    );\n\n    html.querySelector('.armor-display')?.addEventListener('click', () => {\n      const armorPropertyPath = 'system.stats.toughness.armor';\n      const armorValue = foundry.utils.getProperty(\n        this.actor,\n        armorPropertyPath,\n      );\n      const label = game.i18n.localize('SWADE.Armor');\n      const template = `\n      <form><div class=\"form-group\">\n        <label>${game.i18n.format('SWADE.EdF', { item: label })}</label>\n        <input name=\"modifier\" value=\"${armorValue}\" type=\"number\"/>\n      </div></form>`;\n\n      foundry.applications.api.DialogV2.wait({\n        window: {\n          title: `${game.i18n.format('SWADE.EdF', { item: this.actor.name + ' ' + label })}`,\n        },\n        content: template,\n        buttons: [\n          {\n            action: 'ok',\n            icon: '<i class=\"fas fa-check\"></i>',\n            label: game.i18n.localize('SWADE.Ok'),\n            default: true,\n            callback: (_event, button: HTMLButtonElement) => {\n              const newData = {};\n              newData[armorPropertyPath] =\n                button.form!.querySelector<HTMLInputElement>(\n                  'input[name=\"modifier\"]',\n                )?.value;\n              this.actor.update(newData);\n            },\n          },\n          {\n            action: 'cancel',\n            icon: '<i class=\"fas fa-times\"></i>',\n            label: game.i18n.localize('Cancel'),\n          },\n        ],\n      });\n    });\n\n    html.querySelector('.parry-display')?.addEventListener('click', () => {\n      const parryPropertyPath = 'system.stats.parry.shield';\n      const parryMod = foundry.utils.getProperty(\n        this.actor,\n        parryPropertyPath,\n      ) as number;\n      const label = game.i18n.localize('SWADE.ShieldBonus');\n      const template = `\n      <form><div class=\"form-group\">\n        <label>${game.i18n.format('SWADE.EdF', { item: label })}</label>\n        <input name=\"modifier\" value=\"${parryMod}\" type=\"number\"/>\n      </div></form>`;\n\n      foundry.applications.api.DialogV2.wait({\n        window: {\n          title: `${game.i18n.format('SWADE.EdF', { item: this.actor.name + ' ' + label })}`,\n        },\n        content: template,\n        buttons: [\n          {\n            action: 'ok',\n            icon: '<i class=\"fas fa-check\"></i>',\n            label: game.i18n.localize('SWADE.Ok'),\n            default: true,\n            callback: (_event, button: HTMLButtonElement) => {\n              const newData = {};\n              newData[parryPropertyPath] =\n                button.form!.querySelector<HTMLInputElement>(\n                  'input[name=\"modifier\"]',\n                )?.value;\n              this.actor.update(newData);\n            },\n          },\n          {\n            action: 'cancel',\n            icon: '<i class=\"fas fa-times\"></i>',\n            label: game.i18n.localize('Cancel'),\n          },\n        ],\n      });\n    });\n\n    //Item Action Buttons\n    html\n      .querySelectorAll('.card-buttons button')\n      .forEach((el) =>\n        el.addEventListener('click', this._handleItemActions.bind(this)),\n      );\n\n    //Additional Stats roll\n    html.querySelectorAll('.additional-stats .roll').forEach((el) =>\n      el.addEventListener('click', async (ev) => {\n        const button = ev.currentTarget;\n        const stat = button.dataset.stat!;\n        await this.actor.system.rollAdditionalStat(stat);\n      }),\n    );\n\n    //Wealth Die Roll\n    html\n      .querySelector('.currency .roll')\n      ?.addEventListener('click', () => this.actor.rollWealthDie());\n\n    //Advances\n    html.querySelectorAll('.advance-action').forEach((el) =>\n      el.addEventListener('click', async (ev) => {\n        if (this.actor.type === 'vehicle') return;\n        const button = ev.currentTarget;\n        const id = button.closest('li.advance')?.dataset.advanceId;\n        switch (button.dataset.action) {\n          case 'edit':\n            new AdvanceEditor({\n              advance: this.actor.system.advances.list.get(id, {\n                strict: true,\n              }),\n              actor: this.actor,\n            }).render({ force: true });\n            break;\n          case 'delete':\n            await this.#deleteAdvance(id);\n            break;\n          case 'toggle-planned':\n            await this.#toggleAdvancePlanned(id);\n            break;\n          default:\n            throw new Error(`Action ${button.dataset.action} not supported`);\n        }\n      }),\n    );\n\n    html\n      .querySelector<HTMLImageElement>('.profile-img')\n      ?.addEventListener('contextmenu', () => {\n        if (!this.actor.img) return;\n        new ImagePopout({\n          src: this.actor.img,\n          title: this.actor.name!,\n          shareable: this.actor.isOwner ?? game.user?.isGM,\n          uuid: this.actor.uuid,\n        }).render(true);\n      });\n\n    html\n      .querySelectorAll<HTMLButtonElement>('.adjust-counter')\n      .forEach((el) =>\n        el.addEventListener('click', this._handleCounterAdjust.bind(this)),\n      );\n\n    html\n      .querySelectorAll<HTMLButtonElement>(\n        '.character-detail.ancestry button, .character-detail.archetype button',\n      )\n      .forEach((btn) => {\n        btn.addEventListener('click', (ev) => {\n          const id = ev.currentTarget.dataset.itemId as string;\n          this.actor.items.get(id)?.sheet?.render(true);\n        });\n      });\n\n    html\n      .querySelector('.stat.size input')\n      ?.addEventListener('mouseenter', (event) => {\n        game.tooltip.deactivate();\n        game.tooltip.activate(event.target as HTMLElement, {\n          html: this.actor.system.getSizeTooltip(),\n          cssClass: 'themed theme-dark',\n        });\n      });\n\n    html\n      .querySelector('.stat.pace input')\n      ?.addEventListener('mouseenter', (event) => {\n        game.tooltip.deactivate();\n        game.tooltip.activate(event.target as HTMLElement, {\n          html: this.actor.system.getPaceTooltip(),\n          cssClass: 'themed theme-dark',\n        });\n      });\n  }\n\n  override async getData(\n    options?: Partial<DocumentSheetOptions>,\n  ): Promise<SwadeActorSheetData> {\n    if (this.actor.system instanceof VehicleData) throw new Error();\n\n    //retrieve the items and sort them by their sort value\n    const items = Array.from(this.actor.items.contents as SwadeItem[]).sort(\n      (a, b) => a.sort - b.sort,\n    );\n    const ammoManagement = game.settings.get('swade', 'ammoManagement');\n    for (const item of items) {\n      // Basic template rendering data\n      const system = item.system;\n      const itemActions =\n        foundry.utils.getProperty(system, 'actions.additional') ?? {};\n      const actions = new Array<any>();\n\n      for (const action in itemActions) {\n        actions.push({\n          key: action,\n          type: itemActions[action].type,\n          name: itemActions[action].name,\n        });\n      }\n      const hasDamage =\n        !!foundry.utils.getProperty(system, 'damage') ||\n        actions.some((a) => a.type === constants.ACTION_TYPE.DAMAGE);\n      const hasTraitRoll =\n        !!foundry.utils.getProperty(system, 'actions.trait') ||\n        actions.some((a) => a.type === constants.ACTION_TYPE.TRAIT);\n      const hasMacros = actions.some(\n        (a) => a.type === constants.ACTION_TYPE.MACRO,\n      );\n      const hasAmmoManagement =\n        ammoManagement &&\n        item.type === 'weapon' &&\n        !item.isMeleeWeapon &&\n        system.reloadType !== constants.RELOAD_TYPE.NONE;\n      const hasReloadButton =\n        ammoManagement &&\n        system.shots > 0 &&\n        system.reloadType !== constants.RELOAD_TYPE.NONE &&\n        system.reloadType !== constants.RELOAD_TYPE.SELF;\n\n      const itemEnrichmentOptions: Partial<TextEditor.EnrichmentOptions> = {\n        relativeTo: item,\n        rollData: item.getRollData(),\n        secrets: this.document.isOwner,\n      };\n\n      const enrichedDescription =\n        await foundry.applications.ux.TextEditor.implementation.enrichHTML(\n          item.system.description,\n          itemEnrichmentOptions,\n        );\n\n      const enrichedNotes =\n        await foundry.applications.ux.TextEditor.implementation.enrichHTML(\n          item.system.notes as string,\n          itemEnrichmentOptions,\n        );\n\n      foundry.utils.setProperty(item, 'actions', actions);\n      foundry.utils.setProperty(item, 'hasDamage', hasDamage);\n      foundry.utils.setProperty(item, 'hasTraitRoll', hasTraitRoll);\n      foundry.utils.setProperty(item, 'hasAmmoManagement', hasAmmoManagement);\n      foundry.utils.setProperty(item, 'hasReloadButton', hasReloadButton);\n      foundry.utils.setProperty(item, 'hasMacros', hasMacros);\n      foundry.utils.setProperty(\n        item,\n        'enrichedDescription',\n        enrichedDescription,\n      );\n      foundry.utils.setProperty(item, 'enrichedNotes', enrichedNotes);\n      if (item.type === 'power')\n        foundry.utils.setProperty(item, 'powerPoints', item.powerPointObject);\n    }\n\n    const itemTypes: Record<string, SwadeItem[]> = {};\n    const hiddenActionOverride = this.actor.getFlag(\n      'swade',\n      'hiddenActionOverride',\n    );\n    for (const item of items) {\n      const type = item.type;\n      itemTypes[type] ??= [];\n      if (\n        item.system instanceof ActionData &&\n        item.system.hidden &&\n        !hiddenActionOverride\n      ) {\n        continue; //do not display hidden actions\n      }\n      itemTypes[type].push(item);\n    }\n\n    const additionalStats = this.#getAdditionalStats();\n\n    const data: SwadeActorSheetData = {\n      itemTypes: itemTypes,\n      parryTooltip: this.actor.getPTTooltip('parry'),\n      toughnessTooltip: this.actor.getPTTooltip('toughness'),\n      armorTooltip: this.actor.getArmorTooltip(),\n      skills: await this.#getSkillsForDisplay(),\n      powers: this.#getPowers(),\n      additionalStats: additionalStats,\n      hasAdditionalStats: !foundry.utils.isEmpty(additionalStats),\n      currentBennies: Array.fromRange(this.actor.bennies, 1),\n      bennyImageURL: game.settings.get('swade', 'bennyImageSheet'),\n      useAttributeShorts: game.settings.get('swade', 'useAttributeShorts'),\n      sheetEffects: await this._getEffects(),\n      enrichedText: await this._getEnrichedText(),\n      settingrules: {\n        conviction: game.settings.get('swade', 'enableConviction'),\n        noPowerPoints: game.settings.get('swade', 'noPowerPoints'),\n        wealthType: game.settings.get('swade', 'wealthType'),\n        currencyName: game.settings.get('swade', 'currencyName'),\n        weightUnit:\n          game.settings.get('swade', 'weightUnit') === 'imperial'\n            ? 'lbs'\n            : 'kg',\n      },\n      advances: {\n        expanded: this.actor.system.advances.mode === 'expanded',\n        list: await this.#getAdvances(),\n      },\n      // Putting this at the end because of race condition for grandchild updates\n      attributes: this.#getAttributesForDisplay(),\n      wealthDieTypes: this.#getWealthDieTypes(),\n    };\n    return { ...(await super.getData(options)), ...data };\n  }\n\n  protected override async _render(...args): Promise<void> {\n    await super._render(...args);\n    for (const accordion of Object.values(this._accordions)) {\n      if (accordion.open && accordion.object.el) {\n        await this.#onOpenAccordion(accordion.object.el);\n        accordion.object.el.open = true;\n      }\n    }\n  }\n\n  protected override _onDragStart(event: DragEvent): void {\n    const currentTarget = event.currentTarget as HTMLElement;\n    if (currentTarget.classList.contains('attribute')) {\n      return this._onDragAttribute(event);\n    }\n    super._onDragStart(event);\n  }\n\n  protected _onDragAttribute(event: DragEvent) {\n    const btn = (event.currentTarget as HTMLElement).querySelector('button');\n    event.dataTransfer?.setData(\n      'text/plain',\n      JSON.stringify({\n        type: 'Attribute',\n        uuid: this.actor.uuid,\n        attribute: btn?.dataset.attribute as Attribute,\n      }),\n    );\n  }\n\n  protected override async _onDropItem(\n    event: DragEvent,\n    data: ActorSheet.DropData.Item,\n  ): Promise<Item[] | boolean> {\n    if (!this.actor.isOwner) return false;\n    const item = (await Item.fromDropData(data)) as SwadeItem;\n    if (!item) return false;\n\n    const itemData = item.toObject();\n\n    //handle relative item sorting\n    if (this.actor.uuid === item.parent?.uuid) {\n      return this._onSortItem(event, itemData) as Promise<SwadeItem[]>;\n    }\n\n    //handle keyboard modifiers on drop for physical items.\n    if (item.isPhysicalItem) {\n      this._handleDropModifierKeys(event, itemData);\n    }\n\n    return this._onDropItemCreate(itemData);\n  }\n\n  protected override async _onDropItemCreate(\n    itemData: Item['_source'][] | Item['_source'],\n  ): Promise<Item.Implementation[]> {\n    const items = await super._onDropItemCreate(itemData);\n    const typesToRender = ['power', 'skill'];\n    for (const item of items) {\n      if (typesToRender.includes(item.type)) item.sheet?.render(true);\n    }\n    return items;\n  }\n\n  protected _handleDropModifierKeys(event: DragEvent, item: Item.CreateData) {\n    const key = 'system.equipStatus';\n    if (event.shiftKey) {\n      if (item.type === 'weapon') {\n        foundry.utils.setProperty(item, key, constants.EQUIP_STATE.MAIN_HAND);\n      } else if (foundry.utils.getProperty(item, 'system.equippable')) {\n        foundry.utils.setProperty(item, key, constants.EQUIP_STATE.EQUIPPED);\n      }\n    } else if (event.ctrlKey) {\n      foundry.utils.setProperty(item, key, constants.EQUIP_STATE.CARRIED);\n    } else if (event.altKey) {\n      foundry.utils.setProperty(item, key, constants.EQUIP_STATE.STORED);\n    }\n  }\n\n  /** Extend and override the sheet header buttons */\n  protected override _getHeaderButtons() {\n    let buttons = super._getHeaderButtons();\n\n    // Document Tweaks\n    if (this.options.editable && this.actor.isOwner) {\n      const tweaks: Application.HeaderButton = {\n        label: game.i18n.localize('SWADE.Tweaks'),\n        class: 'configure-actor',\n        icon: 'fa-solid fa-gears',\n        onclick: () =>\n          new SwadeActorTweaks({ document: this.actor }).render({\n            force: true,\n          }),\n      };\n\n      buttons = [tweaks, ...buttons];\n    }\n    return buttons;\n  }\n\n  protected _toggleItem(\n    doc: SwadeItem | SwadeActiveEffect,\n    toggle: string,\n  ): Record<string, boolean> {\n    const oldVal = !!foundry.utils.getProperty(doc, toggle);\n    return { [toggle]: !oldVal };\n  }\n\n  protected async _chooseItemType(choices?: any) {\n    if (!choices) {\n      choices = {\n        weapon: game.i18n.localize('TYPES.Item.weapon'),\n        armor: game.i18n.localize('TYPES.Item.armor'),\n        shield: game.i18n.localize('TYPES.Item.shield'),\n        gear: game.i18n.localize('TYPES.Item.gear'),\n        effect: 'Active Effect',\n      };\n    }\n    const templateData = {\n        types: choices,\n        hasTypes: true,\n        name: game.i18n.format('DOCUMENT.New', {\n          type: game.i18n.localize('DOCUMENT.Item'),\n        }),\n      },\n      dlg = await foundry.applications.handlebars.renderTemplate(\n        'templates/sidebar/document-create.html',\n        templateData,\n      );\n    //Create Dialog window\n    return new Promise((resolve) => {\n      foundry.applications.api.DialogV2.wait({\n        window: {\n          title: game.i18n.format('DOCUMENT.Create', {\n            type: game.i18n.localize('DOCUMENT.Item'),\n          }),\n        },\n        content: dlg,\n        buttons: [\n          {\n            action: 'ok',\n            label: 'OK',\n            icon: '<i class=\"fas fa-check\"></i>',\n            default: true,\n            callback: (_event, button: HTMLButtonElement) => {\n              const html = button.form!;\n              resolve({\n                type: html.querySelector<HTMLSelectElement>(\n                  'select[name=\"type\"]',\n                )?.value,\n                name: html.querySelector<HTMLInputElement>('input[name=\"name\"]')\n                  ?.value,\n              });\n            },\n          },\n          {\n            action: 'cancel',\n            icon: '<i class=\"fas fa-times\"></i>',\n            label: game.i18n.localize('Cancel'),\n          },\n        ],\n      });\n    });\n  }\n\n  protected async _createActiveEffect(\n    data: ActiveEffect.CreateData = {\n      name: game.i18n.format('DOCUMENT.New', {\n        type: game.i18n.localize('DOCUMENT.ActiveEffect'),\n      }),\n    },\n    renderSheet = true,\n  ) {\n    return getDocumentClass('ActiveEffect').create(data, {\n      renderSheet: renderSheet,\n      parent: this.actor,\n    });\n  }\n\n  protected async _getEnrichedText(): Promise<\n    SwadeActorSheetData['enrichedText']\n  > {\n    return {\n      appearance: await this.#enrichText(this.actor.system.details.appearance),\n      goals: await this.#enrichText(this.actor.system.details.goals),\n      biography: await this.#enrichText(\n        this.actor.system.details.biography.value,\n      ),\n      notes: await this.#enrichText(this.actor.system.details.notes),\n      advances: await this.#enrichText(this.actor.system.advances.details),\n    };\n  }\n\n  protected async _getEffects() {\n    const temporary = new Array<SheetEffect>();\n    const permanent = new Array<SheetEffect>();\n    const favorite = new Array<SheetEffect>();\n    for (const effect of this.actor.allApplicableEffects()) {\n      const val: SheetEffect = {\n        id: effect.id!,\n        name: effect.name,\n        img: effect.img,\n        disabled: effect.disabled,\n        description: effect.description,\n        favorite: effect.system.favorite ?? false,\n      };\n      if (effect.parent !== this.actor) {\n        val.origin = effect.sourceName; // legacy inclusion to maintain NPC/Vehicle sheets until they can be upgraded\n        val.source = {\n          // modern character sheet style supporting v11 non-transferred Active Effects\n          name: effect.parent.name,\n          id: effect.parent.id,\n        };\n      }\n      if (effect.isTemporary) {\n        if (effect.duration.type === 'turns') {\n          val.duration = {\n            expiration: effect.expirationText, // constants.STATUS_EFFECT_EXPIRATION\n            rounds: effect.duration.rounds,\n            startRound: effect.duration.startRound,\n            startTurn: effect.duration.startTurn,\n            remaining: effect.duration.remaining,\n            label: effect.duration.label,\n          };\n        }\n        temporary.push(val);\n      } else {\n        permanent.push(val);\n      }\n      if (val.favorite) {\n        val.tooltip = val.hasOwnProperty('source')\n          ? game.i18n.localize('SWADE.ActiveEffects.Source') +\n            ': ' +\n            val.source!.name\n          : '';\n        favorite.push(val);\n      }\n    }\n    return { temporary, permanent, favorite };\n  }\n\n  protected async _handleItemActions(ev: PointerEvent) {\n    const button = ev.currentTarget as HTMLButtonElement;\n    const action = button.dataset.action!;\n    const itemId = button.closest('.chat-card.item-card')?.dataset.itemId;\n    const item = this.actor.items.get(itemId, { strict: true });\n    const additionalMods = new Array<RollModifier>();\n    const ppToAdjust = button\n      .closest('.chat-card.item-card')\n      ?.querySelector('input.pp-adjust')?.value as string;\n    const arcaneDevicePPToAdjust = button\n      .closest('.chat-card.item-card')\n      ?.querySelector('input.arcane-device-pp-adjust')?.value as string;\n\n    //if it's a power and the No Power Points rule is in effect\n    if (item.type === 'power' && game.settings.get('swade', 'noPowerPoints')) {\n      let modifier = Math.ceil(parseInt(ppToAdjust, 10) / 2);\n      modifier = Math.min(modifier * -1, modifier);\n      const actionObj = foundry.utils.getProperty(\n        item,\n        `system.actions.additional.${action}.traitOverride`,\n      ) as ItemAction;\n      //filter down further to make sure we only apply the penalty to a trait roll\n      if (\n        action === 'formula' ||\n        actionObj?.type === constants.ACTION_TYPE.TRAIT\n      ) {\n        additionalMods.push({\n          label: game.i18n.localize('TYPES.Item.power'),\n          value: modifier.signedString(),\n        });\n      }\n    } else if (action === 'pp-adjust') {\n      //handle Power Item Card PP adjustment\n      const adjustment = button.getAttribute('data-adjust') as string;\n      const power = this.actor.items.get(itemId, { strict: true });\n      const arcane =\n        foundry.utils.getProperty(power, 'system.arcane') || 'general';\n      const key = `system.powerPoints.${arcane}.value`;\n      let newPP = foundry.utils.getProperty(this.actor, key) as number;\n      if (adjustment === 'plus') {\n        newPP += parseInt(ppToAdjust, 10);\n      } else if (adjustment === 'minus') {\n        newPP -= parseInt(ppToAdjust, 10);\n      }\n      await this.actor.update({ [key]: newPP });\n    } else if (action === 'arcane-device-pp-adjust') {\n      //handle Arcane Device Item Card PP adjustment\n      const adjustment = button.getAttribute('data-adjust') as string;\n      const item = this.actor.items.get(itemId)!;\n      const key = 'system.powerPoints.value';\n      let newPP = foundry.utils.getProperty(item, key);\n      if (adjustment === 'plus') {\n        newPP += parseInt(arcaneDevicePPToAdjust, 10);\n      } else if (adjustment === 'minus') {\n        newPP -= parseInt(arcaneDevicePPToAdjust, 10);\n      }\n      await item.update({ [key]: newPP });\n    } else if (action === 'template') {\n      //Handle template placement\n      const template = button.dataset.template!;\n      SwadeMeasuredTemplate.fromPreset(template, item);\n    } else {\n      ItemChatCardHelper.handleAction(item, this.actor, action, {\n        additionalMods,\n        event: ev,\n      });\n    }\n  }\n\n  protected async _inlineItemCreate(button: HTMLButtonElement) {\n    const type = button.dataset.type as Item.SubType | 'choice' | 'advance';\n    // item creation helper func\n    const createItem = (type: Item.SubType, name?: string) => {\n      const itemData = {\n        name: name ?? SwadeItem.defaultName({ type, parent: this.actor }),\n        type: type,\n        system: Object.assign({}, button.dataset),\n      };\n      delete itemData.system.type;\n      return itemData;\n    };\n    switch (type) {\n      case 'choice':\n        this._chooseItemType().then(async (dialogInput: any) => {\n          if (dialogInput.type === 'effect') {\n            this._createActiveEffect({ name: dialogInput.name });\n          } else {\n            const itemData = createItem(dialogInput.type, dialogInput.name);\n            await CONFIG.Item.documentClass.create(itemData, {\n              renderSheet: true,\n              parent: this.actor,\n            });\n          }\n        });\n        break;\n      case 'advance':\n        this.#addAdvance();\n        break;\n      default:\n        await CONFIG.Item.documentClass.create(createItem(type), {\n          renderSheet: true,\n          parent: this.actor,\n        });\n        break;\n    }\n  }\n\n  /**\n   * Handle input changes to numeric form fields, allowing them to accept delta-typed inputs\n   * @param {Event} event  Triggering event.\n   */\n  protected _onChangeInputDelta(event: Event) {\n    const input = event.target as HTMLInputElement;\n    const value = input.value;\n    if (['+', '-'].includes(value[0])) {\n      const delta = parseInt(value, 10);\n      input.value = foundry.utils.getProperty(this.actor, input.name) + delta;\n    } else if (value[0] === '=') {\n      input.value = value.slice(1);\n    }\n  }\n\n  protected async _toggleStatusEffect(ev: JQuery.ChangeEvent) {\n    const key = ev.target.dataset.key as string;\n    // this is just to make sure the status is false in the source data\n    await this.actor.update({ [`system.status.${key}`]: false });\n    await this.actor.toggleActiveEffect(ev.target.dataset.id as string);\n  }\n\n  protected async _handleCounterAdjust(ev: PointerEvent) {\n    const target = ev.currentTarget as HTMLElement;\n    const action = target.dataset.action;\n\n    switch (action) {\n      case 'fatigue-plus':\n        await this.actor.update({\n          'system.fatigue.value': this.actor.system.fatigue.value + 1,\n        });\n        break;\n      case 'fatigue-minus':\n        await this.actor.update({\n          'system.fatigue.value': Math.max(\n            0,\n            this.actor.system.fatigue.value - 1,\n          ),\n        });\n        break;\n      case 'wounds-plus':\n        await this.actor.update({\n          'system.wounds.value': this.actor.system.wounds.value + 1,\n        });\n        break;\n      case 'wounds-minus':\n        await this.actor.update({\n          'system.wounds.value': Math.max(\n            0,\n            this.actor.system.wounds.value - 1,\n          ),\n        });\n        break;\n      case 'spend-benny':\n        await this.actor.spendBenny();\n        break;\n      case 'get-benny':\n        await this.actor.getBenny();\n        break;\n      case 'pp-refresh': {\n        const arcane = target.dataset.arcane as string;\n        const key = `system.powerPoints.${arcane}.value`;\n        const currentPP = foundry.utils.getProperty(this.actor, key);\n        const maxPP = foundry.utils.getProperty(\n          this.actor,\n          `system.powerPoints.${arcane}.max`,\n        );\n        if (currentPP >= maxPP) return;\n        await this.actor.update({ [key]: Math.min(currentPP + 5, maxPP) });\n        break;\n      }\n      default:\n        throw new Error('Unknown action!');\n    }\n  }\n\n  async #addAdvance() {\n    if (this.actor.type === 'vehicle') return;\n    const advances = this.actor.system.advances.list;\n    const newAdvance: Advance = {\n      id: foundry.utils.randomID(8),\n      type: constants.ADVANCE_TYPE.EDGE,\n      sort: advances.size + 1,\n      planned: false,\n      notes: '',\n    };\n    advances.set(newAdvance.id, newAdvance);\n    await this.actor.update({ 'system.advances.list': advances.toJSON() });\n    new AdvanceEditor({\n      advance: newAdvance,\n      actor: this.actor,\n    }).render({ force: true });\n  }\n\n  async #deleteAdvance(id: string) {\n    if (this.actor.type === 'vehicle') return;\n    foundry.applications.api.DialogV2.confirm({\n      window: {\n        title: game.i18n.localize('SWADE.Advances.Delete'),\n      },\n      content: `<form>\n        <div style=\"text-align: center;\">\n          <p>${game.i18n.localize('SWADE.DialogConfirmPrompt')}</p>\n        </div>\n      </form>`,\n      yes: {\n        default: true,\n        callback: () => {\n          if (this.actor.type === 'vehicle') return;\n          const advances = this.actor.system.advances.list;\n          advances.delete(id);\n          const arr = advances.toJSON();\n          arr.forEach((a, i) => (a.sort = i + 1));\n          this.actor.update({ 'system.advances.list': arr });\n        },\n      },\n      no: {\n        default: false,\n      },\n    });\n  }\n\n  async #toggleAdvancePlanned(id: string) {\n    if (this.actor.type === 'vehicle') return;\n    foundry.applications.api.DialogV2.confirm({\n      window: {\n        title: game.i18n.localize('SWADE.Advances.Toggle'),\n      },\n      content: `<form>\n        <div style=\"text-align: center;\">\n          <p>${game.i18n.localize('SWADE.DialogConfirmPrompt')}</p>\n        </div>\n      </form>`,\n      yes: {\n        default: true,\n        callback: async () => {\n          if (this.actor.type === 'vehicle') return;\n          const advances = this.actor.system.advances.list;\n          const advance = advances.get(id, { strict: true });\n          advance.planned = !advance.planned;\n          advances.set(id, advance);\n          await this.actor.update(\n            { 'system.advances.list': advances.toJSON() },\n            { diff: false },\n          );\n        },\n      },\n      no: {\n        default: false,\n      },\n    });\n  }\n\n  async #getAdvances() {\n    if (this.actor.type === 'vehicle') return [];\n    const retVal = new Array<{ rank: string; list: Advance[] }>();\n    const advances = this.actor.system.advances.list;\n    for (const advance of advances) {\n      advance.enrichedNotes = await this.#enrichText(advance.notes);\n      const sort = advance.sort;\n      const rankIndex = util.getRankFromAdvance(advance.sort);\n      const rank = util.getRankFromAdvanceAsString(sort);\n      if (!retVal[rankIndex]) {\n        retVal.push({\n          rank: rank,\n          list: [],\n        });\n      }\n      retVal[rankIndex].list.push(advance);\n    }\n    return retVal;\n  }\n\n  async #enrichText(text: string) {\n    return foundry.applications.ux.TextEditor.implementation.enrichHTML(text, {\n      relativeTo: this.actor,\n      rollData: this.actor.getRollData(),\n      secrets: this.document.isOwner,\n    });\n  }\n\n  #disableOverrides(html: HTMLFormElement) {\n    const flatOverrides = foundry.utils.flattenObject(this.actor.overrides);\n    const disabledText = game.i18n.localize('SWADE.disabledAE');\n    for (const override of Object.keys(flatOverrides)) {\n      html.querySelectorAll(`[name=\"${override}\"]`).forEach((input) => {\n        input.disabled = true;\n        if (input.dataset.tooltip) {\n          input.dataset.tooltip += '<br>' + disabledText;\n        } else input.dataset.tooltip = disabledText;\n      });\n    }\n  }\n\n  #getAdditionalStats(): AdditionalStats {\n    const stats = structuredClone<AdditionalStats>(\n      this.actor.system.additionalStats,\n    );\n    const options = game.settings.get('swade', 'settingFields').actor;\n    for (const [key, attr] of Object.entries(stats)) {\n      if (!options[key] || !attr.dtype) {\n        delete stats[key];\n        continue;\n      }\n      if (attr.dtype === 'Selection') {\n        const optionString = options[key]?.optionString ?? '';\n        attr.options = optionString\n          .split(';')\n          .reduce((a, v) => ({ ...a, [v.trim()]: v.trim() }), {});\n      }\n    }\n    return stats;\n  }\n\n  #getPowers(): SheetPowers {\n    //Deal with ABs and Powers\n    const arcaneBackgrounds: Record<string, SheetArcaneBackground> = {};\n\n    for (const power of this.actor.itemTypes.power) {\n      const ab = power.system.arcane || 'general';\n      if (!arcaneBackgrounds[ab]) {\n        arcaneBackgrounds[ab] = {\n          valuePath: `system.powerPoints.${ab}.value`,\n          value: foundry.utils.getProperty(\n            this.actor,\n            `system.powerPoints.${ab}.value`,\n          ),\n          maxPath: `system.powerPoints.${ab}.max`,\n          max: foundry.utils.getProperty(\n            this.actor,\n            `system.powerPoints.${ab}.max`,\n          ),\n          powers: [],\n        };\n      }\n      arcaneBackgrounds[ab].powers.push(power);\n    }\n\n    //sort the powers by their sort value\n    for (const entry of Object.values(arcaneBackgrounds)) {\n      entry.powers.sort((a, b) => a.sort - b.sort);\n    }\n\n    const hasPowersWithoutArcane =\n      arcaneBackgrounds?.general?.powers.length > 0;\n    const showGeneral =\n      hasPowersWithoutArcane || game.settings.get('swade', 'alwaysGeneralPP');\n\n    return {\n      arcaneBackgrounds,\n      hasPowersWithoutArcane,\n      showGeneral,\n    };\n  }\n\n  #getAttributesForDisplay(): Record<string, TraitDisplay> {\n    if (this.actor.type === 'vehicle') throw Error();\n    const attributes: Record<string, TraitDisplay> = {};\n    const globals = this.actor?.system.stats.globalMods as Record<\n      string,\n      RollModifier[]\n    >;\n    for (const key in this.actor.system.attributes) {\n      const attr = this.actor.system.attributes[key];\n      const mods: RollModifier[] = [\n        {\n          label: game.i18n.localize('SWADE.TraitMod'),\n          value: attr.die.modifier,\n        },\n        ...attr.effects,\n        ...globals[key],\n        ...globals.trait,\n      ].filter((m) => m.ignore !== true);\n      let tooltip = `<strong>${game.i18n.localize(\n        SWADE.attributes[key].long,\n      )}</strong>`;\n      if (mods.length) {\n        tooltip += `<ul style=\"text-align:start;\">${mods\n          .map(({ label, value }) => {\n            const mapped =\n              typeof value === 'number' ? value.signedString() : value;\n            return `<li>${label}: ${mapped}</li>`;\n          })\n          .join('')}</ul>`;\n      }\n      attributes[key] = {\n        die: attr.die.sides,\n        modifier: mods.reduce(util.addUpModifiers, 0),\n        tooltip,\n      };\n    }\n\n    return attributes;\n  }\n\n  async #getSkillsForDisplay(): Promise<SkillDisplay[]> {\n    const globals = this.actor?.system.stats.globalMods as Record<\n      string,\n      RollModifier[]\n    >;\n    const skills: SkillDisplay[] = [];\n\n    for (const skill of this.actor.items.filter((i) => i.type === 'skill')) {\n      const attribute = skill.system.attribute;\n      const mods: RollModifier[] = [\n        {\n          label: game.i18n.localize('SWADE.TraitMod'),\n          value: skill.system.die.modifier,\n        },\n        ...skill.system.effects,\n        ...(globals[attribute] ?? []),\n        ...globals.trait,\n      ].filter((m) => m.ignore !== true);\n      let tooltip = `<strong>${skill.name}</strong>`;\n      if (mods.length) {\n        tooltip += `<ul style=\"text-align:start;\">${mods\n          .map(({ label, value }) => {\n            const mapped =\n              typeof value === 'number' ? value.signedString() : value;\n            return `<li>${label}: ${mapped}</li>`;\n          })\n          .join('')}</ul>`;\n      }\n      skills.push({\n        label: skill.name as string,\n        img: skill.img as string,\n        die: skill.system.die.sides as number,\n        description: await this.#enrichText(skill.system.description),\n        modifier: mods.reduce(util.addUpModifiers, 0),\n        isCoreSkill: skill.system.isCoreSkill,\n        isOwner: skill.isOwner,\n        id: skill.id,\n        attribute,\n        tooltip,\n      });\n    }\n\n    return skills.sort((a, b) => a.label.localeCompare(b.label));\n  }\n\n  #getWealthDieTypes(): DieSidesOption[] {\n    const options: DieSidesOption[] = util.getDieSidesRange(4, 12);\n    options.unshift({ key: 0, label: 'SWADE.WealthDie.Broke.Label' });\n    return options;\n  }\n\n  #setupEquipStatusMenu(html: HTMLElement) {\n    const items: ContextMenu.Entry[] = [\n      {\n        name: game.i18n.localize('SWADE.ItemEquipStatus.Stored'),\n        icon: '<i class=\"fas fa-archive\"></i>',\n        condition: true,\n        callback: (i: HTMLOListElement) => {\n          const id = i.closest('.item')?.dataset.itemId;\n          const item = this.actor.items.get(id, { strict: true });\n          item.setEquipState(constants.EQUIP_STATE.STORED);\n        },\n      },\n      {\n        name: game.i18n.localize('SWADE.ItemEquipStatus.Carried'),\n        icon: '<i class=\"fas fa-shopping-bag\"></i>',\n        condition: true,\n        callback: (i: HTMLOListElement) => {\n          const id = i.closest('.item')?.dataset.itemId;\n          const item = this.actor.items.get(id, { strict: true });\n          item.setEquipState(constants.EQUIP_STATE.CARRIED);\n        },\n      },\n      {\n        name: game.i18n.localize('SWADE.ItemEquipStatus.Equipped'),\n        icon: '<i class=\"fas fa-tshirt\"></i>',\n        condition: (i: HTMLOListElement) => {\n          const id = i.closest('.item')?.dataset.itemId;\n          const item = this.actor.items.get(id, { strict: true });\n          if (item.type === 'gear') return item.system.equippable;\n          return !['weapon', 'consumable'].includes(item.type);\n        },\n        callback: (i: HTMLOListElement) => {\n          const id = i.closest('.item')?.dataset.itemId;\n          const item = this.actor.items.get(id, { strict: true });\n          item.setEquipState(constants.EQUIP_STATE.EQUIPPED);\n        },\n      },\n      {\n        name: game.i18n.localize('SWADE.ItemEquipStatus.OffHand'),\n        icon: '<i class=\"fas fa-hand-paper\"></i>',\n        condition: (i: HTMLOListElement) => {\n          const id = i.closest('.item')?.dataset.itemId;\n          const item = this.actor.items.get(id, { strict: true });\n          return item.type === 'weapon';\n        },\n        callback: (i: HTMLOListElement) => {\n          const id = i.closest('.item')?.dataset.itemId;\n          const item = this.actor.items.get(id, { strict: true });\n          item.setEquipState(constants.EQUIP_STATE.OFF_HAND);\n        },\n      },\n      {\n        name: game.i18n.localize('SWADE.ItemEquipStatus.MainHand'),\n        icon: '<i class=\"fas fa-hand-paper fa-flip-horizontal\"></i>',\n        condition: (i: HTMLOListElement) => {\n          const id = i.closest('.item').dataset.itemId;\n          const item = this.actor.items.get(id, { strict: true });\n          return item.type === 'weapon';\n        },\n        callback: (i: HTMLOListElement) => {\n          const id = i.closest('.item')?.dataset.itemId;\n          const item = this.actor.items.get(id, { strict: true });\n          item.setEquipState(constants.EQUIP_STATE.MAIN_HAND);\n        },\n      },\n      {\n        name: game.i18n.localize('SWADE.ItemEquipStatus.TwoHands'),\n        icon: '<i class=\"fas fa-sign-language\"></i>',\n        condition: (i: HTMLOListElement) => {\n          const id = i.closest('.item')?.dataset.itemId;\n          const item = this.actor.items.get(id, { strict: true });\n          return item.type === 'weapon';\n        },\n        callback: (i: HTMLOListElement) => {\n          const id = i.closest('.item')?.dataset.itemId;\n          const item = this.actor.items.get(id, { strict: true });\n          item.setEquipState(constants.EQUIP_STATE.TWO_HANDS);\n        },\n      },\n    ];\n\n    const selector = ' .inventory .item-controls .equip-status';\n    const options = { eventName: 'click', jQuery: false, fixed: true };\n    this._equipStateMenu =\n      new foundry.applications.ux.ContextMenu.implementation(\n        html,\n        selector,\n        items,\n        options,\n      );\n  }\n\n  #setupEffectCreateMenu(html: HTMLElement) {\n    this._effectCreateDropDown =\n      new foundry.applications.ux.ContextMenu.implementation(\n        html,\n        '.effects .effect-add',\n        [\n          {\n            name: 'SWADE.ActiveEffects.AddGuided',\n            icon: '<i class=\"fa-solid fa-hat-wizard\"></i>',\n            condition: this.object.isOwner,\n            callback: (_li) => {\n              new ActiveEffectWizard({ document: this.object }).render({\n                force: true,\n              });\n            },\n          },\n          {\n            name: 'SWADE.ActiveEffects.AddUnguided',\n            icon: '<i class=\"fa-solid fa-file-plus\"></i>',\n            condition: this.object.isOwner,\n            callback: (_li) => {\n              this._createActiveEffect();\n            },\n          },\n        ],\n        { eventName: 'click', jQuery: false },\n      );\n  }\n\n  #setupItemContextMenu(html: HTMLElement) {\n    const items: ContextMenu.Entry[] = [\n      {\n        name: 'SWADE.Reload',\n        icon: '<i class=\"fa-solid fa-right-to-bracket\"></i>',\n        condition: (i) => {\n          const item = this.actor.items.get(i.dataset.itemId);\n          return (\n            item?.type === 'weapon' &&\n            !!item.system.shots &&\n            game.settings.get('swade', 'ammoManagement')\n          );\n        },\n        callback: (i) => this.actor.items.get(i.dataset.itemId)?.reload(),\n      },\n      {\n        name: 'SWADE.RemoveAmmo',\n        icon: '<i class=\"fa-solid fa-right-from-bracket\"></i>',\n        condition: (i) => {\n          const item = this.actor.items.get(i.dataset.itemId);\n          const isWeapon = item?.type === 'weapon';\n          const loadedAmmo = item?.getFlag('swade', 'loadedAmmo');\n          return (\n            isWeapon &&\n            !!loadedAmmo &&\n            item.usesAmmoFromInventory &&\n            (item.system.reloadType === constants.RELOAD_TYPE.MAGAZINE ||\n              item.system.reloadType === constants.RELOAD_TYPE.BATTERY)\n          );\n        },\n        callback: (i) => this.actor.items.get(i.dataset.itemId)?.removeAmmo(),\n      },\n      {\n        name: 'SWADE.Ed',\n        icon: '<i class=\"fa-solid fa-edit\"></i>',\n        callback: (i) => {\n          const itemId = i.dataset.itemId;\n          const effectId = i.dataset.effectId;\n          if (itemId) this.actor.items.get(itemId)?.sheet?.render(true);\n          if (effectId) {\n            const allEffects: ActiveEffect[] = Array.from(\n              this.actor.allApplicableEffects(),\n            );\n            allEffects\n              .find((ef) => ef.id === effectId)\n              ?.sheet?.render({ force: true });\n          }\n        },\n      },\n      {\n        name: 'SWADE.Duplicate',\n        icon: '<i class=\"fa-solid fa-copy\"></i>',\n        condition: (i) =>\n          !!this.actor.items.get(i.dataset.itemId)?.isPhysicalItem,\n        callback: async (i) => {\n          const item = this.actor.items.get(i.dataset.itemId);\n          const cloned = await item?.clone(\n            { name: game.i18n.format('DOCUMENT.CopyOf', { name: item.name }) },\n            { save: true },\n          );\n          cloned?.sheet?.render(true);\n        },\n      },\n      {\n        name: 'SWADE.Del',\n        icon: '<i class=\"fa-solid fa-trash\"></i>',\n        callback: (i) => {\n          const itemId = i.dataset.itemId;\n          const effectId = i.dataset.effectId;\n          if (itemId) this.actor.items.get(itemId)?.deleteDialog();\n          if (effectId) {\n            const allEffects: ActiveEffect[] = Array.from(\n              this.actor.allApplicableEffects(),\n            );\n            allEffects.find((ef) => ef.id === effectId)?.deleteDialog();\n          }\n        },\n      },\n    ];\n\n    foundry.applications.ux.ContextMenu.implementation.create(\n      this,\n      html,\n      'li.item',\n      items,\n      { jQuery: false },\n    );\n  }\n\n  #setupAccordions(html: HTMLFormElement) {\n    const elements = html.querySelectorAll<HTMLDetailsElement>(\n      'details[data-collapsible-id]',\n    );\n    for (const el of elements) {\n      const id = el.dataset.collapsibleId;\n      if (!id) continue;\n      this._accordions[id] = {\n        ...this._accordions[id],\n        object: new Accordion(el, '.content', {\n          onOpen: (details) => {\n            this.#onOpenAccordion(details);\n            this._accordions[id].open = true;\n          },\n          onClose: () => (this._accordions[id].open = false),\n        }),\n      };\n    }\n  }\n\n  async #onOpenAccordion(element: HTMLDetailsElement) {\n    if (element.dataset.enriched === 'true') return;\n    const docId =\n      element.closest('li')?.dataset.itemId ??\n      element.closest('li')?.dataset.effectId;\n    if (!docId) return;\n    const doc =\n      this.actor.items.get(docId) ??\n      Array.from(this.actor.allApplicableEffects()).find((e) => e.id === docId);\n    const text =\n      doc instanceof SwadeItem ? doc?.system?.description : doc?.description;\n    if (!text) return;\n    element.querySelector<HTMLElement>(\n      '.content .description, .content.description',\n    )!.innerHTML = await this.#enrichText(text);\n    element.setAttribute('data-enriched', true.toString());\n  }\n}\n\ninterface SheetEffect {\n  id: string;\n  img: string | undefined | null;\n  description: string;\n  disabled: boolean;\n  favorite: boolean;\n  origin?: string;\n  source?: {\n    name: string;\n    id: string;\n  };\n  name: string;\n  tooltip?: string;\n  duration?: {\n    expiration: number; // constants.STATUS_EFFECT_EXPIRATION\n    rounds: number;\n    startRound: number;\n    startTurn: number;\n    remaining: number;\n  };\n}\n\ninterface SheetPowers {\n  hasPowersWithoutArcane: boolean;\n  arcaneBackgrounds: Record<string, SheetArcaneBackground>;\n  showGeneral: boolean;\n}\n\ninterface SheetArcaneBackground {\n  valuePath: string;\n  value: any;\n  maxPath: string;\n  max: any;\n  powers: SwadeItem[];\n}\n\ntype OptionsPartial = Partial<ActorSheet<DocumentSheetOptions<SwadeActor>>>;\n\ninterface SwadeActorSheetData extends OptionsPartial {\n  attributes: Record<string, TraitDisplay>;\n  skills: SkillDisplay[];\n  itemTypes: Record<string, SwadeItem[]>;\n  parryTooltip: string;\n  toughnessTooltip: string;\n  armorTooltip: string;\n  settingrules: Record<string, unknown>;\n  currentBennies: number[];\n  powers: SheetPowers;\n  hasAdditionalStats: boolean;\n  additionalStats: AdditionalStats;\n  bennyImageURL: string;\n  useAttributeShorts: boolean;\n  enrichedText: {\n    appearance: string;\n    goals: string;\n    notes: string;\n    biography: string;\n    advances?: string;\n  };\n  advances: {\n    expanded: boolean;\n    list: Array<{\n      rank: string;\n      list: Advance[];\n    }>;\n  };\n  sheetEffects: {\n    temporary: SheetEffect[];\n    permanent: SheetEffect[];\n    favorite: SheetEffect[];\n  };\n  wealthDieTypes: DieSidesOption[];\n}\n\ninterface TraitDisplay {\n  die: number;\n  modifier: number;\n  tooltip: string;\n}\ninterface SkillDisplay extends TraitDisplay {\n  label: string;\n  img: string;\n  description: string;\n  attribute: LinkedAttribute;\n  isCoreSkill: boolean;\n  isOwner: boolean;\n  id: string;\n}\n","import type { AnyObject, DeepPartial } from 'fvtt-types/utils';\nimport type {\n  SwadeApplicationTab,\n  SwadeDocumentSheetConfiguration,\n} from '../../globals';\nimport ActiveEffectWizard from '../apps/ActiveEffectWizard';\nimport { Accordion } from '../style/Accordion';\n\ntype DocumentSheetRenderOptions =\n  foundry.applications.api.DocumentSheetV2.RenderOptions;\n\n/* eslint-disable @typescript-eslint/naming-convention */\n\nconst { HandlebarsApplicationMixin } = foundry.applications.api;\n\nexport function SwadeBaseSheetMixin<\n  Document extends Actor.Implementation | Item.Implementation,\n  RenderContext extends AnyObject,\n>(Base: typeof foundry.applications.api.DocumentSheetV2) {\n  return class SwadeBaseSheet extends HandlebarsApplicationMixin(Base)<\n    Document,\n    RenderContext,\n    SwadeDocumentSheetConfiguration<Document>,\n    DocumentSheetRenderOptions\n  > {\n    static override DEFAULT_OPTIONS: DeepPartial<\n      SwadeDocumentSheetConfiguration<Document>\n    > = {\n      classes: ['swade'],\n      form: {\n        submitOnChange: true,\n        closeOnSubmit: false,\n      },\n      actions: {\n        editImg: { handler: SwadeBaseSheet._onEditImage, buttons: [0, 2] },\n        openAegis: SwadeBaseSheet._openAegis,\n      },\n    };\n\n    static override TABS: Record<string, Partial<SwadeApplicationTab>> = {};\n\n    static async _onEditImage(\n      this: SwadeBaseSheet,\n      event: PointerEvent,\n      _target: HTMLImageElement,\n    ) {\n      if (!this.document.img) return;\n      if (event.button === 2) {\n        //ContextMenu event\n        if (!this.document.img) return;\n        new ImagePopout(this.document.img, {\n          title: this.document.name!,\n          shareable: this.document.isOwner ?? game.user?.isGM,\n          uuid: this.document.uuid,\n        }).render(true);\n      } else {\n        const { img } =\n          (\n            this.document.constructor as\n              | Actor.ImplementationClass\n              | Item.ImplementationClass\n          ).getDefaultArtwork?.(this.document.toObject()) ?? {};\n        const fp = new FilePicker({\n          current: this.document.img,\n          type: 'image',\n          redirectToRoot: img ? [img] : [],\n          callback: (path) => this.document.update({ img: path }),\n          top: this.position.top + 40,\n          left: this.position.left + 10,\n        });\n        await fp.browse();\n      }\n    }\n\n    static async _openAegis(\n      this: SwadeBaseSheet,\n      _event: PointerEvent,\n      _target: HTMLImageElement,\n    ) {\n      new ActiveEffectWizard({ document: this.document }).render({\n        force: true,\n      });\n    }\n\n    // This is marked as private because there's no real need\n    // for subclasses or external hooks to mess with it directly\n    #dragDrop: DragDrop[];\n\n    /** Returns an array of DragDrop instances */\n    get dragDrop() {\n      return this.#dragDrop;\n    }\n\n    override tabGroups: Record<string, string> = {};\n\n    constructor(options) {\n      super(options);\n      this.#dragDrop = this.#createDragDropHandlers();\n    }\n\n    protected override async _prepareContext(\n      options: DocumentSheetRenderOptions,\n    ) {\n      const context = await super._prepareContext(options);\n      return foundry.utils.mergeObject(context, {\n        tabs: this._getTabs(),\n        document: this.document,\n      });\n    }\n\n    protected override _preSyncPartState(\n      partId: string,\n      newElement: HTMLElement,\n      priorElement: HTMLElement,\n      state: SwadeBaseSheetMixin.PartState,\n    ) {\n      super._preSyncPartState(partId, newElement, priorElement, state);\n\n      state.collapsibles = {};\n      const collapsibles = priorElement.querySelectorAll('details');\n      for (const details of collapsibles) {\n        const id = details.dataset.summaryId;\n        if (!id) continue;\n        state.collapsibles[id] = details.open;\n      }\n    }\n\n    protected override _syncPartState(\n      partId: string,\n      newElement: HTMLElement,\n      priorElement: HTMLElement,\n      state: SwadeBaseSheetMixin.PartState,\n    ) {\n      super._syncPartState(partId, newElement, priorElement, state);\n\n      const collapsibles = newElement.querySelectorAll('details');\n      for (const details of collapsibles) {\n        const id = details.dataset.summaryId ?? '';\n        if (id in state.collapsibles) {\n          details.open = state.collapsibles[id];\n        }\n      }\n    }\n\n    protected override _onFirstRender(\n      context: unknown,\n      options: unknown,\n    ): void {\n      super._onFirstRender(context, options);\n\n      const collapsibles = this.element.querySelectorAll('details');\n      for (const details of collapsibles) {\n        details.open = true;\n      }\n    }\n\n    /**\n     * Actions performed after any render of the Application.\n     * Post-render steps are not awaited by the render process.\n     * @param context Prepared context data\n     * @param options Provided render options\n     */\n    protected override _onRender(\n      context: DeepPartial<RenderContext>,\n      options: DeepPartial<DocumentSheetRenderOptions>,\n    ) {\n      super._onRender(context, options);\n      this.#dragDrop.forEach((d) => d.bind(this.element));\n      this.#disableOverrides();\n      this.element.querySelectorAll('details').forEach((el) => {\n        new Accordion(el, '.content', { duration: 200 });\n      });\n    }\n\n    /**\n     * Define whether a user is able to begin a dragstart workflow for a given drag selector\n     * @param selector The candidate HTML selector for dragging\n     * @returns Can the current user drag this selector?\n     */\n    protected _canDragStart(_selector: string): boolean {\n      return this.isEditable;\n    }\n\n    /**\n     * Define whether a user is able to conclude a drag-and-drop workflow for a given drop selector\n     * @param selector  The candidate HTML selector for the drop target\n     * @returns Can the current user drop on this selector?\n     */\n    protected _canDragDrop(_selector: string): boolean {\n      return this.isEditable;\n    }\n\n    /**\n     * Callback actions which occur at the beginning of a drag start workflow.\n     * @param event The originating DragEvent\n     */\n    protected _onDragStart(event: DragEvent) {\n      const docRow = (event.currentTarget as HTMLElement).closest('li');\n      if ('link' in (event.target as HTMLElement).dataset) return;\n\n      if (!docRow) return;\n\n      // Chained operation\n      const dragData = this._getEmbeddedDocument(docRow)?.toDragData();\n\n      if (!dragData) return;\n\n      // Set data transfer\n      event.dataTransfer?.setData('text/plain', JSON.stringify(dragData));\n    }\n\n    /**\n     * Callback actions which occur when a dragged element is over a drop target.\n     * @param event The originating DragEvent\n     */\n    protected _onDragOver(_event: DragEvent) {}\n\n    protected async _onDrop(_event: DragEvent): Promise<void> {}\n\n    /**\n     * Fetches the embedded document representing the containing HTML element\n     * @param target  The element subject to search\n     * @returns The embedded Item or ActiveEffect\n     */\n    protected _getEmbeddedDocument(\n      target: HTMLElement,\n    ): Item | ActiveEffect | void {\n      const docRow = target.closest<HTMLLIElement>('li[data-document-class]');\n      if (!docRow) return;\n      // TODO: Once `this.document` correctly resolves this will throw more type errors\n      if (docRow.dataset.documentClass === 'Item') {\n        return this.document.items.get(docRow.dataset.itemId);\n      } else if (docRow.dataset.documentClass === 'ActiveEffect') {\n        const parent =\n          docRow.dataset.parentId === this.document.id\n            ? this.document\n            : this.document.items.get(docRow?.dataset.parentId);\n        return parent.effects.get(docRow?.dataset.effectId);\n      } else return console.warn('Could not find document class');\n    }\n\n    /**\n     * Utility method for _prepareContext to create the tab navigation.\n     */\n    protected _getTabs() {\n      return Object.values(\n        (this.constructor as typeof SwadeBaseSheet).TABS,\n      ).reduce(\n        (acc: Record<string, SwadeApplicationTab>, v: SwadeApplicationTab) => {\n          const isActive = this.tabGroups[v.group] === v.id;\n          acc[v.id] = {\n            ...v,\n            active: isActive,\n            cssClass: isActive ? 'active' : '',\n            tabCssClass: isActive ? 'tab scrollable active' : 'tab scrollable',\n          };\n          return acc;\n        },\n        {},\n      );\n    }\n\n    /**\n     * Create drag-and-drop workflow handlers for this Application\n     * @returns An array of DragDrop handlers\n     */\n    #createDragDropHandlers(): DragDrop[] {\n      return (this.options.dragDrop ?? []).map((d) => {\n        d.permissions = {\n          dragstart: this._canDragStart.bind(this),\n          drop: this._canDragDrop.bind(this),\n        };\n        d.callbacks = {\n          dragstart: this._onDragStart.bind(this),\n          dragover: this._onDragOver.bind(this),\n          drop: this._onDrop.bind(this),\n        };\n        return new DragDrop(d);\n      });\n    }\n\n    /*Disables inputs subject to active effects*/\n    #disableOverrides() {\n      const flatOverrides = foundry.utils.flattenObject(\n        this.document.overrides ?? {},\n      );\n      for (const override of Object.keys(flatOverrides)) {\n        const input: HTMLInputElement | null = this.element.querySelector(\n          `[name=\"${override}\"]`,\n        );\n        if (input) input.disabled = true;\n      }\n    }\n  };\n}\n\nexport declare namespace SwadeBaseSheetMixin {\n  interface PartState\n    extends foundry.applications.api.HandlebarsApplicationMixin.PartState {\n    collapsibles: Record<string, boolean>;\n  }\n}\n","import { DeepPartial } from 'fvtt-types/utils';\nimport { SwadeDocumentSheetConfiguration, Updates } from '../../globals';\nimport { SwadeActorTweaks } from '../apps/SwadeDocumentTweaks';\nimport type SwadeUser from '../documents/SwadeUser';\nimport type SwadeActor from '../documents/actor/SwadeActor';\nimport type SwadeItem from '../documents/item/SwadeItem';\nimport { SwadeBaseSheetMixin } from './SwadeBaseSheetMixin';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst ActorSheetV2 = foundry.applications.sheets.ActorSheetV2;\n\nexport class SwadeActorSheetV2<\n  RenderContext extends\n    SwadeActorSheetV2.RenderContext = SwadeActorSheetV2.RenderContext,\n> extends SwadeBaseSheetMixin<SwadeActor, RenderContext>(ActorSheetV2) {\n  // declare element: HTMLFormElement;\n  static override DEFAULT_OPTIONS: DeepPartial<\n    SwadeDocumentSheetConfiguration<SwadeActor>\n  > = {\n    classes: ['actor'],\n    dragDrop: [{ dragSelector: '[data-drag]', dropSelector: null }],\n    window: {\n      controls: [\n        // v12 bug requires redefining existing window controls due to the array overwriting instead of merging\n        {\n          icon: 'fa-solid fa-gears',\n          label: 'SWADE.Tweaks',\n          action: 'openTweaks',\n        },\n        {\n          action: 'configurePrototypeToken',\n          icon: 'fa-solid fa-user-circle',\n          label: 'TOKEN.TitlePrototype',\n          ownership: 'OWNER',\n        },\n        {\n          action: 'showPortraitArtwork',\n          icon: 'fa-solid fa-image',\n          label: 'SIDEBAR.CharArt',\n          ownership: 'OWNER',\n        },\n        {\n          action: 'showTokenArtwork',\n          icon: 'fa-solid fa-image',\n          label: 'SIDEBAR.TokenArt',\n          ownership: 'OWNER',\n        },\n      ],\n    },\n    actions: {\n      createDocument: SwadeActorSheetV2.createEmbeddedDocument,\n      showItem: SwadeActorSheetV2.showItem,\n      openItem: SwadeActorSheetV2.openItem,\n      deleteItem: SwadeActorSheetV2.deleteItem,\n      openEffect: SwadeActorSheetV2.openItem,\n      deleteEffect: SwadeActorSheetV2.deleteItem,\n      toggleEffect: SwadeActorSheetV2.toggleEffect,\n      openTweaks: SwadeActorSheetV2.openTweaks,\n      rollAdditionalStat: SwadeActorSheetV2.rollAdditionalStat,\n    },\n  };\n\n  static async createEmbeddedDocument(\n    this: SwadeActorSheetV2,\n    event: PointerEvent,\n    target: HTMLElement,\n  ) {\n    event.preventDefault(); // helps buttons in the headers of <details> elements\n    const documentClass = getDocumentClass(\n      target.dataset.documentClass as 'Item' | 'ActiveEffect',\n    );\n    const docData = {\n      name: documentClass.defaultName({\n        type: target.dataset.type,\n        parent: this.actor,\n      }),\n    };\n    // Loop through the dataset and add it to our docData\n    for (const [dataKey, value] of Object.entries(target.dataset)) {\n      // These data attributes are reserved for the action handling\n      if (['action', 'documentClass', 'renderSheet'].includes(dataKey))\n        continue;\n      // Nested properties use dot notation like `data-system.prop`\n      foundry.utils.setProperty(docData, dataKey, value);\n    }\n\n    await documentClass.create(docData, {\n      parent: this.actor,\n      renderSheet: target.dataset.renderSheet,\n    });\n  }\n\n  static showItem(\n    this: SwadeActorSheetV2,\n    _event: PointerEvent,\n    target: HTMLElement,\n  ) {\n    (this._getEmbeddedDocument(target) as SwadeItem)?.show();\n  }\n\n  static openItem(\n    this: SwadeActorSheetV2,\n    _event: PointerEvent,\n    target: HTMLElement,\n  ) {\n    this._getEmbeddedDocument(target)?.sheet?.render(true);\n  }\n\n  static async deleteItem(\n    this: SwadeActorSheetV2,\n    _event: PointerEvent,\n    target: HTMLElement,\n  ) {\n    this._getEmbeddedDocument(target)?.deleteDialog();\n  }\n\n  static openEffect(\n    this: SwadeActorSheetV2,\n    _event: PointerEvent,\n    target: HTMLElement,\n  ) {\n    this._getEmbeddedDocument(target)?.sheet?.render(true);\n  }\n\n  static async deleteEffect(\n    this: SwadeActorSheetV2,\n    _event: PointerEvent,\n    target: HTMLElement,\n  ) {\n    this._getEmbeddedDocument(target)?.deleteDialog();\n  }\n\n  static async toggleEffect(\n    this: SwadeActorSheetV2,\n    _event: PointerEvent,\n    target: HTMLElement,\n  ) {\n    const effect = this._getEmbeddedDocument(\n      target,\n    ) as ActiveEffect.ConfiguredInstance;\n    effect.update({ disabled: !effect.disabled });\n  }\n\n  static async openTweaks(\n    this: SwadeActorSheetV2,\n    _event: PointerEvent,\n    _target: HTMLElement,\n  ) {\n    new SwadeActorTweaks({ document: this.document }).render({ force: true });\n  }\n\n  static async rollAdditionalStat(\n    this: SwadeActorSheetV2,\n    _event: PointerEvent,\n    target: HTMLElement,\n  ) {\n    await this.actor.system.rollAdditionalStat(target.dataset.stat);\n  }\n\n  override async _prepareContext(options) {\n    const context = {\n      //add the game user\n      user: game.user,\n      // Validates both permissions and compendium status\n      editable: this.isEditable,\n      owner: this.isOwner,\n      limited: this.document.limited,\n      // Add the actor document.\n      actor: this.actor,\n      items: Array.from(this.actor.items.values()).sort(\n        (a, b) => a.sort - b.sort,\n      ),\n      // Add the actor's data to context.data for easier access, as well as flags.\n      system: this.actor.system,\n      flags: this.actor.flags,\n      // Adding a pointer to CONFIG.SWADE\n      config: CONFIG.SWADE,\n    };\n    return foundry.utils.mergeObject(\n      await super._prepareContext(options),\n      context,\n    );\n  }\n\n  /**\n   * Callback actions which occur when a dragged element is dropped on a target.\n   * @param event The originating DragEvent\n   */\n  protected override async _onDrop(event: DragEvent) {\n    const data = foundry.applications.ux.TextEditor.implementation.getDragEventData(event) as object;\n    const actor = this.actor;\n    const allowed = Hooks.call('dropActorSheetData', actor, this, data);\n    if (allowed === false) return;\n\n    // Handle different data types\n    switch (data['type']) {\n      case 'ActiveEffect':\n        await this._onDropActiveEffect(event, data);\n        break;\n      case 'Actor':\n        await this._onDropActor(event, data);\n        break;\n      case 'Item':\n        await this._onDropItem(event, data);\n        break;\n      case 'Folder':\n        await this._onDropFolder(event, data);\n        break;\n    }\n  }\n\n  /**\n   * Handle the dropping of ActiveEffect data onto an Actor Sheet\n   * @param event The concluding DragEvent which contains drop data\n   * @param data  The data transfer extracted from the event\n   * @returns The created ActiveEffect object or false if it couldn't be created.\n   */\n  protected async _onDropActiveEffect(\n    event: DragEvent,\n    data: object,\n  ): Promise<ActiveEffect | boolean> {\n    const aeCls = getDocumentClass('ActiveEffect');\n    const effect = await aeCls.fromDropData(data);\n    if (!this.actor.isOwner || !effect) return false;\n    if (effect.target === this.actor)\n      return this._onSortActiveEffect(event, effect);\n    return aeCls.create(effect, { parent: this.actor });\n  }\n\n  /**\n   * Handle a drop event for an existing embedded Active Effect to sort that Active Effect relative to its siblings\n   */\n  protected async _onSortActiveEffect(event: DragEvent, effect: ActiveEffect) {\n    const dropTarget = (event.target as HTMLElement)?.closest<HTMLElement>(\n      '[data-effect-id]',\n    );\n    if (!dropTarget) return;\n    const target = this._getEmbeddedDocument(dropTarget);\n    if (!target) return;\n\n    // Don't sort on yourself\n    if (effect.uuid === target.uuid) return;\n\n    // Identify sibling items based on adjacent HTML elements\n    const siblings: ActiveEffect[] = [];\n    for (const el of dropTarget.parentElement!.children) {\n      const siblingId = (el as HTMLElement).dataset.effectId;\n      const parentId = (el as HTMLElement).dataset.parentId;\n      if (\n        siblingId &&\n        parentId &&\n        (siblingId !== effect.id || parentId !== effect.parent?.id)\n      ) {\n        const sibling = this._getEmbeddedDocument(el as HTMLElement);\n        if (sibling) siblings.push(sibling as ActiveEffect);\n      }\n    }\n\n    // Perform the sort\n    const sortUpdates = SortingHelpers.performIntegerSort(effect, {\n      target,\n      siblings,\n    });\n\n    // Split the updates up by parent document\n    const directUpdates: Updates[] = [];\n\n    const grandchildUpdateData = sortUpdates.reduce((items, u) => {\n      const parentId = u.target.parent.id;\n      const update = { _id: u.target.id, ...u.update };\n      if (parentId === this.actor.id) {\n        directUpdates.push(update);\n        return items;\n      }\n      if (items[parentId]) items[parentId].push(update);\n      else items[parentId] = [update];\n      return items;\n    }, {});\n\n    // Effects-on-items updates\n    for (const [itemId, updates] of Object.entries(grandchildUpdateData)) {\n      await this.actor.items\n        .get(itemId)\n        .updateEmbeddedDocuments('ActiveEffect', updates);\n    }\n\n    // Update on the main actor\n    return this.actor.updateEmbeddedDocuments('ActiveEffect', directUpdates);\n  }\n\n  /**\n   * Handle dropping of an Actor data onto another Actor sheet\n   * @param event The concluding DragEvent which contains drop data\n   * @param data  The data transfer extracted from the event\n   * @returns A data object which describes the result of the drop, or false if the drop was not permitted.\n   */\n  protected async _onDropActor(\n    _event: DragEvent,\n    _data: object,\n  ): Promise<object | boolean> {\n    return false;\n  }\n\n  /**\n   * Handle dropping of an item reference or item data onto an Actor Sheet\n   * @param event The concluding DragEvent which contains drop data\n   * @param data  The data transfer extracted from the event\n   * @returns The created or updated Item instances, or false if the drop was not permitted.\n   */\n  protected async _onDropItem(\n    event: DragEvent,\n    data: object,\n  ): Promise<Item[] | boolean> {\n    if (!this.actor.isOwner) return false;\n    const item = await Item.implementation.fromDropData(data);\n\n    // Handle item sorting within the same Actor\n    if (this.actor.uuid === item.parent?.uuid)\n      return this._onSortItem(event, item);\n\n    // Create the owned item\n    return this._onDropItemCreate(item, event);\n  }\n\n  /**\n   * Handle dropping of a Folder on an Actor Sheet.\n   * The core sheet currently supports dropping a Folder of Items to create all items as owned items.\n   * @param event The concluding DragEvent which contains drop data\n   * @param data  The data transfer extracted from the event\n   */\n  protected async _onDropFolder(\n    event: DragEvent,\n    data: object,\n  ): Promise<Item[]> {\n    if (!this.actor.isOwner) return [];\n    const folder = await getDocumentClass('Folder').fromDropData(data);\n    if (folder.type !== 'Item') return [];\n    const droppedItemData = await Promise.all(\n      folder.contents.map(async (item) => {\n        if (!(document instanceof Item)) item = await fromUuid(item.uuid);\n        return item;\n      }),\n    );\n    return this._onDropItemCreate(droppedItemData, event);\n  }\n\n  /**\n   * Handle the final creation of dropped Item data on the Actor.\n   * This method is factored out to allow downstream classes the opportunity to override item creation behavior.\n   * @param itemData  The item data requested for creation\n   * @param event The concluding DragEvent which provided the drop data\n   */\n  protected async _onDropItemCreate(\n    itemData: object[] | object,\n    _event: DragEvent,\n  ): Promise<Item[]> {\n    itemData = itemData instanceof Array ? itemData : [itemData];\n    return this.actor.createEmbeddedDocuments('Item', itemData);\n  }\n\n  /**\n   * Handle a drop event for an existing embedded Item to sort that Item relative to its siblings\n   */\n  protected _onSortItem(event: Event, item: Item) {\n    // Get the drag source and drop target\n    const items = this.actor.items;\n    const dropTarget = event.target?.closest('[data-item-id]');\n    if (!dropTarget) return;\n    const target = items.get(dropTarget.dataset.itemId);\n\n    // Don't sort on yourself\n    if (item.id === target.id) return;\n\n    // Identify sibling items based on adjacent HTML elements\n    const siblings: Item[] = [];\n    for (const el of dropTarget.parentElement.children) {\n      const siblingId = el.dataset.itemId;\n      if (siblingId && siblingId !== item.id)\n        siblings.push(items.get(el.dataset.itemId));\n    }\n\n    // Perform the sort\n    const sortUpdates = SortingHelpers.performIntegerSort<Item>(item, {\n      target,\n      siblings,\n    });\n    const updateData = sortUpdates.map((u) => {\n      const update = u.update;\n      update._id = u.target._id;\n      return update;\n    });\n\n    // Perform the update\n    return this.actor.updateEmbeddedDocuments('Item', updateData);\n  }\n}\n\nexport namespace SwadeActorSheetV2 {\n  export type RenderContext = {\n    user: SwadeUser;\n    editable: boolean;\n    owner: boolean;\n    limited: boolean;\n    // Add the actor document.\n    actor: SwadeActor;\n    items: SwadeItem[];\n    // Add the actor's data to context.data for easier access, as well as flags.\n    system: SwadeActor['system'];\n    flags: SwadeActor['flags'];\n    // Adding a pointer to CONFIG.SWADE\n    config: typeof CONFIG.SWADE;\n  };\n}\n","import { DeepPartial } from 'fvtt-types/utils';\nimport {\n  PhysicalItem,\n  SwadeApplicationTab,\n  SwadeDocumentSheetConfiguration,\n} from '../../globals';\nimport { Logger } from '../Logger';\nimport { constants } from '../constants';\nimport { GroupMember } from '../data/actor/group';\nimport SwadeActor from '../documents/actor/SwadeActor';\nimport SwadeItem from '../documents/item/SwadeItem';\nimport { mapRange } from '../util';\nimport { SwadeActorSheetV2 } from './SwadeActorSheetV2';\nimport { SwadeBaseSheetMixin } from './SwadeBaseSheetMixin';\n\nexport class GroupSheet extends SwadeActorSheetV2<GroupSheetRenderContext> {\n  declare actor: SwadeActor<'group'>;\n  static override DEFAULT_OPTIONS: DeepPartial<\n    SwadeDocumentSheetConfiguration<SwadeActor<'group'>>\n  > = {\n    classes: ['group', 'standard-form'],\n    position: { height: 700, width: 700 },\n    window: { resizable: true },\n    actions: {\n      deleteMember: GroupSheet.deleteMember,\n      openMember: GroupSheet.openMember,\n      showMemberImage: GroupSheet.showMemberImage,\n      toggleLock: GroupSheet.toggleLock,\n    },\n  };\n\n  static override PARTS = {\n    header: { template: 'systems/swade/templates/actors/group/header.hbs' },\n    tabs: { template: 'templates/generic/tab-navigation.hbs' },\n    stash: { template: 'systems/swade/templates/actors/group/tab-stash.hbs' },\n    members: {\n      template: 'systems/swade/templates/actors/group/tab-members.hbs',\n    },\n    supplies: {\n      template: 'systems/swade/templates/actors/group/tab-supplies.hbs',\n    },\n    description: {\n      template: 'systems/swade/templates/actors/group/tab-description.hbs',\n    },\n  };\n\n  static override TABS: Record<string, Partial<SwadeApplicationTab>> = {\n    members: {\n      id: 'members',\n      group: 'primary',\n      label: 'SWADE.Group.Sheet.Members.Header',\n    },\n    stash: {\n      id: 'stash',\n      group: 'primary',\n      label: 'SWADE.Group.Sheet.Stash.Header',\n    },\n    supplies: {\n      id: 'supplies',\n      group: 'primary',\n      label: 'SWADE.Supplies.Label',\n    },\n    description: { id: 'description', group: 'primary', label: 'SWADE.Desc' },\n  };\n\n  static async deleteMember(\n    this: GroupSheet,\n    _event: PointerEvent,\n    target: HTMLElement,\n  ) {\n    const id =\n      target.closest<HTMLElement>('[data-member-uuid]')?.dataset.memberUuid;\n    if (!id) return;\n    if (!this.actor.system.members.has(id)) return;\n    const existing = Array.from(this.actor.system.members.keys()).map((v) =>\n      v.toString(),\n    );\n    const index = existing.indexOf(id);\n    if (index < 0) return;\n    const member = this.actor.system.members.get(id)?.actor;\n    const name = member ? member.name : id;\n    const type = game.i18n.localize('DOCUMENT.Actor');\n    const proceed = await foundry.applications.api.DialogV2.confirm({\n      rejectClose: false,\n      window: {\n        title: `${game.i18n.format('DOCUMENT.Delete', { type })}: ${name}`,\n      },\n      content: `<h3>${game.i18n.localize('AreYouSure')}</h3><p>${game.i18n.format('SWADE.DeleteFromParentWarning', { name, parent: this.actor.name })}</p>`,\n    });\n    if (!proceed) return;\n    existing.splice(index, 1);\n    await this.actor.update({ 'system.members': existing });\n  }\n\n  static openMember(\n    this: GroupSheet,\n    _event: PointerEvent,\n    target: HTMLElement,\n  ) {\n    const id =\n      target.closest<HTMLElement>('[data-member-uuid]')?.dataset.memberUuid;\n    if (!id) return;\n    this.actor.system.members.get(id)?.actor?.sheet?.render(true);\n  }\n\n  static showMemberImage(\n    this: GroupSheet,\n    _event: PointerEvent,\n    target: HTMLElement,\n  ) {\n    const id =\n      target.closest<HTMLElement>('[data-member-uuid]')?.dataset.memberUuid;\n    if (!id) return;\n    const actor = this.actor.system.members.get(id)?.actor;\n    if (!actor) return;\n    new ImagePopout(actor.img as string, {\n      title: actor.name!,\n      shareable: actor.isOwner ?? game.user?.isGM,\n      uuid: actor.uuid,\n    }).render(true);\n  }\n\n  static toggleLock(\n    this: GroupSheet,\n    _event: PointerEvent,\n    _target: HTMLElement,\n  ) {\n    if (!game.user!.isGM) return;\n    this.actor.update({ 'system.locked': !this.actor.system.locked });\n  }\n\n  override tabGroups = {\n    primary: 'members',\n  };\n\n  override async _prepareContext(options: any) {\n    const baseContext = await super._prepareContext(options);\n\n    const settingrules = {\n      wealthType: game.settings.get('swade', 'wealthType'),\n      currencyName: game.settings.get('swade', 'currencyName'),\n    };\n\n    return foundry.utils.mergeObject(baseContext, {\n      members: this._prepareMembers(),\n      itemTypes: await this._prepareItems(),\n      benny: game.settings.get('swade', 'bennyImageSheet'),\n      unlocked: !this.actor.system.locked,\n      description: await foundry.applications.ux.TextEditor.implementation.enrichHTML(this.actor.system.description, {\n        rollData: this.actor.getRollData(),\n        secrets: this.isEditable,\n      }),\n      settingrules, // Add the setting rules here\n    });\n  }\n\n  protected override _onFirstRender(\n    context: GroupSheetRenderContext,\n    options: DeepPartial<foundry.applications.api.DocumentSheetV2.RenderOptions>,\n  ) {\n    super._onFirstRender(context, options);\n    for (const member of this.actor.system.members.values()) {\n      if (!member.actor) continue;\n      member.actor.apps[this.id] = this;\n    }\n  }\n\n  protected override _onRender(\n    context: GroupSheetRenderContext,\n    options: DeepPartial<foundry.applications.api.DocumentSheetV2.RenderOptions>,\n  ) {\n    super._onRender(context, options);\n    if (this.actor.system.locked) this.element.classList.add('locked');\n    else this.element.classList.remove('locked');\n  }\n\n  protected override _syncPartState(\n    partId: string,\n    newElement: HTMLElement,\n    priorElement: HTMLElement,\n    state: GroupSheet.PartState,\n  ) {\n    super._syncPartState(partId, newElement, priorElement, state);\n    switch (partId) {\n      case 'members': {\n        const members = newElement.querySelectorAll<HTMLLIElement>('.member');\n        for (const member of members) {\n          const uuid = member.dataset.memberUuid!;\n          const selector = `.member[data-member-uuid=\"${uuid}\"] .wounds`;\n          const oldBar = priorElement.querySelector<HTMLElement>(selector);\n          const newBar = member.querySelector<HTMLElement>('.wounds');\n\n          const oldBackground = oldBar?.style.getPropertyValue('--_background');\n          const newBackground =\n            newBar?.style?.getPropertyValue('--_background');\n\n          const oldColor = oldBar?.style?.getPropertyValue('--_wounds-color');\n          const newColor = newBar?.style?.getPropertyValue('--_wounds-color');\n\n          const frames: Keyframe[] = [\n            { background: oldBackground, color: oldColor },\n            { background: newBackground, color: newColor },\n          ];\n          oldBar?.animate(frames, { duration: 250, easing: 'ease-in-out' });\n        }\n        break;\n      }\n    }\n  }\n\n  protected override _onClose(_options: unknown) {\n    for (const member of this.actor.system.members.values()) {\n      if (!member.actor) continue;\n      delete member.actor.apps[this.id];\n    }\n  }\n\n  protected async _prepareItems(): Promise<ItemTypes> {\n    const items = Object.fromEntries<RenderedItem[]>(\n      constants.PHYSICAL_ITEMS.map((t: PhysicalItem) => [t, []]),\n    ) as ItemTypes;\n\n    for (const type of constants.PHYSICAL_ITEMS) {\n      for (const item of this.actor.itemTypes[\n        type\n      ] as SwadeItem<PhysicalItem>[]) {\n        items[type].push({\n          name: item.name as string,\n          id: item.id as string,\n          img: item.img as string,\n          quantity: item.system.quantity as number,\n          description: await foundry.applications.ux.TextEditor.implementation.enrichHTML(item.system.description, {\n            secrets: this.isEditable,\n          }),\n        });\n      }\n    }\n\n    return items;\n  }\n\n  protected _prepareMembers(): RenderedMember[] {\n    const members: RenderedMember[] = [];\n    const systemMembers = this.actor.system.members as Map<string, GroupMember>;\n    const redHueThreshold = 20;\n    for (const [uuid, member] of systemMembers.entries()) {\n      const wounds = member.actor?.system?.wounds;\n      const background = SwadeActor.getWoundsColor(\n        wounds?.value ?? 1,\n        wounds?.max ?? 1,\n      );\n      const actor = member.actor;\n      members.push({\n        uuid,\n        cssClass: actor ? '' : 'broken',\n        name: actor?.name ?? game.i18n.localize('Unknown'),\n        img: actor?.img ?? '/icons/svg/mystery-man.svg',\n        profile: member.actor\n          ? [\n              actor?.system?.advances?.rank,\n              actor?.ancestry?.name ?? actor?.system.details?.species.name,\n              actor?.archetype?.name ?? actor?.system?.details?.archetype,\n            ]\n              .filter(Boolean)\n              .join(' ')\n          : uuid,\n        toughness: actor?.system.stats?.toughness?.value ?? NaN,\n        armor: actor?.armorPerLocation.torso ?? NaN,\n        pace: actor?.system.pace.default ?? NaN,\n        parry: actor?.system.stats?.parry?.value ?? NaN,\n        bennies: actor?.bennies ?? NaN,\n        wounds: {\n          max: wounds?.max ?? NaN,\n          value: wounds?.value ?? NaN,\n          background: background.toRGBA(0.8),\n          color:\n            mapRange(background.hsv[0], 0, 1, 0, 360) <= redHueThreshold\n              ? 'var(--color-light-2)'\n              : 'var(--color-dark-2)',\n        },\n      });\n    }\n    return members;\n  }\n\n  protected override async _onDropActor(\n    _event: DragEvent,\n    data: object,\n  ): Promise<object | boolean> {\n    if (!this.actor.isOwner || this.actor.system.locked) return false;\n    const actor = await getDocumentClass('Actor').fromDropData(data);\n    if (actor.type === 'group' || actor.type === 'vehicle') {\n      Logger.warn(\n        `You cannot add ${game.i18n.localize('TYPES.Actor.' + actor.type)} Actors to a group!`,\n        { toast: true, localize: true },\n      );\n      return false;\n    }\n    await this.actor.update({\n      'system.members': [...this.actor.system._source.members, actor.uuid],\n    });\n    return true;\n  }\n}\n\ninterface GroupSheetRenderContext extends SwadeActorSheetV2.RenderContext {\n  members: SwadeActor[];\n  itemTypes: SwadeItem[];\n  benny: string;\n  unlocked: boolean;\n  description: string;\n}\n\ntype ItemTypes = Record<PhysicalItem, RenderedItem[]>;\n\ninterface RenderedItem {\n  id: string;\n  name: string;\n  img: string;\n  quantity: number;\n  description: string;\n}\n\ninterface RenderedMember {\n  uuid: string;\n  name: string;\n  img: string;\n  profile: string;\n  toughness: number;\n  armor: number;\n  pace: number;\n  parry: number;\n  bennies: number;\n  wounds: {\n    value: number;\n    max: number;\n    background: string;\n    color: string;\n  };\n  cssClass?: string;\n}\n\ndeclare namespace GroupSheet {\n  interface PartState extends SwadeBaseSheetMixin.PartState {}\n}\n","import { SWADE } from '../config';\nimport { constants } from '../constants';\nimport { SLUG_REGEX } from '../data/item/common';\nimport { EdgeData } from '../data/item/edge';\nimport SwadeItem from '../documents/item/SwadeItem';\nimport { Requirement } from '../documents/item/SwadeItem.interface';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst { ApplicationV2, HandlebarsApplicationMixin } = foundry.applications.api;\n\nexport class RequirementsEditor extends HandlebarsApplicationMixin(\n  ApplicationV2,\n) {\n  constructor({ edge, ...options }: RequirementsEditorConfiguration) {\n    if (!(edge['system'] instanceof EdgeData)) {\n      throw new TypeError('Invalid item type ' + edge['type']);\n    }\n    super(options);\n\n    this.#requirements = foundry.utils.getProperty(\n      edge,\n      'system.requirements',\n    ) as Requirement[];\n    this.#edge = edge;\n  }\n\n  #requirements: Partial<Requirement>[];\n  #edge: SwadeItem;\n\n  static override DEFAULT_OPTIONS = {\n    window: {\n      title: 'SWADE.Req',\n      contentClasses: ['standard-form'],\n    },\n    position: {\n      width: 600,\n      height: 'auto',\n    },\n    classes: ['swade', 'requirements-editor', 'swade-application'],\n    tag: 'form',\n    form: {\n      handler: RequirementsEditor.onSubmit,\n      submitOnChange: true,\n      closeOnSubmit: false,\n      submitOnClose: false,\n    },\n    actions: {\n      add: RequirementsEditor.#addRequirement,\n      delete: RequirementsEditor.#deleteRequirement,\n    },\n  };\n\n  static override PARTS = {\n    form: { template: 'systems/swade/templates/apps/requirements-editor.hbs' },\n    footer: { template: 'templates/generic/form-footer.hbs' },\n  };\n\n  get edge() {\n    return this.#edge;\n  }\n\n  override _onChangeForm(formConfig, event) {\n    super._onChangeForm(formConfig, event);\n    const target = event.target;\n    if (!target) return;\n    if (target.name.endsWith('.type')) {\n      this.#resetValue(target);\n    }\n  }\n\n  static async onSubmit(\n    this: RequirementsEditor,\n    event: SubmitEvent,\n    _form: HTMLFormElement,\n    formData: FormDataExtended,\n  ) {\n    const requirements = Object.values<Requirement>(\n      // This maps the incoming formdata to an actual array of requirements\n      foundry.utils.expandObject(formData.object).system?.requirements ?? {},\n    );\n    const changes = { type: 'edge', system: { requirements } };\n    try {\n      this.edge.validate({ changes, clean: true });\n      this.#requirements = requirements;\n    } catch (error) {\n      ui.notifications.error(error);\n    } finally {\n      this.render({ force: true });\n      if (event.submitter) {\n        const isValid = this.form?.checkValidity();\n        if (isValid) {\n          await this.#updateDocument();\n          this.close();\n        }\n      }\n    }\n  }\n\n  override async _prepareContext(options) {\n    const context = foundry.utils.mergeObject(\n      await super._prepareContext(options),\n      {\n        requirements: this.#requirements,\n        types: constants.REQUIREMENT_TYPE,\n        typeChoices: this.#getRequirementTypeChoices(),\n        rankChoices: this.#getRankChoices(),\n        dieChoices: this.#getDieChoices(),\n        attributeChoices: this.#getAttributeChoices(),\n        combinatorChoices: this.#getCombinatorChoices(),\n        slugPattern: SLUG_REGEX.source,\n        edge: this.edge,\n        buttons: [\n          { type: 'submit', icon: 'fa-solid fa-save', label: 'Save Changes' },\n        ],\n      },\n    );\n    return context;\n  }\n\n  static async #addRequirement(\n    this: RequirementsEditor,\n    _event: PointerEvent,\n    _target: HTMLElement,\n  ) {\n    const newReq =\n      this.#requirements.length > 0\n        ? { type: constants.REQUIREMENT_TYPE.OTHER, label: '' }\n        : {\n            type: constants.REQUIREMENT_TYPE.RANK,\n            value: constants.RANK.NOVICE,\n          };\n\n    this.#requirements.push(newReq);\n    this.render({ force: true });\n  }\n\n  static async #deleteRequirement(\n    this: RequirementsEditor,\n    _event: PointerEvent,\n    target: HTMLElement,\n  ) {\n    const index = target.closest('li')?.dataset.index;\n    this.#requirements.findSplice((_v, i) => i === Number(index));\n    this.render({ force: true });\n  }\n\n  /** reset all selector and value inputs */\n  #resetValue(target: HTMLElement) {\n    target\n      .closest('li')\n      ?.querySelectorAll<HTMLInputElement | HTMLSelectElement>(\n        '[name$=\"selector\"], [name$=\"value\"]',\n      )\n      .forEach((el) => (el.value = ''));\n  }\n\n  #getRankChoices(): Record<string, string> {\n    return SWADE.ranks.reduce((acc, cur, i) => {\n      acc[i] = cur;\n      return acc;\n    }, {});\n  }\n\n  #getDieChoices(): Record<number, string> {\n    return { 4: 'd4+', 6: 'd6+', 8: 'd8+', 10: 'd10+', 12: 'd12+' };\n  }\n\n  #getAttributeChoices(): Record<string, string> {\n    return Object.entries(SWADE.attributes).reduce((acc, [key, value]) => {\n      acc[key] = value.long;\n      return acc;\n    }, {});\n  }\n\n  #getRequirementTypeChoices(): Record<string, string> {\n    return {\n      [constants.REQUIREMENT_TYPE.WILDCARD]: 'SWADE.WildCard',\n      [constants.REQUIREMENT_TYPE.RANK]: 'SWADE.Rank',\n      [constants.REQUIREMENT_TYPE.ATTRIBUTE]: 'SWADE.Attribute',\n      [constants.REQUIREMENT_TYPE.SKILL]: 'TYPES.Item.skill',\n      [constants.REQUIREMENT_TYPE.EDGE]: 'TYPES.Item.edge',\n      [constants.REQUIREMENT_TYPE.HINDRANCE]: 'TYPES.Item.hindrance',\n      [constants.REQUIREMENT_TYPE.ANCESTRY]: 'SWADE.Ancestry',\n      [constants.REQUIREMENT_TYPE.POWER]: 'TYPES.Item.power',\n      [constants.REQUIREMENT_TYPE.OTHER]: 'SWADE.Requirements.Other',\n    };\n  }\n\n  #getCombinatorChoices(): Record<string, string> {\n    return {\n      and: 'SWADE.Requirements.And',\n      or: 'SWADE.Requirements.Or',\n    };\n  }\n\n  async #updateDocument() {\n    await this.edge.update(\n      { 'system.requirements': this.#requirements },\n      { diff: false },\n    );\n  }\n}\ninterface RequirementsEditorConfiguration\n  extends Partial<foundry.applications.api.ApplicationV2.Configuration> {\n  edge: SwadeItem;\n}\n","import {\n  AdditionalStats,\n  DieSidesOption,\n  EquipState,\n  ItemActions,\n} from '../../globals';\nimport { ItemAction } from '../../interfaces/additional.interface';\nimport ActiveEffectWizard from '../apps/ActiveEffectWizard';\nimport { RequirementsEditor } from '../apps/RequirementsEditor';\nimport { SwadeItemTweaks } from '../apps/SwadeDocumentTweaks';\nimport { SWADE } from '../config';\nimport { constants } from '../constants';\nimport SwadeActiveEffect from '../documents/active-effect/SwadeActiveEffect';\nimport SwadeItem from '../documents/item/SwadeItem';\nimport { ItemGrant } from '../documents/item/SwadeItem.interface';\nimport { Logger } from '../Logger';\nimport { Accordion } from '../style/Accordion';\nimport { getDieSidesRange } from '../util';\n\nexport default class SwadeItemSheetV2 extends foundry.appv1.sheets.ItemSheet {\n  collapsibleStates: CollapsibleStates = {\n    powers: {},\n    actions: {},\n    effects: {},\n  };\n  #effectCreateDropDown: ContextMenu;\n\n  static override get defaultOptions() {\n    return foundry.utils.mergeObject(super.defaultOptions, {\n      width: 600,\n      height: 560,\n      classes: ['swade-item-sheet', 'swade', 'swade-app'],\n      tabs: [\n        {\n          navSelector: '.tabs',\n          contentSelector: '.sheet-body',\n          initial: 'summary',\n        },\n      ],\n      scrollY: ['.properties', '.actions', '.editor-container .editor-content'],\n      dragDrop: [\n        { dropSelector: null, dragSelector: '.effect-list li details' },\n      ],\n      resizable: true,\n    });\n  }\n\n  override get template(): string {\n    return `systems/swade/templates/item/${this.type}.hbs`;\n  }\n\n  get type(): this['item']['type'] {\n    return this.item.type;\n  }\n\n  get hasInlineDelete(): boolean {\n    const types = [\n      'edge',\n      'hindrance',\n      'ability',\n      'ancestry',\n      'skill',\n      'power',\n      'action',\n    ];\n    return types.includes(this.type);\n  }\n\n  get isPhysicalItem(): boolean {\n    const types = [\n      'weapon',\n      'armor',\n      'shield',\n      'gear',\n      'consumable',\n      'container',\n    ];\n    return types.includes(this.type);\n  }\n\n  get actionTypes(): Record<string, string> {\n    return {\n      trait: 'SWADE.Trait',\n      damage: 'SWADE.Dmg',\n      resist: 'SWADE.Resist',\n      macro: 'DOCUMENT.Macro',\n    };\n  }\n\n  get macroActorTypes(): Record<string, string> {\n    return {\n      default: 'SWADE.MacroActor.Default',\n      self: 'SWADE.MacroActor.Self',\n      target: 'SWADE.MacroActor.Target',\n    };\n  }\n\n  override activateListeners(jquery: JQuery<HTMLElement>): void {\n    super.activateListeners(jquery);\n    this.#setupAccordions();\n\n    const html = jquery[0];\n\n    this.#setupEffectCreateMenu(html);\n\n    html.querySelector('.profile-img')?.addEventListener('contextmenu', () => {\n      if (!this.item.img) return;\n      new ImagePopout({\n        src: this.item.img,\n        title: this.item.name!,\n        shareable: this.item?.isOwner ?? game.user?.isGM,\n        uuid: this.item.uuid,\n      }).render({ force: true });\n    });\n\n    if (!this.isEditable) return;\n\n    // Disable overridden inputs\n    const overrides = foundry.utils.flattenObject(this.item.overrides);\n    for (const key of Object.keys(overrides)) {\n      html\n        .querySelectorAll(`[name=\"${key}\"]`)\n        .forEach((el) => el.setAttribute('disabled', 'override'));\n    }\n\n    this.form?.addEventListener('keypress', (ev: KeyboardEvent) => {\n      const target = ev.target as HTMLButtonElement;\n      const targetIsButton = 'button' === target?.type;\n      if (!targetIsButton && ev.key === 'Enter') {\n        ev.preventDefault();\n        this.submit({ preventClose: true });\n        return false;\n      }\n    });\n\n    // Delete Item from within Sheet. Only really used for Skills, Edges, Hindrances and Powers\n    html\n      .querySelector('.inline-delete')\n      ?.addEventListener('click', () => this.item.delete());\n\n    html.querySelector('.add-action')?.addEventListener('click', () => {\n      const id = foundry.utils.randomID(8);\n      this.collapsibleStates[id] = true;\n      this.item.update({\n        ['system.actions.additional.' + id]: {\n          name: game.i18n.format('DOCUMENT.New', {\n            type: game.i18n.localize('TYPES.Item.action'),\n          }),\n          type: constants.ACTION_TYPE.TRAIT,\n        },\n      });\n    });\n\n    html.querySelectorAll('.action-delete').forEach((el) =>\n      el.addEventListener('click', async (ev) => {\n        const id = ev.currentTarget.dataset.actionId;\n        const action = foundry.utils.getProperty(\n          this.item,\n          `system.actions.additional.${id}`,\n        ) as ItemAction;\n        const text = game.i18n.format('SWADE.DeleteEmbeddedActionPrompt', {\n          action: action.name,\n        });\n        await foundry.applications.api.DialogV2.confirm({\n          content: `<p class=\"text-center\">${text}</p>`,\n          classes: ['dialog', 'swade-app'],\n          yes: {\n            callback: async () =>\n              await this.item.update({\n                [`system.actions.additional.-=${id}`]: null,\n              }),\n          },\n        });\n      }),\n    );\n\n    html.querySelectorAll('.power-delete').forEach((el) =>\n      el.addEventListener('click', async (ev) => {\n        const id = ev.currentTarget?.closest('details')?.dataset.powerId;\n        const power = this.item.embeddedPowers.get(id);\n        const text = game.i18n.format('SWADE.DeleteEmbeddedPowerPrompt', {\n          power: power?.name,\n        });\n        await foundry.applications.api.DialogV2.confirm({\n          content: `<p class=\"text-center\">${text}</p>`,\n          classes: ['dialog', 'swade-app'],\n          yes: {\n            callback: async () => await this.#deleteEmbeddedDocument(id),\n          },\n        });\n      }),\n    );\n\n    html.querySelectorAll('.grant-delete').forEach((el) =>\n      el.addEventListener('click', async (ev) => {\n        const uuid = ev.currentTarget?.closest('.granted-item')?.dataset.uuid;\n        const grants = this.item.grantsItems;\n        grants.findSplice((v) => v.uuid === uuid);\n        await this.item.update({ 'system.grants': grants });\n      }),\n    );\n\n    html.querySelectorAll('.grant-name').forEach((el) =>\n      el.addEventListener('click', async (ev) => {\n        const uuid = ev.currentTarget?.closest('.granted-item')?.dataset.uuid;\n        const doc = (await fromUuid(uuid)) as SwadeItem | null;\n        // TODO: change args once this sheet is AppV2\n        doc?.sheet?.render(true);\n      }),\n    );\n\n    html.querySelectorAll('.effect-action').forEach((el) =>\n      el.addEventListener('click', (ev) => {\n        ev.preventDefault();\n        ev.stopPropagation();\n        const a = ev.currentTarget;\n        const effectId = a.closest('details')!.dataset.effectId! as string;\n        const effect = this.item.effects.get(effectId, { strict: true });\n        const action = a.dataset.action as string;\n        const toggle = a.dataset.toggle as string;\n\n        switch (action) {\n          case 'edit':\n            return effect.sheet?.render({ force: true });\n          case 'delete':\n            return effect.delete();\n          case 'toggle':\n            return effect.update(this.#toggleEffect(effect, toggle));\n        }\n      }),\n    );\n\n    html.querySelectorAll('.power .damage').forEach((el) =>\n      el.addEventListener('click', (ev) => {\n        const id = ev.currentTarget?.closest('details')?.dataset.powerId;\n        const tempPower = new SwadeItem(this.item.embeddedPowers.get(id));\n        tempPower.rollDamage();\n      }),\n    );\n\n    html.querySelectorAll('.additional-stats .rollable').forEach((el) =>\n      el.addEventListener('click', async (ev) => {\n        const stat = ev.currentTarget.dataset.stat!;\n        await this.item.system.rollAdditionalStat(stat);\n      }),\n    );\n\n    html\n      .querySelectorAll('.use-consumable')\n      .forEach((el) =>\n        el.addEventListener('click', async () => await this.item.consume()),\n      );\n\n    html.querySelectorAll('.loaded-ammo-name').forEach((el) =>\n      el.addEventListener('mouseenter', async (ev) => {\n        const loadedAmmo = this.item.getFlag('swade', 'loadedAmmo');\n        const content = `<h3>${loadedAmmo?.name}</h3>${loadedAmmo?.system.description}`;\n        game.tooltip.activate(ev.currentTarget, {\n          html: await foundry.applications.ux.TextEditor.implementation.enrichHTML(\n            content,\n            {\n              secrets: this.item.isOwner,\n            },\n          ),\n          cssClass: 'themed theme-dark',\n        });\n      }),\n    );\n\n    html\n      .querySelector('button.open-requirements-editor')\n      ?.addEventListener('click', () =>\n        new RequirementsEditor({ edge: this.item }).render({ force: true }),\n      );\n  }\n\n  override async getData(\n    options: OptionsPartial = {},\n  ): Promise<SwadeItemSheetData> {\n    const additionalStats = this.#getAdditionalStats();\n\n    const data: SwadeItemSheetData = {\n      itemType: this.#getItemType(),\n      enrichedDescription: await this.#enrichText(this.item.system.description),\n      hasInlineDelete: this.hasInlineDelete,\n      isPhysicalItem: this.isPhysicalItem,\n      hasCategory: this.item.canHaveCategory,\n      actionTypes: this.actionTypes,\n      macroActorTypes: this.macroActorTypes,\n      hasAdditionalStats: Object.keys(additionalStats).length > 0,\n      additionalStats: additionalStats,\n      collapsibleStates: this.collapsibleStates,\n      showMods: game.settings.get('swade', 'vehicleMods'),\n      showEnergy: game.settings.get('swade', 'vehicleEnergy'),\n      isArcaneDevice: this.item.isArcaneDevice,\n      ranges: this.#rangeSuggestions(),\n      equipStatusOptions: this.#equipStatusOptions(),\n      settingRules: {\n        modSlots: game.settings.get('swade', 'vehicleMods'),\n        noPowerPoints: game.settings.get('swade', 'noPowerPoints'),\n      },\n    };\n\n    if (this.item.type === 'ability') {\n      const subtype = this.item.system.subtype;\n      data.abilityConfig = {\n        localization: SWADE.abilitySheet,\n        abilityHeader: SWADE.abilitySheet[subtype].abilities,\n        isArchetype: subtype === constants.ABILITY_TYPE.ARCHETYPE,\n      };\n      data.abilitySubtypeOptions = this.#getAbilitySubtypeOptions(\n        SWADE.abilitySheet,\n      );\n    }\n\n    if (this.item.canGrantItems) {\n      data.grantedItems = await this.#getGrantedItems();\n    }\n    data.grantOnTriggers = this.#getGrantOnTriggers();\n    for (const effect of this.item.effects) {\n      foundry.utils.setProperty(\n        effect,\n        'enrichedDescription',\n        await foundry.applications.ux.TextEditor.implementation.enrichHTML(\n          effect.description,\n          {\n            secrets: this.item.isOwner,\n          },\n        ),\n      );\n    }\n\n    if (this.type === 'weapon') {\n      data.ppReload = false;\n      data.trademarkWeaponOptions = this.#trademarkWeaponOptions();\n      switch (this.item.system.reloadType) {\n        case constants.RELOAD_TYPE.NONE:\n        case constants.RELOAD_TYPE.SINGLE:\n        case constants.RELOAD_TYPE.FULL:\n          data.ammoList = this.actor?.itemTypes.gear\n            .filter((i) => i.system.isAmmo)\n            .map((i) => i.name) as string[];\n          break;\n        case constants.RELOAD_TYPE.MAGAZINE:\n          data.ammoList = this.actor?.itemTypes.consumable\n            .filter(\n              (i) =>\n                i.type === 'consumable' &&\n                i.system.subtype === constants.CONSUMABLE_TYPE.MAGAZINE,\n            )\n            .map((i) => i.name) as string[];\n          data.ammoLoaded = this.item.getFlag('swade', 'loadedAmmo')?.name;\n          break;\n        case constants.RELOAD_TYPE.PP:\n          data.ammoList = Object.keys(this.actor?.system?.powerPoints ?? {});\n          data.ppReload = true;\n          break;\n        case constants.RELOAD_TYPE.BATTERY:\n          data.ammoList = this.actor?.itemTypes.consumable\n            .filter(\n              (i) =>\n                i.type === 'consumable' &&\n                i.system.subtype === constants.CONSUMABLE_TYPE.BATTERY,\n            )\n            .map((i) => i.name) as string[];\n          data.ammoLoaded = this.item.getFlag('swade', 'loadedAmmo')?.name;\n          break;\n        case constants.RELOAD_TYPE.SELF:\n          // Doesn't use external ammo\n          break;\n      }\n      data.reloadTypeOptions = this.#reloadTypeOptions();\n      data.rangeTypeOptions = {\n        [constants.WEAPON_RANGE_TYPE.MELEE]: 'SWADE.Weapon.RangeType.Melee',\n        [constants.WEAPON_RANGE_TYPE.RANGED]: 'SWADE.Weapon.RangeType.Ranged',\n        [constants.WEAPON_RANGE_TYPE.MIXED]: 'SWADE.Weapon.RangeType.Mixed',\n      };\n    }\n\n    if (this.type === 'consumable') {\n      data.subtypes = {\n        [constants.CONSUMABLE_TYPE.REGULAR]: 'SWADE.ConsumableType.Regular',\n        [constants.CONSUMABLE_TYPE.MAGAZINE]: 'SWADE.ReloadType.Magazine',\n        [constants.CONSUMABLE_TYPE.BATTERY]: 'SWADE.ReloadType.Battery',\n      };\n    }\n\n    if (\n      [\n        'consumable',\n        'gear',\n        'shield',\n        'armor',\n        'action',\n        'power',\n        'weapon',\n      ].includes(this.type)\n    ) {\n      data.bonusDamageDieSideOptions = getDieSidesRange(4, 12);\n    }\n\n    if (this.item.type === 'hindrance') {\n      data.severityOptions = {\n        major: 'SWADE.HindranceSeverity.Major',\n        minor: 'SWADE.HindranceSeverity.Minor',\n        either: 'SWADE.HindranceSeverity.Either',\n      };\n    }\n\n    if (this.item.type === 'skill') {\n      data.dieSideOptions =\n        this.item.parent?.type === 'npc'\n          ? getDieSidesRange(4, 24)\n          : getDieSidesRange(4, 20);\n      data.wildDieSideOptions = getDieSidesRange(4, 12);\n      data.attributeOptions = this.#getAttributeOptions();\n    }\n\n    if (this.item.isArcaneDevice) {\n      data.embeddedPowers = this.item.embeddedPowers;\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      for (const [key, power] of data.embeddedPowers!) {\n        power.enrichedDescription = await this.#enrichText(\n          power.system.description,\n        );\n      }\n      data.dieSideOptions =\n        this.item.parent?.type === 'npc'\n          ? getDieSidesRange(4, 24)\n          : getDieSidesRange(4, 20);\n    }\n    const superData = (await super.getData(options)) as Record<string, unknown>;\n    superData.cssClass += ' ' + this.type; // add the item type for easier CSS selection\n\n    return foundry.utils.mergeObject(superData, data);\n  }\n\n  protected override _getHeaderButtons() {\n    const buttons = super._getHeaderButtons();\n\n    if (this.isEditable) {\n      buttons.unshift({\n        label: 'SWADE.DocumentTweaks',\n        class: 'configure-actor',\n        icon: 'fa-solid fa-gears',\n        onclick: () =>\n          new SwadeItemTweaks({ document: this.item }).render({ force: true }),\n      });\n      buttons.unshift({\n        label: 'SWADE.RefreshOnly',\n        class: 'refresh-item',\n        icon: 'fa-solid fa-arrows-rotate',\n        onclick: () => this.item.refreshFromCompendium(),\n      });\n    }\n\n    return buttons;\n  }\n\n  protected override _getSubmitData(updateData: object | null = {}) {\n    const data = super._getSubmitData(updateData);\n    if (this.item.type !== 'skill') {\n      // Prevent submitting overridden values\n      const overrides = foundry.utils.flattenObject(this.item.overrides);\n      Object.keys(overrides).forEach((v) => delete data[v]);\n    }\n    return data;\n  }\n\n  protected override _canDragStart(_selector: string): boolean {\n    return this.isEditable;\n  }\n\n  protected override _canDragDrop(_selector: string): boolean {\n    return this.isEditable;\n  }\n\n  protected override async _onDragStart(event: DragEvent) {\n    const src = event.target as HTMLElement;\n\n    // Create drag data\n    let dragData;\n\n    // Active Effect\n    if (src.dataset.effectId) {\n      const effect = this.item.effects.get(src.dataset.effectId);\n      dragData = effect.toDragData();\n    } else {\n      dragData = this.item.toDragData();\n    }\n\n    // Set data transfer\n    event.dataTransfer?.setData('text/plain', JSON.stringify(dragData));\n  }\n\n  protected override async _onDrop(event: DragEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    try {\n      //get the data\n      const data = JSON.parse(event.dataTransfer!.getData('text/plain')) as {\n        type: string;\n        uuid: string;\n      };\n      switch (data.type) {\n        case 'ActiveEffect':\n          await this.#onDropActiveEffect(event, data);\n          break;\n        case 'Item':\n          await this.#onDropItem(event, data);\n          break;\n        case 'Macro':\n          await this.#onDropMacro(event, data);\n          break;\n        default:\n          break;\n      }\n    } catch (error) {\n      Logger.error(error);\n    }\n  }\n\n  async #onDropActiveEffect(_event: DragEvent, data) {\n    const effect = await CONFIG.ActiveEffect.documentClass.fromDropData(data);\n    if (!this.item.isOwner || !effect) return false;\n    if (this.item.uuid === effect.parent?.uuid) return false;\n    return CONFIG.ActiveEffect.documentClass.create(effect.toObject(), {\n      parent: this.item,\n    });\n  }\n\n  async #onDropItem(event: DragEvent, data) {\n    const item = await CONFIG.Item.documentClass.fromDropData(data);\n    Logger.debug(\n      `Trying to add ${data.type} ${item.uuid} to ${this.item.type}/${this.item.name}`,\n    );\n\n    if (item.type === 'ability' && item.system.subtype !== 'special') {\n      return Logger.warn('SWADE.CannotAddAncestryToAncestry', {\n        localize: true,\n        toast: true,\n      });\n    }\n\n    const target = event.target as HTMLElement;\n    const classList = target.closest<HTMLElement>('.tab.active')?.classList;\n\n    if (classList?.contains('properties')) {\n      await this.#addGrantedItem(item);\n    } else if (classList?.contains('powers')) {\n      await this.#addArcaneDevicePower(item);\n    } else if (classList?.contains('actions')) {\n      await this.#addOrReplaceActions(item);\n    }\n  }\n\n  async #onDropMacro(event: DragEvent, data) {\n    const target = event.target as HTMLElement;\n    const actionId = target.closest<HTMLElement>('.tab.actions.active .action')\n      ?.dataset.actionId as string;\n    const action = this.item.system.actions.additional[actionId] as ItemAction;\n    if (action.type !== constants.ACTION_TYPE.MACRO) return;\n    await this.item.update({\n      [`system.actions.additional.${actionId}.uuid`]: data.uuid,\n    });\n  }\n\n  async #addGrantedItem(item: SwadeItem) {\n    if (\n      !this.item.canGrantItems ||\n      this.item.isEmbedded ||\n      item.uuid === this.item.uuid\n    )\n      return;\n\n    const grants = this.item.grantsItems;\n    grants.push({\n      name: item.name,\n      img: item.img,\n      uuid: item.uuid,\n    });\n    await this.item.update({ 'system.grants': grants });\n  }\n\n  async #addArcaneDevicePower(item: SwadeItem) {\n    if (!this.item.isArcaneDevice || item.type !== 'power') return;\n    const collection = this.item.embeddedPowers;\n    collection.set(foundry.utils.randomID(), item.toObject());\n    await this.#saveEmbeddedPowers(collection);\n  }\n\n  async #addOrReplaceActions(item: SwadeItem) {\n    const actionKey = 'system.actions.additional';\n    const actions = foundry.utils.getProperty(this.item, actionKey) as\n      | ItemActions\n      | undefined;\n    if (typeof actions === 'undefined') return; //no actions on this item, return before we break something;\n    if (foundry.utils.isEmpty(actions)) {\n      //if no actions are present then we simply copy the actions from the dropped item\n      return this.item.update({\n        [actionKey]: foundry.utils.getProperty(item, actionKey),\n      });\n    }\n    //otherwise we ask to copy or replace the current actions\n    const existingActions = foundry.utils.getProperty(\n      item,\n      actionKey,\n    ) as ItemActions;\n    foundry.applications.api.DialogV2.wait({\n      window: {\n        title: game.i18n.localize('SWADE.AddOrReplaceActions.Title'),\n      },\n      classes: ['dialog', 'swade-app'],\n      content: game.i18n.format('SWADE.AddOrReplaceActions.Content', {\n        source: item.name,\n        type: game.i18n.localize('TYPES.Item.' + item.type),\n      }),\n      buttons: [\n        {\n          action: 'add',\n          label: game.i18n.localize('SWADE.AddOrReplaceActions.Add'),\n          icon: '<i class=\"fa-solid fa-copy\"></i>',\n          default: true,\n          callback: () => {\n            const newActions: ItemActions = {};\n            //give the actions new keys to make sure there are no id collisions\n            for (const action of Object.values(existingActions)) {\n              newActions[foundry.utils.randomID(8)] = action;\n            }\n            this.item.update({ [actionKey]: newActions });\n          },\n        },\n        {\n          action: 'replace',\n          label: game.i18n.localize('SWADE.AddOrReplaceActions.Replace'),\n          icon: '<i class=\"fa-solid fa-rotate\"></i>',\n          callback: () =>\n            this.item.update(\n              { [actionKey]: existingActions },\n              { recursive: false, diff: false },\n            ),\n        },\n      ],\n    });\n  }\n\n  async #deleteEmbeddedDocument(id: string) {\n    const flagContent = this.item.getFlag('swade', 'embeddedPowers') ?? [];\n    const map = new Map(flagContent as Array<[string, ItemData]>);\n    map.delete(id);\n    this.item.setFlag('swade', 'embeddedPowers', Array.from(map));\n  }\n\n  async #saveEmbeddedPowers(map: Map<string, ItemData<'power'>>) {\n    return this.item.setFlag('swade', 'embeddedPowers', Array.from(map));\n  }\n\n  #getAdditionalStats(): AdditionalStats {\n    const stats = foundry.utils.deepClone(\n      this.item.system.additionalStats,\n    ) as AdditionalStats;\n    const options = game.settings.get('swade', 'settingFields').item;\n    for (const [key, attr] of Object.entries(stats)) {\n      if (!options[key] || !attr.dtype) {\n        delete stats[key];\n        continue;\n      }\n      if (attr.dtype === 'Selection') {\n        const optionString = options[key].optionString ?? '';\n        attr.options = optionString\n          .split(';')\n          .reduce((a, v) => ({ ...a, [v.trim()]: v.trim() }), {});\n      }\n    }\n    return stats;\n  }\n\n  #getGrantedItems(): ItemGrant[] {\n    if (!this.item.canGrantItems) return [];\n    const grants = this.item.grantsItems;\n    const enriched = new Array<ItemGrant>();\n    for (const grant of grants) {\n      const item = fromUuidSync(grant.uuid) as SwadeItem | null;\n      enriched.push({\n        name: grant.mutation?.name ?? item?.name ?? grant.name,\n        img: grant.mutation?.img ?? item?.img ?? grant.img,\n        uuid: grant.uuid,\n        missing: !item,\n        major:\n          foundry.utils.getProperty(grant.mutation, 'system.major') ??\n          foundry.utils.getProperty(item, 'system.isMajor'),\n      });\n    }\n    return enriched;\n  }\n\n  #getGrantOnTriggers(): Record<number, string>[] {\n    const options = [\n      { key: 0, label: 'SWADE.ItemEquipStatus.Added' },\n      { key: 1, label: 'SWADE.ItemEquipStatus.Carried' },\n      { key: 2, label: 'SWADE.ItemEquipStatus.Readied' },\n    ];\n    return this.item.type === 'consumable' ? options.slice(0, 2) : options;\n  }\n  #getAbilitySubtypeOptions(\n    abilityLocalization: typeof SWADE.abilitySheet,\n  ): Record<string, string> {\n    return {\n      special: abilityLocalization.special.dropdown,\n      archetype: abilityLocalization.archetype.dropdown,\n    };\n  }\n  #getItemType(): string {\n    if (this.type === 'ability') {\n      const subtype = this.item.system.subtype;\n      switch (subtype) {\n        case constants.ABILITY_TYPE.ARCHETYPE:\n          return SWADE.abilitySheet.archetype.dropdown;\n        default:\n          return SWADE.abilitySheet.special.dropdown;\n      }\n    }\n    return `TYPES.Item.${this.type}`;\n  }\n\n  #getAttributeOptions(): Record<string, string> {\n    return {\n      agility: 'SWADE.AttrAgi',\n      smarts: 'SWADE.AttrSma',\n      spirit: 'SWADE.AttrSpr',\n      strength: 'SWADE.AttrStr',\n      vigor: 'SWADE.AttrVig',\n      '': '',\n    };\n  }\n  async #enrichText(text: string): Promise<string> {\n    const enriched =\n      await foundry.applications.ux.TextEditor.implementation.enrichHTML(text, {\n        relativeTo: this.item,\n        rollData: this.item.getRollData(),\n        secrets: this.document.isOwner,\n      });\n    return enriched;\n  }\n\n  #setupAccordions() {\n    this.form\n      ?.querySelectorAll<HTMLDetailsElement>('.actions-list details')\n      .forEach((el) => {\n        new Accordion(el, '.content', { duration: 200 });\n        const id = el.dataset.actionId as string;\n        el.querySelector('summary')?.addEventListener('click', () => {\n          const states = this.collapsibleStates.actions;\n          const currentState = Boolean(states[id]);\n          states[id] = !currentState;\n        });\n      });\n\n    this.form\n      ?.querySelectorAll<HTMLDetailsElement>('.powers-list details')\n      .forEach((el) => {\n        new Accordion(el, '.content', { duration: 200 });\n        const id = el.dataset.powerId as string;\n        el.querySelector('summary')?.addEventListener('click', () => {\n          const states = this.collapsibleStates.powers;\n          const currentState = Boolean(states[id]);\n          states[id] = !currentState;\n        });\n      });\n\n    this.form\n      ?.querySelectorAll<HTMLDetailsElement>('.effect-list details')\n      .forEach((el) => {\n        new Accordion(el, '.content', { duration: 200 });\n        const id = el.dataset.effectId as string;\n        el.querySelector('summary')?.addEventListener('click', () => {\n          const states = this.collapsibleStates.effects;\n          const currentState = Boolean(states[id]);\n          states[id] = !currentState;\n        });\n      });\n  }\n\n  #setupEffectCreateMenu(html: HTMLElement) {\n    this.#effectCreateDropDown =\n      new foundry.applications.ux.ContextMenu.implementation(\n        html,\n        '.effects .header',\n        [\n          {\n            name: 'SWADE.ActiveEffects.AddGuided',\n            icon: '<i class=\"fa-solid fa-hat-wizard\"></i>',\n            condition: this.object.isOwner,\n            callback: () =>\n              new ActiveEffectWizard({ document: this.document }).render({\n                force: true,\n              }),\n          },\n          {\n            name: 'SWADE.ActiveEffects.AddModifier',\n            icon: '<i class=\"fa-solid fa-bolt\"></i>',\n            condition: this.object.isOwner,\n            callback: () => this.#createActiveEffect('modifier'),\n          },\n          {\n            name: 'SWADE.ActiveEffects.AddUnguided',\n            icon: '<i class=\"fa-solid fa-file-plus\"></i>',\n            condition: this.object.isOwner,\n            callback: () => this.#createActiveEffect('base'),\n          },\n        ],\n        {\n          eventName: 'click',\n          jQuery: false,\n        },\n      );\n  }\n\n  async #createActiveEffect(type: ActiveEffect.SubType) {\n    const name = SwadeActiveEffect.defaultName({ type, parent: this.item });\n    return ActiveEffect.create(\n      { name, type },\n      { parent: this.item, renderSheet: true },\n    );\n  }\n\n  #toggleEffect(\n    doc: SwadeActiveEffect,\n    toggle: string,\n  ): Record<string, unknown> {\n    const oldVal = !!foundry.utils.getProperty(doc, toggle);\n    return { [toggle]: !oldVal };\n  }\n\n  #rangeSuggestions() {\n    return [\n      '3/6/12',\n      '4/8/16',\n      '5/10/20',\n      '10/20/40',\n      '12/24/48',\n      '15/30/60',\n      '20/40/60',\n      '20/40/80',\n      '24/48/96',\n      '25/50/100',\n      '30/60/120',\n      '50/100/200',\n      '75/150/300',\n      '300/600/1200',\n    ];\n  }\n\n  #equipStatusOptions(): Record<number, string> {\n    let states: Record<number, string> = {\n      [constants.EQUIP_STATE.STORED]: 'SWADE.ItemEquipStatus.Stored',\n      [constants.EQUIP_STATE.CARRIED]: 'SWADE.ItemEquipStatus.Carried',\n    };\n\n    if (this.item.type === 'weapon') {\n      if (this.item.system.isVehicular && this.actor?.type === 'vehicle') {\n        states = {\n          ...states,\n          [constants.EQUIP_STATE.EQUIPPED]: 'SWADE.ItemEquipStatus.Installed',\n        };\n      } else {\n        states = {\n          ...states,\n          [constants.EQUIP_STATE.MAIN_HAND]: 'SWADE.ItemEquipStatus.MainHand',\n          [constants.EQUIP_STATE.OFF_HAND]: 'SWADE.ItemEquipStatus.OffHand',\n          [constants.EQUIP_STATE.TWO_HANDS]: 'SWADE.ItemEquipStatus.TwoHands',\n        };\n      }\n    } else if (this.item.type === 'armor' || this.item.type === 'shield') {\n      states = {\n        ...states,\n        [constants.EQUIP_STATE.EQUIPPED]: 'SWADE.ItemEquipStatus.Equipped',\n      };\n    } else if (this.item.type === 'gear') {\n      if (this.item.system.equippable) {\n        states = {\n          ...states,\n          [constants.EQUIP_STATE.EQUIPPED]: 'SWADE.ItemEquipStatus.Equipped',\n        };\n      } else if (this.item.system.isVehicular) {\n        states = {\n          ...states,\n          [constants.EQUIP_STATE.EQUIPPED]: 'SWADE.ItemEquipStatus.Installed',\n        };\n      }\n    }\n    return states;\n  }\n\n  #trademarkWeaponOptions(): Record<number, string> {\n    return {\n      0: 'SWADE.TrademarkWeapon.None',\n      1: 'SWADE.TrademarkWeapon.Regular',\n      2: 'SWADE.TrademarkWeapon.Improved',\n    };\n  }\n\n  #reloadTypeOptions(): Record<string, string> {\n    return {\n      [constants.RELOAD_TYPE.NONE]: 'SWADE.ReloadType.None',\n      [constants.RELOAD_TYPE.SELF]: 'SWADE.ReloadType.Self',\n      [constants.RELOAD_TYPE.SINGLE]: 'SWADE.ReloadType.Single',\n      [constants.RELOAD_TYPE.FULL]: 'SWADE.ReloadType.Full',\n      [constants.RELOAD_TYPE.MAGAZINE]: 'SWADE.ReloadType.Magazine',\n      [constants.RELOAD_TYPE.BATTERY]: 'SWADE.ReloadType.Battery',\n      [constants.RELOAD_TYPE.PP]: 'SWADE.ReloadType.PP',\n    };\n  }\n}\n\ninterface SwadeItemSheetData extends OptionsPartial {\n  itemType: string;\n  hasInlineDelete: boolean;\n  isPhysicalItem: boolean;\n  hasCategory: boolean;\n  actionTypes: Record<string, string>;\n  macroActorTypes: Record<string, string>;\n  hasAdditionalStats: boolean;\n  additionalStats: AdditionalStats;\n  collapsibleStates: CollapsibleStates;\n  showMods: boolean;\n  showEnergy: boolean;\n  isArcaneDevice: boolean;\n  enrichedDescription: string;\n  settingRules: {\n    modSlots: boolean;\n    noPowerPoints: boolean;\n  };\n  equipStatusOptions: Record<EquipState, string>;\n  ranges: string[];\n  trademarkWeaponOptions?: Record<number, string>;\n  reloadTypeOptions?: Record<number, string>;\n  embeddedPowers?: Map<string, ItemData<'power'>>;\n  ammoList?: string[];\n  ammoLoaded?: string;\n  ppReload?: boolean;\n  abilityConfig?: {\n    localization: typeof SWADE.abilitySheet;\n    abilityHeader: string;\n    isArchetype: boolean;\n  };\n  abilitySubtypeOptions: Record<string, string>;\n  dieSides;\n  subtypes?: Record<string, string>;\n  grantedItems?: ItemGrant[];\n  severityOptions?: Record<string, string>;\n  rangeTypeOptions?: Record<number, string>;\n  grantOnTriggers?: Record<number, string>[];\n  attributeOptions?: Record<string, string>;\n  dieSideOptions?: DieSidesOption[];\n  wildDieSideOptions?: DieSidesOption[];\n  bonusDamageDieSideOptions?: DieSidesOption[];\n}\n\ntype OptionsPartial = Partial<DocumentSheetOptions<Item>>;\n\ninterface CollapsibleStates {\n  actions: Record<string, boolean>;\n  powers: Record<string, boolean>;\n  effects: Record<string, boolean>;\n}\n","import { AdditionalStats, Attribute } from '../../globals';\nimport ActiveEffectWizard from '../apps/ActiveEffectWizard';\nimport AttributeManager from '../apps/AttributeManager';\nimport { SwadeActorTweaks } from '../apps/SwadeDocumentTweaks';\nimport { SWADE } from '../config';\nimport { ActionData } from '../data/item';\nimport SwadeActiveEffect from '../documents/active-effect/SwadeActiveEffect';\nimport SwadeItem from '../documents/item/SwadeItem';\nimport { Logger } from '../Logger';\n/** @noInheritDoc */\nexport default class SwadeBaseActorSheet extends foundry.appv1.sheets\n  .ActorSheet {\n  override activateListeners(jquery: JQuery) {\n    super.activateListeners(jquery);\n\n    const html = jquery[0];\n\n    // Everything below here is only needed if the sheet is editable\n    if (!this.isEditable) return;\n\n    const inputs = html.querySelectorAll('input');\n    inputs.forEach((el) =>\n      el.addEventListener('focus', (ev) => ev.currentTarget.select()),\n    );\n\n    html\n      .querySelector('[name=\"system.details.currency\"]')\n      ?.addEventListener('change', this._onChangeInputDelta.bind(this));\n\n    // Drag events for macros.\n    html.querySelectorAll('li.active-effect, li.item').forEach((el) => {\n      // Add draggable attribute and dragstart listener.\n      el.draggable = true;\n      el.addEventListener('dragstart', this._onDragStart.bind(this), false);\n    });\n\n    // Update Item\n    html.querySelectorAll('.item-edit').forEach((el) =>\n      el.addEventListener('click', (ev) => {\n        const li = ev.currentTarget.closest('.item');\n        const item = this.actor.items.get(li.dataset.itemId);\n        item?.sheet?.render(true);\n      }),\n    );\n\n    html.querySelectorAll('.item-show').forEach((el) =>\n      el.addEventListener('click', (ev) => {\n        const li = ev.currentTarget.closest('.item');\n        this.actor.items.get(li.dataset.itemId)?.show();\n      }),\n    );\n\n    // Edit armor modifier\n    html.querySelector('.armor-value')?.addEventListener('click', (ev) => {\n      const target = ev.currentTarget.dataset.target ?? '';\n      this._modifyDefense(target);\n    });\n\n    // Roll attribute\n    html.querySelectorAll('.attribute-value').forEach((el) =>\n      el.addEventListener('click', (event) => {\n        const attribute = event.currentTarget.dataset.attribute as Attribute;\n        this.actor.rollAttribute(attribute);\n      }),\n    );\n\n    html.querySelector('.attribute-manager')?.addEventListener('click', () => {\n      new AttributeManager({ actor: this.actor }).render({ force: true });\n    });\n\n    // Roll Damage\n    html.querySelectorAll('.damage-roll').forEach((el) =>\n      el.addEventListener('click', (event) => {\n        const element = event.currentTarget as Element;\n        const id = element\n          .closest('[data-item-id]')\n          ?.getAttribute('data-item-id')!;\n        const item = this.actor.items.get(id, { strict: true });\n        return item.rollDamage();\n      }),\n    );\n\n    // Use Consumable\n    html.querySelectorAll('.use-consumable').forEach((el) =>\n      el.addEventListener('click', async (event) => {\n        const element = event.currentTarget as Element;\n        const id = element\n          .closest('[data-item-id]')\n          ?.getAttribute('data-item-id')!;\n        const item = this.actor.items.get(id, { strict: true });\n        return item.consume();\n      }),\n    );\n\n    //Add Benny\n    html.querySelector('.benny-add')?.addEventListener('click', () => {\n      this.actor.getBenny();\n    });\n\n    //Remove Benny\n    html.querySelector('.benny-subtract')?.addEventListener('click', () => {\n      this.actor.spendBenny();\n    });\n\n    //Toggle Conviction\n    html\n      .querySelector('.conviction-toggle')\n      ?.addEventListener('click', async () => {\n        await this.actor.toggleConviction();\n      });\n\n    // Filter power list\n    html.querySelectorAll('.arcane-tabs .arcane').forEach((el) =>\n      el.addEventListener('click', (ev: any) => {\n        const arcane = ev.currentTarget.dataset.arcane;\n        html\n          .querySelectorAll('.arcane-tabs .arcane')\n          .forEach((el) => el.classList.remove('active'));\n        ev.currentTarget.classList.add('active');\n        this._filterPowers(html, arcane);\n      }),\n    );\n\n    //Running Die\n    html.querySelector('.running-die')?.addEventListener('click', async () => {\n      await this.actor.rollRunningDie();\n    });\n\n    html.querySelectorAll('.effect-action').forEach((el) =>\n      el.addEventListener('click', async (ev) => {\n        const a = ev.currentTarget;\n        const data = a.closest('li')!.dataset;\n        const effectUuid = data.effectUuid;\n        const effect = (await fromUuid(effectUuid)) as SwadeActiveEffect;\n        const action = a.dataset.action;\n        switch (action) {\n          case 'edit':\n            return effect.sheet?.render({ force: true });\n          case 'delete':\n            return effect.deleteDialog();\n          case 'toggle':\n            return effect.update({ disabled: !effect?.disabled });\n          case 'open-origin':\n            (effect.parent as SwadeItem).sheet.render(true);\n            break;\n          default:\n            Logger.warn(`The action ${action} is not currently supported`);\n            break;\n        }\n      }),\n    );\n\n    html.querySelector('.add-effect')?.addEventListener('click', async (ev) => {\n      const transfer = ev.currentTarget.dataset.transfer;\n      if (ev.shiftKey) {\n        await CONFIG.ActiveEffect.documentClass.create(\n          {\n            name: game.i18n.format('DOCUMENT.New', {\n              type: game.i18n.localize('DOCUMENT.ActiveEffect'),\n            }),\n            img: 'systems/swade/assets/icons/active-effect.svg',\n            transfer: transfer,\n          },\n          { renderSheet: true, parent: this.actor },\n        );\n      } else {\n        new ActiveEffectWizard({ document: this.actor }).render({ force: true });\n      }\n    });\n\n    html.querySelectorAll('.additional-stats .roll').forEach((el) =>\n      el.addEventListener('click', async (ev) => {\n        const button = ev.currentTarget;\n        const stat = button.dataset.stat;\n        await this.actor.system.rollAdditionalStat(stat);\n      }),\n    );\n\n    //Wealth Die Roll\n    html\n      .querySelector('.currency .roll')\n      ?.addEventListener('click', () => this.actor.rollWealthDie());\n\n    html.querySelector('.profile-img')?.addEventListener('contextmenu', () => {\n      if (!this.actor.img) return;\n      new ImagePopout({\n        src: this.actor.img,\n        title: this.actor.name!,\n        shareable: this.actor.isOwner ?? game.user?.isGM ?? false,\n        uuid: this.actor.uuid,\n      }).render(true);\n    });\n  }\n\n  override async getData() {\n    const data: any = await super.getData();\n    data.config = SWADE;\n\n    data.allApplicableEffects = Array.from(this.actor.allApplicableEffects());\n\n    const hiddenActionOverride = this.actor.getFlag(\n      'swade',\n      'hiddenActionOverride',\n    );\n\n    const itemsByType: Record<string, SwadeItem[]> = {};\n    for (const item of this.actor.items) {\n      const type = item.type;\n      const itemEnrichmentOptions: Partial<TextEditor.EnrichmentOptions> = {\n        relativeTo: item,\n        rollData: item.getRollData(),\n        secrets: this.document.isOwner,\n      };\n\n      item.enrichedDescription = await foundry.applications.ux.TextEditor.implementation.enrichHTML(\n        item.system.description,\n        itemEnrichmentOptions,\n      );\n      item.enrichedNotes = await foundry.applications.ux.TextEditor.implementation.enrichHTML(\n        item.system.notes,\n        itemEnrichmentOptions,\n      );\n\n      itemsByType[type] ??= [];\n      if (\n        item.system instanceof ActionData &&\n        item.system.hidden &&\n        !hiddenActionOverride\n      ) {\n        continue; //do not display hidden actions\n      }\n      itemsByType[type].push(item);\n    }\n\n    data.itemsByType = itemsByType;\n\n    data.sortedSkills = this.actor.items\n      .filter((i) => i.type === 'skill')\n      .sort((a, b) => a.name!.localeCompare(b.name!));\n\n    if (this.actor.type !== 'vehicle') {\n      //Encumbrance\n      data.inventoryWeight = this._calcInventoryWeight([\n        ...(data.itemsByType['gear'] ?? []),\n        ...(data.itemsByType['weapon'] ?? []),\n        ...(data.itemsByType['armor'] ?? []),\n        ...(data.itemsByType['shield'] ?? []),\n        ...(data.itemsByType['consumable'] ?? []),\n      ]);\n      data.maxCarryCapacity = this.actor.calcMaxCarryCapacity();\n\n      if (this.actor.type === 'character') {\n        data.powersOptions =\n          'class=\"powers-list resizable\" data-base-size=\"560\"';\n      } else {\n        data.powersOptions = 'class=\"powers-list\"';\n      }\n\n      // Display the current active arcane\n      data.activeArcane = this.options['activeArcane'];\n      const arcanes = new Array<string>();\n      const powers = data.itemsByType.power;\n      powers?.forEach((pow: any) => {\n        const arcane: string = pow.system.arcane;\n        if (!arcane) return;\n        if (!arcanes.find((el) => el === arcane)) {\n          arcanes.push(arcane);\n          // Add powerpoints data relevant to the detected arcane\n          if (\n            !foundry.utils.hasProperty(\n              this.actor,\n              `system.powerPoints.${arcane}`,\n            )\n          ) {\n            data.actor.system.powerPoints[arcane] = {\n              value: 0,\n              max: 0,\n            };\n          }\n        }\n      });\n      data.arcanes = arcanes;\n\n      // Check for enabled optional rules\n      data.settingrules = {\n        conviction: game.settings.get('swade', 'enableConviction'),\n        noPowerPoints: game.settings.get('swade', 'noPowerPoints'),\n        wealthType: game.settings.get('swade', 'wealthType'),\n        currencyName: game.settings.get('swade', 'currencyName'),\n        npcsUseCurrency: game.settings.get('swade', 'npcsUseCurrency'),\n      };\n    }\n\n    const additionalStats: AdditionalStats = this.#getAdditionalStats();\n    data.additionalStats = additionalStats;\n    data.hasAdditionalStatsFields = Object.keys(additionalStats).length > 0;\n    return data;\n  }\n\n  /** Extend and override the sheet header buttons */\n  protected override _getHeaderButtons() {\n    let buttons = super._getHeaderButtons();\n\n    // Token Configuration\n    if (this.actor.isOwner) {\n      buttons = [\n        {\n          label: game.i18n.localize('SWADE.Tweaks'),\n          class: 'configure-actor',\n          icon: 'fa-solid fa-gears',\n          onclick: (ev) => this._onConfigureEntity(ev),\n        },\n        ...buttons,\n      ];\n    }\n    return buttons;\n  }\n\n  protected _onConfigureEntity(event: JQuery.ClickEvent) {\n    event.preventDefault();\n    new SwadeActorTweaks({ document: this.actor }).render({ force: true });\n  }\n\n  protected async _chooseItemType(\n    choices?: any,\n  ): Promise<{ type: string; name: string }> {\n    if (!choices) {\n      choices = {\n        weapon: game.i18n.localize('TYPES.Item.weapon'),\n        armor: game.i18n.localize('TYPES.Item.armor'),\n        shield: game.i18n.localize('TYPES.Item.shield'),\n        gear: game.i18n.localize('TYPES.Item.gear'),\n        consumable: game.i18n.localize('TYPES.Item.consumable'),\n      };\n    }\n    const templateData = {\n        types: choices,\n        hasTypes: true,\n        name: game.i18n.format('DOCUMENT.New', {\n          type: game.i18n.localize('DOCUMENT.Item'),\n        }),\n      },\n      dlg = await foundry.applications.handlebars.renderTemplate(\n        'templates/sidebar/document-create.html',\n        templateData,\n      );\n    //Create Dialog window\n    return new Promise((resolve) => {\n      foundry.applications.api.DialogV2.wait({\n        window: {\n          title: game.i18n.format('DOCUMENT.Create', {\n            type: game.i18n.localize('DOCUMENT.Item'),\n          }),\n        },\n        content: dlg,\n        buttons: [\n          {\n            action: 'ok',\n            label: game.i18n.localize('SWADE.Ok'),\n            icon: '<i class=\"fas fa-check\"></i>',\n            default: true,\n            callback: (_event, button: HTMLButtonElement) => {\n              const html = button.form!;\n              resolve({\n                type: html.querySelector<HTMLSelectElement>('select[name=\"type\"]')\n                  ?.value as string,\n                name: html.querySelector<HTMLInputElement>('input[name=\"name\"]')?.value as string,\n              });\n            },\n          },\n          {\n            action: 'cancel',\n            icon: '<i class=\"fas fa-times\"></i>',\n            label: game.i18n.localize('SWADE.Cancel'),\n          },\n        ],\n      });\n    });\n  }\n\n  protected _checkNull(items: Item[]): Item[] {\n    if (items && items.length) {\n      return items;\n    }\n    return [];\n  }\n\n  protected override async _onResize(event: any) {\n    super._onResize(event);\n    let html = this.element;\n    html = html instanceof HTMLElement ? html : html[0];\n    const resizable = html.querySelectorAll('.resizable');\n    resizable.forEach((el) => {\n      const heightDelta =\n        (this.position.height as number) - (this.options.height as number);\n      el.style.height = `${heightDelta + parseInt(el.dataset.baseSize!)}px`;\n    });\n  }\n\n  protected _modifyDefense(target: string) {\n    let targetLabel;\n    let targetProperty;\n    switch (target) {\n      case 'parry':\n        targetLabel = `${game.i18n.localize(\n          'SWADE.Parry',\n        )} ${game.i18n.localize('SWADE.ShieldBonus')}`;\n        targetProperty = 'parry.shield';\n        break;\n      case 'armor':\n        targetLabel = `${game.i18n.localize('SWADE.Armor')}`;\n        targetProperty = 'toughness.armor';\n        break;\n      case 'toughness':\n        targetLabel = `${game.i18n.localize(\n          'SWADE.Tough',\n        )} ${game.i18n.localize('SWADE.Modifier')}`;\n        targetProperty = 'toughness.modifier';\n        break;\n      default:\n        targetLabel = `${game.i18n.localize(\n          'SWADE.Tough',\n        )} ${game.i18n.localize('SWADE.Modifier')}`;\n        targetProperty = 'toughness.value';\n        break;\n    }\n\n    const targetPropertyPath =\n      this.actor.type === 'vehicle'\n        ? `system.${targetProperty}`\n        : `system.stats.${targetProperty}`;\n    const targetPropertyValue = foundry.utils.getProperty(\n      this.actor,\n      targetPropertyPath,\n    );\n\n    const title = `${(game.i18n.format('SWADE.EdF'), { item: this.actor.name + ' ' + targetLabel })}`;\n\n    const template = `\n      <form><div class=\"form-group\">\n        <label>${game.i18n.format('SWADE.EdF', { item: targetLabel })}</label>\n        <input name=\"modifier\" value=\"${targetPropertyValue}\" type=\"text\"/>\n      </div></form>`;\n    foundry.applications.api.DialogV2.wait({\n      window: {\n        title: title,\n      },\n      content: template,\n      buttons: [\n        {\n          action: 'set',\n          icon: '<i class=\"fas fa-check\"></i>',\n          label: game.i18n.localize('SWADE.Ok'),\n          default: true,\n          callback: (_event, button: HTMLButtonElement) => {\n            const mod = button.form!.querySelector<HTMLInputElement>('input[name=\"modifier\"]')?.value;\n            const newData = {};\n            newData[targetPropertyPath] = parseInt(mod as string);\n            this.actor.update(newData);\n          },\n        },\n        {\n          action: 'cancel',\n          icon: '<i class=\"fas fa-times\"></i>',\n          label: game.i18n.localize('SWADE.Cancel'),\n        },\n      ],\n    });\n  }\n\n  protected _filterPowers(html: HTMLElement, arcane: string) {\n    this.options['activeArcane'] = arcane;\n    // Show, hide powers\n    html.querySelectorAll('.power').forEach((pow) => {\n      if (pow.dataset.arcane == arcane || arcane == 'All') {\n        pow.classList.add('active');\n      } else {\n        pow.classList.remove('active');\n      }\n    });\n    // Show, Hide powerpoints\n    html.querySelectorAll('.power-counter').forEach((ct) => {\n      if (ct.dataset.arcane == arcane) {\n        ct.classList.add('active');\n      } else {\n        ct.classList.remove('active');\n      }\n    });\n  }\n\n  /**\n   * Handle input changes to numeric form fields, allowing them to accept delta-typed inputs\n   * @param {Event} event  Triggering event.\n   */\n  protected _onChangeInputDelta(event: Event) {\n    const input = event.target as HTMLInputElement;\n    const value = input.value;\n    if (['+', '-'].includes(value[0])) {\n      const delta = parseInt(value, 10);\n      input.value = foundry.utils.getProperty(this.actor, input.name) + delta;\n    } else if (value[0] === '=') {\n      input.value = value.slice(1);\n    }\n  }\n\n  protected _calcInventoryWeight(items): number {\n    let retVal = 0;\n    items.forEach((i: any) => {\n      retVal += i.system.weight * i.system.quantity;\n    });\n    return retVal;\n  }\n\n  protected override _onDragStart(event: DragEvent): void {\n    const currentTarget = event.currentTarget as HTMLElement;\n    if (currentTarget.classList.contains('attribute')) {\n      return this._onDragAttribute(event);\n    }\n    super._onDragStart(event);\n  }\n\n  protected override async _onDropItemCreate(\n    itemData: Item['_source'][] | Item['_source'],\n  ): Promise<Item.Implementation[]> {\n    const items = await super._onDropItemCreate(itemData);\n    const typesToRender = ['power', 'skill'];\n    for (const item of items) {\n      if (typesToRender.includes(item.type)) item.sheet?.render(true);\n    }\n    return items;\n  }\n\n  protected _onDragAttribute(event: DragEvent) {\n    const btn = (event.currentTarget as HTMLElement).querySelector('button');\n    event.dataTransfer?.setData(\n      'text/plain',\n      JSON.stringify({\n        type: 'Attribute',\n        uuid: this.actor.uuid,\n        attribute: btn?.dataset.attribute as Attribute,\n      }),\n    );\n  }\n\n  #getAdditionalStats(): AdditionalStats {\n    const stats = structuredClone<AdditionalStats>(\n      this.actor.system.additionalStats,\n    );\n    const options = game.settings.get('swade', 'settingFields').actor;\n    for (const [key, attr] of Object.entries(stats)) {\n      if (!options[key] || !attr.dtype) {\n        delete stats[key];\n        continue;\n      }\n      if (attr.dtype === 'Selection') {\n        attr.options = options[key].optionString\n          ?.split(';')\n          .reduce((a, v) => ({ ...a, [v.trim()]: v.trim() }), {});\n      }\n    }\n    return stats;\n  }\n}\n","import { constants } from '../constants';\nimport type { NpcData } from '../data/actor';\nimport { getDieSidesRange } from '../util';\nimport SwadeBaseActorSheet from './SwadeBaseActorSheet';\n\n/**\n * @noInheritDoc\n */\nexport default class SwadeNPCSheet extends SwadeBaseActorSheet {\n  static override get defaultOptions() {\n    return {\n      ...super.defaultOptions,\n      classes: ['swade', 'sheet', 'actor', 'npc'],\n      width: 660,\n      height: 600,\n      tabs: [\n        {\n          navSelector: '.tabs',\n          contentSelector: '.sheet-body',\n          initial: 'summary',\n        },\n      ],\n    };\n  }\n\n  override get template() {\n    // Later you might want to return a different template\n    // based on user permissions.\n    if (!game.user?.isGM && this.actor.limited) {\n      return 'systems/swade/templates/actors/limited-sheet.hbs';\n    }\n    return 'systems/swade/templates/actors/npc-sheet.hbs';\n  }\n\n  // Override to set resizable initial size\n  override async _renderInner(data) {\n    const jquery = await super._renderInner(data);\n    const html = jquery[0];\n    this.form = html;\n\n    // Resize resizable classes\n    const resizable = html.querySelectorAll('.resizable');\n    resizable.forEach((el) => {\n      const heightDelta =\n        (this.position.height as number) - (this.options.height as number);\n      el.style.height = `${heightDelta + parseInt(el.dataset.baseSize!)}px`;\n    });\n\n    // Filter power list\n    const arcane = !this.options['activeArcane']\n      ? 'All'\n      : this.options['activeArcane'];\n    html.querySelector('.arcane-tabs .arcane')?.classList.remove('active');\n    html.querySelector(`[data-arcane='${arcane}']`)?.classList.add('active');\n    this._filterPowers(html, arcane);\n\n    return jquery;\n  }\n\n  override activateListeners(jquery: JQuery): void {\n    super.activateListeners(jquery);\n\n    // Everything below here is only needed if the sheet is editable\n    if (!this.isEditable) return;\n\n    const html = jquery[0];\n\n    // Refresh\n    html\n      .querySelectorAll('.adjust-counter')\n      .forEach((el) =>\n        el.addEventListener('click', this._handleCounterAdjust.bind(this)),\n      );\n\n    this._setupItemContextMenu(html);\n\n    // Drag events for macros.\n    html.querySelectorAll('.attribute').forEach((el) => {\n      // Add draggable attribute and dragstart listener.\n      el.draggable = true;\n      el.addEventListener('dragstart', this._onDragStart.bind(this), false);\n    });\n\n    // Delete Item\n    html.querySelectorAll('.item-delete').forEach((el) =>\n      el.addEventListener('click', (ev) => {\n        const li = ev.currentTarget?.closest('.gear-card');\n        this.actor.items.get(li.dataset.itemId)?.deleteDialog();\n      }),\n    );\n\n    // Roll Skill\n    html.querySelectorAll('.skill.item a').forEach((el) =>\n      el.addEventListener('click', (event) => {\n        const element = event.currentTarget as Element;\n        const item = element.parentElement!.dataset.itemId as string;\n        this.actor.rollSkill(item);\n      }),\n    );\n\n    // Add new object\n    html.querySelectorAll('.item-create').forEach((el) =>\n      el.addEventListener('click', async (event) => {\n        event.preventDefault();\n        const header = event.currentTarget;\n        const type = header.dataset.type!;\n\n        // item creation helper func\n        const createItem = (type: string, name?: string) => {\n          const itemData = {\n            name:\n              name ??\n              game.i18n.format('DOCUMENT.New', { type: type.capitalize() }),\n            type: type,\n            system: Object.assign({}, header.dataset),\n          };\n          delete itemData.system['type'];\n          return itemData;\n        };\n\n        let itemData: any;\n\n        // Getting back to main logic\n        if (type === 'choice') {\n          const dialogInput = await this._chooseItemType();\n          itemData = createItem(dialogInput.type, dialogInput.name);\n        } else {\n          itemData = createItem(type);\n        }\n        foundry.utils.setProperty(\n          itemData,\n          'system.equipStatus',\n          constants.EQUIP_STATE.EQUIPPED,\n        );\n        await this.actor.createEmbeddedDocuments('Item', [itemData], {\n          renderSheet: true,\n        });\n      }),\n    );\n\n    //Toggle Equipmnent Card collapsible\n    html.querySelectorAll('.gear-card .card-header .item-name').forEach((el) =>\n      el.addEventListener('click', (ev) => {\n        const card = ev.currentTarget.closest('.gear-card');\n        const content = card.querySelector('.card-content');\n        content.classList.toggle('collapsed');\n      }),\n    );\n\n    // Active Effects\n    html\n      .querySelectorAll('.status-container input[type=\"checkbox\"]')\n      .forEach((el) =>\n        el.addEventListener('change', this._toggleStatusEffect.bind(this)),\n      );\n\n    html\n      .querySelector('.attribute.size input')\n      ?.addEventListener('mouseenter', (event) => {\n        game.tooltip.deactivate();\n        game.tooltip.activate(event.target as HTMLElement, {\n          html: (this.actor.system as NpcData).getSizeTooltip(),\n          cssClass: 'themed theme-dark',\n        });\n      });\n\n    // TODO: fix this tooltip. No mouseenter event on a readonly input\n    html\n      .querySelector('.attribute.pace input')\n      ?.addEventListener('mouseenter', (event) => {\n        game.tooltip.deactivate();\n        game.tooltip.activate(event.target as HTMLElement, {\n          html: (this.actor.system as NpcData).getPaceTooltip(),\n          cssClass: 'themed theme-dark',\n        });\n      });\n  }\n\n  override async getData() {\n    const data: any = await super.getData();\n\n    // Progress attribute abbreviation toggle\n    data.useAttributeShorts = game.settings.get('swade', 'useAttributeShorts');\n\n    data.enrichedBiography =\n      await foundry.applications.ux.TextEditor.implementation.enrichHTML(\n        (this.actor.system as NpcData).details.biography.value,\n        {\n          relativeTo: this.actor,\n          rollData: this.actor.getRollData(),\n          secrets: this.options.editable && this.document.isOwner,\n        },\n      );\n    data.wealthDieTypes = getDieSidesRange(4, 12);\n\n    // Everything below here is only needed if user is not limited\n    if (this.actor.limited) return data;\n\n    data.parryTooltip = this.actor.getPTTooltip('parry');\n    data.toughnessTooltip = this.actor.getPTTooltip('toughness');\n    data.armorTooltip = this.actor.getArmorTooltip();\n    data.category = this.actor.system.category;\n    return data;\n  }\n\n  protected async _toggleStatusEffect(ev: Event) {\n    const key = ev.target.dataset.key as string;\n    // this is just to make sure the status is false in the source data\n    await this.actor.update({ [`system.status.${key}`]: false });\n    await this.actor.toggleActiveEffect(ev.target.dataset.id as string);\n  }\n\n  protected async _handleCounterAdjust(ev: PointerEvent) {\n    const target = ev.currentTarget as HTMLElement;\n    const action = target.dataset.action;\n\n    switch (action) {\n      case 'pp-refresh': {\n        const arcane = target.dataset.arcane;\n        const valueKey = 'system.powerPoints.' + arcane + '.value';\n        const maxKey = 'system.powerPoints.' + arcane + '.max';\n        const currentPP = foundry.utils.getProperty(this.actor, valueKey);\n        const maxPP = foundry.utils.getProperty(this.actor, maxKey);\n        if (currentPP >= maxPP) return;\n        await this.actor.update({\n          [valueKey]: Math.min(currentPP + 5, maxPP),\n        });\n        break;\n      }\n      default:\n        throw new Error('Unknown action!');\n    }\n  }\n\n  protected _setupItemContextMenu(html: HTMLElement) {\n    const items: ContextMenu.Entry[] = [\n      {\n        name: 'SWADE.Reload',\n        icon: '<i class=\"fa-solid fa-right-to-bracket\"></i>',\n        condition: (i) => {\n          const item = this.actor.items.get(i.dataset.itemId);\n          return (\n            item?.type === 'weapon' &&\n            !!item.system.shots &&\n            game.settings.get('swade', 'ammoManagement')\n          );\n        },\n        callback: (i) => this.actor.items.get(i.dataset.itemId)?.reload(),\n      },\n      {\n        name: 'SWADE.RemoveAmmo',\n        icon: '<i class=\"fa-solid fa-right-from-bracket\"></i>',\n        condition: (i) => {\n          const item = this.actor.items.get(i.dataset.itemId);\n          const isWeapon = item?.type === 'weapon';\n          const loadedAmmo = item?.getFlag('swade', 'loadedAmmo');\n          return (\n            isWeapon &&\n            !!loadedAmmo &&\n            item.usesAmmoFromInventory &&\n            (item.system.reloadType === constants.RELOAD_TYPE.MAGAZINE ||\n              item.system.reloadType === constants.RELOAD_TYPE.BATTERY)\n          );\n        },\n        callback: (i) => this.actor.items.get(i.dataset.itemId)?.removeAmmo(),\n      },\n      {\n        name: 'SWADE.Ed',\n        icon: '<i class=\"fa-solid fa-edit\"></i>',\n        callback: (i) =>\n          this.actor.items.get(i.dataset.itemId)?.sheet?.render(true),\n      },\n      {\n        name: 'SWADE.Duplicate',\n        icon: '<i class=\"fa-solid fa-copy\"></i>',\n        condition: (i) =>\n          !!this.actor.items.get(i.dataset.itemId)?.isPhysicalItem,\n        callback: async (i) => {\n          const item = this.actor.items.get(i.dataset.itemId);\n          const cloned = await item?.clone(\n            { name: game.i18n.format('DOCUMENT.CopyOf', { name: item.name }) },\n            { save: true },\n          );\n          cloned?.sheet?.render(true);\n        },\n      },\n      {\n        name: 'SWADE.Del',\n        icon: '<i class=\"fa-solid fa-trash\"></i>',\n        callback: (i) => this.actor.items.get(i.dataset.itemId)?.deleteDialog(),\n      },\n    ];\n\n    foundry.applications.ux.ContextMenu.create(this, html, 'li.item', items, {\n      jQuery: false,\n    });\n  }\n}\n","export default class SwadeTokenConfig extends foundry.applications.sheets\n  .TokenConfig {\n  override async _preparePartContext(partId, context, options) {\n    await super._preparePartContext(partId, context, options);\n    if (partId !== 'resources') return context;\n    const sourceSystem = this.actor?.system;\n    if (!sourceSystem) return context;\n    if (!context.barAttributes) return context;\n\n    // Localize labels for normally found trackable attributes\n    for (const currData of context.barAttributes) {\n      const fullLabel = [];\n      const splitPath = currData.label.split('.');\n      for (let i = 1; i <= splitPath.length; i++) {\n        let currSchema = sourceSystem.schema;\n        for (const currPath of splitPath.slice(0, i)) {\n          currSchema = currSchema?.get?.(currPath);\n        }\n        if (currSchema?.label.length)\n          fullLabel.push(game.i18n.localize(currSchema.label));\n        else if (!currSchema) fullLabel.push(splitPath[i - 1]);\n      }\n      if (fullLabel.length) currData.label = fullLabel.join(': ');\n    }\n\n    // Special handling for Additional Stats, Power Points, and Encumbrance\n    for (const [key, value] of Object.entries(\n      sourceSystem.additionalStats ?? {},\n    )) {\n      if (value.dtype !== 'Number') continue;\n      context.barAttributes.push({\n        group: game.i18n.localize('SWADE.AddStats'),\n        value: `additionalStats.${key}`,\n        label: value.label,\n      });\n    }\n    for (const key of Object.keys(sourceSystem.powerPoints ?? {})) {\n      context.barAttributes.push({\n        group: game.i18n.localize('SWADE.PP'),\n        value: `powerPoints.${key}`,\n        label: key,\n      });\n    }\n    if (sourceSystem.details?.encumbrance?.max)\n      context.barAttributes.push({\n        group: game.i18n.localize('TOKEN.BarAttributes'),\n        value: 'details.encumbrance',\n        label: game.i18n.localize('SWADE.CarryWeight'),\n      });\n\n    // Final sort\n    context.barAttributes.sort((a, b) =>\n      a.group === b.group ? a.label.compare(b.label) : a.group.compare(b.group),\n    );\n    return context;\n  }\n}\n","import type { DeepPartial } from 'fvtt-types/utils';\nimport {\n  AdditionalStats,\n  SwadeApplicationTab,\n  SwadeDocumentSheetConfiguration,\n} from '../../globals';\nimport { RollModifier } from '../../interfaces/additional.interface';\nimport AttributeManager from '../apps/AttributeManager';\nimport { constants } from '../constants';\nimport SwadeActiveEffect from '../documents/active-effect/SwadeActiveEffect';\nimport SwadeActor from '../documents/actor/SwadeActor';\nimport SwadeItem from '../documents/item/SwadeItem';\nimport { Logger } from '../Logger';\nimport { SwadeActorSheetV2 } from './SwadeActorSheetV2';\n\nclass SwadeVehicleSheetV2 extends SwadeActorSheetV2<SwadeVehicleSheetV2.RenderContext> {\n  declare actor: SwadeActor<'vehicle'>;\n  static override DEFAULT_OPTIONS: DeepPartial<\n    SwadeDocumentSheetConfiguration<SwadeActor<'vehicle'>>\n  > = {\n    classes: ['vehicle', 'standard-form', 'swade-application'],\n    position: { height: 700, width: 700 },\n    window: { resizable: true },\n    actions: {\n      maneuverCheck: SwadeVehicleSheetV2.maneuverCheck,\n      rollAttribute: SwadeVehicleSheetV2.rollAttribute,\n      changeEquip: SwadeVehicleSheetV2.changeEquip,\n      manageAttributes: SwadeVehicleSheetV2.manageAttributes,\n      createCargo: SwadeVehicleSheetV2.createCargo,\n      addCrewMember: SwadeVehicleSheetV2.addCrewMember,\n      deleteCrewMember: SwadeVehicleSheetV2.deleteCrewMember,\n      openCrewMember: SwadeVehicleSheetV2.openCrewMember,\n    },\n  };\n\n  static override PARTS = {\n    header: {\n      template: 'systems/swade/templates/actors/vehicle2/header.hbs',\n    },\n    tabs: { template: 'templates/generic/tab-navigation.hbs' },\n    traits: {\n      template: 'systems/swade/templates/actors/vehicle2/tab-traits.hbs',\n    },\n    crew: {\n      template: 'systems/swade/templates/actors/vehicle2/tab-crew.hbs',\n    },\n    cargo: {\n      template: 'systems/swade/templates/actors/vehicle2/tab-cargo.hbs',\n    },\n    description: {\n      template: 'systems/swade/templates/actors/vehicle2/tab-desc.hbs',\n    },\n  };\n\n  static override TABS: Record<string, Partial<SwadeApplicationTab>> = {\n    traits: {\n      id: 'traits',\n      group: 'primary',\n      label: 'SWADE.Summary',\n    },\n    crew: {\n      id: 'crew',\n      group: 'primary',\n      label: 'SWADE.Crew',\n    },\n    cargo: {\n      id: 'cargo',\n      group: 'primary',\n      label: 'SWADE.Cargo',\n    },\n    description: {\n      id: 'description',\n      group: 'primary',\n      label: 'SWADE.Desc',\n    },\n  };\n\n  protected override _getTabs() {\n    this.tabGroups.primary ??= this.actor.limited ? 'description' : 'traits';\n    return super._getTabs();\n  }\n\n  protected override async _preparePartContext(\n    partId: keyof typeof SwadeVehicleSheetV2.PARTS,\n    context: SwadeVehicleSheetV2.RenderContext,\n    _options: DeepPartial<foundry.applications.api.HandlebarsApplicationMixin.RenderOptions>,\n  ) {\n    const itemTypes = this.actor.itemTypes;\n    switch (partId) {\n      case 'header':\n        context.hasEnergy =\n          game.settings.get('swade', 'vehicleEnergy') &&\n          this.actor.system.energy.enabled;\n        break;\n      case 'traits':\n        context.effects = this._prepareEffects();\n        context.showModCount = game.settings.get('swade', 'vehicleMods');\n        context.gearMods = this._prepareMods('gear');\n        context.weaponMods = this._prepareMods('weapon');\n        context.attributes = this._prepareAttributes();\n        this._prepareAdditionalStats(context);\n        break;\n      case 'crew':\n        context.opSkills = this._prepareOpSkillList();\n        context.weaponOptions = this._prepareWeaponOptions();\n        context.showEdges = game.settings.get('swade', 'vehicleEdges');\n        context.abilities = itemTypes.ability;\n        context.edges = itemTypes.edge;\n        context.hindrances = itemTypes.hindrance;\n        context.tokenOptions = this._prepareTokenOptions();\n        context.weaponsPerMember = this.actor.system._source.crew.members.map(\n          (m) => m.weapons ?? [],\n        );\n        break;\n      case 'description':\n        context.enrichedDescription =\n          await foundry.applications.ux.TextEditor.implementation.enrichHTML(\n            this.actor.system.description,\n            {\n              secrets: this.actor.isOwner,\n              rollData: this.actor.getRollData(),\n              relativeTo: this.actor,\n            },\n          );\n        break;\n    }\n    return context;\n  }\n\n  protected _prepareEffects() {\n    const effects: Record<string, SwadeActiveEffect[]> = {\n      passive: [],\n      temporary: [],\n      inactive: [],\n    };\n    for (const e of this.actor.allApplicableEffects()) {\n      if (e.isTemporary && e.active) effects.temporary.push(e);\n      else if (e.active) effects.passive.push(e);\n      else effects.inactive.push(e);\n    }\n\n    for (const category of Object.values(effects)) {\n      category.sort((a, b) => a.sort - b.sort);\n    }\n\n    return effects;\n  }\n\n  protected _prepareMods(type: 'gear' | 'weapon') {\n    const mods = this.actor.items.filter(\n      (i) =>\n        i.type === type &&\n        i.system.isVehicular &&\n        i.system.equipStatus > constants.EQUIP_STATE.CARRIED,\n    );\n    return mods;\n  }\n\n  protected _prepareOpSkillList(): foundry.applications.fields.SelectInputConfig {\n    const skills = game.settings.get('swade', 'vehicleSkills');\n    const skillList = skills.split(/[,]/);\n\n    const options: foundry.applications.fields.FormSelectOption[] =\n      skillList.map((skill) => {\n        const name = skill.trim();\n        return {\n          value: name,\n          label: name,\n          selected: name === this.actor.system.driver.skill,\n        };\n      });\n    return {\n      options,\n      blank: '',\n    };\n  }\n\n  protected _prepareTokenOptions(): foundry.applications.fields.FormSelectOption[] {\n    const collection = game.scenes.viewed?.tokens ?? [];\n    const options: foundry.applications.fields.FormSelectOption[] =\n      collection.reduce((arr, doc: TokenDocument.Implementation) => {\n        if (\n          !doc.visible ||\n          !doc.actor ||\n          ['group', 'vehicle'].includes(doc.actor.type) ||\n          this.actor.system.crew.members.find((m) => m.uuid === doc.actor.uuid) //make sure we can't add the same one twice\n        )\n          return arr;\n        arr.push({ value: doc.actor.uuid, label: doc.name });\n        return arr;\n      }, []);\n    return options;\n  }\n\n  protected _prepareWeaponOptions(): foundry.applications.fields.FormSelectOption[] {\n    return this.actor.itemTypes.weapon\n      .filter((w: SwadeItem<'weapon'>) => w.system.isVehicular && w.isReadied)\n      .map((w: SwadeItem<'weapon'>) => ({\n        value: w.id,\n        label: w.name,\n      }));\n  }\n\n  protected _prepareAttributes(): SwadeVehicleSheetV2.AttributeContext {\n    const enabled = Object.values(this.actor.system.attributes).some(\n      (a) => a.enabled,\n    );\n    const globals = this.actor?.system.stats.globalMods as Record<\n      string,\n      RollModifier[]\n    >;\n    const list = Object.entries(this.actor.system.attributes)\n      .filter(([_key, value]) => value.enabled)\n      .map(([key, attr]) => {\n        const field = this.actor.system.schema.getField(['attributes', key]);\n        const mods: RollModifier[] = [\n          {\n            label: game.i18n.localize('SWADE.TraitMod'),\n            value: attr.die.modifier,\n          },\n          ...attr.effects,\n          ...globals[key],\n          ...globals.trait,\n        ].filter((m) => m.ignore !== true);\n        let tooltip = `<strong>${game.i18n.localize(\n          CONFIG.SWADE.attributes[key].long,\n        )}</strong>`;\n        if (mods.length) {\n          tooltip += `<ul style=\"text-align:start;\">${mods\n            .map(({ label, value }) => {\n              const mapped =\n                typeof value === 'number' ? value.signedString() : value;\n              return `<li>${label}: ${mapped}</li>`;\n            })\n            .join('')}</ul>`;\n        }\n        return {\n          value: attr,\n          field,\n          tooltip,\n        };\n      });\n\n    return { enabled, list };\n  }\n\n  protected _prepareAdditionalStats(\n    context: SwadeVehicleSheetV2.RenderContext,\n  ) {\n    const additionalStats = structuredClone<AdditionalStats>(\n      this.actor.system.additionalStats,\n    );\n    for (const [key, attr] of Object.entries(additionalStats)) {\n      if (!attr.dtype) delete additionalStats[key];\n      if (attr.dtype === 'Selection') {\n        const options = game.settings.get('swade', 'settingFields').actor;\n        attr.options = options[key].optionString\n          ?.split(';')\n          .reduce((a, v) => ({ ...a, [v.trim()]: v.trim() }), {});\n      }\n    }\n    context.hasAdditionalStatsFields = !!Object.keys(additionalStats).length;\n    context.additionalStats = additionalStats;\n  }\n\n  /** Actions */\n\n  protected static async maneuverCheck(\n    this: SwadeVehicleSheetV2,\n    _event: PointerEvent,\n    target: HTMLElement,\n  ) {\n    const uuid =\n      target.closest<HTMLElement>('[data-member-uuid]')?.dataset.memberUuid;\n    const operator = this.actor.system.crew.members.find(\n      (m) => m.uuid === uuid,\n    );\n    if (!operator.actor) return;\n    await this.actor.system.rollManeuverCheck(operator.actor);\n  }\n\n  protected static async manageAttributes(\n    this: SwadeVehicleSheetV2,\n    _event: PointerEvent,\n    _target: HTMLElement,\n  ) {\n    new AttributeManager({ actor: this.actor }).render({ force: true });\n  }\n\n  protected static async rollAttribute(\n    this: SwadeVehicleSheetV2,\n    _event: PointerEvent,\n    target: HTMLElement,\n  ) {\n    const attribute = target.dataset.attribute as\n      | 'agility'\n      | 'smarts'\n      | 'spirit'\n      | 'strength';\n    await this.actor.rollAttribute(attribute);\n  }\n\n  protected static async changeEquip(\n    this: SwadeVehicleSheetV2,\n    _event: PointerEvent,\n    target: HTMLElement,\n  ) {\n    // TODO: Use v13 ContextMenu\n    console.log(this, _event, target);\n    const item = this._getEmbeddedDocument(target);\n    console.log(item);\n  }\n\n  protected static async createCargo(\n    this: SwadeVehicleSheetV2,\n    _event: PointerEvent,\n    _target: HTMLElement,\n  ) {\n    await SwadeItem.createDialog(\n      {},\n      {\n        parent: this.actor,\n        types: ['gear', 'armor', 'weapon', 'shield', 'consumable'],\n      },\n    );\n  }\n\n  protected static async addCrewMember(\n    this: SwadeVehicleSheetV2,\n    _event: PointerEvent,\n    target: HTMLButtonElement,\n  ) {\n    const uuid = (target.previousElementSibling as HTMLInputElement).value;\n    if (uuid) await this._addCrewMember(uuid);\n  }\n\n  protected static async deleteCrewMember(\n    this: SwadeVehicleSheetV2,\n    _event: PointerEvent,\n    target: HTMLButtonElement,\n  ) {\n    const index = Number(target.dataset.index);\n    const members = this.actor.system._source.crew.members;\n    await this.actor.update({\n      'system.crew.members': members.toSpliced(index, 1),\n    });\n  }\n\n  protected static async openCrewMember(\n    this: SwadeVehicleSheetV2,\n    _event: PointerEvent,\n    target: HTMLElement,\n  ) {\n    const uuid =\n      target.closest<HTMLElement>('[data-member-uuid]')?.dataset.memberUuid;\n    const operator = this.actor.system.crew.members.find(\n      (m) => m.uuid === uuid,\n    );\n    operator?.actor?.sheet?.render(true);\n  }\n\n  /** Drop Handling */\n\n  protected override async _onDropActor(\n    _event: DragEvent,\n    data: foundry.abstract.Document.DropData<SwadeActor>,\n  ) {\n    if (!this.actor.isOwner) return false;\n    const actor = await getDocumentClass('Actor').fromDropData(data);\n    if (!actor) return false;\n    if (actor.type === 'group' || actor.type === 'vehicle') {\n      Logger.warn(\n        `You cannot set ${game.i18n.localize('TYPES.Actor.' + actor.type)} Actors as the operator of a vehicle!`,\n        { toast: true, localize: true },\n      );\n      return false;\n    }\n    if (this.tabGroups.primary !== 'crew') return false;\n    await this._addCrewMember(actor.uuid);\n    return true;\n  }\n\n  protected async _addCrewMember(uuid: string) {\n    const existingMembers = this.actor.system._source.crew.members;\n    const count = existingMembers.length;\n    const role =\n      count === 0 ? constants.CREW_ROLE.OPERATOR : constants.CREW_ROLE.GUNNER;\n    const newMembers = [...existingMembers, { uuid, role, sort: count - 1 }];\n    await this.actor.update({ 'system.crew.members': newMembers });\n  }\n}\n\ndeclare namespace SwadeVehicleSheetV2 {\n  interface AttributeContext {\n    enabled: boolean;\n    list: Array<{\n      value: unknown;\n      field: foundry.data.fields.SchemaField.Any;\n      tooltip: string;\n    }>;\n  }\n\n  interface RenderContext extends SwadeActorSheetV2.RenderContext {\n    hasEnergy: boolean;\n    effects: Record<string, SwadeActiveEffect[]>;\n    showModCount: boolean;\n    gearMods: SwadeItem<'gear'>[];\n    weaponMods: SwadeItem<'weapon'>[];\n    attributes: AttributeContext;\n    hasAdditionalStatsFields: boolean;\n    additionalStats: AdditionalStats;\n    opSkills: foundry.applications.fields.SelectInputConfig;\n    weaponOptions: foundry.applications.fields.FormSelectOption[];\n    tokenOptions: foundry.applications.fields.FormSelectOption[];\n    weaponsPerMember: string[];\n    showEdges: boolean;\n    abilities: SwadeItem<'ability'>[];\n    edges: SwadeItem<'edge'>[];\n    hindrances: SwadeItem<'hindrance'>[];\n    cargo: {\n      items: SwadeItem[];\n      current: number;\n    };\n    enrichedDescription: string;\n  }\n}\n\nexport default SwadeVehicleSheetV2;\n","import type { HeadquartersData } from '../../data/journal';\n\nexport default class JournalHeadquartersPageSheet extends foundry.applications\n  .sheets.journal.JournalEntryPageHandlebarsSheet {\n  static override DEFAULT_OPTIONS = {\n    classes: ['headquarters-journal'],\n    form: {\n      submitOnChange: true,\n    },\n  };\n\n  static override EDIT_PARTS = {\n    header: super.EDIT_PARTS.header,\n    content: {\n      template: 'systems/swade/templates/journal/page-headquarters-edit.hbs',\n      classes: ['standard-form', 'scrollable'],\n    },\n    footer: super.EDIT_PARTS.footer,\n  };\n\n  static VIEW_PARTS = {\n    content: {\n      template: 'systems/swade/templates/journal/page-headquarters-view.hbs',\n      root: true,\n    },\n  };\n\n  override async _prepareContext(options) {\n    const context = await super._prepareContext(options);\n    const system = this.document.system as HeadquartersData;\n    context.enriched = {\n      advantage: await this.#enrich(system.advantage),\n      complication: await this.#enrich(system.complication),\n      upgrades: await this.#enrich(system.upgrades),\n      form: {\n        description: await this.#enrich(system.form.description),\n        acquisition: await this.#enrich(system.form.acquisition),\n        maintenance: await this.#enrich(system.form.maintenance),\n      },\n    };\n    const realDocument = await fromUuid(context.document.uuid);\n    if (!realDocument) context.isSynthetic = true;\n    return context;\n  }\n\n  async #enrich(text: string): Promise<string> {\n    return foundry.applications.ux.TextEditor.implementation.enrichHTML(text, { secrets: this.document.isOwner });\n  }\n}\n","import { SwadeRoll } from '../dice/SwadeRoll';\n\nexport default class SwadeChatLog extends foundry.applications.sidebar.tabs\n  .ChatLog {\n  protected async _processDiceCommand(\n    command: 'selfroll' | 'publicroll' | 'gmroll' | 'blindroll',\n    matches: RegExpMatchArray[],\n    chatData: ChatMessage.CreateData,\n    createOptions: ChatMessage.Database.OnCreateOperation,\n  ): Promise<void> {\n    const actor =\n      ChatMessage.implementation.getSpeakerActor(chatData.speaker) ||\n      game.user.character;\n    const rollData = actor?.getRollData() ?? {};\n    const rolls: (Roll | SwadeRoll)[] = [];\n    for (const match of matches) {\n      if (!match) continue;\n      const [formula, flavor] = match.slice(2, 4);\n      if (flavor && !chatData.flavor) chatData.flavor = flavor;\n      const roll = Roll.create(formula, rollData) as SwadeRoll | Roll;\n      await roll.evaluate();\n      rolls.push(roll);\n    }\n    chatData.rolls = rolls;\n    chatData.sound = CONFIG.sounds.dice;\n    if (!rolls.every((r) => r instanceof SwadeRoll)) {\n      chatData.content = rolls\n        .reduce((t, r) => t + (r.total as number), 0)\n        .toString();\n    }\n    createOptions.rollMode = command;\n  }\n}\n","// import { Updates } from '../../globals';\nimport SwadeCombat from '../documents/combat/SwadeCombat';\nimport SwadeCombatant from '../documents/combat/SwadeCombatant';\n\n/** This class defines a a new Combat Tracker specifically designed for SWADE */\nexport default class SwadeCombatTracker extends foundry.applications.sidebar\n  .tabs.CombatTracker {\n  static override DEFAULT_OPTIONS = {\n    classes: ['swade'],\n    actions: {\n      toggleGroupExpand: this.#toggleGroupExpand,\n      toggleHold: this.#onSwadeCombatantControl,\n      toggleTurnLost: this.#onSwadeCombatantControl,\n      actNow: this.#onSwadeCombatantControl,\n      actAfter: this.#onSwadeCombatantControl\n    },\n  };\n\n  static override PARTS = {\n    header: {\n      template: 'templates/sidebar/tabs/combat/header.hbs',\n    },\n    dramaticTask: {\n      template: 'systems/swade/templates/sidebar/dramatic-task.hbs',\n    },\n    tracker: {\n      template: 'systems/swade/templates/sidebar/tracker.hbs',\n      templates: ['systems/swade/templates/sidebar/turn.hbs'],\n      scrollable: [''],\n    },\n    footer: {\n      template: 'templates/sidebar/tabs/combat/footer.hbs',\n    },\n  };\n\n  protected override _configureRenderParts(options) {\n    const parts = super._configureRenderParts(options);\n    if (game.user.isGM && !this.viewed?.round && this.viewed?.combatants?.size)\n      parts.footer.template = 'systems/swade/templates/sidebar/footer.hbs';\n    return parts;\n  }\n\n  protected override async _preparePartContext(partId, context, options) {\n    await super._preparePartContext(partId, context, options);\n    switch (partId) {\n      case 'dramaticTask':\n        await this._prepareDramaticTaskContext(context, options);\n        break;\n    }\n    return context;\n  }\n\n  protected async _prepareDramaticTaskContext(context, _options) {\n    context.isDramaticTask = this.viewed?.type === 'dramaticTask';\n  }\n\n  protected async _prepareTrackerContext(context, options) {\n    await super._prepareTrackerContext(context, options);\n\n    const combat = this.viewed as SwadeCombat | null;\n\n    const [noGroup, grouped] = (context.turns ?? []).partition(\n      (c) => !!c?.group,\n    );\n\n    const groups = Object.groupBy(grouped, (c) => c.group.id);\n\n    const currentTurn = combat?.turns[combat.turn];\n\n    context.groupTurns = combat?.groups.reduce((acc, cg) => {\n      const {\n        _expanded: isExpanded,\n        id,\n        name,\n        isOwner,\n        defeated: isDefeated,\n        hidden,\n        disposition,\n        initiative,\n        img,\n      } = cg;\n      const turns = groups[id] ?? [];\n      const active = turns.some((t) => t.id === currentTurn?.id);\n      const leader = cg.system.leaderCombatant;\n\n      const turn = {\n        isGroup: true,\n        id,\n        name,\n        isOwner,\n        isDefeated,\n        hidden,\n        disposition,\n        initiative,\n        turns,\n        img,\n        active,\n      };\n\n      if (leader) {\n        Object.assign(turn, {\n          cardString: leader?.cardString,\n          initiative: leader?.initiative,\n          roundHeld: leader?.roundHeld,\n          isOnHold: !!leader?.roundHeld,\n          turnLost: leader?.turnLost,\n          hasRolled: !!leader?.initiative && !!leader?.cardString,\n          canDrawInit: this._canDrawInitiative(leader),\n          canRedraw: this._canRedrawInitiative(leader),\n        });\n      }\n\n      turn.css = [\n        isExpanded ? 'expanded' : null,\n        active ? 'active' : null,\n        hidden ? 'hide' : null,\n        isDefeated ? 'defeated' : null,\n      ].filterJoin(' ');\n\n      acc.push(turn);\n\n      return acc;\n    }, noGroup);\n\n    context.groupTurns?.sort(combat._sortCombatants);\n  }\n\n  protected async _prepareTurnContext(\n    combat: Combat.Stored,\n    combatant: Combatant.Stored,\n    index,\n  ) {\n    const turn = await super._prepareTurnContext(combat, combatant, index);\n\n    Object.assign(turn, {\n      group: combatant.group,\n      isVehicle: combatant?.actor?.type === 'vehicle',\n      isIncapacitated: combatant?.isIncapacitated,\n      isLeader: combatant.isGroupLeader,\n      cardString: combatant?.cardString,\n      initiative: combatant?.initiative,\n      roundHeld: combatant?.roundHeld,\n      isOnHold: !!combatant?.roundHeld,\n      turnLost: combatant?.turnLost,\n      hasRolled: !!combatant?.initiative && !!combatant?.cardString,\n      canDrawInit: this._canDrawInitiative(combatant as SwadeCombatant),\n      canRedraw: this._canRedrawInitiative(combatant as SwadeCombatant),\n    });\n\n    return turn;\n  }\n\n  protected _canDrawInitiative(combatant: SwadeCombatant): boolean {\n    if (!combatant.isOwner) return false;\n    const firstRound = combatant.system.firstRound ?? 0;\n    // The Combatant can draw on or after their first round, but not if they're in a group or defeated.\n    return (\n      firstRound <= (combatant.combat?.round ?? 0) &&\n      !(!!combatant.group || combatant.defeated)\n    );\n  }\n\n  protected _canRedrawInitiative(combatant: SwadeCombatant): boolean {\n    return combatant.isOwner && !combatant.group; // Followers can neither draw nor redraw.\n  }\n\n  protected override async _onRender(context, options) {\n    await super._onRender(context, options);\n\n    new foundry.applications.ux.DragDrop({\n      dragSelector: '.combatant',\n      dropSelector: '.combatant-group, .combat-tracker',\n      permissions: {\n        dragstart: () => game.user.isGM,\n        drop: () => game.user.isGM,\n      },\n      callbacks: {\n        dragstart: this._onDragStart.bind(this),\n        dragover: this._onDragOver.bind(this),\n        dragleave: this._onDragLeave.bind(this),\n        drop: this._onDrop.bind(this),\n      },\n    }).bind(this.element);\n\n    if (options.parts && options.parts.includes('dramaticTask')) {\n      const tokenInput = this.element.querySelector<HTMLInputElement>(\n        'input[name=\"system.tokens.value\"]',\n      );\n\n      tokenInput?.addEventListener('change', () =>\n        this.viewed?.update({ 'system.tokens.value': tokenInput.value }),\n      );\n    }\n  }\n\n  protected async _onDragStart(event: DragEvent) {\n    const li = event.currentTarget;\n    const combatant = this.viewed.combatants.get(li.dataset.combatantId);\n    if (!combatant) return;\n    const dragData = combatant.toDragData();\n    event.dataTransfer!.setData('text/plain', JSON.stringify(dragData));\n  }\n\n  protected _onDragOver(event: DragEvent) {\n    (event.target as HTMLElement)\n      ?.closest('li.combatant-group')\n      ?.classList.add('dropTarget');\n  }\n\n  protected _onDragLeave(event: DragEvent): void {\n    (event.target as HTMLElement)\n      ?.closest('li.combatant-group')\n      ?.classList.remove('dropTarget');\n  }\n\n  protected async _onDrop(event: DragEvent) {\n    // Combat Tracker contains combatant groups, which means this would fire twice\n    event.stopPropagation();\n    const data = foundry.applications.ux.TextEditor.implementation.getDragEventData(event);\n\n    const combatant = await SwadeCombatant.fromDropData(data);\n\n    if (!combatant) return;\n\n    const groupLI = (event.target as HTMLElement).closest(\n      '.combatant-group',\n    ) as HTMLLIElement | undefined;\n    if (groupLI) {\n      groupLI.classList.remove('dropTarget');\n      combatant.update({ group: groupLI.dataset.groupId });\n    } else {\n      combatant.update({ group: null });\n    }\n  }\n\n  protected override async _onFirstRender(context, options) {\n    await super._onFirstRender(context, options);\n\n    this._createContextMenu(this._getGroupContextOptions, '.combatant-group', {\n      hookName: 'getCombatantGroupContextOptions',\n      fixed: true,\n      parentClassHooks: false,\n    });\n  }\n\n  protected override _getEntryContextOptions() {\n    const entryOptions = super._getEntryContextOptions();\n\n    const getCombatant = (li: HTMLLIElement) =>\n      this.viewed!.combatants.get(li.dataset.combatantId);\n    const getCombatantGroup = (li: HTMLLIElement) =>\n      this.viewed!.groups.get(li.closest('.combatant-group')?.dataset.groupId);\n\n    entryOptions.push(\n      {\n        name: 'SWADE.MakeGroupLeader',\n        icon: '<i class=\"fa-solid fa-users\"></i>',\n        condition: (li: HTMLLIElement) => {\n          const combatant = getCombatant(li);\n          return combatant.group && !combatant.isGroupLeader;\n        },\n        callback: (li: HTMLLIElement) =>\n          getCombatant(li).setIsGroupLeader(true),\n      },\n      {\n        name: 'SWADE.RemoveGroupLeader',\n        icon: '<i class=\"fa-solid fa-users-slash\"></i>',\n        condition: (li: HTMLLIElement) => {\n          if (getCombatantGroup(li)?.members.size !== 1) {\n            return getCombatant(li).isGroupLeader;\n          }\n          return false;\n        },\n        callback: (li: HTMLLIElement) =>\n          getCombatant(li).setIsGroupLeader(false),\n      },\n    );\n\n    return entryOptions;\n  }\n\n  protected override _getCombatContextOptions() {\n    const entryOptions = super._getCombatContextOptions();\n\n    entryOptions.push({\n      name: game.i18n.format('DOCUMENT.Create', {\n        type: game.i18n.localize('DOCUMENT.CombatantGroup'),\n      }),\n      icon: '<i class=\"fa-solid fa-users-rectangle\"></i>',\n      callback: () => {\n        const groupCls = CombatantGroup.implementation;\n        groupCls.create(\n          {\n            name: groupCls.defaultName({ parent: this.viewed }),\n            img: 'icons/environment/people/charge.webp',\n          },\n          { parent: this.viewed },\n        );\n      },\n    });\n\n    return entryOptions;\n  }\n\n  /**\n   * Get the context menu entries for Combatant Groups in the tracker.\n   * Only available to game masters.\n   * @returns {ContextMenu.Entry[]}\n   */\n  protected _getGroupContextOptions() {\n    const getCombatantGroup = (li: HTMLLIElement) =>\n      this.viewed!.groups.get(li.dataset.groupId);\n    return [\n      {\n        name: game.i18n.format('DOCUMENT.Update', {\n          type: game.i18n.localize('DOCUMENT.CombatantGroup'),\n        }),\n        icon: '<i class=\"fa-solid fa-edit\"></i>',\n        condition: (li) => getCombatantGroup(li).isOwner,\n        callback: (li: HTMLLIElement) =>\n          getCombatantGroup(li)?.sheet.render({\n            force: true,\n            position: {\n              top: Math.min(li.offsetTop, window.innerHeight - 350),\n              left: window.innerWidth - 720,\n            },\n          }),\n      },\n      {\n        name: 'COMBAT.ClearMovementHistories',\n        icon: '<i class=\"fa-solid fa-shoe-prints\"></i>',\n        condition: game.user.isGM,\n        callback: (li: HTMLLIElement) =>\n          getCombatantGroup(li).clearMovementHistories(),\n      },\n      {\n        name: game.i18n.format('DOCUMENT.Delete', {\n          type: game.i18n.localize('DOCUMENT.CombatantGroup'),\n        }),\n        icon: '<i class=\"fa-solid fa-trash\"></i>',\n        condition: game.user.isGM,\n        callback: (li: HTMLLIElement) => getCombatantGroup(li).delete(),\n      },\n      {\n        name: 'OWNERSHIP.Configure',\n        icon: '<i class=\"fa-solid fa-lock\"></i>',\n        condition: game.user.isGM,\n        callback: (li) =>\n          new foundry.applications.apps.DocumentOwnershipConfig({\n            document: getCombatantGroup(li),\n            position: {\n              top: Math.min(li.offsetTop, window.innerHeight - 350),\n              left: window.innerWidth - 720,\n            },\n          }).render({ force: true }),\n      },\n    ];\n  }\n\n  /* -------------------------------------------------- */\n  /*   Actions                                          */\n  /* -------------------------------------------------- */\n\n  static async #toggleGroupExpand(\n    this: SwadeCombatTracker,\n    event: PointerEvent,\n    target: HTMLElement,\n  ) {\n    // Don't proceed if the click event was actually on one of the combatants\n    const entry = event.target.closest('[data-combatant-id]');\n    if (entry) return;\n\n    const combat = this.viewed;\n    const groupId = target.dataset.groupId;\n    await combat.toggleGroupExpand(groupId);\n  }\n\n  static async #onSwadeCombatantControl(\n    this: SwadeCombatTracker,\n    _event: PointerEvent,\n    target: HTMLElement\n  ) {\n    const combatantId = target?.closest('[data-combatant-id]')?.dataset.combatantId;\n    const combatant: SwadeCombatant | null = this.viewed?.combatants.get(combatantId);\n    if (!combatant) return;\n\n    switch (target.dataset.action) {\n      case 'toggleHold': return await combatant.toggleHold();\n      case 'toggleTurnLost': return await combatant.toggleTurnLost();\n      case 'actNow': return await combatant.actNow();\n      case 'actAfter': return await combatant.actAfterCurrentCombatant();\n    }\n  }\n\n  /**\n   * Handle new Combat creation request by presenting a form asking what type\n   */\n  protected override async _onCombatCreate(\n    event: PointerEvent,\n  ): Promise<void> {\n    event.preventDefault();\n    const cls = getDocumentClass('Combat');\n    await cls.createDialog({ active: true });\n  }\n}\n","import { Advance } from '../../interfaces/Advance.interface';\nimport { AdvanceEditor } from '../apps/AdvanceEditor';\nimport SettingConfigurator from '../apps/SettingConfigurator';\nimport { SwadeActorTweaks } from '../apps/SwadeDocumentTweaks';\nimport { constants } from '../constants';\nimport { CreatureData } from '../data/actor/base';\nimport SwadeActor from '../documents/actor/SwadeActor';\nimport SwadeItem from '../documents/item/SwadeItem';\n\nexport default class SwadeTour extends foundry.nue.Tour {\n  configurator?: SettingConfigurator;\n  actor?: SwadeActor;\n  item?: SwadeItem;\n  tweaks?: SwadeActorTweaks;\n  advanceEditor?: AdvanceEditor;\n  journalEntry?: JournalEntry;\n  journalEntryPage?: JournalEntryPage;\n  activeWindows: (Application.Any | foundry.applications.api.ApplicationV2.Any)[] = [];\n\n  override async start() {\n    delete this.configurator;\n    delete this.actor;\n    delete this.item;\n    delete this.tweaks;\n    delete this.advanceEditor;\n    delete this.journalEntry;\n    delete this.journalEntryPage;\n    this.activeWindows = [];\n    await super.start();\n  }\n\n  override async _preStep() {\n    await super._preStep();\n\n    const currentStep = this.currentStep as SwadeTourStep;\n\n    let earlyReturn;\n\n    // Modify any game settings we need to make the magic happen\n    if (currentStep.settings)\n      earlyReturn = await this.updateSettings(currentStep.settings);\n\n    if (earlyReturn === true) return;\n    if (earlyReturn === false) return this.exit();\n\n    // If we need an actor, make it and render\n    if (currentStep.actor)\n      earlyReturn = await this.makeActor(currentStep.actor);\n\n    if (earlyReturn === true) return;\n    if (earlyReturn === false) return this.exit();\n\n    // Journal and Journal Page creation\n    if (currentStep.journalEntry)\n      earlyReturn = await this.makeJournalEntry(currentStep.journalEntry);\n    if (currentStep.journalEntryPage)\n      earlyReturn = await this.makeJournalEntryPage(\n        currentStep.journalEntryPage,\n      );\n\n    if (earlyReturn === true) return;\n    if (earlyReturn === false) return this.exit();\n\n    if (currentStep.itemName) await this.renderItem(currentStep.itemName);\n\n    // Create an advance for possible use later\n    if (currentStep.advance) await this.makeAdvance(currentStep.advance);\n\n    if (currentStep.tab)\n      // If there's tab info, switch to that tab\n      await this.switchTab(currentStep.tab);\n    // Leaving to the end because we're only ever going to need one actor at a time and it's created much earlier\n    currentStep.selector = currentStep.selector?.replace(\n      'actorSheetID',\n      this.actor?.sheet?.id || '',\n    );\n    // Same with Tweaks dialog\n    currentStep.selector = currentStep.selector?.replace(\n      'tweaks',\n      this.tweaks?.id || '',\n    );\n    // And of course the journal pages\n    currentStep.selector = currentStep.selector?.replace(\n      'journalSheetID',\n      this.journalEntry?.sheet?.id || '',\n    );\n    currentStep.selector = currentStep.selector?.replace(\n      'journalPageSheetID',\n      this.journalEntryPage?.sheet?.id || '',\n    );\n\n    // Ensure relevant window is on top\n    for (const sheet of [this.actor?.sheet, this.tweaks, this.journalEntry?.sheet, this.journalEntryPage?.sheet]) {\n      if (currentStep.selector?.includes(sheet?.id)) {\n        await sheet.render(true);\n      }\n    }\n    if (currentStep.selector?.includes('div.advance-editor')) {\n      await this.advanceEditor?.render({ force: true });\n    }\n  }\n\n  override async _postStep() {\n    const currentStep = this.currentStep as SwadeTourStep;\n    // Un-replace selector info so repeated tours work without refresh\n    if (this.actor?.sheet?.id) currentStep.selector = currentStep.selector?.replace(\n      this.actor.sheet.id,\n      'actorSheetID',\n    );\n    // Same with Tweaks dialog\n    if (this.tweaks?.id) currentStep.selector = currentStep.selector?.replace(\n      this.tweaks.id,\n      'tweaks',\n    );\n    // And of course the journal pages\n    if (this.journalEntry?.sheet?.id) currentStep.selector = currentStep.selector?.replace(\n      this.journalEntry.sheet.id,\n      'journalSheetID',\n    );\n    if (this.journalEntryPage?.sheet?.id) currentStep.selector = currentStep.selector?.replace(\n      this.journalEntryPage.sheet.id,\n      'journalPageSheetID',\n    );\n    await super._postStep();\n  }\n\n  async override complete() {\n    for (const app of this.activeWindows) {\n      app?.close();\n    }\n    return super.complete();\n  }\n\n  override exit() {\n    for (const app of this.activeWindows) {\n      app?.close();\n    }\n    super.exit();\n  }\n\n  /**\n   * Update settings as required by the tour\n   * @param settings Settings to update\n   */\n  async updateSettings(settings: Record<string, any>) {\n    if (!game!.user!.can('SETTINGS_MODIFY')) {\n      const alreadySet = Object.entries(settings).every(([k, v]) => {\n        if (k === 'settingFields') {\n          const additionalFields = game.settings.get('swade', k);\n          return Object.entries(additionalFields).every(([documentType, f]) => {\n            if (!v[documentType]) return true;\n            return Object.entries(v[documentType]).every(\n              ([field, value]: [string, Record<string, any>]) => {\n                return foundry.utils.objectsEqual(f[field], value);\n              },\n            );\n          });\n        } else {\n          return game.settings.get('swade', k) === v;\n        }\n      });\n      if (!alreadySet) {\n        ui.notifications.error('SWADE.TOURS.ERROR.SettingPermission', {\n          localize: true,\n        });\n        this.exit();\n        return false;\n      } else {\n        const settingsDone = this.steps.findIndex(\n          (s, i) =>\n            i > this.stepIndex! &&\n            !s.selector!.startsWith('#settingConfig') &&\n            !s.selector!.startsWith('#client-settings'),\n        );\n        await this.earlyProgress(settingsDone);\n        return true;\n      }\n    }\n\n    for (const [k, v] of Object.entries(settings)) {\n      if (k !== 'settingFields') await game.settings.set('swade', k, v);\n      else {\n        const settingFields = game.settings.get('swade', k);\n        foundry.utils.mergeObject(settingFields, v);\n        await game.settings.set('swade', k, settingFields);\n      }\n    }\n    // There's no automatic update of the configurator after setting updates\n    if (this.configurator?.rendered) {\n      this.configurator.render();\n    }\n  }\n\n  /**\n   * Make and render an actor\n   * @param actor Actor Data\n   */\n  async makeActor(actor: Partial<SwadeActor>) {\n    const actCls = getDocumentClass('Actor') as typeof SwadeActor;\n    \n    actor = foundry.utils.duplicate(actor);\n    actor.name = game.i18n.localize(actor.name!);\n    if (actor.items) {\n      for (const item of actor.items) {\n        item.name = game.i18n.localize(item.name);\n      }\n    }\n    this.actor = new actCls(actor) as SwadeActor;\n    if (this.actor.sheet) this.actor.sheet.options.submitOnClose = false;\n    // TODO: simplify once definitely AppV2\n    // @ts-expect-error _render\n    const renderFunc = this.actor.sheet?._render ?? this.actor.sheet?.render;\n    await renderFunc.call(this.actor.sheet, true);\n\n    if (this.actor.sheet) this.activeWindows.push(this.actor.sheet);\n  }\n\n  /**\n   * Renders an item by name\n   * @param itemName  Item to fetch on the actor\n   */\n  async renderItem(itemName: string) {\n    // Alternatively, if we need to fetch an item from the actor\n    // let's do that and potentially render the sheet\n    if (!this.actor) {\n      console.warn('No actor found for step ' + this.currentStep!.title);\n    }\n    const localizedName = game.i18n.localize(itemName);\n    this.item = this.actor?.items.getName(localizedName) as SwadeItem;\n    const app = this.item!.sheet;\n    // TODO: simplify once definitely AppV2\n    const renderFunc = app._render ?? app.render;\n    if (!app.rendered) await renderFunc.call(app, true);\n    this.activeWindows.push(app);\n    // Assumption: Any given tour user might need to move back and forth between items\n    // but only one actor is active at a time, so itemName is always specified when operating on an embedded item sheet\n    // but the framework doesn't allow bouncing back and forth between actors\n    this.currentStep!.selector = this.currentStep!.selector!.replace(\n      'itemSheetID',\n      app!.id,\n    );\n  }\n\n  async makeAdvance(advance: TourAdvance) {\n    if (!this.actor || !(this.actor.system instanceof CreatureData)) return;\n    const advances = this.actor.system.advances.list;\n    advances.set(advance.id, advance);\n    this.actor.updateSource({ 'system.advances.list': advances.toJSON() });\n    this.actor.sheet?.render({ force: true });\n    if (advance.dialog) {\n      this.advanceEditor = new AdvanceEditor({ advance, actor: this.actor });\n      await this.advanceEditor.render({ force: true });\n      this.activeWindows.push(this.advanceEditor);\n    }\n  }\n\n  async makeJournalEntry(journalEntry: Partial<JournalEntry>) {\n    const journalCls = getDocumentClass('JournalEntry');\n\n    journalEntry = foundry.utils.duplicate(journalEntry);\n    journalEntry.name = game.i18n.localize(journalEntry.name!);\n    this.journalEntry = new journalCls(journalEntry);\n    await this.journalEntry?.sheet?.render(true);\n    if (this.journalEntry?.sheet) this.activeWindows.push(this.journalEntry.sheet);\n  }\n\n  async makeJournalEntryPage(journalEntryPage: Partial<JournalEntryPage>) {\n    const journalPageCls = getDocumentClass('JournalEntryPage');\n    \n    journalEntryPage = foundry.utils.duplicate(journalEntryPage);\n    journalEntryPage.name = game.i18n.localize(journalEntryPage.name!);\n    this.journalEntryPage = new journalPageCls(\n      journalEntryPage,\n      { parent: this.journalEntry },\n    );\n    this.journalEntry?.updateSource({\n      pages: [this.journalEntryPage?.toObject()]\n    });\n    this.journalEntry?.sheet?.render();\n    await this.journalEntryPage?.sheet?.render(true);\n    if (this.journalEntryPage?.sheet) this.activeWindows.push(this.journalEntryPage.sheet)\n  }\n\n  /**\n   * Flip between tabs of various applications\n   * @param tab The tab to switch to\n   */\n  async switchTab(tab: Exclude<SwadeTourStep['tab'], undefined>) {\n    switch (tab.parent) {\n      case constants.TOUR_TAB_PARENTS.SIDEBAR:\n        ui.sidebar.changeTab(tab.id, tab.group);\n        break;\n      case constants.TOUR_TAB_PARENTS.GAMESETTINGS: {\n        const app = game.settings.sheet as SettingsConfig;\n        await app.render(true);\n        this.activeWindows.push(app);\n        app.changeTab(tab.id, tab.group);\n        break;\n      }\n      case constants.TOUR_TAB_PARENTS.CONFIGURATOR: {\n        if (!this.configurator) {\n          const configurator: ClientSettings.PartialSettingSubmenuConfig =\n            game.settings.menus.get('swade.setting-config')!;\n          this.configurator = new configurator.type();\n        }\n        await this.configurator.render({ force: true });\n        this.activeWindows.push(this.configurator!);\n        this.configurator!.changeTab(tab.id, tab.group);\n        break;\n      }\n      case constants.TOUR_TAB_PARENTS.ACTOR: {\n        if (!this.actor) {\n          console.warn('No Actor Found');\n          break;\n        }\n        const app = this.actor.sheet;\n        app?.activateTab(tab.id);\n        break;\n      }\n      case constants.TOUR_TAB_PARENTS.ITEM: {\n        if (!this.item) {\n          console.warn('No Item Found');\n          break;\n        }\n        const app = this.item.sheet;\n        app?.activateTab(tab.id);\n        break;\n      }\n      case constants.TOUR_TAB_PARENTS.TWEAKS: {\n        if (!this.tweaks) {\n          this.tweaks = new SwadeActorTweaks({ document: this.actor! });\n          await this.tweaks.render({ force: true });\n          this.activeWindows.push(this.tweaks);\n        }\n        this.tweaks.changeTab(tab.id, tab.group);\n      }\n    }\n  }\n\n  async earlyProgress(stepIndex) {\n    const progress = game.settings.get('core', 'tourProgress') as Record<\n      string,\n      Record<string, number>\n    >;\n    const namespace = this.namespace!;\n    if (!(namespace in progress)) progress[namespace] = {};\n    progress[namespace][this.id!] = stepIndex;\n    game.settings.set('core', 'tourProgress', progress);\n    this._reloadProgress();\n    await this._preStep();\n  }\n}\n\ninterface SwadeTourStep extends foundry.nue.Tour.Step {\n  tab?: {\n    parent: string;\n    id: string;\n    group: string;\n  };\n  actor?: Partial<SwadeActor>;\n  itemName?: string;\n  advance?: TourAdvance;\n  settings?: Record<string, any>;\n  journalEntry?: Partial<JournalEntry>;\n  journalEntryPage?: Partial<JournalEntryPage>;\n}\n\ninterface TourAdvance extends Advance {\n  dialog: boolean;\n}\n","import SwadeTour from './SwadeTour';\n\nexport default async function registerSWADETours() {\n  try {\n    game.tours.register(\n      'swade',\n      'ammunition',\n      await SwadeTour.fromJSON('/systems/swade/tours/ammunition.json'),\n    );\n    game.tours.register(\n      'swade',\n      'tweaks',\n      await SwadeTour.fromJSON('/systems/swade/tours/tweaks.json'),\n    );\n    game.tours.register(\n      'swade',\n      'additional-stats',\n      await SwadeTour.fromJSON('/systems/swade/tours/additional-stats.json'),\n    );\n    game.tours.register(\n      'swade',\n      'auras',\n      await SwadeTour.fromJSON('/systems/swade/tours/auras.json'),\n    );\n    game.tours.register(\n      'swade',\n      'advances',\n      await SwadeTour.fromJSON('systems/swade/tours/advances.json'),\n    );\n    game.tours.register(\n      'swade',\n      'headquarters',\n      await SwadeTour.fromJSON('systems/swade/tours/headquarters.json'),\n    );\n  } catch (err) {\n    console.log(err);\n  }\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\nexport default class InfraVisionFilter extends foundry.canvas.rendering.filters\n  .AbstractBaseFilter {\n  static override defaultUniforms = {\n    luminanceThreshold: 0.5,\n    alphaThreshold: 0.1,\n  };\n\n  /**\n   * fragment shader based on the following snippets:\n   * @link https://www.shadertoy.com/view/4dcSDH\n   * @linl https://www.geeks3d.com/20101123/shader-library-predators-thermal-vision-post-processing-filter-glsl/\n   */\n  static override fragmentShader = `\n  varying vec2 vTextureCoord;\n  uniform sampler2D uSampler;\n  uniform float luminanceThreshold;\n  uniform float alphaThreshold;\n\n  #define RED vec4(1.0, 0.0, 0.0, 1.0)\n  #define YELLOW vec4(1.0, 1.0, 0.0, 1.0)\n  #define BLUE vec4(0.0, 0.0, 1.0, 1.0)\n  #define GREEN vec4(0.0, 1.0, 0.0, 1.0)\n\n  void main(void) {\n    vec4 texColor = texture2D(uSampler, vTextureCoord);\n    float luminance = dot(vec3(0.30, 0.59, 0.11), texColor.rgb);\n    if ( texColor.a > alphaThreshold ) {\n      gl_FragColor = (luminance < luminanceThreshold) ? mix(BLUE, mix(YELLOW, GREEN, luminance / 0.5), luminance * 2.0 ) : mix(YELLOW, RED, (luminance - 0.5) * 2.0);\n      gl_FragColor.rgb *= 0.1 + 0.25 + 0.75 * pow( 16.0 * vTextureCoord.x * vTextureCoord.y * (1.0 - vTextureCoord.x) * (1.0 - vTextureCoord.y), 0.15 );\n      gl_FragColor.a = texColor.a;\n    } else {\n      gl_FragColor = vec4(0.0);\n    }\n  }`;\n}\n","import InfraVisionFilter from './InfravisionFilter';\n\nexport default class DetectionModeInfravision extends foundry.canvas.perception\n  .DetectionMode {\n  static override getDetectionFilter(): PIXI.Filter {\n    return (this._detectionFilter ??= InfraVisionFilter.create());\n  }\n\n  override _canDetect(\n    visionSource: foundry.canvas.sources.PointVisionSource,\n    target: PlaceableObject,\n  ): boolean {\n    // See/Sense Heat can ONLY detect warm tokens, ignoring those that are cold-bodied\n    const tgt = target?.document;\n    const coldBodied =\n      tgt instanceof TokenDocument &&\n      tgt.hasStatusEffect(CONFIG.specialStatusEffects.COLDBODIED);\n    if (coldBodied) return false;\n\n    // The source may not be blind if the detection mode requires sight\n    const src = visionSource?.object?.document;\n    const isBlind =\n      src instanceof TokenDocument &&\n      this.type ===\n        foundry.canvas.perception.DetectionMode.DETECTION_TYPES.SIGHT &&\n      src.hasStatusEffect(CONFIG.specialStatusEffects.BLIND);\n    return !isBlind;\n  }\n}\n","export class InfravisionBackgroundVisionShader extends foundry.canvas.rendering\n  .shaders.AmplificationBackgroundVisionShader {\n  static COLOR_TINT = [0.25, 0.41, 0.88];\n\n  /** @inheritdoc */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static override defaultUniforms = {\n    ...super.defaultUniforms,\n    colorTint: this.COLOR_TINT,\n  };\n}\n","import type { ArtworkMapping } from './interfaces/ArtworkMapping.interface';\nimport type { SwadeGame } from './interfaces/SwadeGame.interface';\nimport CharacterSummarizer from './module/CharacterSummarizer';\nimport ItemChatCardHelper from './module/ItemChatCardHelper';\nimport { Logger } from './module/Logger';\nimport SwadeSocketHandler from './module/SwadeSocketHandler';\nimport ActiveEffectWizard from './module/apps/ActiveEffectWizard';\nimport { AdvanceEditor } from './module/apps/AdvanceEditor';\nimport AttributeManager from './module/apps/AttributeManager';\nimport { CompendiumTOC } from './module/apps/CompendiumTOC';\nimport { RollDialog } from './module/apps/RollDialog';\nimport SettingConfigurator from './module/apps/SettingConfigurator';\nimport {\n  SwadeActorTweaks,\n  SwadeDocumentTweaks,\n  SwadeItemTweaks,\n} from './module/apps/SwadeDocumentTweaks';\nimport SwadeMeasuredTemplate from './module/canvas/SwadeMeasuredTemplate';\nimport SwadeToken from './module/canvas/SwadeToken';\nimport { SWADE } from './module/config';\nimport * as data from './module/data';\nimport Benny from './module/dice/Benny';\nimport { DamageRoll } from './module/dice/DamageRoll';\nimport { SwadeRoll } from './module/dice/SwadeRoll';\nimport { TraitRoll } from './module/dice/TraitRoll';\nimport WildDie from './module/dice/WildDie';\nimport SwadeUser from './module/documents/SwadeUser';\nimport SwadeActiveEffect from './module/documents/active-effect/SwadeActiveEffect';\nimport SwadeActor from './module/documents/actor/SwadeActor';\nimport SwadeCards from './module/documents/card/SwadeCards';\nimport SwadeChatMessage from './module/documents/chat/SwadeChatMessage';\nimport SwadeCombat from './module/documents/combat/SwadeCombat';\nimport SwadeCombatant from './module/documents/combat/SwadeCombatant';\nimport SwadeItem from './module/documents/item/SwadeItem';\nimport { registerEffectCallbacks } from './module/effectCallbacks';\nimport { registerCustomHelpers } from './module/handlebarsHelpers';\nimport { registerAuraHooks } from './module/hooks/AuraHooks';\nimport SwadeCoreHooks from './module/hooks/SwadeCoreHooks';\nimport SwadeIntegrationHooks from './module/hooks/SwadeIntegrationHooks';\nimport { rollItemMacro } from './module/hooks/hotbarDrop';\nimport { registerKeybindings } from './module/keybindings';\nimport * as migrations from './module/migration/migration';\nimport { preloadHandlebarsTemplates } from './module/preloadTemplates';\nimport {\n  register3DBennySettings,\n  registerSettingRules,\n  registerSettings,\n} from './module/settings';\nimport CharacterSheet from './module/sheets/CharacterSheet';\nimport { GroupSheet } from './module/sheets/GroupSheet';\nimport SwadeItemSheetV2 from './module/sheets/SwadeItemSheetV2';\nimport SwadeNPCSheet from './module/sheets/SwadeNPCSheet';\nimport SwadeTokenConfig from './module/sheets/SwadeTokenConfig';\nimport SwadeVehicleSheetV2 from './module/sheets/VehicleSheetV2';\nimport JournalHeadquartersPageSheet from './module/sheets/journal/JournalHeadquartersPageSheet';\nimport SwadeChatLog from './module/sidebar/SwadeChatLog';\nimport SwadeCombatTracker from './module/sidebar/SwadeCombatTracker';\nimport SwadeTour from './module/tours/SwadeTour';\nimport registerSWADETours from './module/tours/registration';\nimport {\n  deepFreeze,\n  getItemsBySwid,\n  getStatusEffectDataById,\n  slugify,\n} from './module/util';\nimport DetectionModeInfravision from './module/vision/DetectionModeInfravision';\nimport { InfravisionBackgroundVisionShader } from './module/vision/InfravisionBackgroundVisionShader';\nimport './swade.scss';\n\nconst swadeAPI: SwadeGame = {\n  sheets: {\n    CharacterSheet,\n    SwadeItemSheetV2,\n    SwadeNPCSheet,\n    SwadeVehicleSheetV2,\n  },\n  apps: {\n    SwadeDocumentTweaks,\n    SwadeActorTweaks,\n    SwadeItemTweaks,\n    AdvanceEditor,\n    SettingConfigurator,\n    CompendiumTOC,\n    AttributeManager,\n    ActiveEffectWizard,\n  },\n  dice: {\n    Benny,\n    WildDie,\n  },\n  util: {\n    getStatusEffectDataById,\n    slugify,\n    getItemsBySwid,\n  },\n  compendiumArt: {\n    map: new Map<string, ArtworkMapping>(),\n  },\n  rollItemMacro,\n  sockets: new SwadeSocketHandler(),\n  migrations: migrations,\n  itemChatCardHelper: ItemChatCardHelper,\n  CharacterSummarizer,\n  RollDialog,\n  effectCallbacks: new Collection(),\n  ready: false,\n  data,\n  SwadeTour,\n};\n\nglobalThis.swade = swadeAPI;\n\n/* ------------------------------------ */\n/* Initialize system\t\t\t\t\t          */\n/* ------------------------------------ */\nHooks.once('init', () => {\n  Logger.info(`Initializing Savage Worlds Adventure Edition\\n${SWADE.ASCII}`);\n\n  //Record Configuration Values\n  CONFIG.SWADE = SWADE;\n  //freeze the constants\n  deepFreeze(CONFIG.SWADE.CONST);\n\n  // Initialize socket handler\n  swadeAPI.sockets.registerSocketListeners();\n\n  //set up global game object\n  game.swade = swadeAPI;\n\n  //register document classes\n  CONFIG.Actor.documentClass = SwadeActor;\n  CONFIG.Item.documentClass = SwadeItem;\n  CONFIG.Combat.documentClass = SwadeCombat;\n  CONFIG.Combatant.documentClass = SwadeCombatant;\n  CONFIG.ActiveEffect.documentClass = SwadeActiveEffect;\n  CONFIG.User.documentClass = SwadeUser;\n  CONFIG.Cards.documentClass = SwadeCards;\n  CONFIG.ChatMessage.documentClass = SwadeChatMessage;\n\n  //register System Data Model\n  CONFIG.Actor.dataModels = data.actor.config;\n  CONFIG.Item.dataModels = data.item.config;\n  CONFIG.JournalEntryPage.dataModels = data.journal.config;\n  CONFIG.Card.dataModels = data.card.config;\n  CONFIG.ChatMessage.dataModels = data.chat.config;\n  CONFIG.ActiveEffect.dataModels = data.effect.config;\n  CONFIG.Combat.dataModels = data.combat.combatConfig;\n  CONFIG.Combatant.dataModels = data.combat.combatantConfig;\n  CONFIG.CombatantGroup.dataModels = data.combat.combatantGroupConfig;\n\n  //register custom object classes\n  CONFIG.MeasuredTemplate.objectClass = SwadeMeasuredTemplate;\n  // SWADE's default cone template is a very special case that we're storing at angle===0\n  // This preserves access to the other types of cone definitions\n  CONFIG.MeasuredTemplate.defaults.angle = 0;\n  CONFIG.Token.objectClass = SwadeToken;\n\n  //register custom sidebar tabs\n  CONFIG.ui.combat = SwadeCombatTracker;\n  CONFIG.ui.chat = SwadeChatLog;\n\n  //set up round timers to 6 seconds\n  CONFIG.time.roundTime = 6;\n\n  //register card presets\n  CONFIG.Cards.presets = {\n    actionDeck: {\n      label: 'SWADE.ActionDeckPresetPEG',\n      src: 'systems/swade/cards/action-deck-peg.json',\n      type: 'deck',\n    },\n    pokerLight: {\n      label: 'SWADE.ActionDeckPresetLight',\n      src: 'systems/swade/cards/action-deck-light.json',\n      type: 'deck',\n    },\n    pokerDark: {\n      label: 'SWADE.ActionDeckPresetDark',\n      src: 'systems/swade/cards/action-deck-dark.json',\n      type: 'deck',\n    },\n  };\n\n  //register custom status effects\n  CONFIG.statusEffects = foundry.utils.deepClone(SWADE.statusEffects);\n  Object.assign(CONFIG.specialStatusEffects, {\n    COLDBODIED: 'cold-bodied',\n    INCAPACITATED: 'incapacitated',\n    BURROW: 'burrowing',\n    FLY: 'flying',\n  });\n\n  // v11 Active Effect handling\n  CONFIG.ActiveEffect.legacyTransferral = false;\n\n  //register detection modes\n  CONFIG.Canvas.detectionModes.seeHeat = new DetectionModeInfravision({\n    id: 'seeHeat',\n    label: 'SWADE.Vision.SeeHeat',\n    type: foundry.canvas.perception.DetectionMode.DETECTION_TYPES.OTHER,\n  });\n  CONFIG.Canvas.detectionModes.senseHeat = new DetectionModeInfravision({\n    id: 'senseHeat',\n    label: 'SWADE.Vision.SenseHeat',\n    walls: false,\n    type: foundry.canvas.perception.DetectionMode.DETECTION_TYPES.OTHER,\n  });\n\n  CONFIG.Canvas.visionModes.infraVision =\n    new foundry.canvas.perception.VisionMode({\n      id: 'infraVision',\n      label: 'SWADE.Vision.Infravision',\n      canvas: {\n        shader: foundry.canvas.rendering.shaders.ColorAdjustmentsSamplerShader,\n        uniforms: {\n          saturation: -0.5,\n          tint: InfravisionBackgroundVisionShader.COLOR_TINT,\n        },\n      },\n      lighting: {\n        background: {\n          visibility:\n            foundry.canvas.perception.VisionMode.LIGHTING_VISIBILITY.DISABLED,\n        },\n        illumination: {\n          visibility:\n            foundry.canvas.perception.VisionMode.LIGHTING_VISIBILITY.DISABLED,\n        },\n        coloration: {\n          visibility:\n            foundry.canvas.perception.VisionMode.LIGHTING_VISIBILITY.DISABLED,\n        },\n      },\n      vision: {\n        darkness: { adaptive: false },\n        defaults: {\n          attenuation: 0,\n          brightness: 0.5,\n          saturation: -0.5,\n          contrast: 0,\n        },\n        background: { shader: InfravisionBackgroundVisionShader },\n      },\n    });\n\n  CONFIG.Actor.compendiumIndexFields.push('system.wildcard');\n  CONFIG.Item.compendiumIndexFields.push('system.swid');\n\n  // @ts-expect-error Yes we're calling a protected function\n  foundry.appv1.sheets.JournalTextPageSheet._converter.setOption(\n    'tables',\n    true,\n  );\n\n  //register custom Handlebars helpers\n  registerCustomHelpers();\n  //Preload Handlebars templates\n  preloadHandlebarsTemplates();\n\n  // Register custom system settings\n  registerSettings();\n  registerSettingRules();\n  register3DBennySettings();\n\n  //register keyboard shortcuts\n  registerKeybindings();\n\n  registerEffectCallbacks();\n  registerAuraHooks();\n\n  // Register sheets\n  foundry.documents.collections.Actors.unregisterSheet(\n    'core',\n    foundry.appv1.sheets.ActorSheet,\n  );\n  foundry.documents.collections.Items.unregisterSheet(\n    'core',\n    foundry.appv1.sheets.ItemSheet,\n  );\n  foundry.applications.apps.DocumentSheetConfig.unregisterSheet(\n    CONFIG.Token.documentClass,\n    'core',\n    foundry.applications.sheets.TokenConfig,\n  );\n\n  foundry.documents.collections.Actors.registerSheet('swade', GroupSheet, {\n    types: ['group'],\n    makeDefault: true,\n    label: 'SWADE.GroupSheet',\n  });\n  foundry.documents.collections.Actors.registerSheet(\n    'swade',\n    SwadeVehicleSheetV2,\n    {\n      types: ['vehicle'],\n      makeDefault: true,\n      label: 'SWADE.VehicleSheet',\n    },\n  );\n\n  foundry.documents.collections.Actors.registerSheet('swade', CharacterSheet, {\n    types: ['character', 'npc'],\n    makeDefault: true,\n    label: 'SWADE.OfficialSheet',\n  });\n  foundry.documents.collections.Actors.registerSheet('swade', SwadeNPCSheet, {\n    types: ['npc'],\n    makeDefault: true,\n    label: 'SWADE.CommunityNPCSheet',\n  });\n  foundry.documents.collections.Items.registerSheet('swade', SwadeItemSheetV2, {\n    makeDefault: true,\n    types: [\n      'ability',\n      'action',\n      'ancestry',\n      'armor',\n      'consumable',\n      'edge',\n      'gear',\n      'hindrance',\n      'power',\n      'shield',\n      'skill',\n      'weapon',\n    ],\n    label: 'SWADE.ItemSheet',\n  });\n  foundry.applications.apps.DocumentSheetConfig.registerSheet(\n    JournalEntryPage,\n    'swade',\n    JournalHeadquartersPageSheet,\n    {\n      types: ['headquarters'],\n      makeDefault: true,\n      label: 'SWADE.HeadquartersSheet',\n    },\n  );\n  foundry.applications.apps.DocumentSheetConfig.registerSheet(\n    TokenDocument,\n    'swade',\n    SwadeTokenConfig,\n  );\n\n  // Register Tours\n  registerSWADETours();\n\n  //@ts-expect-error Types don't allow this, but seems a supported use case\n  CONFIG.Dice.SwadeRoll = SwadeRoll;\n  //@ts-expect-error Types don't allow this, but seems a supported use case\n  CONFIG.Dice.TraitRoll = TraitRoll;\n  //@ts-expect-error Types don't allow this, but seems a supported use case\n  CONFIG.Dice.DamageRoll = DamageRoll;\n\n  CONFIG.Dice.terms.b = Benny;\n  CONFIG.Dice.rolls.unshift(SwadeRoll);\n  CONFIG.Dice.rolls.push(TraitRoll, DamageRoll);\n  CONFIG.Dice.types.push(WildDie);\n});\nHooks.once('i18nInit', SwadeCoreHooks.onI18nInit);\nHooks.once('setup', SwadeCoreHooks.onSetup);\nHooks.once('ready', SwadeCoreHooks.onReady);\n\nHooks.on('hotReload', SwadeCoreHooks.onHotReload);\nHooks.on('getSceneControlButtons', SwadeCoreHooks.onGetSceneControlButtons);\nHooks.on('hotbarDrop', SwadeCoreHooks.onHotbarDrop);\nHooks.on('createProseMirrorEditor', SwadeCoreHooks.onCreateProseMirrorEditor);\n\n/* ------------------------------------ */\n/* Application Render\t\t\t\t\t          */\n/* ------------------------------------ */\nHooks.on('renderCombatantConfig', SwadeCoreHooks.onRenderCombatantConfig);\nHooks.on('renderActiveEffectConfig', SwadeCoreHooks.onRenderActiveEffectConfig);\nHooks.on('renderCompendium', SwadeCoreHooks.onRenderCompendium);\nHooks.on('renderChatMessageHTML', SwadeCoreHooks.onRenderChatMessageHTML);\nHooks.on('renderPlayers', SwadeCoreHooks.onRenderPlayers);\nHooks.on('renderUserConfig', SwadeCoreHooks.onRenderUserConfig);\n\n/* ------------------------------------ */\n/* Sidebar Tab Render\t\t\t\t\t          */\n/* ------------------------------------ */\nHooks.on('renderActorDirectory', SwadeCoreHooks.onRenderActorDirectory);\nHooks.on('renderSettings', SwadeCoreHooks.onRenderSettings);\nHooks.on(\n  'renderCompendiumDirectory',\n  SwadeCoreHooks.onRenderCompendiumDirectory,\n);\n\n/* ------------------------------------ */\n/* Context Options    \t\t\t\t          */\n/* ------------------------------------ */\nHooks.on('getUserContextOptions', SwadeCoreHooks.onGetUserContextOptions);\nHooks.on('getActorContextOptions', SwadeCoreHooks.onGetActorContextOptions);\nHooks.on('getCardsContextOptions', SwadeCoreHooks.onGetCardsContextOptions);\nHooks.on(\n  'getCompendiumContextOptions',\n  SwadeCoreHooks.onGetCompendiumContextOptions,\n);\n\n/* ------------------------------------ */\n/* Update Hooks              \t          */\n/* ------------------------------------ */\nHooks.on('userConnected', SwadeCoreHooks.onUserConnected);\nHooks.on('updateCombat', SwadeCoreHooks.onUpdateCombat);\nHooks.on('targetToken', SwadeCoreHooks.onTargetToken);\n\n/* ------------------------------------ */\n/* Canvas Interactions  \t\t\t          */\n/* ------------------------------------ */\nHooks.on('dropCanvasData', SwadeCoreHooks.onDropCanvasData);\n\n/* ------------------------------------ */\n/* System Hooks              \t          */\n/* ------------------------------------ */\n// Hooks.on('renderSwadeRollMessage', SwadeSystemHooks.onRenderSwadeRollMessage);\n\n/* ------------------------------------ */\n/* Third Party Integrations\t\t          */\n/* ------------------------------------ */\n\n/** Dice So Nice*/\nHooks.once('diceSoNiceInit', SwadeIntegrationHooks.onDiceSoNiceInit);\nHooks.once('diceSoNiceReady', SwadeIntegrationHooks.onDiceSoNiceReady);\nHooks.on('diceSoNiceRollStart', SwadeIntegrationHooks.onDiceSoNiceRollStart);\n\n/** Developer Mode */\nHooks.once('devModeReady', SwadeIntegrationHooks.onDevModeReady);\n\n/** Item Piles */\nHooks.once('item-piles-ready', SwadeIntegrationHooks.onItemPilesReady);\n"],"names":["constants","ApplicationV2","HandlebarsApplicationMixin","fields","migrations.renameRaceToAncestry","migrations.renameActionProperties","shims.actionProperties","ensurePowerPointsAreNumeric","quarantine.ensurePricesAreNumeric","quarantine.ensureWeightsAreNumeric","migrations.convertRequirementsToList","quarantine.ensurePowerPointsAreNumeric","quarantine.ensureAPisNumeric","quarantine.ensureRoFisNumeric","quarantine.ensureShotsAreNumeric","config","quarantine.ensureStrengthDie","quarantine.ensureCurrencyIsNumeric","quarantine.ensureGeneralPowerPoints","migration.renamePace","shims._shimPace","migrations.splitTopSpeed","migrations.shiftCargoModsMax","migrations.migrateDriver","setup.setupWorld","migrations.migrateWorld","chaseUtils.layoutChase","migrations.migrateCompendium","chat.createGmBennyAddMessage","util.getRankFromAdvance","util.getRankFromAdvanceAsString","util.addUpModifiers","util.getDieSidesRange","data.actor.config","data.item.config","data.journal.config","data.card.config","data.chat.config","data.effect.config","data.combat.combatConfig","data.combat.combatantConfig","data.combat.combatantGroupConfig"],"mappings":"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"}