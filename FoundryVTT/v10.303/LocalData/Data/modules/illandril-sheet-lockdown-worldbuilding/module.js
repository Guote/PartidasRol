const moduleMetadata = {"id":"illandril-sheet-lockdown-worldbuilding","version":"2.0.4","title":"Illandril's Character Sheet Lockdown (Simple World-building)","bugs":"https://github.com/illandril/FoundryVTT-sheet-lockdown-worldbuilding/issues"};

const validationPattern=/^[a-z_][a-z0-9\-_]*[a-z0-9_]$/i,assertValidPrefixSection=a=>{if(!validationPattern.test(a))throw new Error("CSS prefixes must be at least two characters, start and end with a letter or \"_\", and contain only letters, numbers, \"_\", or \"-\"")};class CSSPrefix{#prefix;constructor(a){assertValidPrefixSection(a),this.#prefix=`${a}--`;}child(a){return assertValidPrefixSection(a),`${this.#prefix}${a}`}childPrefix(a){return assertValidPrefixSection(a),new CSSPrefix(this.child(a))}}

class Logger{#logName;#logColor;#logPrefix;#logStyle;#logLevel;constructor(a,b){let c=2<arguments.length&&arguments[2]!==void 0?arguments[2]:"#4f0104";this.#logName=a,this.#logLevel=b,this.#logColor=c,this.#logPrefix=`%c${a}`,this.#logStyle=`background-color: ${c}; color: #fff; padding: 0.1em 0.5em;`;}child(a){let b=1<arguments.length&&arguments[1]!==void 0?arguments[1]:this.#logColor;return new Logger(`${this.#logName} - ${a}`,this.#logLevel,b)}debug(){if(this.#logLevel.debug){for(var a=arguments.length,b=Array(a),c=0;c<a;c++)b[c]=arguments[c];console.debug(this.#logPrefix,this.#logStyle,...b);}}info(){for(var a=arguments.length,b=Array(a),c=0;c<a;c++)b[c]=arguments[c];console.info(this.#logPrefix,this.#logStyle,...b);}warn(){for(var a=arguments.length,b=Array(a),c=0;c<a;c++)b[c]=arguments[c];console.warn(this.#logPrefix,this.#logStyle,...b);}error(){for(var a=arguments.length,b=Array(a),c=0;c<a;c++)b[c]=arguments[c];console.error(this.#logPrefix,this.#logStyle,...b);}}

const isChoicesArray=Array.isArray;let canRegister=!1;const pendingRegistrations=[];let pendingDebugRegistration;Hooks.once("init",()=>{canRegister=!0;for(const a of pendingRegistrations)a();pendingDebugRegistration?.();});class ModuleSettings{#namespace;#localize;constructor(a,b){this.#namespace=a,this.#localize=b;}registerMenu(a,b){const c={...b,name:`${this.#namespace}.setting.menu.${a}.name`,label:`${this.#namespace}.setting.menu.${a}.label`,hint:`${this.#namespace}.setting.menu.${a}.hint`},d=()=>{game.settings.registerMenu(this.#namespace,a,c);};return canRegister?d():pendingRegistrations.push(d),{id:`${this.#namespace}--menu--${a}`,title:`${this.#namespace}.setting.menu.${a}.title`,template:`modules/${this.#namespace}/templates/menu-${a}.html`}}#mapChoices(a,b){let c;return b&&(isChoicesArray(b)?c={choices:Object.fromEntries(b.map(b=>[b,this.#localize(`setting.${a}.choice.${b}`)]))}:c={choices:Object.fromEntries(Object.entries(b).map(a=>[a[0],"function"==typeof a[1]?a[1]():a[1]]))}),c}register(a,b,c){let{scope:i="world",hasHint:d,config:j=!0,requiresReload:k=!1,choices:e,callOnChangeOnInit:f,onChange:g,...h}=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{};const l={set:b=>{game.settings.set(this.#namespace,a,b);},get:()=>game.settings.get(this.#namespace,a)},m=()=>{const m=this.#mapChoices(a,e);game.settings.register(this.#namespace,a,{name:this.#localize(`setting.${a}.label`),hint:d?this.#localize(`setting.${a}.hint`):void 0,config:"function"==typeof j?j():j,scope:i,type:b,default:c,requiresReload:k,onChange:g,...m,...h}),f&&g?.(l.get());};return canRegister?m():"debug"===a?pendingDebugRegistration=m:pendingRegistrations.push(m),l}registerKeybinding(a,b,c){let{hasHint:d,defaultKeybindings:e,precedence:g=foundry.CONST.KEYBINDING_PRECEDENCE.NORMAL,...f}=3<arguments.length&&arguments[3]!==void 0?arguments[3]:{};const h=()=>{game.keybindings.register(this.#namespace,a,{name:this.#localize(`hotkey.${a}.label`),hint:d?this.#localize(`hotkey.${a}.hint`):void 0,editable:e??[],onDown:b,onUp:c,precedence:g,...f});};canRegister?h():pendingRegistrations.push(h);}}

class ModuleSocket{#socketKey;constructor(a){this.#socketKey=`module.${a}`;}emit(a){if(!game.socket)throw new Error("emit was called before game.socket was initialized or after it was torn down");game.socket.emit(this.#socketKey,a);}on(a){if(!game.socket)throw new Error("on was called before game.socket was initialized or after it was torn down");game.socket.on(this.#socketKey,a);}}

class Template{#path;constructor(a,b){this.#path=`modules/${a}/templates/${b}`,Hooks.on("init",()=>{void getTemplate(this.#path);});}async render(a){return await renderTemplate(this.#path,a)}}

class ModuleUtils{#id;#logger;#settings;#cssPrefix;#socketInitialized=!1;constructor(a){let{id:b,title:c,version:d,bugs:e,color:f}=a;const g=this.localize.bind(this);this.localize=g,this.#id=b,this.#settings=new ModuleSettings(b,g);const h={debug:!1};this.#settings.register("debug",Boolean,!1,{scope:"client",hasHint:!0,callOnChangeOnInit:!0,onChange:a=>{h.debug=a;}}),this.#logger=new Logger(`${c} v${d}`,h,f),e?this.logger.info(`Started. To report bugs, go to: ${e}`):this.logger.info("Started");}get id(){return this.#id}get logger(){return this.#logger}get cssPrefix(){return this.#cssPrefix||(this.#cssPrefix=new CSSPrefix(this.#id)),this.#cssPrefix}get settings(){return this.#settings}localize(a,b){let c=!!(2<arguments.length&&arguments[2]!==void 0)&&arguments[2];const d=`${this.#id}.${a}`;return !0!==c||game.i18n.has(d)?b?game.i18n.format(d,b):game.i18n.localize(d):void 0}registerTemplate(a){return new Template(this.#id,a)}initializeSocket(){if(this.#socketInitialized)throw new Error("Socket should only be initialized once (to ensure the same generic type is used for all socket messages sent by this module, since they will all use the same message key)");return this.#socketInitialized=!0,new ModuleSocket(this.#id)}}

const module=new ModuleUtils(moduleMetadata);

const CSS_SHEET=module.cssPrefix.child("sheet"),CSS_LOCK=module.cssPrefix.child("lock"),CSS_EDIT=module.cssPrefix.child("edit"),CSS_TOGGLE_EDIT_ON=module.cssPrefix.child("toggleEditOn"),CSS_TOGGLE_EDIT_OFF=module.cssPrefix.child("toggleEditOff"),CSS_HIDE=module.cssPrefix.child("hide"),CSS_NO_POINTER_EVENTS=module.cssPrefix.child("noPointerEvents"),minimumRoleChoices=Object.keys(foundry.CONST.USER_ROLES).reduce((a,b)=>("NONE"!==b&&(a[b]=`USER.Role${b.titleCase()}`),a),{}),ShowToggleEditRole=module.settings.register("showToggleEditRole",String,"GAMEMASTER",{hasHint:!0,choices:minimumRoleChoices});Hooks.on("renderActorSheet",a=>{if(module.logger.debug("rendorActorSheet",a.isEditable),!a.isEditable)return;const b=a.element[0];if(!b)return void module.logger.debug("actorSheet had no element");if(b.classList.contains(CSS_SHEET))return void module.logger.debug("actorSheet was already enhanced");if(b.classList.add(CSS_SHEET),b.classList.add(CSS_LOCK),game.user?.hasRole(ShowToggleEditRole.get())){const c=b.querySelector(".window-header");if(!c)return void module.logger.error("Could not lock sheet - no window-header was found");const d=c.querySelector(".window-title");if(!d)return void module.logger.error("Could not lock sheet - no window-title was found");const e=document.createElement("a");e.appendChild(faIcon("lock")),e.classList.add(CSS_TOGGLE_EDIT_ON),e.appendChild(document.createTextNode(module.localize("toggleEditOn"))),e.addEventListener("click",()=>makeLocked(a,b,!1),!1),e.addEventListener("dblclick",stopPropagation,!1),c.insertBefore(e,d.nextSibling);const f=document.createElement("a");f.appendChild(faIcon("unlock")),f.classList.add(CSS_TOGGLE_EDIT_OFF),f.appendChild(document.createTextNode(module.localize("toggleEditOff"))),f.addEventListener("click",()=>makeLocked(a,b,!0),!1),f.addEventListener("dblclick",stopPropagation,!1),c.insertBefore(f,d.nextSibling);}makeLocked(a,b,b.classList.contains(CSS_LOCK));});const makeLocked=(a,b,c)=>{module.logger.debug("makeLocked",b,c),a.options.editable=!c,addRemoveClass(b,CSS_LOCK,c),addRemoveClass(b,CSS_EDIT,!c);for(const d of b.querySelectorAll("[data-action],.group-controls,.editor-edit"))addRemoveClass(d,CSS_HIDE,c);for(const d of b.querySelectorAll("input,select"))d.disabled=c;for(const d of b.querySelectorAll(".profile-img"))addRemoveClass(d,CSS_NO_POINTER_EVENTS,c);},addRemoveClass=(a,b,c)=>{module.logger.debug("addRemoveClass",a,b,c),c?a.classList.add(b):a.classList.remove(b);},faIcon=a=>{const b=document.createElement("i");return b.classList.add("fas"),b.classList.add(`fa-${a}`),b},stopPropagation=a=>{a.stopPropagation();};
