{"version":3,"file":"index.js","sources":["../../src/utils/game.ts","../../src/utils/log.ts","../../src/weather/climateData.ts","../../src/weather/effectsMap.ts","../../src/weather/weatherMap.ts","../../node_modules/foundryvtt-simple-calendar/src/constants.ts","../../src/weather/WeatherData.ts","../../src/applications/CustomMessageSettingsApplication.ts","../../src/settings/ModuleSettings.ts","../../src/utils/versionUtils.ts","../../src/window/windowDrag.ts","../../src/weather/weatherGenerator.ts","../../src/weather/WeatherEffects.ts","../../src/applications/WeatherApplication.ts","../../src/settings/KeyBindings.ts","../../src/main.ts"],"sourcesContent":["// some helpers to simplify various repetitive tasks\n\n// return the game object\nconst getGame = function(): Game {\n  if(!(game instanceof Game)) {\n    throw new Error('Game is not initialized yet!');\n  }\n  return game;\n}\n\n// is the current client the GM?\nconst isClientGM = (): boolean => (getGame()?.user?.isGM || false);\n\n// localize a string\nconst localize = (stringId: string) => getGame().i18n.localize(stringId);\n\nexport { \n  getGame,\n  isClientGM,\n  localize,\n};","import { getGame } from '@/utils/game';\n\nconst messagePrefix = 'simple-weather | ';\n\n// log the given text, so long as our current log level is at least the one given\nexport function log(force: boolean, ...args): void {\n  try {\n    const isDebugging = getGame().modules.get('_dev-mode')?.api?.getPackageDebugValue('simple-weather') || false;\n\n    if (force || isDebugging) {\n      console.log(messagePrefix, ...args);\n    }\n  } catch (e) {\n    // eslint-ignore-next-line\n    console.log('ERROR IN LOG FUNCTION:' + e);\n  }\n}\n\n\n","import { localize } from '@/utils/game';\nimport { log } from '@/utils/log';\n\nexport enum Season {\n  Spring,\n  Summer,\n  Fall,\n  Winter\n}\n\nexport enum Humidity {\n  Barren,\n  Modest,\n  Verdant\n}\n\nexport enum Climate {\n  Cold,\n  Temperate,\n  Hot\n}\n\n// these are used to create the drop downs; the first value in each\n//    subarray is the value, the second the description\ntype SelectOption = { value: string, text: string};\n\nlet biomeSelections: SelectOption[];\nlet climateSelections: SelectOption[];\nlet humiditySelections: SelectOption[];\nlet seasonSelections: SelectOption[];\n\n// call to set everything up after the game has loaded\nexport function initializeLocalizedText(): void {\n  log(false, 'Loading localized climate text');\n\n  biomeSelections = [\n    { value: '', text: localize('sweath.options.biome.useClimateHumidity') },\n    { value: 'tundra', text: localize('sweath.options.biome.tundra') },\n    { value: 'alpine', text: localize('sweath.options.biome.alpine') },\n    { value: 'taiga', text: localize('sweath.options.biome.taiga') },\n    { value: 'chapparel', text: localize('sweath.options.biome.chapparel') },\n    { value: 'grassland', text: localize('sweath.options.biome.grassland') },\n    { value: 'forest', text: localize('sweath.options.biome.forest') },\n    { value: 'desert', text: localize('sweath.options.biome.desert') },\n    { value: 'savannah', text: localize('sweath.options.biome.savannah') },\n    { value: 'rainforest', text: localize('sweath.options.biome.rainforest') },\n  ];\n\n  climateSelections= [\n    { value: String(Climate.Cold), text: localize('sweath.options.climate.cold') },\n    { value: String(Climate.Temperate), text: localize('sweath.options.climate.temperate') },\n    { value: String(Climate.Hot), text: localize('sweath.options.climate.hot') },\n  ];\n\n  humiditySelections = [\n    { value: String(Humidity.Barren), text: localize('sweath.options.humidity.barren') },\n    { value: String(Humidity.Modest), text: localize('sweath.options.humidity.modest') },\n    { value: String(Humidity.Verdant), text: localize('sweath.options.humidity.verdant') },\n  ];\n\n  seasonSelections = [\n    { value: String(Season.Spring), text: localize('sweath.options.season.spring') },\n    { value: String(Season.Summer), text: localize('sweath.options.season.summer') },\n    { value: String(Season.Fall), text: localize('sweath.options.season.fall') },\n    { value: String(Season.Winter), text: localize('sweath.options.season.winter') },\n  ];\n}\n\n// if we have a simple calendar, than activate the \"sync\" option in the drop down\nconst allowSeasonSync = function() {\n  seasonSelections.splice(0,0, { value: 'sync', text: localize('sweath.options.season.sync')});\n};\n\n// these map the biomes to their climate/humidity\nconst biomeMappings: Record<string, { climate: number, humidity: number }> = {\n  tundra: { climate: Climate.Cold, humidity: Humidity.Barren },\n  alpine: { climate: Climate.Cold, humidity: Humidity.Modest },\n  taiga: { climate: Climate.Cold, humidity: Humidity.Verdant },\n  chapparel: { climate: Climate.Temperate, humidity: Humidity.Barren },\n  grassland: { climate: Climate.Temperate, humidity: Humidity.Modest },\n  forest: { climate: Climate.Temperate, humidity: Humidity.Verdant },\n  desert: { climate: Climate.Hot, humidity: Humidity.Barren }, \n  savannah: { climate: Climate.Hot, humidity: Humidity.Modest },\n  rainforest: { climate: Climate.Hot, humidity: Humidity.Verdant },\n};\n\nexport { \n  humiditySelections,\n  climateSelections,\n  biomeSelections,\n  seasonSelections,\n  allowSeasonSync,\n  biomeMappings,\n};\n","export type CoreDetails = {\n  effect: string;\n}\n\nexport type FXMColor = {\n  value: string;\n  apply: boolean;\n}\n\nexport enum FXMStyleTypes {\n  Filter,\n  Particle,\n}\n\nexport enum FXMParticleTypes {\n  Snowstorm = 'snowstorm',\n  Bubbles = 'bubbles',\n  Clouds = 'clouds',\n  Embers = 'embers',\n  RainSimple = 'rainsimple',\n  Stars = 'stars',\n  Crows = 'crows',\n  Bats = 'bats',\n  Spiders = 'spiders',\n  Fog = 'fog',\n  RainTop = 'raintop',\n  Leaves = 'leaves',\n  Rain = 'rain',\n  Snow = 'snow',\n};\n\nexport enum FXMFilterTypes {\n  Lightning = 'lightning',\n  Bloom = 'bloom',\n}\n\n// used to specify that this parameter will have a random value between the two specified\nexport type RandomRange = {\n  start: number;\n  end: number;\n}\n\nexport type FXDetail = \n  { style: FXMStyleTypes.Particle, type: FXMParticleTypes.Snowstorm; options: { scale: number; direction: RandomRange; speed: number; lifetime: number; density: number; alpha: number; tint: FXMColor }, } |\n  { style: FXMStyleTypes.Particle, type: FXMParticleTypes.Bubbles; options: { scale: number; speed: number; lifetime: number; density: number; alpha: number; tint: FXMColor }, } |\n  { style: FXMStyleTypes.Particle, type: FXMParticleTypes.Clouds; options: { scale: number; direction: RandomRange; speed: number; lifetime: number; density: number, alpha: number; tint: FXMColor }, } |\n  { style: FXMStyleTypes.Particle, type: FXMParticleTypes.Embers; options: { scale: number; speed: number; lifetime: number; density: number; alpha: number; tint: FXMColor }, } |\n  { style: FXMStyleTypes.Particle, type: FXMParticleTypes.RainSimple; options: { scale: number; direction: RandomRange; speed: number; lifetime: number; density: number; alpha: number; tint: FXMColor }, } |\n  { style: FXMStyleTypes.Particle, type: FXMParticleTypes.Stars; options: { scale: number; speed: number; lifetime: number; density: number; alpha: number; tint: FXMColor }, } |\n  { style: FXMStyleTypes.Particle, type: FXMParticleTypes.Crows; options: { scale: number; speed: number; lifetime: number; density: number; alpha: number; tint: FXMColor }, } |\n  { style: FXMStyleTypes.Particle, type: FXMParticleTypes.Bats; options: { scale: number; speed: number; lifetime: number; density: number; alpha: number; tint: FXMColor }, } |\n  { style: FXMStyleTypes.Particle, type: FXMParticleTypes.Spiders; options: { scale: number; speed: number; lifetime: number; density: number; alpha: number; tint: FXMColor }, } |\n  { style: FXMStyleTypes.Particle, type: FXMParticleTypes.Fog; options: { scale: number; speed: number; lifetime: number; density: number; alpha: number; tint: FXMColor }, } |\n  { style: FXMStyleTypes.Particle, type: FXMParticleTypes.RainTop; options: { scale: number; direction: RandomRange; speed: number; lifetime: number; density: number; alpha: number; tint: FXMColor }, } |\n  { style: FXMStyleTypes.Particle, type: FXMParticleTypes.Leaves; options: { scale: number; speed: number; lifetime: number; density: number; alpha: number; tint: FXMColor }, } |\n  { style: FXMStyleTypes.Particle, type: FXMParticleTypes.Rain; options: { scale: number; direction: RandomRange; speed: number; lifetime: number; density: number; alpha: number; tint: FXMColor }, } |\n  { style: FXMStyleTypes.Particle, type: FXMParticleTypes.Snow; options: { scale: number; direction: RandomRange; speed: number; lifetime: number; density: number; alpha: number; tint: FXMColor }, } |\n  { style: FXMStyleTypes.Filter, type: FXMFilterTypes.Bloom, options: { blur: number; bloomScale: number; threshold: number }, } |\n  { style: FXMStyleTypes.Filter, type: FXMFilterTypes.Lightning, options: { frequency: number; spark_duration: number; brightness: number }, }\n\n    \nexport type EffectDetails = {\n  core: CoreDetails | null,\n  fxMaster: FXDetail[] | null,\n}\n\n// weather options\nexport const availableEffects: Record<string, EffectDetails> = {\n  LightClouds: {\n    core: null,\n    fxMaster: [\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Clouds,\n        options: {\n          scale: 1, \n          direction: {start: -30, end: 30},\n          speed: 0.4, \n          lifetime: 2, \n          density: 0.03, \n          alpha: 0.7, \n          tint: { value: '#000000', apply: false },\n        },\n      },\n    ],\n  },\n\n  ModerateClouds: {\n    core: null,\n    fxMaster: [\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Clouds,\n        options: {\n          scale: 1, \n          direction: {start: -30, end: 30},\n          speed: 0.2, \n          lifetime: 2.6, \n          density: 0.1, \n          alpha: 0.7, \n          tint: { value: '#ffffff', apply: true },\n        },\n      },\n    ],\n  },\n\n  HeavyClouds: {\n    core: null,\n    fxMaster: [\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Clouds,\n        options: {\n          scale: 1, \n          direction: {start: -30, end: 30},\n          speed: 0.1, \n          lifetime: 2.6, \n          density: 0.3, \n          alpha: 0.5, \n          tint: { value: '#ffffff', apply: true },\n        },\n      },\n    ],\n  },\n\n  StormClouds: {\n    core: null,\n    fxMaster: [\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Clouds,\n        options: {\n          scale: 1, \n          direction: {start: -30, end: 30},\n          speed: 0.1, \n          lifetime: 2.6, \n          density: 0.6, \n          alpha: 1.0, \n          tint: { value: '#776e6e', apply: true },\n        },\n      },\n    ],\n  },\n\n  Overcast: {\n    core: null,\n    fxMaster: [\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Fog,\n        options: {\n          scale: 1.0, \n          speed: 0.3, \n          lifetime: 1.0,\n          density: 0.08, \n          alpha: 1.0,\n          tint: { value: '#c2bdbd', apply: true },\n        },\n      },\n    ],\n  },\n\n  // drifting around, not linear\n  BlusterWind: {\n    core: null,\n    fxMaster: [\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Leaves,\n        options: {\n          scale: 0.7, \n          speed: 2.8, \n          lifetime: 1, \n          density: 0.1, \n          alpha: 0.8, \n          tint: { value: '#4F4040', apply: true },\n        },\n      },\n    ],\n  },\n\n  // snow in each direction\n  BlusterSnow: {\n    core: { effect: 'snow' },\n    fxMaster: [\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Snow,\n        options: {\n          scale: 1.0, \n          direction: {start: -30, end: 30},\n          speed: 2.8, \n          lifetime: 1.0, \n          density: 0.1, \n          alpha: 1.0, \n          tint: { value: '#ffffff', apply: false },\n        },\n      },\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Snow,\n        options: {\n          scale: 1.0, \n          direction: {start: 60, end: 120},\n          speed: 2.8, \n          lifetime: 1.0, \n          density: 0.1, \n          alpha: 1.0, \n          tint: { value: '#ffffff', apply: false },\n        },\n      },\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Snow,\n        options: {\n          scale: 1.0, \n          direction: {start:150, end: 210},\n          speed: 2.8, \n          lifetime: 1.0, \n          density: 0.1, \n          alpha: 1.0, \n          tint: { value: '#ffffff', apply: false },\n        },\n      },\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Snow,\n        options: {\n          scale: 1.0, \n          direction: {start: 240, end: 300},\n          speed: 2.8, \n          lifetime: 1.0, \n          density: 0.1, \n          alpha: 1.0, \n          tint: { value: '#ffffff', apply: false },\n        },\n      },\n    ],\n  },\n\n  LightWind: {\n    core: null,\n    fxMaster: [\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Snow,\n        options: {\n          scale: 0.6, \n          direction: {start: -15, end: 15},\n          speed: 1.0, \n          lifetime: 1.0, \n          density: 0.1, \n          alpha: 1.0, \n          tint: { value: '#1d1d1b', apply: true },\n        },\n      },\n    ],\n  },\n\n  ModerateWind: {\n    core: null,\n    fxMaster: [\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Snow,\n        options: {\n          scale: 0.6, \n          direction: {start: -15, end: 15},\n          speed: 2.0, \n          lifetime: 1.0, \n          density: 0.1, \n          alpha: 1.0, \n          tint: { value: '#1d1d1b', apply: true },\n        },\n      },\n    ],\n  },\n\n  HeavyWind: {\n    core: null,\n    fxMaster: [\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Snow,\n        options: {\n          scale: 0.6, \n          direction: {start: -15, end: 15},\n          speed: 3.0, \n          lifetime: 1.0, \n          density: 0.2, \n          alpha: 1.0, \n          tint: { value: '#1d1d1b', apply: true },\n        },\n      },\n    ],\n  },\n\n  BlusterRain: { \n    core: {\n      effect: 'rain'\n    }, \n    fxMaster: [\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Rain,\n        options: {\n          scale: 0.4, \n          direction: {start: -30, end: 30},\n          speed: 0.1, \n          lifetime: 0.8, \n          density: 0.1, \n          alpha: 0.7, \n          tint: { value: '#000000', apply: false },\n        },\n      },\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Rain,\n        options: {\n          scale: 0.4, \n          direction: {start: 60, end: 120},\n          speed: 0.1, \n          lifetime: 0.8, \n          density: 0.1, \n          alpha: 0.7, \n          tint: { value: '#000000', apply: false },\n        },\n      },\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Rain,\n        options: {\n          scale: 0.4, \n          direction: {start: 150, end: 210 },\n          speed: 0.1, \n          lifetime: 0.8, \n          density: 0.1, \n          alpha: 0.7, \n          tint: { value: '#000000', apply: false },\n        },\n      },\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Rain,\n        options: {\n          scale: 0.4, \n          direction: {start: 240, end: 300 },\n          speed: 0.1, \n          lifetime: 0.8, \n          density: 0.1, \n          alpha: 0.7, \n          tint: { value: '#000000', apply: false },\n        },\n      },\n    ],\n  },\n  LightRain: { \n    core: {\n      effect: 'rain'\n    },\n    fxMaster: [\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Rain,\n        options: {\n          scale: 1, \n          direction: {start: 60, end: 120},\n          speed: 0.1, \n          lifetime: 0.8, \n          density: 0.1, \n          alpha: 0.7, \n          tint: { value: '#ffffff', apply: false },\n        },\n      },\n    ],\n  },\n  ModerateRain: { \n    core: {\n      effect: 'rainStorm'\n    },\n    fxMaster: [\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Rain,\n        options: {\n          scale: 1, \n          direction: {start: 60, end: 120},\n          speed: 0.5, \n          lifetime: 0.8, \n          density: 1.0, \n          alpha: 0.7, \n          tint: { value: '#ffffff', apply: false },\n        },\n      },\n    ]\n  },\n  HeavyRain: {\n    core: {\n      effect: 'rainStorm'\n    },\n    fxMaster: [\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Rain,\n        options: {\n          scale: 1.3,\n          direction: {start: 60, end: 120},\n          speed: 0.5, \n          lifetime: 0.8, \n          density: 1.7, \n          alpha: 0.7, \n          tint: { value: '#ffffff', apply: false },\n        },\n      },\n    ]\n  },\n  LightFog: { \n    core: {\n      effect: 'fog'\n    },\n    fxMaster: [\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Fog,\n        options: {\n          scale: 1.0, \n          speed: 0.5, \n          lifetime: 1.0,\n          density: 0.05, \n          alpha: 0.4,\n          tint: { value: '#ffffff', apply: false },\n        },\n      },\n    ]\n  },\n  ModerateFog: { \n    core: {\n      effect: 'fog'\n    },\n    fxMaster: [\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Fog,\n        options: {\n          scale: 1.0, \n          speed: 0.5, \n          lifetime: 1.0,\n          density: 0.08, \n          alpha: 0.4,\n          tint: { value: '#ffffff', apply: false },\n        },\n      },\n    ]\n  },\n  HeavyFog: { \n    core: {\n      effect: 'fog'\n    },\n    fxMaster: [\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Fog,\n        options: {\n          scale: 1.0, \n          speed: 0.5, \n          lifetime: 1.0,\n          density: 0.12, \n          alpha: 0.4,\n          tint: { value: '#ffffff', apply: false },\n        },\n      },\n    ]\n  },\n  RollingFog: { \n    core: {\n      effect: 'fog'\n    },\n    fxMaster: [\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Fog,\n        options: {\n          scale: 1.0, \n          speed: 3.5, \n          lifetime: 1.0,\n          density: 0.08, \n          alpha: 0.4,\n          tint: { value: '#ffffff', apply: false },\n        },\n      },\n    ]\n  },\n  Lightning: {\n    core: null,\n    fxMaster: [\n      {\n        style: FXMStyleTypes.Filter,\n        type: FXMFilterTypes.Lightning,\n        options: {\n          frequency: 500,\n          spark_duration: 300,\n          brightness: 1.3,\n        },\n      },\n    ],\n  },\n\n  Wildfire: {\n    core: null,\n    fxMaster: [\n      // use lightning to make a flicker\n      {\n        style: FXMStyleTypes.Filter,\n        type: FXMFilterTypes.Lightning,\n        options: {\n          frequency: 100,\n          spark_duration: 2000,\n          brightness: 1.1,\n        },\n      },\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Embers,\n        options: {\n          scale: 1.3, \n          speed: 1.0, \n          lifetime: 1.0, \n          density: 0.9, \n          alpha: 1.0, \n          tint: { value: '#ffffff', apply: false },\n        },\n      },\n    ],\n  },\n\n  LightSnow: { \n    core: {\n      effect: 'snow'\n    },\n    fxMaster: [\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Snow,\n        options: {\n          scale: 1.0, \n          direction: {start: 60, end: 120},\n          speed: 1.0, \n          lifetime: 1.0, \n          density: 0.1, \n          alpha: 1.0, \n          tint: { value: '#ffffff', apply: false },\n        },\n      },\n    ],\n  },\n  ModerateSnow: { \n    core: {\n      effect: 'snow'\n    },\n    fxMaster: [\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Snowstorm,\n        options: {\n          scale: 1.0, \n          direction: {start: 60, end: 120},\n          speed: 1.0, \n          lifetime: 1.0, \n          density: 0.9, \n          alpha: 1.0, \n          tint: { value: '#ffffff', apply: false },\n        },\n      },\n    ],\n  },\n  HeavySnow: { \n    core: {\n      effect: 'blizzard'\n    },\n    fxMaster: [\n      // two different snow effects\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Snowstorm,\n        options: {\n          scale: 1, \n          direction: {start: 60, end: 90},\n          speed: 1.9, \n          lifetime: 1.0, \n          density: 0.9, \n          alpha: 1.0, \n          tint: { value: '#ffffff', apply: false },\n        },\n      },\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Snowstorm,\n        options: {\n          scale: 1, \n          direction: {start: 90, end: 120},\n          speed: 1.5, \n          lifetime: 1.0, \n          density: 0.9, \n          alpha: 1.0, \n          tint: { value: '#ffffff', apply: false },\n        },\n      },\n    ],\n  },\n  WhiteoutSnow: { \n    core: {\n      effect: 'blizzard'\n    },\n    // two different snow effects plus fog\n    fxMaster: [\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Snowstorm,\n        options: {\n          scale: 1, \n          direction: {start: 60, end: 90},\n          speed: 1.9, \n          lifetime: 1.0, \n          density: 0.9, \n          alpha: 1.0, \n          tint: { value: '#ffffff', apply: false },\n        },\n      },\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Snowstorm,\n        options: {\n          scale: 1, \n          direction: {start: 90, end: 120},\n          speed: 1.5, \n          lifetime: 1.0, \n          density: 0.9, \n          alpha: 1.0, \n          tint: { value: '#ffffff', apply: false },\n        },\n      },\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Fog,\n        options: {\n          scale: 1.0, \n          speed: 1.0, \n          lifetime: 1.0, \n          density: 0.15, \n          alpha: 0.9, \n          tint: { value: '#ffffff', apply: false },\n        },\n      },\n    ],\n  },\n  Hail: { \n    core: {\n      effect: 'rainStorm'\n    },\n    fxMaster: [{\n      style: FXMStyleTypes.Particle,\n      type: FXMParticleTypes.RainSimple,\n      options: {\n        scale: 4.0, \n        direction: {start: 60, end: 120},\n        speed: 0.2, \n        lifetime: 0.2, \n        density: 0.05, \n        alpha: 1.0, \n        tint: { value: '#ffffff', apply: false },\n      },\n    }],\n  },\n  Sleet: { \n    core: {\n      effect: 'rainStorm'\n    },\n    // rain plus snow\n    fxMaster: [\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Rain,\n        options: {\n          scale: 1, \n          direction: {start: 60, end: 90 },  // tighter range because we need snow direction to be similar\n          speed: 0.5, \n          lifetime: 0.8, \n          density: 1.0, \n          alpha: 0.7, \n          tint: { value: '#ffffff', apply: false },\n        },\n      },\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Snowstorm,\n        options: {\n          scale: 1.0, \n          direction: {start: 60, end: 90 },\n          speed: 1.0, \n          lifetime: 1.0, \n          density: 0.9, \n          alpha: 1.0, \n          tint: { value: '#ffffff', apply: false },\n        },\n      },\n    ]\n  },\n  // like a colored blizzard, with smaller particles\n  DustStorm: { \n    core: {\n      effect: ''\n    },  \n    fxMaster: [\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Snowstorm,\n        options: {\n          scale: 0.5, \n          direction: {start: -30, end: 30},\n          speed: 1.9, \n          lifetime: 1.0, \n          density: 0.9, \n          alpha: 1.0, \n          tint: { value: '#8f8c61', apply: true },\n        },\n      },\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Snowstorm,\n        options: {\n          scale: 0.5, \n          direction: {start: 150, end: 210},\n          speed: 1.5, \n          lifetime: 1.0, \n          density: 0.9, \n          alpha: 1.0, \n          tint: { value: '#8f8c61', apply: true },\n        },\n      },\n      {\n        style: FXMStyleTypes.Particle,\n        type: FXMParticleTypes.Fog,\n        options: {\n          scale: 1.0, \n          speed: 1.0, \n          lifetime: 1.0, \n          density: 0.15, \n          alpha: 0.9, \n          tint: { value: '#8f8c61', apply: true },\n        },\n      },\n    ],\n  },\n}\n\n// combine two effects into one\n// for fx like core where there can only be one option, effect1 is used if present\nexport const joinEffects = function(effect1: EffectDetails, effect2: EffectDetails): EffectDetails {\n  const output = foundry.utils.deepClone({\n    ...effect1\n  });\n\n  if (!output.core)\n    output.core = { effect: '' };\n  if (!output.fxMaster)\n    output.fxMaster = [];\n\n  output.core.effect = output.core?.effect || effect2.core?.effect || '';\n  output.fxMaster = output.fxMaster.concat(effect2.fxMaster || []);\n\n  return output;\n}\n","import { localize } from '@/utils/game';\nimport { log } from '@/utils/log';\nimport { Climate, Humidity, Season } from './climateData';\nimport { availableEffects, EffectDetails, joinEffects } from '@/weather/effectsMap';\n\n// drop down selections for manually setting weather\nlet manualSelections: { text:string, value: string}[];\n\n// call to set everything up after the game has loaded\nfunction initializeLocalizedText(): void {\n  log(false, 'Loading localized weather text');\n\n  // these are used to map the localized text string to the right spot in the array\n  const localizeClimates = {\n    [Climate.Cold]: 'cold',\n    [Climate.Temperate]: 'temperate',\n    [Climate.Hot]: 'hot',\n  \n  };\n  const localizeHumidities = {\n    [Humidity.Barren]: 'barren',\n    [Humidity.Modest]: 'modest',\n    [Humidity.Verdant]: 'verdant',\n  };\n  \n  // load weatherDescriptions\n  // convert enums to array for safety (i.e. in case values aren't in order)\n  const climateArray = Object.values(Climate);\n  const humidityArray = Object.values(Humidity);\n\n  // note each array contains first the string names and then the numeric \n  //    values\n  for (let c=(climateArray.length/2); c<climateArray.length; c++) {\n    const climate = climateArray[c];\n\n    for (let h=(humidityArray.length/2); h<humidityArray.length; h++) {\n      const humidity = humidityArray[h];\n\n      for (let i=0; i<37; i++) {\n        weatherDescriptions[climate][humidity][i] = localize(`sweath.description.${localizeClimates[climate]}.${localizeHumidities[humidity]}.${descriptionOrder[i]}`);\n      }\n    }\n  }\n\n  // need value and text, and then a way to map the values back to the weather\n  //    for effects\n  manualSelections = manualOptions.map((val, i) =>\n      ({ value: i.toString(), text: weatherDescriptions[val?.climate as number][val?.humidity as number][val?.hexCell as number] }));\n}\n\n// rather than specifying weather by biome, we take a more flexible approach (though we also define some biomes as defaults)\n// this approach allows GMs to create non-earth biomes (ex. what's the weather like in the Fey realm or another plane?) and \n//    still easily use the tool\n\n// this approach borrows from Dave's All-Purpose Weather Table from reddit u/AlliedSalad2\n// https://docs.google.com/spreadsheets/d/1j0d1MtsWtJT-Q-Ncbl8DsBlf6cK51j5T13JTll5bSTE/edit#gid=0\n\n// but it's heavilty based on this weather system (see /docs/weather.png) from reddit user iceandstorm as described in the comments to this post: \n//    https://www.reddit.com/r/rpg/comments/p0wq9n/weather_hex_flower_random_weather_generation/\n\n// the numbered cells in the hex flower\n\n//                      3\n//                 2        8\t\t\n//             1        7  \t     14\t\n//         0       6\t  \t   13\t  \t 21\n//             5 \t\t    12  \t\t 20\t\n//         4\t\t   11  \t\t   19\t\t   27\n//             10\t\t    18\t  \t 26\t\n//         9\t\t   17\t  \t   25\t\t   32\n//             16\t\t    24\t  \t 31\t\n//         15\t\t   23\t  \t   30\t\t   36\n//             22\t\t    29\t\t   35\t\n//                 28\t  \t   34\t\t\n//                      33\t\t\t\n\n// we call this direction only because when debugging the hex flower, it will be easier to think in terms of the picture\nenum Direction {\n  stay = -1,   // important that this be -1 so that the arrays of movement results work properly\n  N = 0, \n  NE = 1,\n  SE = 2,\n  S = 3, \n  SW = 4, \n  NW = 5\n}\n\n// the probabilities we move in each direction on any given turn\n// indexed by season and then keyed by Direction\nconst moveProbabilities: Record<string, number>[] = [];\nmoveProbabilities[Season.Fall] = {\n  [Direction.stay]: 0.200,\n  [Direction.N]: 0.066,\n  [Direction.NE]: 0.022,\n  [Direction.SE]: 0.111,\n  [Direction.S]: 0.200,\n  [Direction.SW]: 0.246,\n  [Direction.NW]: 0.155,\n};\nmoveProbabilities[Season.Winter] = {\n  [Direction.stay]: 0.200,\n  [Direction.N]: 0.022,\n  [Direction.NE]: 0.066,\n  [Direction.SE]: 0.155,\n  [Direction.S]: 0.246,\n  [Direction.SW]: 0.200,\n  [Direction.NW]: 0.111,\n};\nmoveProbabilities[Season.Spring] = {\n  [Direction.stay]: 0.200,\n  [Direction.N]: 0.200,\n  [Direction.NE]: 0.246,\n  [Direction.SE]: 0.155,\n  [Direction.S]: 0.066,\n  [Direction.SW]: 0.022,\n  [Direction.NW]: 0.111,\n};\nmoveProbabilities[Season.Summer] = {\n  [Direction.stay]: 0.200,\n  [Direction.N]: 0.246,\n  [Direction.NE]: 0.200,\n  [Direction.SE]: 0.111,\n  [Direction.S]: 0.022,\n  [Direction.SW]: 0.066,\n  [Direction.NW]: 0.155,\n};\n\n// determine the direction we will (attempt to) move\nconst getDirection = (season: Season): Direction => {\n  const rand = Math.random();\n\n  // note: this relies on the specific values of the Direction enums\n  for (let direction=-1, accumulator=0; direction<=5; direction++) {\n    accumulator += moveProbabilities[season][direction];\n\n    if (rand<=accumulator) {\n      return direction as Direction;\n    }\n  }\n\n  // shouldn't get here, but just in case\n  return moveProbabilities[season][5] as Direction;\n};\n\n// keyed by season, contains the possible cell starting points for each season\nconst startingCells: number[][] = [[], [], [], []];\n\nstartingCells[Season.Summer] = [ 9, 10, 11, 12, 13, 14, ];\nstartingCells[Season.Fall] = [ 15, 16, 17, 18, 19, 20, 21,];\nstartingCells[Season.Winter] = [ 22, 23, 24, 25, 26, 27, ];\nstartingCells[Season.Spring] = [ 15, 16, 17, 18, 19, 20, 21, ];\n\n// indexed by Season, then the cell # you're starting in, and then Direction\nconst nextCell: number[][][] = [[], [], [], []];\n\nnextCell[Season.Summer] = [\n  // N, NE, SE, S, SW, NW\n  [ 0, 1, 5, 4, 3, 18, ],\n  [ 1, 2, 6, 5, 0, 1, ],\n  [ 2, 3, 7, 6, 1, 2, ],\n  [ 3, 0, 3, 7, 2, 3, ],\n  [ 0, 5, 10, 9, 4, 4, ],\n  [ 1, 6, 11, 10, 4, 0, ],\n  [ 2, 7, 12, 11, 5, 1, ],\n  [ 3, 7, 13, 7, 6, 2, ],\n  [ 19, 8, 14, 13, 8, 8, ],\n  [ 4, 10, 10, 9, 14, 9, ],\n  [ 5, 11, 11, 11, 9, 4, ],\n  [ 6, 12, 12, 11, 10, 5, ],\n  [ 12, 13, 13, 12, 11, 6, ],\n  [ 8, 14, 14, 8, 12, 7, ],\n  [ 14, 9, 9, 14, 13, 8, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n];\n\nnextCell[Season.Fall] = [\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ 9, 10, 16, 15, 14, 9, ],\n  [ 10, 11, 17, 16, 9, 10, ],\n  [ 11, 12, 18, 17, 10, 11, ],\n  [ 12, 13, 19, 18, 11, 12, ],\n  [ 13, 14, 20, 19, 12, 13, ],\n  [ 14, 9, 21, 20, 13, 14, ],\n  [ 9, 16, 22, 15, 21, 15, ],\n  [ 10, 17, 23, 22, 15, 9, ],\n  [ 11, 18, 24, 23, 16, 10, ],\n  [ 12, 19, 25, 24, 17, 11, ],\n  [ 13, 20, 26, 25, 18, 12, ],\n  [ 14, 21, 27, 26, 19, 13, ],\n  [ 21, 15, 21, 27, 20, 14, ],\n  [ 16, 23, 22, 22, 27, 15, ],\n  [ 17, 24, 23, 23, 22, 16, ],\n  [ 18, 25, 24, 24, 23, 17, ],\n  [ 19, 26, 25, 25, 24, 18, ],\n  [ 20, 27, 26, 26, 25, 19, ],\n  [ 21, 22, 27, 27, 26, 20, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n];\n\nnextCell[Season.Winter] = [\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  [ -1, -1, -1, -1, -1, -1, ],\n  // N, NE, SE, S, SW, NW\n  [ 22, 23, 28, 22, 27, 22, ],\n  [ 28, 24, 29, 28, 22, 23, ],\n  [ 24, 25, 30, 24, 23, 23, ],\n  [ 30, 26, 31, 30, 24, 36, ],\n  [ 26, 27, 32, 31, 25, 26, ],\n  [ 27, 22, 27, 27, 26, 27, ],\n\n  [ 23, 29, 33, 17, 28, 22, ],\n  [ 29, 30, 34, 33, 28, 23, ],\n  [ 25, 31, 35, 34, 29, 24, ],\n  [ 26, 32, 36, 35, 30, 25, ],\n  [ 32, 32, 32, 36, 31, 26, ],\n\n  [ 29, 34, 33, 33, 36, 28, ],\n  [ 30, 35, 34, 34, 33, 29, ],\n  [ 31, 32, 36, 35, 35, 30, ],\n  [ 32, 33, 18, 36, 35, 31, ],\n];\n\nnextCell[Season.Spring] = nextCell[Season.Fall];\n\n// descriptions and temperatures and options are indexed by Climate, then Humidity, then cell #\n// seasons are handled by controlling which parts of the grid you can get to\n// we need to populate the descriptions because we might call them before localization happens\n// note: length/2 because typescript enums have both the numbers and strings as keys\nconst weatherDescriptions: string[][][] = new Array(Object.keys(Climate).length/2)\n  .fill('')\n  .map(() => new Array(Object.keys(Humidity).length/2)\n    .fill('')\n    .map(() => new Array(37).fill('')));\n\n\nconst weatherTemperatures: number[][][] = new Array(Object.keys(Climate).length/2)\n  .fill(0)\n  .map(() => new Array(Object.keys(Humidity).length/2)\n    .fill(0)\n    .map(() => new Array(37).fill(0)));\n\ntype WeatherOptions = {\n  fx: EffectDetails\n}\n\nconst weatherOptions: WeatherOptions[][][] = new Array(Object.keys(Climate).length/2)\n  .fill({})\n  .map(() => new Array(Object.keys(Humidity).length/2)\n    .fill({})\n    .map(() => new Array(37).fill({})));\n  \n/////////////////////////////////////////\n// these things are used to map the i18n keys to the right spot in our arrays\n// maps the localized names to the hex order\nconst descriptionOrder = [\n  'summer.1',\n  'summer.2',\n  'summer.3',\n  'summer.5',\n  'summer.4',\n  'summer.6',\n  'summer.7',\n  'summer.8',\n  'summer.9',\n\n  'springfall.warm.1',\n  'springfall.warm.2',\n  'springfall.warm.3',\n  'springfall.warm.4',\n  'springfall.warm.5',\n  'springfall.warm.6',\n\n  'springfall.1',\n  'springfall.2',\n  'springfall.3',\n  'springfall.4',\n  'springfall.5',\n  'springfall.6',\n  'springfall.7',\n\n  'springfall.cool.1',\n  'springfall.cool.2',\n  'springfall.cool.3',\n  'springfall.cool.4',\n  'springfall.cool.5',\n  'springfall.cool.6',\n\n  'winter.1',\n  'winter.2',\n  'winter.3',\n  'winter.4',\n  'winter.5',\n  'winter.6',\n  'winter.7',\n  'winter.8',\n  'winter.9',\n];\n\n// maps names to the cell ID # (could use findIndex on descriptionOrder, but this lets us use intellisense)\nconst descriptionCells = {\n  'summer1': 0,\n  'summer2': 1,\n  'summer3': 2,\n  'summer4': 3,\n  'summer5': 4,\n  'summer6': 5,\n  'summer7': 6,\n  'summer8': 7,\n  'summer9': 8,\n\n  'springfall_warm1': 9,\n  'springfall_warm2': 10,\n  'springfall_warm3': 11,\n  'springfall_warm4': 12,\n  'springfall_warm5': 13,\n  'springfall_warm6': 14,\n\n  'springfall1': 15,\n  'springfall2': 16,\n  'springfall3': 17,\n  'springfall4': 18,\n  'springfall5': 19,\n  'springfall6': 20,\n  'springfall7': 21,\n\n  'springfall_cool1': 22,\n  'springfall_cool2': 23,\n  'springfall_cool3': 24,\n  'springfall_cool4': 25,\n  'springfall_cool5': 26,\n  'springfall_cool6': 27,\n\n  'winter1': 28,\n  'winter2': 29,\n  'winter3': 30,\n  'winter4': 31,\n  'winter5': 32,\n  'winter6': 33,\n  'winter7': 34,\n  'winter8': 35,\n  'winter9': 36,\n};\n\nconst manualOptions = [  // build list of manual weather options; for simplicity, we steal them from ones that already exist\n  { climate: Climate.Cold, humidity: Humidity.Barren, hexCell: descriptionCells.springfall_cool1 },   // clear sky\n  { climate: Climate.Cold, humidity: Humidity.Modest, hexCell: descriptionCells.summer4},   // fleecy clouds\n  { climate: Climate.Cold, humidity: Humidity.Modest, hexCell: descriptionCells.winter6},   // gray, windy\n  { climate: Climate.Cold, humidity: Humidity.Modest, hexCell: descriptionCells.springfall_warm5},,   // dark storm clouds\n  { climate: Climate.Cold, humidity: Humidity.Barren, hexCell: descriptionCells.summer7 },   // light rain\n  { climate: Climate.Cold, humidity: Humidity.Verdant, hexCell: descriptionCells.summer6 },   // steady rain\n  { climate: Climate.Cold, humidity: Humidity.Modest, hexCell: descriptionCells.summer7 },   // heavy rain\n  { climate: Climate.Temperate, humidity: Humidity.Barren, hexCell: descriptionCells.springfall_cool2 },   // light fog\n  { climate: Climate.Cold, humidity: Humidity.Modest, hexCell: descriptionCells.springfall3 },   // fog banks\n  { climate: Climate.Cold, humidity: Humidity.Modest, hexCell: descriptionCells.springfall_cool2},   // heavy fog\n  { climate: Climate.Cold, humidity: Humidity.Barren, hexCell: descriptionCells.winter5 },   // light snow\n  { climate: Climate.Temperate, humidity: Humidity.Verdant, hexCell: descriptionCells.winter9 },   // moderate snow, windy\n  { climate: Climate.Cold, humidity: Humidity.Modest, hexCell: descriptionCells.winter3},   // heavy snow\n  { climate: Climate.Cold, humidity: Humidity.Modest, hexCell: descriptionCells.springfall_warm6},   // hail\n];\n\n\n///////////////////////////////////////\n// define the extra metadata for each cell\n// I don't like this because it's disconnected from the text strings, which makes it hard to debug\n// But the alternative is to to have just a massively long file here to map all the descriptions, which\n//    is likely to also lead to errors, so...\n\n// temperatures\n\nweatherTemperatures[Climate.Cold][Humidity.Barren] = [\n  44, 51, 60, 47,\n  42, 46, 49, 75, 36,\n  30, 32, 28, 40, 49, 32,\n  23, 18, 14, 32, 36, 51, 36,\n  11, 9, 19, 30, 23, 32,\n  -3, -53, -15, 18, -38,\n  -24, -35, -9, 4,\n];\n\nweatherTemperatures[Climate.Cold][Humidity.Modest] = [\n  44, 51, 60, 47,\n  42, 46, 49, 80, 36,\n  30, 32, 28, 40, 49, 32,\n  23, 18, 14, 32, 36, 51, 36,\n  11, 9, 19, 30, 23, 32,\n  -3, -53, -15, 18, -38,\n  -24, -35, -9, 4,\n];\n\nweatherTemperatures[Climate.Cold][Humidity.Verdant] = [\n  44, 51, 60, 47,\n  42, 46, 49, 75, 36,\n  30, 32, 28, 40, 49, 32,\n  23, 18, 14, 32, 36, 51, 36,\n  11, 9, 19, 30, 23, 32,\n  -3, -53, -15, 18, -38,\n  -24, -35, -9, 4,\n];\n\nweatherTemperatures[Climate.Temperate][Humidity.Barren] = [\n  79, 83, 87, 73,\n  78, 90, 81, 100, 75,\n  72, 73, 71, 77, 81, 73,\n  68, 66, 64, 73, 75, 83, 75,\n  63, 61, 66, 72, 68, 73,\n  55, 30, 49, 66, 38,\n  44, 39, 52, 59,\n];\n\nweatherTemperatures[Climate.Temperate][Humidity.Modest] = [\n  70, 77, 86, 73,\n  68, 72, 83, 110, 63,\n  67, 59, 55, 66, 75, 59,\n  50, 45, 41, 59, 63, 77, 63,\n  39, 37, 46, 57, 50, 59,\n  25, -23, 14, 45, -8,\n  5, -6, 19, 32,\n];\n\nweatherTemperatures[Climate.Temperate][Humidity.Verdant] = [\n  70, 77, 86, 73,\n  68, 72, 83, 110, 63,\n  67, 59, 55, 66, 75, 59,\n  36, 32, 38, 59, 63, 77, 63,\n  28, 26, 46, 52, 50, 59,\n  16, -23, 14, 45, -10,\n  0, -6, 19, 22,\n];\n\nweatherTemperatures[Climate.Hot][Humidity.Barren] = [\n  93, 96, 100, 94,\n  92, 94, 95, 110, 90,\n  87, 88, 86, 91, 95, 88,\n  84, 82, 80, 88, 90, 96, 90,\n  79, 78, 82, 87, 84, 88,\n  73, 51, 67, 82, 58,\n  66, 59, 70, 76,\n];\n\nweatherTemperatures[Climate.Hot][Humidity.Modest] = [\n  79, 80, 82, 79,\n  79, 79, 80, 86, 78,\n  77, 77, 76, 78, 80, 77,\n  75, 74, 73, 77, 78, 80, 78,\n  73, 73, 74, 76, 75, 77,\n  71, 61, 68, 74, 64,\n  63, 65, 69, 72,\n];\n\nweatherTemperatures[Climate.Hot][Humidity.Verdant] = [\n  85, 86, 87, 85,\n  84, 85, 85, 91, 84,\n  83, 83, 82, 84, 85, 83,\n  82, 81, 80, 83, 84, 86, 83,\n  80, 80, 81, 83, 82, 83,\n  78, 70, 76, 81, 73,\n  75, 73, 77, 79,\n];\n\n//0-8 - summer\n//9-14 - warm\n//15-21 - spring/fall\n//22-27 - cold\n//28-36 - winter\n\nweatherOptions[Climate.Cold][Humidity.Barren][descriptionCells.summer1] = { fx: availableEffects.LightWind };\nweatherOptions[Climate.Cold][Humidity.Barren][descriptionCells.summer2] = { fx: joinEffects(availableEffects.Overcast, availableEffects.BlusterWind) };\nweatherOptions[Climate.Cold][Humidity.Barren][descriptionCells.summer4] = { fx: availableEffects.LightClouds };\nweatherOptions[Climate.Cold][Humidity.Barren][descriptionCells.summer5] = { fx: joinEffects(availableEffects.LightClouds, availableEffects.LightWind) };\nweatherOptions[Climate.Cold][Humidity.Barren][descriptionCells.summer6] = { fx: availableEffects.ModerateClouds };\nweatherOptions[Climate.Cold][Humidity.Barren][descriptionCells.summer7] = { fx: availableEffects.LightRain };\nweatherOptions[Climate.Cold][Humidity.Barren][descriptionCells.summer9] = { fx: availableEffects.HeavySnow };\nweatherOptions[Climate.Cold][Humidity.Barren][descriptionCells.springfall_warm1] = { fx: availableEffects.LightWind };\nweatherOptions[Climate.Cold][Humidity.Barren][descriptionCells.springfall_warm3] = { fx: availableEffects.LightClouds };\nweatherOptions[Climate.Cold][Humidity.Barren][descriptionCells.springfall_warm5] = { fx: availableEffects.StormClouds };\nweatherOptions[Climate.Cold][Humidity.Barren][descriptionCells.springfall_warm6] = { fx: joinEffects(availableEffects.Hail, availableEffects.StormClouds) };\nweatherOptions[Climate.Cold][Humidity.Barren][descriptionCells.springfall1] = { fx: availableEffects.ModerateWind };\nweatherOptions[Climate.Cold][Humidity.Barren][descriptionCells.springfall2] = { fx: availableEffects.Overcast };\nweatherOptions[Climate.Cold][Humidity.Barren][descriptionCells.springfall3] = { fx: joinEffects(availableEffects.LightFog, availableEffects.BlusterRain) };\nweatherOptions[Climate.Cold][Humidity.Barren][descriptionCells.springfall5] = { fx: availableEffects.LightRain };\nweatherOptions[Climate.Cold][Humidity.Barren][descriptionCells.springfall6] = { fx: availableEffects.ModerateClouds };\nweatherOptions[Climate.Cold][Humidity.Barren][descriptionCells.springfall7] = { fx: joinEffects(availableEffects.StormClouds, availableEffects.Lightning) };\nweatherOptions[Climate.Cold][Humidity.Barren][descriptionCells.springfall_cool2] = { fx: availableEffects.LightFog };\nweatherOptions[Climate.Cold][Humidity.Barren][descriptionCells.springfall_cool4] = { fx: availableEffects.StormClouds };\nweatherOptions[Climate.Cold][Humidity.Barren][descriptionCells.springfall_cool5] = { fx: availableEffects.HeavyWind };\nweatherOptions[Climate.Cold][Humidity.Barren][descriptionCells.springfall_cool6] = { fx: availableEffects.HeavyWind };\nweatherOptions[Climate.Cold][Humidity.Barren][descriptionCells.winter3] = { fx: availableEffects.WhiteoutSnow };\nweatherOptions[Climate.Cold][Humidity.Barren][descriptionCells.winter4] = { fx: availableEffects.BlusterSnow };\nweatherOptions[Climate.Cold][Humidity.Barren][descriptionCells.winter5] = { fx: availableEffects.LightSnow };\nweatherOptions[Climate.Cold][Humidity.Barren][descriptionCells.winter6] = { fx: joinEffects(availableEffects.Overcast, availableEffects.ModerateWind) };\nweatherOptions[Climate.Cold][Humidity.Barren][descriptionCells.winter7] = { fx: availableEffects.ModerateClouds };\nweatherOptions[Climate.Cold][Humidity.Barren][descriptionCells.winter8] = { fx: joinEffects(availableEffects.Overcast, availableEffects.LightClouds) };\nweatherOptions[Climate.Cold][Humidity.Barren][descriptionCells.winter9] = { fx: availableEffects.BlusterSnow };\n\nweatherOptions[Climate.Cold][Humidity.Modest][descriptionCells.summer1] = { fx: availableEffects.LightWind };\nweatherOptions[Climate.Cold][Humidity.Modest][descriptionCells.summer2] = { fx: joinEffects(availableEffects.Overcast, availableEffects.BlusterWind) };\nweatherOptions[Climate.Cold][Humidity.Modest][descriptionCells.summer4] = { fx: availableEffects.LightClouds };\nweatherOptions[Climate.Cold][Humidity.Modest][descriptionCells.summer5] = { fx: joinEffects(availableEffects.LightClouds, availableEffects.LightWind) };\nweatherOptions[Climate.Cold][Humidity.Modest][descriptionCells.summer6] = { fx: availableEffects.LightRain };\nweatherOptions[Climate.Cold][Humidity.Modest][descriptionCells.summer7] = { fx: availableEffects.HeavyRain };\nweatherOptions[Climate.Cold][Humidity.Modest][descriptionCells.summer9] = { fx: availableEffects.HeavySnow };\nweatherOptions[Climate.Cold][Humidity.Modest][descriptionCells.springfall_warm1] = { fx: availableEffects.LightWind };\nweatherOptions[Climate.Cold][Humidity.Modest][descriptionCells.springfall_warm3] = { fx: availableEffects.LightClouds };\nweatherOptions[Climate.Cold][Humidity.Modest][descriptionCells.springfall_warm5] = { fx: availableEffects.StormClouds };\nweatherOptions[Climate.Cold][Humidity.Modest][descriptionCells.springfall_warm6] = { fx: joinEffects(availableEffects.Hail, availableEffects.StormClouds) };\nweatherOptions[Climate.Cold][Humidity.Modest][descriptionCells.springfall1] = { fx: availableEffects.ModerateWind };\nweatherOptions[Climate.Cold][Humidity.Modest][descriptionCells.springfall2] = { fx: availableEffects.Overcast };\nweatherOptions[Climate.Cold][Humidity.Modest][descriptionCells.springfall3] = { fx: availableEffects.RollingFog };\nweatherOptions[Climate.Cold][Humidity.Modest][descriptionCells.springfall5] = { fx: availableEffects.LightRain };\nweatherOptions[Climate.Cold][Humidity.Modest][descriptionCells.springfall6] = { fx: availableEffects.ModerateClouds };\nweatherOptions[Climate.Cold][Humidity.Modest][descriptionCells.springfall7] = { fx: joinEffects(availableEffects.StormClouds, availableEffects.Lightning) };\nweatherOptions[Climate.Cold][Humidity.Modest][descriptionCells.springfall_cool1] = { fx: availableEffects.ModerateClouds };\nweatherOptions[Climate.Cold][Humidity.Modest][descriptionCells.springfall_cool2] = { fx: availableEffects.HeavyFog };\nweatherOptions[Climate.Cold][Humidity.Modest][descriptionCells.springfall_cool4] = { fx: availableEffects.StormClouds };\nweatherOptions[Climate.Cold][Humidity.Modest][descriptionCells.springfall_cool5] = { fx: availableEffects.HeavyWind };\nweatherOptions[Climate.Cold][Humidity.Modest][descriptionCells.springfall_cool6] = { fx: availableEffects.HeavyWind };\nweatherOptions[Climate.Cold][Humidity.Modest][descriptionCells.winter3] = { fx: availableEffects.HeavySnow };\nweatherOptions[Climate.Cold][Humidity.Modest][descriptionCells.winter4] = { fx: availableEffects.Sleet };\nweatherOptions[Climate.Cold][Humidity.Modest][descriptionCells.winter5] = { fx: availableEffects.HeavySnow };\nweatherOptions[Climate.Cold][Humidity.Modest][descriptionCells.winter6] = { fx: joinEffects(availableEffects.Overcast, availableEffects.ModerateWind) };\nweatherOptions[Climate.Cold][Humidity.Modest][descriptionCells.winter7] = { fx: availableEffects.HeavySnow };\nweatherOptions[Climate.Cold][Humidity.Modest][descriptionCells.winter8] = { fx: joinEffects(availableEffects.Overcast, availableEffects.LightClouds) };\nweatherOptions[Climate.Cold][Humidity.Modest][descriptionCells.winter9] = { fx: availableEffects.BlusterSnow };\n\nweatherOptions[Climate.Cold][Humidity.Verdant][descriptionCells.summer1] = { fx: availableEffects.LightWind };\nweatherOptions[Climate.Cold][Humidity.Verdant][descriptionCells.summer2] = { fx: joinEffects(availableEffects.Overcast, availableEffects.BlusterWind) };\nweatherOptions[Climate.Cold][Humidity.Verdant][descriptionCells.summer3] = { fx: joinEffects(availableEffects.LightClouds, availableEffects.LightRain) };\nweatherOptions[Climate.Cold][Humidity.Verdant][descriptionCells.summer4] = { fx: availableEffects.LightClouds };\nweatherOptions[Climate.Cold][Humidity.Verdant][descriptionCells.summer5] = { fx: availableEffects.LightRain };\nweatherOptions[Climate.Cold][Humidity.Verdant][descriptionCells.summer6] = { fx: availableEffects.ModerateRain };\nweatherOptions[Climate.Cold][Humidity.Verdant][descriptionCells.summer7] = { fx: availableEffects.HeavyRain };\nweatherOptions[Climate.Cold][Humidity.Verdant][descriptionCells.summer9] = { fx: availableEffects.HeavySnow };\nweatherOptions[Climate.Cold][Humidity.Verdant][descriptionCells.springfall_warm1] = { fx: availableEffects.LightWind };\nweatherOptions[Climate.Cold][Humidity.Verdant][descriptionCells.springfall_warm2] = { fx: availableEffects.LightRain };\nweatherOptions[Climate.Cold][Humidity.Verdant][descriptionCells.springfall_warm3] = { fx: availableEffects.LightClouds };\nweatherOptions[Climate.Cold][Humidity.Verdant][descriptionCells.springfall_warm5] = { fx: availableEffects.ModerateRain };\nweatherOptions[Climate.Cold][Humidity.Verdant][descriptionCells.springfall_warm6] = { fx: joinEffects(availableEffects.Hail, availableEffects.StormClouds) };\nweatherOptions[Climate.Cold][Humidity.Verdant][descriptionCells.springfall1] = { fx: availableEffects.ModerateWind };\nweatherOptions[Climate.Cold][Humidity.Verdant][descriptionCells.springfall2] = { fx: availableEffects.Overcast };\nweatherOptions[Climate.Cold][Humidity.Verdant][descriptionCells.springfall3] = { fx: availableEffects.RollingFog };\nweatherOptions[Climate.Cold][Humidity.Verdant][descriptionCells.springfall5] = { fx: availableEffects.LightRain };\nweatherOptions[Climate.Cold][Humidity.Verdant][descriptionCells.springfall6] = { fx: availableEffects.ModerateRain };\nweatherOptions[Climate.Cold][Humidity.Verdant][descriptionCells.springfall7] = { fx: joinEffects(availableEffects.BlusterRain, joinEffects(availableEffects.StormClouds, availableEffects.Lightning)) };\nweatherOptions[Climate.Cold][Humidity.Verdant][descriptionCells.springfall_cool1] = { fx: availableEffects.ModerateClouds };\nweatherOptions[Climate.Cold][Humidity.Verdant][descriptionCells.springfall_cool2] = { fx: availableEffects.HeavyFog };\nweatherOptions[Climate.Cold][Humidity.Verdant][descriptionCells.springfall_cool4] = { fx: availableEffects.StormClouds };\nweatherOptions[Climate.Cold][Humidity.Verdant][descriptionCells.springfall_cool5] = { fx: availableEffects.HeavyWind };\nweatherOptions[Climate.Cold][Humidity.Verdant][descriptionCells.springfall_cool6] = { fx: availableEffects.HeavyWind };\nweatherOptions[Climate.Cold][Humidity.Verdant][descriptionCells.winter3] = { fx: availableEffects.HeavySnow };\nweatherOptions[Climate.Cold][Humidity.Verdant][descriptionCells.winter4] = { fx: availableEffects.Sleet };\nweatherOptions[Climate.Cold][Humidity.Verdant][descriptionCells.winter5] = { fx: availableEffects.HeavySnow };\nweatherOptions[Climate.Cold][Humidity.Verdant][descriptionCells.winter6] = { fx: joinEffects(availableEffects.Overcast, availableEffects.ModerateWind) };\nweatherOptions[Climate.Cold][Humidity.Verdant][descriptionCells.winter7] = { fx: availableEffects.HeavySnow };\nweatherOptions[Climate.Cold][Humidity.Verdant][descriptionCells.winter8] = { fx: joinEffects(availableEffects.Overcast, availableEffects.LightClouds) };\nweatherOptions[Climate.Cold][Humidity.Verdant][descriptionCells.winter9] = { fx: availableEffects.ModerateSnow };\n\nweatherOptions[Climate.Temperate][Humidity.Barren][descriptionCells.summer1] = { fx: availableEffects.LightWind };\nweatherOptions[Climate.Temperate][Humidity.Barren][descriptionCells.summer2] = { fx: joinEffects(availableEffects.Overcast, availableEffects.BlusterWind) };\nweatherOptions[Climate.Temperate][Humidity.Barren][descriptionCells.summer4] = { fx: availableEffects.LightClouds };\nweatherOptions[Climate.Temperate][Humidity.Barren][descriptionCells.summer5] = { fx: joinEffects(availableEffects.LightClouds, availableEffects.LightWind) };\nweatherOptions[Climate.Temperate][Humidity.Barren][descriptionCells.summer6] = { fx: availableEffects.ModerateClouds };\nweatherOptions[Climate.Temperate][Humidity.Barren][descriptionCells.summer7] = { fx: availableEffects.LightRain };\nweatherOptions[Climate.Temperate][Humidity.Barren][descriptionCells.summer9] = { fx: availableEffects.Wildfire };\nweatherOptions[Climate.Temperate][Humidity.Barren][descriptionCells.springfall_warm1] = { fx: availableEffects.LightWind };\nweatherOptions[Climate.Temperate][Humidity.Barren][descriptionCells.springfall_warm3] = { fx: availableEffects.LightClouds };\nweatherOptions[Climate.Temperate][Humidity.Barren][descriptionCells.springfall_warm5] = { fx: availableEffects.StormClouds };\nweatherOptions[Climate.Temperate][Humidity.Barren][descriptionCells.springfall_warm6] = { fx: joinEffects(availableEffects.HeavyRain, availableEffects.Overcast) };\nweatherOptions[Climate.Temperate][Humidity.Barren][descriptionCells.springfall1] = { fx: availableEffects.ModerateWind };\nweatherOptions[Climate.Temperate][Humidity.Barren][descriptionCells.springfall2] = { fx: availableEffects.Overcast };\nweatherOptions[Climate.Temperate][Humidity.Barren][descriptionCells.springfall3] = { fx: joinEffects(availableEffects.LightFog, availableEffects.BlusterRain) };\nweatherOptions[Climate.Temperate][Humidity.Barren][descriptionCells.springfall5] = { fx: availableEffects.LightRain };\nweatherOptions[Climate.Temperate][Humidity.Barren][descriptionCells.springfall6] = { fx: availableEffects.ModerateClouds };\nweatherOptions[Climate.Temperate][Humidity.Barren][descriptionCells.springfall7] = { fx: joinEffects(availableEffects.StormClouds, availableEffects.Lightning) };\nweatherOptions[Climate.Temperate][Humidity.Barren][descriptionCells.springfall_cool2] = { fx: availableEffects.LightFog };\nweatherOptions[Climate.Temperate][Humidity.Barren][descriptionCells.springfall_cool4] = { fx: availableEffects.StormClouds };\nweatherOptions[Climate.Temperate][Humidity.Barren][descriptionCells.springfall_cool5] = { fx: availableEffects.HeavyWind };\nweatherOptions[Climate.Temperate][Humidity.Barren][descriptionCells.springfall_cool6] = { fx: availableEffects.HeavyWind };\nweatherOptions[Climate.Temperate][Humidity.Barren][descriptionCells.winter2] = { fx: availableEffects.ModerateSnow };\nweatherOptions[Climate.Temperate][Humidity.Barren][descriptionCells.winter4] = { fx: joinEffects(availableEffects.LightRain, availableEffects.ModerateWind) };\nweatherOptions[Climate.Temperate][Humidity.Barren][descriptionCells.winter5] = { fx: availableEffects.LightSnow };\nweatherOptions[Climate.Temperate][Humidity.Barren][descriptionCells.winter6] = { fx: joinEffects(availableEffects.Overcast, availableEffects.ModerateWind) };\nweatherOptions[Climate.Temperate][Humidity.Barren][descriptionCells.winter7] = { fx: availableEffects.ModerateClouds };\nweatherOptions[Climate.Temperate][Humidity.Barren][descriptionCells.winter8] = { fx: joinEffects(availableEffects.Overcast, availableEffects.LightClouds) };\nweatherOptions[Climate.Temperate][Humidity.Barren][descriptionCells.winter9] = { fx: availableEffects.BlusterSnow };\n\nweatherOptions[Climate.Temperate][Humidity.Modest][descriptionCells.summer1] = { fx: availableEffects.LightWind };\nweatherOptions[Climate.Temperate][Humidity.Modest][descriptionCells.summer2] = { fx: joinEffects(availableEffects.Overcast, availableEffects.BlusterWind) };\nweatherOptions[Climate.Temperate][Humidity.Modest][descriptionCells.summer4] = { fx: availableEffects.LightClouds };\nweatherOptions[Climate.Temperate][Humidity.Modest][descriptionCells.summer5] = { fx: joinEffects(availableEffects.LightClouds, availableEffects.LightWind) };\nweatherOptions[Climate.Temperate][Humidity.Modest][descriptionCells.summer6] = { fx: availableEffects.LightRain };\nweatherOptions[Climate.Temperate][Humidity.Modest][descriptionCells.summer7] = { fx: availableEffects.HeavyRain };\nweatherOptions[Climate.Temperate][Humidity.Modest][descriptionCells.summer9] = { fx: joinEffects(availableEffects.StormClouds, joinEffects(availableEffects.Hail, joinEffects(availableEffects.HeavyWind, availableEffects.Lightning))) };\nweatherOptions[Climate.Temperate][Humidity.Modest][descriptionCells.springfall_warm1] = { fx: availableEffects.LightWind };\nweatherOptions[Climate.Temperate][Humidity.Modest][descriptionCells.springfall_warm3] = { fx: availableEffects.LightClouds };\nweatherOptions[Climate.Temperate][Humidity.Modest][descriptionCells.springfall_warm5] = { fx: availableEffects.StormClouds };\nweatherOptions[Climate.Temperate][Humidity.Modest][descriptionCells.springfall_warm6] = { fx: joinEffects(availableEffects.Hail, availableEffects.StormClouds) };\nweatherOptions[Climate.Temperate][Humidity.Modest][descriptionCells.springfall1] = { fx: availableEffects.ModerateWind };\nweatherOptions[Climate.Temperate][Humidity.Modest][descriptionCells.springfall2] = { fx: availableEffects.Overcast };\nweatherOptions[Climate.Temperate][Humidity.Modest][descriptionCells.springfall3] = { fx: availableEffects.RollingFog };\nweatherOptions[Climate.Temperate][Humidity.Modest][descriptionCells.springfall5] = { fx: availableEffects.LightRain };\nweatherOptions[Climate.Temperate][Humidity.Modest][descriptionCells.springfall6] = { fx: availableEffects.ModerateClouds };\nweatherOptions[Climate.Temperate][Humidity.Modest][descriptionCells.springfall7] = { fx: joinEffects(availableEffects.StormClouds, availableEffects.Lightning) };\nweatherOptions[Climate.Temperate][Humidity.Modest][descriptionCells.springfall_cool1] = { fx: availableEffects.ModerateClouds };\nweatherOptions[Climate.Temperate][Humidity.Modest][descriptionCells.springfall_cool2] = { fx: availableEffects.HeavyFog };\nweatherOptions[Climate.Temperate][Humidity.Modest][descriptionCells.springfall_cool4] = { fx: availableEffects.StormClouds };\nweatherOptions[Climate.Temperate][Humidity.Modest][descriptionCells.springfall_cool5] = { fx: availableEffects.HeavyWind };\nweatherOptions[Climate.Temperate][Humidity.Modest][descriptionCells.springfall_cool6] = { fx: availableEffects.HeavyWind };\nweatherOptions[Climate.Temperate][Humidity.Modest][descriptionCells.winter3] = { fx: availableEffects.HeavySnow };\nweatherOptions[Climate.Temperate][Humidity.Modest][descriptionCells.winter4] = { fx: availableEffects.Sleet };\nweatherOptions[Climate.Temperate][Humidity.Modest][descriptionCells.winter5] = { fx: availableEffects.HeavySnow };\nweatherOptions[Climate.Temperate][Humidity.Modest][descriptionCells.winter6] = { fx: joinEffects(availableEffects.Overcast, availableEffects.ModerateWind) };\nweatherOptions[Climate.Temperate][Humidity.Modest][descriptionCells.winter7] = { fx: availableEffects.HeavySnow };\nweatherOptions[Climate.Temperate][Humidity.Modest][descriptionCells.winter8] = { fx: joinEffects(availableEffects.Overcast, availableEffects.LightClouds) };\nweatherOptions[Climate.Temperate][Humidity.Modest][descriptionCells.winter9] = { fx: availableEffects.BlusterSnow };\n\nweatherOptions[Climate.Temperate][Humidity.Verdant][descriptionCells.summer1] = { fx: availableEffects.LightWind };\nweatherOptions[Climate.Temperate][Humidity.Verdant][descriptionCells.summer2] = { fx: joinEffects(availableEffects.Overcast, availableEffects.BlusterWind) };\nweatherOptions[Climate.Temperate][Humidity.Verdant][descriptionCells.summer3] = { fx: joinEffects(availableEffects.LightClouds, availableEffects.LightRain) };\nweatherOptions[Climate.Temperate][Humidity.Verdant][descriptionCells.summer4] = { fx: availableEffects.LightClouds };\nweatherOptions[Climate.Temperate][Humidity.Verdant][descriptionCells.summer5] = { fx: availableEffects.LightRain };\nweatherOptions[Climate.Temperate][Humidity.Verdant][descriptionCells.summer6] = { fx: availableEffects.ModerateRain };\nweatherOptions[Climate.Temperate][Humidity.Verdant][descriptionCells.summer7] = { fx: availableEffects.HeavyRain };\nweatherOptions[Climate.Temperate][Humidity.Verdant][descriptionCells.summer9] = { fx: availableEffects.HeavyWind };\nweatherOptions[Climate.Temperate][Humidity.Verdant][descriptionCells.springfall_warm1] = { fx: availableEffects.LightWind };\nweatherOptions[Climate.Temperate][Humidity.Verdant][descriptionCells.springfall_warm2] = { fx: availableEffects.LightRain };\nweatherOptions[Climate.Temperate][Humidity.Verdant][descriptionCells.springfall_warm3] = { fx: availableEffects.LightClouds };\nweatherOptions[Climate.Temperate][Humidity.Verdant][descriptionCells.springfall_warm5] = { fx: availableEffects.ModerateRain };\nweatherOptions[Climate.Temperate][Humidity.Verdant][descriptionCells.springfall_warm6] = { fx: joinEffects(availableEffects.Hail, availableEffects.StormClouds) };\nweatherOptions[Climate.Temperate][Humidity.Verdant][descriptionCells.springfall1] = { fx: availableEffects.ModerateWind };\nweatherOptions[Climate.Temperate][Humidity.Verdant][descriptionCells.springfall2] = { fx: availableEffects.Overcast };\nweatherOptions[Climate.Temperate][Humidity.Verdant][descriptionCells.springfall3] = { fx: availableEffects.RollingFog };\nweatherOptions[Climate.Temperate][Humidity.Verdant][descriptionCells.springfall5] = { fx: availableEffects.LightRain };\nweatherOptions[Climate.Temperate][Humidity.Verdant][descriptionCells.springfall6] = { fx: availableEffects.ModerateRain };\nweatherOptions[Climate.Temperate][Humidity.Verdant][descriptionCells.springfall7] = { fx: joinEffects(availableEffects.BlusterRain, joinEffects(availableEffects.StormClouds, availableEffects.Lightning)) };\nweatherOptions[Climate.Temperate][Humidity.Verdant][descriptionCells.springfall_cool1] = { fx: availableEffects.ModerateClouds };\nweatherOptions[Climate.Temperate][Humidity.Verdant][descriptionCells.springfall_cool2] = { fx: availableEffects.HeavyFog };\nweatherOptions[Climate.Temperate][Humidity.Verdant][descriptionCells.springfall_cool4] = { fx: availableEffects.StormClouds };\nweatherOptions[Climate.Temperate][Humidity.Verdant][descriptionCells.springfall_cool5] = { fx: availableEffects.HeavyWind };\nweatherOptions[Climate.Temperate][Humidity.Verdant][descriptionCells.springfall_cool6] = { fx: availableEffects.HeavyWind };\nweatherOptions[Climate.Temperate][Humidity.Verdant][descriptionCells.winter3] = { fx: availableEffects.HeavySnow };\nweatherOptions[Climate.Temperate][Humidity.Verdant][descriptionCells.winter4] = { fx: availableEffects.Sleet };\nweatherOptions[Climate.Temperate][Humidity.Verdant][descriptionCells.winter5] = { fx: availableEffects.HeavySnow };\nweatherOptions[Climate.Temperate][Humidity.Verdant][descriptionCells.winter6] = { fx: joinEffects(availableEffects.Overcast, availableEffects.ModerateWind) };\nweatherOptions[Climate.Temperate][Humidity.Verdant][descriptionCells.winter7] = { fx: availableEffects.HeavySnow };\nweatherOptions[Climate.Temperate][Humidity.Verdant][descriptionCells.winter8] = { fx: joinEffects(availableEffects.Overcast, availableEffects.LightClouds) };\nweatherOptions[Climate.Temperate][Humidity.Verdant][descriptionCells.winter9] = { fx: availableEffects.ModerateSnow };\n\nweatherOptions[Climate.Hot][Humidity.Barren][descriptionCells.summer1] = { fx: availableEffects.LightWind };\nweatherOptions[Climate.Hot][Humidity.Barren][descriptionCells.summer2] = { fx: availableEffects.DustStorm };\nweatherOptions[Climate.Hot][Humidity.Barren][descriptionCells.summer4] = { fx: availableEffects.LightClouds };\nweatherOptions[Climate.Hot][Humidity.Barren][descriptionCells.summer5] = { fx: joinEffects(availableEffects.LightClouds, availableEffects.LightWind) };\nweatherOptions[Climate.Hot][Humidity.Barren][descriptionCells.summer6] = { fx: availableEffects.ModerateClouds };\nweatherOptions[Climate.Hot][Humidity.Barren][descriptionCells.summer7] = { fx: availableEffects.LightRain };\nweatherOptions[Climate.Hot][Humidity.Barren][descriptionCells.summer9] = { fx: availableEffects.HeavyWind };\nweatherOptions[Climate.Hot][Humidity.Barren][descriptionCells.springfall_warm1] = { fx: availableEffects.LightWind };\nweatherOptions[Climate.Hot][Humidity.Barren][descriptionCells.springfall_warm3] = { fx: availableEffects.LightClouds };\nweatherOptions[Climate.Hot][Humidity.Barren][descriptionCells.springfall_warm5] = { fx: availableEffects.StormClouds };\nweatherOptions[Climate.Hot][Humidity.Barren][descriptionCells.springfall_warm6] = { fx: joinEffects(availableEffects.HeavyRain, availableEffects.Overcast) };\nweatherOptions[Climate.Hot][Humidity.Barren][descriptionCells.springfall1] = { fx: availableEffects.ModerateWind };\nweatherOptions[Climate.Hot][Humidity.Barren][descriptionCells.springfall2] = { fx: availableEffects.Overcast };\nweatherOptions[Climate.Hot][Humidity.Barren][descriptionCells.springfall3] = { fx: joinEffects(availableEffects.LightFog, availableEffects.BlusterRain) };\nweatherOptions[Climate.Hot][Humidity.Barren][descriptionCells.springfall5] = { fx: availableEffects.LightRain };\nweatherOptions[Climate.Hot][Humidity.Barren][descriptionCells.springfall6] = { fx: availableEffects.ModerateClouds };\nweatherOptions[Climate.Hot][Humidity.Barren][descriptionCells.springfall7] = { fx: joinEffects(availableEffects.StormClouds, availableEffects.Lightning) };\nweatherOptions[Climate.Hot][Humidity.Barren][descriptionCells.springfall_cool2] = { fx: availableEffects.LightFog };\nweatherOptions[Climate.Hot][Humidity.Barren][descriptionCells.springfall_cool4] = { fx: availableEffects.StormClouds };\nweatherOptions[Climate.Hot][Humidity.Barren][descriptionCells.springfall_cool5] = { fx: availableEffects.HeavyWind };\nweatherOptions[Climate.Hot][Humidity.Barren][descriptionCells.springfall_cool6] = { fx: availableEffects.HeavyWind };\nweatherOptions[Climate.Hot][Humidity.Barren][descriptionCells.winter3] = { fx: joinEffects(availableEffects.StormClouds, availableEffects.Lightning) };\nweatherOptions[Climate.Hot][Humidity.Barren][descriptionCells.winter4] = { fx: joinEffects(availableEffects.LightRain, availableEffects.ModerateWind) };\nweatherOptions[Climate.Hot][Humidity.Barren][descriptionCells.winter5] = { fx: availableEffects.BlusterRain };\nweatherOptions[Climate.Hot][Humidity.Barren][descriptionCells.winter6] = { fx: joinEffects(availableEffects.Overcast, availableEffects.ModerateWind) };\nweatherOptions[Climate.Hot][Humidity.Barren][descriptionCells.winter7] = { fx: availableEffects.ModerateClouds };\nweatherOptions[Climate.Hot][Humidity.Barren][descriptionCells.winter8] = { fx: joinEffects(availableEffects.Overcast, availableEffects.LightClouds) };\nweatherOptions[Climate.Hot][Humidity.Barren][descriptionCells.winter9] = { fx: joinEffects(availableEffects.BlusterRain, availableEffects.ModerateWind) };\n\nweatherOptions[Climate.Hot][Humidity.Modest][descriptionCells.summer1] = { fx: availableEffects.LightWind };\nweatherOptions[Climate.Hot][Humidity.Modest][descriptionCells.summer2] = { fx: availableEffects.HeavyWind };\nweatherOptions[Climate.Hot][Humidity.Modest][descriptionCells.summer4] = { fx: availableEffects.LightClouds };\nweatherOptions[Climate.Hot][Humidity.Modest][descriptionCells.summer5] = { fx: joinEffects(availableEffects.LightClouds, availableEffects.LightWind) };\nweatherOptions[Climate.Hot][Humidity.Modest][descriptionCells.summer6] = { fx: availableEffects.LightRain };\nweatherOptions[Climate.Hot][Humidity.Modest][descriptionCells.summer7] = { fx: availableEffects.HeavyRain };\nweatherOptions[Climate.Hot][Humidity.Modest][descriptionCells.summer9] = { fx: availableEffects.Wildfire };\nweatherOptions[Climate.Hot][Humidity.Modest][descriptionCells.springfall_warm1] = { fx: availableEffects.LightWind };\nweatherOptions[Climate.Hot][Humidity.Modest][descriptionCells.springfall_warm3] = { fx: availableEffects.LightClouds };\nweatherOptions[Climate.Hot][Humidity.Modest][descriptionCells.springfall_warm5] = { fx: availableEffects.StormClouds };\nweatherOptions[Climate.Hot][Humidity.Modest][descriptionCells.springfall_warm6] = { fx: joinEffects(availableEffects.StormClouds, availableEffects.Lightning) };\nweatherOptions[Climate.Hot][Humidity.Modest][descriptionCells.springfall1] = { fx: availableEffects.ModerateWind };\nweatherOptions[Climate.Hot][Humidity.Modest][descriptionCells.springfall2] = { fx: availableEffects.Overcast };\nweatherOptions[Climate.Hot][Humidity.Modest][descriptionCells.springfall3] = { fx: availableEffects.RollingFog };\nweatherOptions[Climate.Hot][Humidity.Modest][descriptionCells.springfall5] = { fx: availableEffects.LightRain };\nweatherOptions[Climate.Hot][Humidity.Modest][descriptionCells.springfall6] = { fx: availableEffects.ModerateClouds };\nweatherOptions[Climate.Hot][Humidity.Modest][descriptionCells.springfall7] = { fx: joinEffects(availableEffects.StormClouds, availableEffects.Lightning) };\nweatherOptions[Climate.Hot][Humidity.Modest][descriptionCells.springfall_cool1] = { fx: availableEffects.ModerateClouds };\nweatherOptions[Climate.Hot][Humidity.Modest][descriptionCells.springfall_cool2] = { fx: availableEffects.HeavyFog };\nweatherOptions[Climate.Hot][Humidity.Modest][descriptionCells.springfall_cool4] = { fx: availableEffects.StormClouds };\nweatherOptions[Climate.Hot][Humidity.Modest][descriptionCells.springfall_cool5] = { fx: availableEffects.HeavyWind };\nweatherOptions[Climate.Hot][Humidity.Modest][descriptionCells.springfall_cool6] = { fx: availableEffects.HeavyWind };\nweatherOptions[Climate.Hot][Humidity.Modest][descriptionCells.winter3] = { fx: availableEffects.HeavyRain };\nweatherOptions[Climate.Hot][Humidity.Modest][descriptionCells.winter4] = { fx: availableEffects.ModerateRain };\nweatherOptions[Climate.Hot][Humidity.Modest][descriptionCells.winter5] = { fx: availableEffects.HeavyRain };\nweatherOptions[Climate.Hot][Humidity.Modest][descriptionCells.winter6] = { fx: joinEffects(availableEffects.Overcast, availableEffects.ModerateWind) };\nweatherOptions[Climate.Hot][Humidity.Modest][descriptionCells.winter7] = { fx: availableEffects.LightRain };\nweatherOptions[Climate.Hot][Humidity.Modest][descriptionCells.winter8] = { fx: joinEffects(availableEffects.Overcast, availableEffects.LightClouds) };\nweatherOptions[Climate.Hot][Humidity.Modest][descriptionCells.winter9] = { fx: joinEffects(availableEffects.LightRain, availableEffects.ModerateWind) };\n\nweatherOptions[Climate.Hot][Humidity.Verdant][descriptionCells.summer1] = { fx: availableEffects.LightWind };\nweatherOptions[Climate.Hot][Humidity.Verdant][descriptionCells.summer2] = { fx: joinEffects(availableEffects.Overcast, availableEffects.BlusterWind) };\nweatherOptions[Climate.Hot][Humidity.Verdant][descriptionCells.summer3] = { fx: joinEffects(availableEffects.LightClouds, availableEffects.LightRain) };\nweatherOptions[Climate.Hot][Humidity.Verdant][descriptionCells.summer4] = { fx: availableEffects.LightClouds };\nweatherOptions[Climate.Hot][Humidity.Verdant][descriptionCells.summer5] = { fx: availableEffects.LightRain };\nweatherOptions[Climate.Hot][Humidity.Verdant][descriptionCells.summer6] = { fx: availableEffects.ModerateRain };\nweatherOptions[Climate.Hot][Humidity.Verdant][descriptionCells.summer7] = { fx: availableEffects.HeavyRain };\nweatherOptions[Climate.Hot][Humidity.Verdant][descriptionCells.summer9] = { fx: joinEffects(availableEffects.StormClouds, availableEffects.HeavyRain) };\nweatherOptions[Climate.Hot][Humidity.Verdant][descriptionCells.springfall_warm1] = { fx: availableEffects.LightWind };\nweatherOptions[Climate.Hot][Humidity.Verdant][descriptionCells.springfall_warm2] = { fx: availableEffects.LightRain };\nweatherOptions[Climate.Hot][Humidity.Verdant][descriptionCells.springfall_warm3] = { fx: availableEffects.LightClouds };\nweatherOptions[Climate.Hot][Humidity.Verdant][descriptionCells.springfall_warm5] = { fx: availableEffects.ModerateRain };\nweatherOptions[Climate.Hot][Humidity.Verdant][descriptionCells.springfall_warm6] = { fx: availableEffects.HeavyRain };\nweatherOptions[Climate.Hot][Humidity.Verdant][descriptionCells.springfall1] = { fx: availableEffects.ModerateWind };\nweatherOptions[Climate.Hot][Humidity.Verdant][descriptionCells.springfall2] = { fx: availableEffects.Overcast };\nweatherOptions[Climate.Hot][Humidity.Verdant][descriptionCells.springfall3] = { fx: availableEffects.RollingFog };\nweatherOptions[Climate.Hot][Humidity.Verdant][descriptionCells.springfall5] = { fx: availableEffects.LightRain };\nweatherOptions[Climate.Hot][Humidity.Verdant][descriptionCells.springfall6] = { fx: availableEffects.ModerateRain };\nweatherOptions[Climate.Hot][Humidity.Verdant][descriptionCells.springfall7] = { fx: joinEffects(availableEffects.BlusterRain, joinEffects(availableEffects.StormClouds, availableEffects.Lightning)) };\nweatherOptions[Climate.Hot][Humidity.Verdant][descriptionCells.springfall_cool1] = { fx: availableEffects.ModerateClouds };\nweatherOptions[Climate.Hot][Humidity.Verdant][descriptionCells.springfall_cool2] = { fx: availableEffects.HeavyFog };\nweatherOptions[Climate.Hot][Humidity.Verdant][descriptionCells.springfall_cool4] = { fx: availableEffects.StormClouds };\nweatherOptions[Climate.Hot][Humidity.Verdant][descriptionCells.springfall_cool5] = { fx: availableEffects.HeavyWind };\nweatherOptions[Climate.Hot][Humidity.Verdant][descriptionCells.springfall_cool6] = { fx: availableEffects.HeavyWind };\nweatherOptions[Climate.Hot][Humidity.Verdant][descriptionCells.winter3] = { fx: availableEffects.HeavyRain };\nweatherOptions[Climate.Hot][Humidity.Verdant][descriptionCells.winter4] = { fx: joinEffects(availableEffects.ModerateRain, availableEffects.ModerateWind) };\nweatherOptions[Climate.Hot][Humidity.Verdant][descriptionCells.winter5] = { fx: availableEffects.HeavyRain };\nweatherOptions[Climate.Hot][Humidity.Verdant][descriptionCells.winter6] = { fx: joinEffects(availableEffects.Overcast, availableEffects.ModerateWind) };\nweatherOptions[Climate.Hot][Humidity.Verdant][descriptionCells.winter7] = { fx: availableEffects.HeavyRain };\nweatherOptions[Climate.Hot][Humidity.Verdant][descriptionCells.winter8] = { fx: joinEffects(availableEffects.Overcast, availableEffects.LightClouds) };\nweatherOptions[Climate.Hot][Humidity.Verdant][descriptionCells.winter9] = { fx: joinEffects(availableEffects.ModerateRain, availableEffects.ModerateWind) };\n\nexport { \n  Direction,\n  getDirection,\n  initializeLocalizedText,\n  descriptionOrder,\n  weatherDescriptions,\n  weatherTemperatures,\n  weatherOptions,\n  startingCells,\n  nextCell,\n  manualSelections,\n  manualOptions,\n}","/**\n * The name of this module\n * @internal\n */\nexport const ModuleName = \"foundryvtt-simple-calendar\";\n\n/**\n * The name of the module specific socket\n * @internal\n */\nexport const ModuleSocketName = `module.${ModuleName}`;\n\n/**\n * The name of the settings that are saved in the world settings database\n * @internal\n */\nexport enum SettingNames {\n    Theme = \"theme\",\n    OpenOnLoad = \"open-on-load\",\n    OpenCompact = \"open-compact\",\n    RememberPosition = \"remember-position\",\n    RememberCompactPosition = \"remember-compact-position\",\n    AppPosition = \"app-position\",\n    AppCompactPosition = \"app-compact-position\",\n    NoteReminderNotification = \"note-reminder-notification\",\n    NoteListOpenDirection = \"note-list-open-direction\",\n    AlwaysShowNoteList = \"always-show-note-list\",\n    PersistentOpen = \"persistent-open\",\n\n    CompactViewScale = \"compact-view-scale\",\n    CalendarMainApp = \"calendar-main-app\",\n    CalendarConfigurationMenu = \"calendar-configuration-menu\",\n    CalendarConfiguration = \"calendar-configuration\",\n    ActiveCalendar = \"active-calendar\",\n    GlobalConfiguration = \"global-configuration\",\n\n    YearConfiguration = \"year-config\",\n    WeekdayConfiguration = \"weekday-config\",\n    MonthConfiguration = \"month-config\",\n    CurrentDate = \"current-date\",\n    Notes = \"notes\",\n    AllowPlayersToAddNotes = \"allow-players-add-notes\",\n    DefaultNoteVisibility = \"default-note-visibility\",\n    LeapYearRule = \"leap-year-rule\",\n    TimeConfiguration = \"time-configuration\",\n    GeneralConfiguration = \"general-configuration\",\n    SeasonConfiguration = \"season-configuration\",\n    MoonConfiguration = \"moon-configuration\",\n    NoteCategories = \"note-categories\"\n}\n\n/**\n * The different Themes that are available for Simple Calendar\n * @internal\n */\nexport const Themes: SimpleCalendar.Theme[] = [\n    {\n        key: \"dark\",\n        name: \"FSC.Configuration.Theme.Dark\",\n        system: false,\n        module: false\n    },\n    {\n        key: \"light\",\n        name: \"FSC.Configuration.Theme.Light\",\n        system: false,\n        module: false\n    },\n    {\n        key: \"classic\",\n        name: \"FSC.Configuration.Theme.Classic\",\n        system: false,\n        module: false\n    },\n    {\n        key: \"wfrp4e\",\n        name: \"FSC.Configuration.Theme.WFRP4E\",\n        system: true,\n        module: false,\n        images: {\n            \"--wfrp4e-window-app-header-blank\": \"/systems/wfrp4e/ui/frames/window-app-header-blank.webp\",\n            \"--wfrp4e-window-app-background-bookshelf\": \"/systems/wfrp4e/ui/frames/window-app-background-bookshelf.webp\",\n            \"--wfrp4e-window-app-dialog-content\": \"/systems/wfrp4e/ui/window-app-dialog-content.webp\",\n            \"--wfrp4e-parchment-texture\": \"/systems/wfrp4e/ui/frames/parchment-texture.webp\",\n            \"--wfrp4e-chat-message-border-private\": \"/systems/wfrp4e/ui/frames/chat-message-border-private.webp\",\n            \"--wfrp4e-footer-button\": \"/systems/wfrp4e/ui/footer-button.webp\",\n            \"--wfrp4e-button-close\": \"/systems/wfrp4e/ui/buttons/button-close.webp\",\n            \"--wfrp4e-button-configure-sheet\": \"/systems/wfrp4e/ui/buttons/button-configure-sheet.webp\",\n            \"--wfrp4e-button-show-players\": \"/systems/wfrp4e/ui/buttons/button-show-players.webp\",\n            \"--wfrp4e-players-border\": \"/systems/wfrp4e/ui/players-border.webp\",\n            \"--wfrp4e-button-blank\": \"/systems/wfrp4e/ui/buttons/button-blank.webp\",\n            \"--wfrp4e-sidebar_button-background_grey\": \"/systems/wfrp4e/ui/sidebar_button-background_grey.webp\",\n            \"--wfrp4e-sidebar_button-background_red\": \"/systems/wfrp4e/ui/sidebar_button-background_red.webp\",\n            \"--wfrp4e-window-app-journal-sheet-content\": \"/systems/wfrp4e/ui/frames/window-app-journal-sheet-content.webp\"\n        }\n    },\n    {\n        key: \"forbidden-lands\",\n        name: \"FSC.Predefined.ForbiddenLands\",\n        system: true,\n        module: false,\n        images: {\n            \"--forbidden-lands-box-border-large\": \"/systems/forbidden-lands/assets/journal-art/box-border-large.webp\"\n        }\n    },\n    {\n        key: \"dsa5\",\n        name: \"FSC.Predefined.DSA-TDE5e\",\n        system: true,\n        module: false,\n        images: {\n            \"--dsa5-blackhat\": \"/systems/dsa5/icons/backgrounds/blackhat.webp\",\n            \"--dsa5-blackbook\": \"/systems/dsa5/icons/backgrounds/blackbook.webp\",\n            \"--dsa5-journalentry\": \"/systems/dsa5/icons/backgrounds/journalentry.webp\",\n            \"--dsa5-actor\": \"/systems/dsa5/icons/backgrounds/actor.webp\"\n        }\n    },\n    {\n        key: \"sfrpg\",\n        name: \"FSC.Predefined.Starfinder\",\n        system: true,\n        module: false,\n        images: {\n            \"--sfrpg-hexellence\": \"/systems/sfrpg/images/hexellence.webp\"\n        }\n    },\n    {\n        key: \"wrath-and-glory\",\n        name: \"FSC.Predefined.Warhammer40kWG\",\n        system: true,\n        module: false,\n        images: {\n            \"--wrath-and-glory-header\": \"/systems/wrath-and-glory/asset/image/header.webp\",\n            \"--wrath-and-glory-journal-border\": \"/systems/wrath-and-glory/asset/image/journal-border.webp\",\n            \"--wrath-and-glory-background\": \"/systems/wrath-and-glory/asset/image/background.webp\",\n            \"--wrath-and-glory-border\": \"/systems/wrath-and-glory/asset/image/border.webp\",\n            \"--wrath-and-glory-input\": \"/systems/wrath-and-glory/asset/image/input.webp\",\n            \"--wrath-and-glory-button\": \"/systems/wrath-and-glory/asset/image/button.webp\"\n        }\n    },\n    {\n        key: \"eclipsephase\",\n        name: \"FSC.Predefined.EclipsePhase\",\n        system: true,\n        module: false,\n        images: {\n            \"--eclipsephase-background2\": \"/systems/eclipsephase/resources/img/background2.jpg\"\n        }\n    }\n    //key: \"ernies-modern-layout\", name: \"Ernie's Modern UI\", system: false, module: true}\n];\n\nexport enum CombatPauseRules {\n    Active = \"active\",\n    Current = \"current\"\n}\n\n/**\n * The different types of migrations that can happen\n * @internal\n */\nexport enum MigrationTypes {\n    none = \"none\",\n    v1To2 = \"v1-v2\"\n}\n\n/**\n * This is an enum that contains a list of all available predefined calendars within Simple Calendar.\n * @enum\n * @remarks\n * **Important**: This is a list of keys used internally to determine which Predefined calendar should be used it does not return an object containing the configuration for a predefined calendar.\n *\n */\nexport enum PredefinedCalendars {\n    /** The standard real life calendar */\n    Gregorian = \"gregorian\",\n    /** This is the calendar from the Dark Sun setting for Dungeons and Dragons */\n    DarkSun = \"darksun\",\n    /** This is the calendar from the Eberron setting for Dungeons and Dragons */\n    Eberron = \"eberron\",\n    /** This is the calendar from the Exandria setting for Dungeons and Dragons */\n    Exandrian = \"exandrian\",\n    /** This is the calendar for Forbidden Lands */\n    ForbiddenLands = \"forbidden-lands\",\n    /** This is the calendar used across Faerun in the Forgotten Realms */\n    Harptos = \"harptos\",\n    /** This is the calendar from the Pathfinder 1E game */\n    GolarianPF1E = \"golarianpf1e\",\n    /** This is the calendar from the Pathfinder 2E game */\n    GolarianPF2E = \"golarianpf2e\",\n    /** This is the calendar from the Greyhawk setting for Dungeons and Dragons */\n    Greyhawk = \"greyhawk\",\n    /** This is the Imperial calendar used for the Traveller game system */\n    TravellerImperialCalendar = \"traveller-ic\",\n    /** This is the calendar used by the Imperium in the Fantasy Warhammer game */\n    WarhammerImperialCalendar = \"warhammer\"\n}\n\n/**\n * The different intervals a note can repeat\n */\nexport enum NoteRepeat {\n    /** The note will never repeat */\n    Never,\n    /** The note will repeat every week */\n    Weekly,\n    /** The note will repeat every month on the same days */\n    Monthly,\n    /** The note will repeat every year on the same days */\n    Yearly\n}\n\nexport const NotesDirectoryName = `_simple_calendar_notes_directory`;\n\n/**\n * The different ways in which a date can match a date range\n * @internal\n */\nexport enum DateRangeMatch {\n    None = \"none\",\n    Start = \"start\",\n    End = \"end\",\n    Middle = \"mid\",\n    Exact = \"exact\"\n}\n\n/**\n * The different rules used to determine when/if leap years happen\n */\nexport enum LeapYearRules {\n    /** The calendar contains no leap years */\n    None = \"none\",\n    /** The calendars leap year rules are like the standard calendar (Every year that is exactly divisible by four is a leap year, except for years that are exactly divisible by 100, but these years are leap years if they are exactly divisible by 400) */\n    Gregorian = \"gregorian\",\n    /** Allows you to specify `n` interval in years for when a leap year happens */\n    Custom = \"custom\"\n}\n\n/**\n * The different rules used for determining how to name years\n */\nexport enum YearNamingRules {\n    /** Names from the list of year names are used in order. If there are not enough names in the list for the current year then the last name in the list is used. */\n    Default = \"default\",\n    /** Names from the list of year names are used in order. If there are not enough names in the list for the current year then the list is repeated. */\n    Repeat = \"repeat\",\n    /**\n     * Names from the list of year names are randomly assigned to years\n     * @remarks\n     * Simple Calendar does attempt to keep the same name for years, so switching between years should not result in a different name every time.\n     * If a name is added or removed from the list of year names, the year names are randomly assigned again to years. This can result in a different name being used for the current year.\n     */\n    Random = \"random\"\n}\n\n/**\n * The different types of information we send over our socket\n * @internal\n */\nexport enum SocketTypes {\n    mainAppUpdate = \"main-app-update\",\n    primary = \"primary\",\n    clock = \"clock\",\n    checkClockRunning = \"check-clock-running\",\n    journal = \"journal\",\n    dateTimeChange = \"date-time-change\",\n    noteUpdate = \"note-update\",\n    emitHook = \"emit-hook\",\n    setActiveCalendar = \"set-calendar\",\n    renderChatLog = \"render-chat-log\"\n}\n\n/**\n * The types that can be associated with a date time change socket request\n * @internal\n */\nexport enum DateTimeChangeSocketTypes {\n    setDate = \"set-date\",\n    changeDateTime = \"change-date-time\",\n    advanceTimeToPreset = \"advance-time-to-preset\"\n}\n\n/**\n * The different game world integrations offered\n */\nexport enum GameWorldTimeIntegrations {\n    /**\n     * Simple Calendar does not interact with the game world time at all. This setting is ideal if you want to keep Simple Calendar isolated from other modules.\n     *\n     * **Update Game World Time**: Does not update the game world time.\n     *\n     * **Whe Game World Time Is Updated**: Simple Calendar is not updated when the game world time is updated by something else.\n     */\n    None = \"none\",\n    /**\n     * Treats Simple Calendar as the authority source for the game world time. This setting is ideal when you want Simple Calendar to be in control of the games time and don't want other modules updating Simple Calendar.\n     *\n     * **Update Game World Time**: Updates the game world time to match what is in Simple Calendar.\n     *\n     * **Whe Game World Time Is Updated**: Combat round changes will update Simple Calendars time. Simple Calendar will ignore updates from all others modules.\n     */\n    Self = \"self\",\n    /**\n     * This will instruct Simple Calendar to just display the Time in the game world time. All date changing controls are disabled and the changing of time relies 100% on another module. This setting is ideal if you are just want to use Simple Calenar to display the date in calendar form and/or take advantage of the notes.\n     *\n     * **Update Game World Time**: Does not update the game world time.\n     *\n     * **Whe Game World Time Is Updated**: Updates its display everytime the game world time is changed, following what the other modules say the time is.\n     */\n    ThirdParty = \"third-party\",\n    /**\n     * This option is a blend of the self and third party options. Simple calendar can change the game world time and changes made by other modules are reflected in Simple Calendar. This setting is ideal if you want to use Simple Calendar and another module to change the game time.\n     *\n     * **Update Game World Time**: Will update the game world time.\n     *\n     * **Whe Game World Time Is Updated**: Will update its own time based on changes to the game world time, following what other modules say the time is.\n     */\n    Mixed = \"mixed\"\n}\n\n/**\n * All SVG icons that are available to use with the sc-icon handlebar helper\n */\nexport enum Icons {\n    /** An empty Icon */\n    None = \"none\",\n    /** The Simple Calendar Logo */\n    Logo = \"logo\",\n    /** The clock icon used in the animated clock */\n    Clock = \"clock\",\n    /** The icon that represents midday */\n    Midday = \"midday\",\n    /** The icon that represents midnight */\n    Midnight = \"midnight\",\n    /** The icon that represents sunrise */\n    Sunrise = \"sunrise\",\n    /** The icon that represents sunset */\n    Sunset = \"sunset\",\n    /** The icon that represents a new moon */\n    NewMoon = \"new\",\n    /** The icon that represents a waxing crescent moon */\n    WaxingCrescent = \"waxing-crescent\",\n    /** The icon that represents first quarter moon */\n    FirstQuarter = \"first-quarter\",\n    /** The icon that represents waxing gibbous moon */\n    WaxingGibbous = \"waxing-gibbous\",\n    /** The icon that represents full moon */\n    Full = \"full\",\n    /** The icon that represents waning gibbous moon */\n    WaningGibbous = \"waning-gibbous\",\n    /** The icon that represents last quarter moon */\n    LastQuarter = \"last-quarter\",\n    /** The icon that represents waning crescent moon */\n    WaningCrescent = \"waning-crescent\",\n    /** The icon that represents the season spring */\n    Spring = \"spring\",\n    /** The icon that represents the season summer */\n    Summer = \"summer\",\n    /** The icon that represents the season fall */\n    Fall = \"fall\",\n    /** The icon that represents the season winter */\n    Winter = \"winter\"\n}\n\n/**\n * These options are used to tell Simple Calendar when to reset the year portion of the reference new moon.\n * @remarks\n * The reference new moon is any date a new moon occurred on in the calendar. This date is then used as a starting point to calculate the different phases of the moon. Any phase in any year can be calculated from this value, and it does not need to be updated after its initial setting.\n */\nexport enum MoonYearResetOptions {\n    /** Do not reset the year of the reference new moon */\n    None = \"none\",\n    /** Reset the year of the reference new moon every year that is a leap year */\n    LeapYear = \"leap-year\",\n    /** Reset the year of the reference new moon by every x number of years */\n    XYears = \"x-years\"\n}\n\n/**\n * These are times of the day that do not always have the same time but rather need to be calculated. This value can be passed into other functions to specify which time of day you want calculated.\n */\nexport enum PresetTimeOfDay {\n    /** The time of day when midnight occurs  */\n    Midnight = \"midnight\",\n    /** The time of day when the sun rises. This time is affected by the sunrise time of a season and the current date */\n    Sunrise = \"sunrise\",\n    /** The time of day when midday (noon) occurs  */\n    Midday = \"midday\",\n    /** The time of day when the sun sets. This time is affected by the sunset time of a season and the current date */\n    Sunset = \"sunset\"\n}\n\n/**\n * The different hooks that other systems and modules can listen too\n */\nexport enum SimpleCalendarHooks {\n    DateTimeChange = \"simple-calendar-date-time-change\",\n    ClockStartStop = \"simple-calendar-clock-start-stop\",\n    PrimaryGM = \"simple-calendar-primary-gm\",\n    Ready = \"simple-calendar-ready\",\n    Init = \"simple-calendar-init\"\n}\n\n/**\n * The statuses that a timekeeper can have\n * @internal\n */\nexport enum TimeKeeperStatus {\n    Started = \"started\",\n    Stopped = \"stopped\",\n    Paused = \"paused\"\n}\n\n/**\n * The different options for how to display the compact view date/time controls\n */\nexport enum CompactViewDateTimeControlDisplay {\n    Full = \"full\",\n    QuickIncrement = \"quick-increment\"\n}\n\n/**\n * Which view the calendar should render\n * @internal\n */\nexport enum CalendarViews {\n    Month = \"Month\",\n    Year = \"year\"\n}\n\n/**\n * The associated click events for a calendar view\n * @internal\n */\nexport enum CalendarClickEvents {\n    calendar = \"calendar\",\n    previous = \"previous\",\n    next = \"next\",\n    day = \"day\",\n    dayContext = \"datContext\",\n    year = \"year\"\n}\n\n/**\n * The associated click events for a time selector\n * @internal\n */\nexport enum TimeSelectorEvents {\n    wheel = \"wheel\",\n    change = \"change\",\n    dropdownClick = \"dropdown-click\"\n}\n\n/**\n * The types of date selectors in the configuration application\n * @internal\n */\nexport enum ConfigurationDateSelectors {\n    seasonStartingDate = \"ssd\",\n    seasonSunriseSunsetTime = \"ssst\",\n    moonFirstNewMoonDate = \"mfnmd\"\n}\n\n/**\n * These are the options for how a {@link DateSelector | DateSelector's} calendar will open when the input is clicked.\n * @internal\n */\nexport enum DateSelectorPositions {\n    /** The {@link DateSelector | DateSelector} will attempt to choose the best direction to open the calendar based on the input's location on the screen */\n    Auto = \"auto\",\n    /** Will open the calendar from the left side of and below the input */\n    LeftDown = \"left-down\",\n    /** Will open the calendar from the left side of and above the input */\n    LeftUp = \"left-up\",\n    /** Will open the calendar from the right side of and below the input */\n    RightDown = \"right-down\",\n    /** Will open the calendar from the right side of and above the input */\n    RightUp = \"right-up\"\n}\n\n/**\n * The time units that the calendar can be adjusted by\n * @internal\n */\nexport enum DateTimeUnits {\n    Day = \"day\",\n    Month = \"month\",\n    Year = \"year\",\n    Hour = \"hour\",\n    Minute = \"minute\",\n    Round = \"round\",\n    Second = \"seconds\"\n}\n\n/**\n * When a note reminder is triggered how to let the user know about the reminder.\n * @internal\n */\nexport enum NoteReminderNotificationType {\n    /** Have the reminder whispered to the player in chat with details and link to the note */\n    whisper = \"whisper\",\n    /** Display the note's sheet */\n    render = \"render\"\n}\n\nexport enum TriggerConditions {\n    Date,\n    Time,\n    DateTime,\n    Year,\n    Month,\n    Day\n}\n\nexport enum TriggerParameters {\n    Equal,\n    Before,\n    After,\n    Nth\n}\n","import { Season, Climate, Humidity } from '@/weather/climateData';\nimport { weatherDescriptions } from '@/weather/weatherMap';\nimport { Icons } from 'foundryvtt-simple-calendar/src/constants';\n  \n// describes the weather for a day\n// we can use humidity, climate, and gridCell to determine the text description\n// season is only used so that if we want to pick the next day's weather we can tell if we've changed seasons\nexport class WeatherData {\n  public date: SimpleCalendar.DateData | null;\n  public season: Season | null;        // which season we were in (i.e. actually using for weather)\n  public humidity: Humidity | null;    // the humidity selection\n  public climate: Climate | null;      // the climate selection\n  public hexFlowerCell: number | null;      // number of the cell in the hex flower\n  public temperature: number | null;   // the temperature (with random variation) in F\n  public isManual: boolean | false;    // was this set manually... if yes, the next generation will reset to a starting point\n\n  constructor(date: SimpleCalendar.DateData | null, season: Season | null, humidity: Humidity | null, climate: Climate | null, hexFlowerCell: number | null, temperature: number | null) {\n    this.date = date;\n    this.season = season;\n    this.humidity = humidity;\n    this.climate = climate;\n    this.hexFlowerCell = hexFlowerCell;\n    this.temperature = temperature;\n    this.isManual = false;\n  }\n\n  // getters\n  get simpleCalendarSeason(): Season | null {\n    const icon = this.date?.currentSeason?.icon || '';\n\n    const seasons = {\n      [Icons.Fall]: Season.Fall,\n      [Icons.Winter]: Season.Winter,\n      [Icons.Spring]: Season.Spring,\n      [Icons.Summer]: Season.Summer,\n    };\n\n    return seasons[icon] !== undefined ? seasons[icon] : null;\n  }\n\n  public getTemperature = (useCelsius: boolean): string => {\n    if (this.temperature===null)\n      return '';\n\n    if (useCelsius)\n      return Math.floor((this.temperature-32)*5/9) + '°C';\n    else \n      return this.temperature + '°F';\n  };\n\n  public getDescription = (): string => {  \n    if (this.climate===null || this.humidity===null || this.hexFlowerCell===null ||\n        this.climate===undefined || this.humidity===undefined  || this.hexFlowerCell===undefined)\n      return '';\n\n    return weatherDescriptions[this.climate][this.humidity][this.hexFlowerCell];\n  };\n}\n\n","import { Climate, Humidity } from '@/weather/climateData';\nimport { weatherDescriptions } from '@/weather/weatherMap';\nimport { moduleSettings, SettingKeys } from '@/settings/ModuleSettings';\nimport moduleJson from '@module';\n\nexport class CustomMessageSettingsApplication extends FormApplication {\n  private _flattenedDescriptions = [] as {\n    climate: string,\n    climateId: number,\n    humidity: string,\n    humidityId: number,\n    description: string,\n    descriptionId: number,\n    currentText: string,\n  }[];\n\n  constructor(object, options) {\n    super(object, options);\n\n    const climates = Object.values(Climate).slice(0, Object.values(Climate).length/2);\n    const humidities = Object.values(Humidity).slice(0, Object.values(Humidity).length/2);\n\n    // flatten the weatherDescriptions into an object\n    for (let c=0; c<weatherDescriptions.length; c++) {\n      for (let h=0; h<weatherDescriptions[c].length; h++) {\n        for (let d=0; d<weatherDescriptions[c][h].length; d++) {\n          this._flattenedDescriptions.push({\n            climate: climates[c] as string,\n            climateId: c,\n            humidity: humidities[h] as string,\n            humidityId: h,\n            description: weatherDescriptions[c][h][d],\n            descriptionId: d,\n            currentText: '',\n          });\n        } \n      }\n    }\n  }\n\n  // window options; called by parent class\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    \n    options.template = `modules/${moduleJson.id}/templates/custom-chat-settings.hbs`;\n    // options.popOut = false;  // self-contained window without the extra wrapper\n    // options.resizable = false;  // window is fixed size\n\n    return options;\n  }\n\n  public async getData(): Promise<any> {\n    // load any current values\n    const currentText = moduleSettings.get(SettingKeys.customChatMessages);\n\n    for (let i=0; i<this._flattenedDescriptions.length; i++) {\n      this._flattenedDescriptions[i].currentText = currentText[this._flattenedDescriptions[i].climateId][this._flattenedDescriptions[i].humidityId][this._flattenedDescriptions[i].descriptionId];\n    }\n\n    return {\n      climates: Object.values(Climate).slice(0, Object.values(Climate).length/2),\n      climateIndexes: [0,1,2],\n      humidities: Object.values(Humidity).slice(0, Object.values(Humidity).length/2),\n      humidityIndexes: [0,1,2],\n      weatherDescriptions: this._flattenedDescriptions,\n    };\n  }\n\n  public async _updateObject(_event, formData: Record<string, string>): Promise<void> {\n    // bundle up into settings object\n    const chatMessages: string[][][] = new Array(Object.keys(Climate).length/2)\n      .fill('')\n      .map(() => new Array(Object.keys(Humidity).length/2)\n        .fill('')\n        .map(() => new Array(37).fill('')));\n\n    for (let i=0; i<this._flattenedDescriptions.length; i++) {\n      chatMessages[this._flattenedDescriptions[i].climateId][this._flattenedDescriptions[i].humidityId][this._flattenedDescriptions[i].descriptionId] = formData['v-'+i];\n    }\n\n    await moduleSettings.set(SettingKeys.customChatMessages, chatMessages);\n  }\n}","import moduleJson from '@module';\n\nimport { WindowPosition } from '@/window/WindowPosition';\nimport { getGame, isClientGM, localize } from '@/utils/game';\nimport { WeatherData } from '@/weather/WeatherData';\nimport { DisplayOptions } from '@/types/DisplayOptions';\nimport { CustomMessageSettingsApplication } from '@/applications/CustomMessageSettingsApplication';\nimport { Climate, Humidity } from '@/weather/climateData';\n\nexport enum SettingKeys {\n  // displayed in settings\n  dialogDisplay = 'dialogDisplay',   // can non-GM clients see the dialog box\n  outputWeatherToChat = 'outputWeatherChat',   // when new weather is generated, should it be put in the chat box\n  publicChat = 'publicChat',   // should everyone see the chat (true) or just the GM (false)\n  useCelsius = 'useCelsius',   // should we use Celsius\n  useFX = 'useFX',  // the name of the package used for FX (or 'off' if none)\n  attachToCalendar = 'attachToCalendar',  // should we attach to simple calendar instead of standalone window\n  storeInSCNotes = 'storeInSCNotes',   // should we store weather in simple calendar notes \n\n  // internal only\n  fxActive = 'fxActive',   // are the fx currently showing\n  activeFXMParticleEffects = 'activeFXMParticleEffects',     // the list of active fx particle effects; need to save because FXMaster saves them\n  activeFXMFilterEffects = 'activeFXMFilterEffects',     // the list of active fx filter effects; need to save because FXMaster saves them\n  windowPosition = 'windowPosition',   // the current position of the window\n  displayOptions = 'displayOptions',  // how is the application window configured\n  lastWeatherData = 'lastWeatherData',  // the previously generated weather data\n  season = 'season',   // the current season\n  seasonSync = 'seasonSync',       // should we sync with simple calendar\n  biome = 'biome',  // the current biome\n  climate = 'climate',   // the current climate\n  humidity = 'humidity',   // the current humidity\n  manualPause = 'manualPause',   // is the manual pause currently active (will prevent any auto or regen updates)\n  customChatMessages = 'customChatMessages',  // [climate][humidity][index]: message\n}\n\ntype SettingType<K extends SettingKeys> =\n    K extends SettingKeys.dialogDisplay ? boolean :\n    K extends SettingKeys.publicChat ? boolean :\n    K extends SettingKeys.outputWeatherToChat ? boolean :\n    K extends SettingKeys.useCelsius ? boolean :\n    K extends SettingKeys.useFX ? string :\n    K extends SettingKeys.attachToCalendar ? boolean :\n    K extends SettingKeys.storeInSCNotes ? boolean :\n    K extends SettingKeys.displayOptions ? DisplayOptions :\n    K extends SettingKeys.lastWeatherData ? (WeatherData | null) :  \n    K extends SettingKeys.season ? number :\n    K extends SettingKeys.seasonSync ? boolean :\n    K extends SettingKeys.fxActive ? boolean :\n    K extends SettingKeys.activeFXMParticleEffects ? string[] :\n    K extends SettingKeys.activeFXMFilterEffects ? string[] :\n    K extends SettingKeys.windowPosition ? (WindowPosition | null) :\n    K extends SettingKeys.biome ? string :\n    K extends SettingKeys.climate ? number :\n    K extends SettingKeys.humidity ? number :\n    K extends SettingKeys.manualPause ? boolean :\n    K extends SettingKeys.customChatMessages ? string[][][] :\n    never;  \n\n// the solo instance\nexport let moduleSettings: ModuleSettings;\n\n// set the main application; should only be called once\nexport function updateModuleSettings(settings: ModuleSettings): void {\n  moduleSettings = settings;\n}\n\nexport class ModuleSettings {\n  constructor() {\n    this.registerSettings();\n  }\n\n  public isSettingValueEmpty(setting: any): boolean {\n    return Object.keys(setting).length === 0 || setting === null || setting === undefined;\n  }\n\n  public get<T extends SettingKeys>(setting: T): SettingType<T> {\n    if (setting === SettingKeys.lastWeatherData) {\n      const loaded = getGame().settings.get(moduleJson.id, setting) as SettingType<T> as WeatherData;  // not really WeatherData - need to attach functions\n\n      if (loaded) \n        return new WeatherData(loaded.date, loaded.season, loaded.humidity, loaded.climate, loaded.hexFlowerCell, loaded.temperature) as SettingType<T>;\n      else \n        return null as SettingType<T>;\n    } else\n      return getGame().settings.get(moduleJson.id, setting) as SettingType<T>;\n  }\n\n  public async set<T extends SettingKeys>(setting: T, value: SettingType<T>): Promise<void> {\n    // confirm the user can set it\n    if (!isClientGM()) {\n      // if it's any of the global param lists, don't do the set\n      if (this.menuParams.find(({settingID}): boolean => (settingID === setting)) || \n        this.displayParams.find(({settingID}): boolean => (settingID === setting)) || \n        this.internalParams.find(({settingID}): boolean => (settingID === setting)))\n      return;\n    }\n\n    await getGame().settings.set(moduleJson.id, setting, value);\n  }\n\n  private register(settingKey: string, settingConfig: ClientSettings.PartialSettingConfig) {\n    getGame().settings.register(moduleJson.id, settingKey, settingConfig);\n  }\n\n  private registerMenu(settingKey: string, settingConfig: ClientSettings.PartialSettingSubmenuConfig) {\n    getGame().settings.registerMenu(moduleJson.id, settingKey, settingConfig);\n  }\n\n  // these are global menus (shown at top)\n  private menuParams: (ClientSettings.PartialSettingSubmenuConfig & { settingID: string })[] = [\n    // couldn't get this to work because it creates a new instance but I can't figure out how to attach it to the weatherInstance variable in main.js\n    // {\n    //     settingID: SettingKeys.showApplication,\n    //     name: '',\n    //     label: 'Open Simple Weather',\n    //     hint: 'Reopen the main window if closed',\n    //     icon: \"fa fa-calendar\",\n    //     type: WeatherApplication,\n    // },\n    {\n      settingID: 'mySettingsMenu',\n      name: 'Custom weather messages',\n      label: 'Manage custom weather messages',\n      hint: \"Set system-specific messages (useful for penalties associated with extreme weather)\",\n      icon: \"fas fa-bars\",               // A Font Awesome icon used in the submenu button\n      type: CustomMessageSettingsApplication,\n    }\n  ];\n\n  // these are local menus (shown at top)\n  private localMenuParams: (ClientSettings.PartialSettingSubmenuConfig & { settingID: string })[] = [\n  ];\n\n  // these are globals shown in the options\n  // name and hint should be the id of a localization string\n  private displayParams: (ClientSettings.PartialSettingConfig & { settingID: string })[] = [\n    {\n      settingID: SettingKeys.outputWeatherToChat,\n      name: 'sweath.settings.outputweatherToChat',\n      hint: 'sweath.settings.outputweatherToChatHelp',\n      default: true,\n      type: Boolean,\n    },\n    {\n      settingID: SettingKeys.publicChat,\n      name: 'sweath.settings.publicChat',\n      hint: 'sweath.settings.publicChatHelp',\n      default: true,\n      type: Boolean,\n    },\n    {\n      settingID: SettingKeys.dialogDisplay, \n      name: 'sweath.settings.dialogDisplay',\n      hint: 'sweath.settings.dialogDisplayHelp',\n      default: true,\n      type: Boolean,\n    },\n    {\n      settingID: SettingKeys.useFX, \n      name: 'sweath.settings.useFX',\n      hint: 'sweath.settings.useFXHelp',\n      requiresReload: true,   \n      type: String,\n      choices: {  // can't find the right typescript type, but this does work\n        'off': 'sweath.settings.options.useFX.choices.off',\n        'core': 'sweath.settings.options.useFX.choices.core',\n        'fxmaster': 'sweath.settings.options.useFX.choices.fxmaster',\n      },\n      default: 'off',\n    },\n    {\n      settingID: SettingKeys.attachToCalendar, \n      name: 'sweath.settings.attachToCalendar',\n      hint: 'sweath.settings.attachToCalendarHelp',\n      default: false,\n      requiresReload: true,    // can't find the right typescript type, but this does work\n      type: Boolean,\n    },\n    {\n      settingID: SettingKeys.storeInSCNotes, \n      name: 'sweath.settings.storeInSCNotes',\n      hint: 'sweath.settings.storeInSCNotesHelp',\n      default: false,\n      requiresReload: false,    // can't find the right typescript type, but this does work\n      type: Boolean,\n    },\n  ];\n\n  // these are client-specific and displayed in settings\n  private localDisplayParams: (ClientSettings.PartialSettingConfig & { settingID: string })[] = [\n    {\n      settingID: SettingKeys.useCelsius, \n      name: 'sweath.settings.useCelsius',\n      hint: 'sweath.settings.useCelsiusHelp',\n      default: false,\n      type: Boolean,\n    },\n  ];\n\n  // these are globals only used internally\n  private internalParams: (ClientSettings.PartialSettingConfig & { settingID: string })[] = [\n    {\n      settingID: SettingKeys.activeFXMParticleEffects,\n      name: 'Active FX particle effects',\n      type: Array,\n      default: []\n    },\n    {\n      settingID: SettingKeys.activeFXMFilterEffects,\n      name: 'Active FX filter effects',\n      type: Array,\n      default: []\n    },\n    {\n      settingID: SettingKeys.lastWeatherData,\n      name: 'Last weather data',\n      type: Object,\n      default: null\n    },\n    {\n      settingID: SettingKeys.season,\n      name: 'Last season',\n      type: Number,\n      default: 0\n    },\n    {\n      settingID: SettingKeys.seasonSync,\n      name: 'Season sync',\n      type: Boolean,\n      default: false\n    },\n    {\n      settingID: SettingKeys.biome,\n      name: 'Last biome',\n      type: String,\n      default: ''\n    },\n    {\n      settingID: SettingKeys.climate,\n      name: 'Last climate',\n      type: Number,\n      default: 0\n    },\n    {\n      settingID: SettingKeys.humidity,\n      name: 'Last humidity',\n      type: Number,\n      default: 0\n    },\n    {\n      settingID: SettingKeys.manualPause,\n      name: 'Manual pause',\n      type: Boolean,\n      default: false\n    },\n    {\n      settingID: SettingKeys.customChatMessages,\n      name: 'Custom chat messages',\n      type: Array,\n      default: new Array(Object.keys(Climate).length/2)\n      .fill('')\n      .map(() => new Array(Object.keys(Humidity).length/2)\n        .fill('')\n        .map(() => new Array(37).fill('')))\n    },\n  \n  ];\n  \n  // these are client-specfic only used internally\n  private localInternalParams: (ClientSettings.PartialSettingConfig & { settingID: string })[] = [\n    {\n      settingID: SettingKeys.fxActive,\n      name: 'FX Active',\n      type: Object,\n      default: true,\n    },\n    {\n      settingID: SettingKeys.windowPosition,\n      name: 'Window Position',\n      type: Object,\n      default: null\n    },\n    {\n      settingID: SettingKeys.displayOptions,\n      name: 'Display Options',\n      type: Object,\n      default: {\n        dateBox: true,\n        weatherBox: false,\n        seasonBar: false,\n        biomeBar: false,\n      }\n    },\n  ];\n\n  private registerSettings(): void {\n    for (let i=0; i<this.menuParams.length; i++) {\n      const { settingID, ...settings} = this.menuParams[i];\n      this.registerMenu(settingID, {\n        ...settings,\n        name: settings.name ? localize(settings.name) : '',\n        hint: settings.hint ? localize(settings.hint) : '',\n        restricted: false,\n      });\n    }\n\n    for (let i=0; i<this.localMenuParams.length; i++) {\n      const { settingID, ...settings} = this.localMenuParams[i];\n      this.registerMenu(settingID, {\n        ...settings,\n        name: settings.name ? localize(settings.name) : '',\n        hint: settings.hint ? localize(settings.hint) : '',\n        restricted: true,\n      });\n    }\n\n    for (let i=0; i<this.displayParams.length; i++) {\n      const { settingID, ...settings} = this.displayParams[i];\n      this.register(settingID, {\n        ...settings,\n        name: settings.name ? localize(settings.name) : '',\n        hint: settings.hint ? localize(settings.hint) : '',\n        scope: 'world',\n        config: true,\n      });\n    }\n\n    for (let i=0; i<this.localDisplayParams.length; i++) {\n      const { settingID, ...settings} = this.localDisplayParams[i];\n      this.register(settingID, {\n        ...settings,\n        name: settings.name ? localize(settings.name) : '',\n        hint: settings.hint ? localize(settings.hint) : '',\n        scope: 'client',\n        config: true,\n      });\n    }\n\n    for (let i=0; i<this.internalParams.length; i++) {\n      const { settingID, ...settings} = this.internalParams[i];\n      this.register(settingID, {\n        ...settings,\n        scope: 'world',\n        config: false,\n      });\n    }\n\n    for (let i=0; i<this.localInternalParams.length; i++) {\n      const { settingID, ...settings} = this.localInternalParams[i];\n      this.register(settingID, {\n        ...settings,\n        scope: 'client',\n        config: false,\n      });\n    }\n  }\n}\n","export abstract class VersionUtils {\n  public static sortSemver(versionList: Array<string>): Array<string> {\n    return versionList.sort(this.compareSemver);\n  }\n\n  public static isMoreRecent(current, check): boolean {\n    const sortedVersions = this.sortSemver([current, check]);\n    return sortedVersions.indexOf(current) === 0;\n  }\n\n  private static compareSemver(a, b) {\n    let i, diff;\n    const regExStrip0 = /^[vV]|(\\.0+)+$/;\n    const segmentsA = a.replace(regExStrip0, '').split('.');\n    const segmentsB = b.replace(regExStrip0, '').split('.');\n    const l = Math.min(segmentsA.length, segmentsB.length);\n\n    for (i = 0; i < l; i++) {\n      diff = parseInt(segmentsB[i], 10) - parseInt(segmentsA[i], 10);\n      if (diff) {\n        return diff;\n      }\n    }\n    return segmentsB.length - segmentsA.length;\n  }\n}\n","import { WindowPosition } from '@/window/WindowPosition';\n\nexport class WindowDrag {\n  private _parent: HTMLElement;\n\n  private mouseMoveCallback = (moveEvent: Event) => {\n    this.mouseMove(moveEvent);\n  };\n\n  public start(parent: HTMLElement, mouseUpCallback: (windowPos: WindowPosition) => void) {\n    this._parent = parent;\n\n    document.addEventListener('mousemove', this.mouseMoveCallback);\n    document.addEventListener('mouseup', () => {\n      document.removeEventListener('mousemove', this.mouseMoveCallback);\n\n      const rect = this._parent.getBoundingClientRect();\n      mouseUpCallback({        \n        bottom: window.innerHeight - rect.bottom,\n        left: rect.left,\n      });\n    }, {once: true});  // remove listener once called once\n  }\n\n  private mouseMove(event: Partial<MouseEvent>) {\n    this._parent.style.top = this._parent.offsetTop + (event.movementY || 0) + 'px';\n    this._parent.style.left = this._parent.offsetLeft + (event.movementX || 0) + 'px';\n    this._parent.style.bottom = '';\n\n    this._parent.style.position = 'fixed'; \n    this._parent.style.zIndex = '100';\n  }\n}\n","import { nextCell, startingCells, getDirection, weatherTemperatures, Direction, weatherDescriptions, manualOptions } from '@/weather/weatherMap';\nimport { moduleSettings, SettingKeys } from '@/settings/ModuleSettings';\nimport { getGame, localize } from '@/utils/game';\nimport { Climate, Humidity, Season, seasonSelections } from './climateData';\nimport { WeatherData } from './WeatherData';\nimport { log } from '@/utils/log';\n\n// note: we don't actually care if the date on yesterday is the day before today; yesterday is used to determine if we should be picking a random\n//    starting spot or moving from the prior one\n// today is used to set the date on the returned object\nconst generate = function(climate: Climate, humidity: Humidity, season: Season, today: SimpleCalendar.DateData | null, yesterday: WeatherData | null): WeatherData {\n  const weatherData = new WeatherData(today, season, humidity, climate, null, null);\n\n  // do the generation\n  log(false, 'Generating weather');\n  log(false, 'Season: ' + Object.values(Season)[season]);\n  log(false, 'Climate: ' + Object.values(Climate)[climate]);\n  log(false, 'Humidity: ' + Object.values(Humidity)[humidity]);\n\n  // random start if no valid prior day or the prior day\" was manually set\n  if (!yesterday || yesterday.season !== season || !yesterday.hexFlowerCell || yesterday.isManual) {\n    // no yesterday data (or starting a new season), so just pick a random starting point based on the season\n    weatherData.hexFlowerCell = getDefaultStart(season);\n  } else {\n    log(false, 'Current cell: ' + yesterday.hexFlowerCell + ' (' + weatherDescriptions[climate][humidity][yesterday.hexFlowerCell] + ')')\n\n    // generate based on yesterday\n    const direction = getDirection(season);\n    log(false, 'Direction: ' + Direction[direction]);\n\n    if (direction===Direction.stay) {\n      weatherData.hexFlowerCell = yesterday.hexFlowerCell;\n    } else {\n      weatherData.hexFlowerCell = nextCell[season][yesterday.hexFlowerCell][direction];\n\n      // a -1 should never happen; if it does, something got screwy, so go to a default starting position\n      if (weatherData.hexFlowerCell === -1) {\n        weatherData.hexFlowerCell = weatherData.hexFlowerCell = getDefaultStart(season);\n      }\n    }\n\n    log(false, 'New cell: ' + weatherData.hexFlowerCell + ' (' + weatherDescriptions[climate][humidity][weatherData.hexFlowerCell] + ')')\n  }\n\n  // randomize the temperature (+/- # degrees)\n  // margin of error is 4% of temperature, but always at least 2 degrees\n  weatherData.temperature = weatherTemperatures[climate][humidity][weatherData.hexFlowerCell];\n\n  const plusMinus = Math.max(2, Math.ceil(.04*weatherData.temperature));\n  weatherData.temperature += Math.floor(Math.random()*(2*plusMinus + 1) - plusMinus);\n\n  return weatherData;\n};\n\n// used to create manual weather; returns null if data is invalid (weatherIndex in particular)\nconst createManual = function(today: SimpleCalendar.DateData | null, temperature: number, weatherIndex: number): WeatherData | null {\n  const options = manualOptions[weatherIndex];   // get the details behind the option\n\n  if (!options)\n    return null;\n\n  // randomize the temperature (+/- # degrees)\n  // margin of error is 4% of temperature, but always at least 2 degrees\n  const plusMinus = Math.max(2, Math.ceil(.04*temperature));\n  const temp = temperature + Math.floor(Math.random()*(2*plusMinus + 1) - plusMinus);\n\n  const weatherData = new WeatherData(today, null, options.humidity, options.climate, options.hexCell, temp);\n  weatherData.isManual = true;\n\n  return weatherData;\n}\n\n// used to pick a specific cell for weather (for testing or use by other applications)\nconst createSpecificWeather = function(today: SimpleCalendar.DateData | null, climate: Climate, humidity: Humidity, hexFlowerCell: number): WeatherData | null {\n  let temp = weatherTemperatures[climate][humidity][hexFlowerCell];\n\n  const plusMinus = Math.max(2, Math.ceil(.04*temp));\n  temp += Math.floor(Math.random()*(2*plusMinus + 1) - plusMinus);\n\n  const weatherData = new WeatherData(today, null, humidity, climate, hexFlowerCell, temp);\n  weatherData.isManual = true;\n\n  return weatherData;\n}\n\nconst outputWeather = function(weatherData: WeatherData) {\n  let messageRecipients: string[];\n\n  if (moduleSettings.get(SettingKeys.publicChat)) {\n    messageRecipients = getGame().users?.map((user) => user.id) || [];\n  } else {\n    messageRecipients = ChatMessage.getWhisperRecipients('GM')?.map((user) => user.id) || [];\n  } \n\n  if (messageRecipients) {\n    // get any custom text\n    let chatOut = '<b>' + weatherData.getTemperature(moduleSettings.get(SettingKeys.useCelsius)) + '</b> - ' + weatherData.getDescription();\n\n    if (weatherData.climate!==null && weatherData.humidity!==null && weatherData.hexFlowerCell!==null) {\n      const customText = moduleSettings.get(SettingKeys.customChatMessages)[weatherData.climate][weatherData.humidity][weatherData.hexFlowerCell];\n      if (customText)\n        chatOut = chatOut + '<br>' + customText;\n    }\n\n    ChatMessage.create({\n      speaker: {\n        alias: localize('sweath.chat.header'),\n      },\n      whisper: messageRecipients,\n      content: chatOut,\n    });\n  }\n};\n\n// pick one of the valid starting cells at random\nconst getDefaultStart = function(season: Season) {\n  const startingSpot = Math.floor(Math.random()*startingCells[season].length);\n\n  return startingCells[season][startingSpot];\n};\n\nexport {\n  generate,\n  outputWeather,\n  createManual,\n  createSpecificWeather\n};","import { ModuleSettings, moduleSettings, SettingKeys } from '@/settings/ModuleSettings';\nimport { getGame, isClientGM } from '@/utils/game';\nimport { log } from '@/utils/log';\nimport { VersionUtils } from '@/utils/versionUtils';\nimport { WeatherData } from '@/weather/WeatherData';\nimport { weatherOptions } from '@/weather/weatherMap';\nimport { FXDetail, FXMStyleTypes } from './effectsMap';\n\n// the solo instance\nlet weatherEffects: WeatherEffects;\n\n// set the main application; should only be called once\nfunction updateWeatherEffects(effects: WeatherEffects): void {\n  weatherEffects = effects;\n}\n\nclass WeatherEffects {\n  private _sceneReady: boolean;  // we don't want to try to activate effects before the scene is ready\n  private _useFX: string;\n  private _fxActive = true;\n  private _lastWeatherData: WeatherData;   // we save it so we can toggle back on \n  private _activeFXMParticleEffects: string[] = [];   // names of the active particle effects (so we can turn off)\n  private _activeFXMFilterEffects: string[] = [];   // names of the active filter effects (so we can turn off)\n\n  constructor() {\n    this._fxActive = moduleSettings.get(SettingKeys.fxActive);\n    this._useFX = moduleSettings.get(SettingKeys.useFX);\n\n    // check the version\n    if (this._useFX==='fxmaster') {\n      const fxVersion = getGame().modules.get('fxmaster')?.version;\n\n      if (!fxVersion || !getGame().modules.get('fxmaster')?.active) {\n        // module is missing... but they picked it so just disable for now\n        this._useFX = 'off';\n        log(false, 'Disabling FXMaster because module not present');\n      } else if (fxVersion!=='3.0.0' && !VersionUtils.isMoreRecent(fxVersion, '3.0.0')) {\n        ui.notifications?.error('FX Master found, but version prior to v3.0.0. Make sure the latest version of FX Master is installed to use for weather effects.');\n        ui.notifications?.error('Version found: ' + fxVersion);\n      }\n    }\n\n    this._activeFXMParticleEffects = moduleSettings.get(SettingKeys.activeFXMParticleEffects);\n    this._sceneReady = false;\n  }\n\n  // are we using any special effects?\n  public get useFX(): boolean {\n    return (this._useFX !== 'off');\n  }\n\n  // call when the scene is ready\n  public ready(weatherData: WeatherData | null): void {\n    this._sceneReady = true;\n\n    // disable any old weather; will turn back on when we finish loading\n    this.deactivateFX();\n\n    if (weatherData)\n      this.activateFX(weatherData);\n    else if (this._lastWeatherData)\n      this.activateFX(this._lastWeatherData);\n  };\n\n  public set fxActive(active: boolean) {\n    this._fxActive = active;\n\n    if (active)\n      this.activateFX(this._lastWeatherData);\n    else  \n      this.deactivateFX();\n  }\n\n  public get fxActive(): boolean {\n    return this._fxActive;\n  }\n\n  // need to turn any old ones off separately first...\n  public async activateFX(weatherData: WeatherData): Promise<void> {\n    this._lastWeatherData = weatherData;\n\n    if (!this._sceneReady)\n      return;\n\n    if (!weatherData || weatherData.climate === null || weatherData.humidity === null || weatherData.hexFlowerCell === null)\n      return;\n\n    const effectOptions = weatherOptions[weatherData.climate][weatherData.humidity][weatherData.hexFlowerCell].fx;\n\n    if (isClientGM()) {\n      // turn off any old ones\n      await this.deactivateFX();\n\n      if (!effectOptions)\n        return;\n\n      switch (this._useFX) {\n        case 'core':\n          if (effectOptions.core?.effect) \n            await getGame().scenes?.active?.update({ weather: effectOptions.core?.effect });\n          break;\n\n        case 'fxmaster':\n          if (effectOptions.fxMaster) {\n            const effects = effectOptions.fxMaster as FXDetail[];\n\n            for (let e=0; e<effects.length; e++) {\n              const name = `swr-${effects[e].type}-${foundry.utils.randomID()}`;\n\n              if (effects[e].style === FXMStyleTypes.Particle) {\n                // adjust options\n                const options = structuredClone(effects[e].options);\n                \n                // override direction\n                if (options.direction) {\n                  options.direction = Math.floor(Math.random() * (options.direction.end - options.direction.start)) + options.direction.start;\n                }\n\n                log(false, 'Adding fxmaster: ' + name);\n                Hooks.call('fxmaster.switchParticleEffect', {\n                  name,\n                  type: effects[e].type,\n                  options: options,\n                });\n                this.addFXMParticleEffect(name);\n              } else if (effects[e].style === FXMStyleTypes.Filter) {\n                log(false, 'Adding fxmaster: ' + name);\n                await FXMASTER.filters.addFilter(name, effects[e].type, effects[e].options);\n                await this.addFXMFilterEffect(name);\n              }\n            }\n          }\n\n          break;\n\n        \n        case 'off':\n        default:\n          break;\n      }\n    } \n  }\n\n  public async deactivateFX(): Promise<void> {\n    if (isClientGM()) {\n      switch (this._useFX) {\n        case 'core':\n          if (isClientGM()) {\n            await getGame().scenes?.active?.update({ weather: '' });\n          }\n          break;\n        \n        case 'fxmaster':\n          // this isn't really safe because this is checking an internal setting but it's too easy to \n          //    get out of sync with FX master, in which case attempting to turn something off may actually\n          //    add it instead\n          for (let i=0; i<this._activeFXMParticleEffects.length; i++) {\n            const effectName = this._activeFXMParticleEffects[i];\n\n            if (effectName in ((getGame().scenes?.active?.getFlag('fxmaster', 'effects') || []) as string[]))\n              Hooks.call('fxmaster.switchParticleEffect', { name: this._activeFXMParticleEffects[i] });\n          }\n          await this.clearFXMParticleEffects();\n          \n          for (let i=0; i<this._activeFXMFilterEffects.length; i++) {\n            const effectName = this._activeFXMFilterEffects[i];\n\n            await FXMASTER.filters.removeFilter(effectName);\n          }\n          await this.clearFXMFilterEffects();\n\n          break;\n\n        case 'off':\n        default:\n          // do nothing\n      }     \n    }\n  }\n\n  private async addFXMParticleEffect(name: string): Promise<void> {\n    this._activeFXMParticleEffects.push(name);\n\n    await moduleSettings.set(SettingKeys.activeFXMParticleEffects, this._activeFXMParticleEffects);\n  }\n\n  private async addFXMFilterEffect(name: string): Promise<void> {\n    this._activeFXMFilterEffects.push(name);\n\n    await moduleSettings.set(SettingKeys.activeFXMFilterEffects, this._activeFXMFilterEffects);\n  }\n\n  private async clearFXMParticleEffects(): Promise<void> {\n    this._activeFXMParticleEffects = [];\n\n    await moduleSettings.set(SettingKeys.activeFXMParticleEffects, this._activeFXMParticleEffects);\n  }\n\n  private async clearFXMFilterEffects(): Promise<void> {\n    this._activeFXMFilterEffects = [];\n\n    await moduleSettings.set(SettingKeys.activeFXMFilterEffects, this._activeFXMFilterEffects);\n  }\n}\n\n\nexport {\n  weatherEffects,\n  WeatherEffects,\n  updateWeatherEffects\n};","import moduleJson from '@module';\n\nimport { log } from '@/utils/log';\n\nimport { WindowPosition } from '@/window/WindowPosition';\nimport { WindowDrag } from '@/window/windowDrag';\nimport { WeatherData } from '@/weather/WeatherData';\nimport { seasonSelections, biomeSelections, Climate, climateSelections, Humidity, humiditySelections, Season, biomeMappings } from '@/weather/climateData';\nimport { manualSelections, weatherDescriptions } from '@/weather/weatherMap';\nimport { SettingKeys } from '@/settings/ModuleSettings';\nimport { isClientGM } from '@/utils/game';\nimport { generate, outputWeather, createManual, createSpecificWeather } from '@/weather/weatherGenerator';\nimport { moduleSettings } from '@/settings/ModuleSettings';\nimport { weatherEffects } from '@/weather/WeatherEffects';\nimport { DisplayOptions } from '@/types/DisplayOptions';\n\n// the solo instance\nlet weatherApplication: WeatherApplication;\n\n// set the main application; should only be called once\nfunction updateWeatherApplication(weatherApp: WeatherApplication): void {\n  weatherApplication = weatherApp;\n}\n\n// classes for Simple Calendar injection\n// no  dot or # in front\nconst SC_CLASS_FOR_TAB_EXTENDED = 'fsc-c';    // open the search panel and find the siblings that are the panels and see what the different code is on search\nconst SC_CLASS_FOR_TAB_CLOSED = 'fsc-d';    // look at the other siblings or close search and see what changes\nconst SC_CLASS_FOR_TAB_WRAPPER = 'fsc-of';   // the siblings that are tabs all have it - also needs to go in .scss\nconst SC_ID_FOR_WINDOW_WRAPPER = 'fsc-if';  // it's the top-level one with classes app, window-app, simple-calendar\n\n// flag name for storing daily weather on SC notes\nconst SC_NOTE_WEATHER_FLAG_NAME = 'dailyWeather';\n\nclass WeatherApplication extends Application {\n  private _currentWeather: WeatherData;\n  private _displayOptions: DisplayOptions;\n  private _calendarPresent = false;   // is simple calendar present?\n  private _manualPause = false;\n  private _attachedMode = false;\n  private _attachmodeHidden = true;   // like _currentlyHidden but have to track separately because that's for managing ready state not popup state\n  private _compactMode = false;\n  private _simpleCalendarInstalled = false;\n\n  private _currentClimate: Climate;\n  private _currentHumidity: Humidity;\n  private _currentBiome: string;\n  private _currentSeason: Season; \n  private _currentSeasonSync: boolean;\n  private _windowID = 'swr-container';\n  private _windowDragHandler = new WindowDrag();\n  private _windowPosition: WindowPosition;\n  private _currentlyHidden = false;  // for toggling... we DO NOT save this state\n\n  constructor() {\n    super();\n\n    log(false, 'WeatherApplication construction');\n\n    // set the initial display\n    this._displayOptions = moduleSettings.get(SettingKeys.displayOptions) || { dateBox: false, weatherBox: true, biomeBar: true, seasonBar: true }    \n\n    // get attached mode\n    this._attachedMode = moduleSettings.get(SettingKeys.attachToCalendar) || false;\n    this._attachmodeHidden = true;\n    this._compactMode = false;\n\n    // assume no SC unless told otherwise\n    this._simpleCalendarInstalled = false;\n\n    // get whether the manual pause is on\n    this._manualPause = moduleSettings.get(SettingKeys.manualPause || false);\n\n    // don't show it until ready() has been called\n    this._currentlyHidden = true;\n\n    // get default position or set default\n    this._windowPosition = moduleSettings.get(SettingKeys.windowPosition) || { left: 100, bottom: 300 }\n    \n    this.setWeather();  \n  }\n\n  // draw the window\n  public render(force?: boolean): void {\n    this.checkSeasonSync();\n\n    super.render(force);\n  }\n\n  public attachToCalendar() {\n    this._attachedMode = true;\n  }\n\n  public get attachedMode() { return this._attachedMode; }\n\n  // tell application that SC is present (used for notes)\n  public simpleCalendarInstalled() { this._simpleCalendarInstalled = true; }\n\n  // window options; called by parent class\n  static get defaultOptions() {\n    const options = super.defaultOptions;\n    \n    options.template = `modules/${moduleJson.id}/templates/weather-dialog.hbs`;\n    options.popOut = false;  // self-contained window without the extra wrapper\n    options.resizable = false;  // window is fixed size\n\n    return options;\n  }\n\n  // this provides fields that will be available in the template; called by parent class\n  public async getData(): Promise<any> {\n    const data = {\n      ...(await super.getData()),\n      isGM: isClientGM(),\n      displayDate: this._currentWeather?.date?.display ? this._currentWeather.date.display.date : '',\n      formattedDate: this._currentWeather?.date ? this._currentWeather.date.day + '/' + this._currentWeather.date.month + '/' + this._currentWeather.date.year : '',\n      formattedTime: this._currentWeather?.date?.display ? this._currentWeather.date.display.time : '',\n      weekday: this._currentWeather?.date ? this._currentWeather.date.weekdays[this._currentWeather.date.dayOfTheWeek] : '',\n      currentTemperature: this._currentWeather ? this._currentWeather.getTemperature(moduleSettings.get(SettingKeys.useCelsius)) : '',\n      currentDescription: this._currentWeather ? this._currentWeather.getDescription() : '',\n      currentSeasonClass: this.currentSeasonClass(),\n      biomeSelections: biomeSelections,\n      seasonSelections: seasonSelections,\n      humiditySelections: humiditySelections,\n      climateSelections: climateSelections,\n      manualSelections: manualSelections,\n\n      displayOptions: this._displayOptions,\n      hideCalendar: this._attachedMode || !this._calendarPresent || !this._displayOptions.dateBox,\n      hideCalendarToggle: this._attachedMode || !this._calendarPresent,\n      hideWeather: !this._attachedMode && this._calendarPresent && !this._displayOptions.weatherBox,  // can only hide weather if calendar present and setting is off\n      hideFXToggle: !weatherEffects.useFX,\n      manualPause: this._manualPause,\n      fxActive: weatherEffects.fxActive,\n      useCelsius: moduleSettings.get(SettingKeys.useCelsius),\n      attachedMode: this._attachedMode,\n      showAttached: this._attachedMode && !this._attachmodeHidden,\n      SCContainerClasses: !this._attachedMode ? '' : `${SC_CLASS_FOR_TAB_WRAPPER} sc-right ${SC_CLASS_FOR_TAB_EXTENDED}`,\n      windowPosition: this._attachedMode ? { bottom: 0, left: 0 } : this._windowPosition,\n      containerPosition: this._attachedMode ? 'relative' : 'fixed',\n      hideDialog: (this._attachedMode && this._attachmodeHidden) || this._currentlyHidden || !(isClientGM() || moduleSettings.get(SettingKeys.dialogDisplay)),  // hide dialog - don't show anything\n    };\n    //log(false, data);\n\n    return data;\n  }\n\n  // move the window\n  // we can't use foundry's setPosition() because it doesn't work for fixed size, non popout windows\n  public updateWindowPosition(newPosition: WindowPosition) {\n    this._windowPosition = newPosition;\n\n    // save\n    moduleSettings.set(SettingKeys.windowPosition, this._windowPosition);\n\n    this.render();\n  }\n\n  public toggleWindow(): void {\n    this._currentlyHidden = !this._currentlyHidden;\n    this.render();\n  }\n\n  public toggleAttachModeHidden(): void {\n    this._attachmodeHidden = !this._attachmodeHidden;\n    this.render();\n  }\n\n  public setCompactMode(mode: boolean): void {\n    this._compactMode = mode;\n    this.render();\n  }\n\n  public showWindow(): void {\n    this._currentlyHidden = false;\n    this.render(true);\n  }\n\n  // called by the parent class to attach event handlers after window is rendered\n  // note that saved weather has been reloaded by the time this is called when we're initializing\n  // this is called on every render!  One-time functionality should be put in ????? \n  public async activateListeners(html: JQuery<HTMLElement>): Promise<void> {\n    // setup handlers and values for everyone\n\n    // GM-only\n    if (isClientGM()) {\n      // set the drop-down values\n      html.find('#swr-climate-selection').val(this._currentClimate);\n      html.find('#swr-humidity-selection').val(this._currentHumidity);\n      \n      if (this._currentSeasonSync) {\n        html.find('#swr-season-selection').val('sync');\n      } else {\n        html.find('#swr-season-selection').val(this._currentSeason);\n      }\n\n      html.find('#swr-biome-selection').val(this._currentBiome);  // do this last, because setting climate/humidity clears it\n\n      html.find('#swr-weather-refresh').on('click', this.onWeatherRegenerateClick);\n      html.find('#swr-chat-repost').on('click', this.onChatRepost);\n      html.find('#swr-biome-selection').on('change', this.onBiomeSelectChange);\n      html.find('#swr-climate-selection').on('change', this.onClimateSelectChange);\n      html.find('#swr-humidity-selection').on('change', this.onHumiditySelectChange);\n      html.find('#swr-season-selection').on('change', this.onSeasonSelectChange);\n\n      html.find('#swr-manual-pause').on('change', this.onManualPauseChange);\n\n      // toggle buttons\n      html.find('#swr-season-bar-toggle').on('mousedown', this.onToggleSeasonBar);\n      html.find('#swr-biome-bar-toggle').on('mousedown', this.onToggleBiomeBar);\n      html.find('#swr-manual-bar-toggle').on('mousedown', this.onToggleManualBar);\n      html.find('#swr-fx-toggle').on('mousedown', this.onToggleFX);\n\n      // validation\n      html.find('#swr-manual-temperature').on('input', this.onManualTempInput);\n\n      // buttons\n      html.find('#swr-submit-weather').on('click', this.onSubmitWeatherClick);\n\n      // watch for sc calendar to open a different panel\n      if (this._attachedMode) {\n        const observer = new MutationObserver((mutations) => {\n          mutations.forEach((mutation) => {\n            if (mutation.attributeName === 'class' && $(mutation.target).hasClass(SC_CLASS_FOR_TAB_EXTENDED) && \n                $(mutation.target).hasClass(SC_CLASS_FOR_TAB_WRAPPER) && ((mutation.target as HTMLElement).id!='swr-fsc-container')) {\n                // Class SC_CLASS_FOR_TAB_EXTENDED has been added to another panel (opening it), so turn off ours\n                this._attachmodeHidden = true;\n                $('#swr-fsc-container').remove();\n            }\n          });\n        });\n\n        // attach the observer to the right element\n        const element: JQuery<HTMLElement> | HTMLElement = $(`#${SC_ID_FOR_WINDOW_WRAPPER} .window-content`).find(`.${SC_CLASS_FOR_TAB_WRAPPER}`).last().parent();\n        if (element && element.length>0) {\n          const target = element.get(0);\n          observer.observe(target as Node, { attributes: true, childList: true, subtree: true });\n        }\n      }\n    }\n\n    // handle window drag\n    html.find('#swr-calendar-move-handle').on('mousedown', this.onMoveHandleMouseDown);\n    html.find('#swr-weather-move-handle').on('mousedown', this.onMoveHandleMouseDown);\n\n    // setup handlers and values for everyone\n    html.find('#swr-weather-box-toggle').on('click', this.onWeatherToggleClick);\n    html.find('#swr-date-box-toggle').on('click', this.onDateToggleClick);\n    html.find('#swr-close-button').on('click', this.onCloseClick);\n\n    super.activateListeners(html);\n  }\n\n  // event handlers - note arrow functions because otherwise 'this' doesn't work\n  private onWeatherToggleClick = (event): void => {\n    event.preventDefault();\n\n    this.updateDisplayOptions({ weatherBox: !this._displayOptions.weatherBox })\n  };\n\n  private onDateToggleClick = (event): void => {\n    event.preventDefault();\n\n    // if we're turning off, need to move the box right to adjust; reverse for turning on\n    if (this._displayOptions.dateBox) \n      this._windowPosition.left += document.getElementById('swr-calendar-box')?.offsetWidth || 0;\n    else {\n      // little tricker to get width when hidden\n      const box = document.getElementById('swr-calendar-box');\n      if (box) {\n        box.style.visibility = 'hidden';  // use visibility to change display temporarily without flashing\n        box.style.display = 'block';\n        const width = box.offsetWidth;\n\n        this._windowPosition.left -= width || 0;\n      }\n    }\n\n    this.updateDisplayOptions({ dateBox: !this._displayOptions.dateBox })\n  };\n\n  private onCloseClick = (event): void => {\n    event.preventDefault();\n    this.toggleWindow();   // must be on if we are clicking the button, so this will close it\n  }\n\n  private setWindowPosition(position: WindowPosition): void {\n    this._windowPosition = position;\n\n    moduleSettings.set(SettingKeys.windowPosition, position);\n\n    this.render();\n  }\n\n  private onMoveHandleMouseDown = (event: MouseEvent): void => {\n    // only allow drag with left button (also prevents craziness from clicking a button while other is still down)\n    if (event.button !== 0)\n      return;\n\n    const element = document.getElementById(this._windowID);\n    if (element) {\n      this._windowDragHandler.start(element, (position: WindowPosition) => {\n        // save the new location\n        this.setWindowPosition(position);\n      });\n    }\n  };  \n\n  // turn off season sync if calendar not present\n  public checkSeasonSync(force?: boolean): void {\n    // make sure simple calendar is present if we're trying to sync\n    // this could happen if we had sync on but then uninstalled calendar and reloaded\n    if (!this._calendarPresent && this._currentSeasonSync) {\n      this._currentSeasonSync = false;\n\n      // don't update the setting because a) no need... will update if anything changes anyway, and b)\n      //    this may be called before the calendar is loaded so we don't want to overwrite it (it will\n      //    get requeried later)\n      //moduleSettings.set(SettingKeys.seasonSync, false);\n    }\n  }\n\n  // call this when either a) foundry loaded and no simple calendar or b) after simple calendar loaded\n  // this is needed so that we can properly handle calendar box and sync\n  public ready(): void {\n    // GM-only\n    if (isClientGM()) {\n      // load the values from settings if missing\n      if (this._currentClimate == undefined)\n        this._currentClimate = moduleSettings.get(SettingKeys.climate);\n\n      if (this._currentHumidity == undefined)\n        this._currentHumidity = moduleSettings.get(SettingKeys.humidity);\n\n      if (this._currentSeason == undefined)\n        this._currentSeason = moduleSettings.get(SettingKeys.season);\n\n      if (this._currentSeasonSync == undefined)\n        this._currentSeasonSync = moduleSettings.get(SettingKeys.seasonSync);\n\n      if (this._currentBiome == undefined)\n        this._currentBiome = moduleSettings.get(SettingKeys.biome);\n    }\n\n    weatherEffects.ready(this._currentWeather);\n\n    this._currentlyHidden = false;\n    this.render(true);\n  };\n\n  // output a bunch of info that might be useful for debugging\n  public async debugOutput(): Promise<void> {\n    let output = `\nsimple-weather DEBUG OUTPUT\n_______________________________________\nisGM: ${isClientGM()}\ndisplayOptions: ${JSON.stringify(this._displayOptions, null, 2)}\ndialogDisplay: ${moduleSettings.get(SettingKeys.dialogDisplay)}\ncalendarPresent: ${this._calendarPresent}\nmanualPause: ${this._manualPause}\ncurrentClimate: ${this._currentClimate}\ncurrentHumidity: ${this._currentHumidity}\ncurrentBiome: ${this._currentBiome}\ncurrentSeason: ${this._currentSeason}\ncurrentSeasonSync: ${this._currentSeasonSync}\nWeatherEffects.fxActive = ${moduleSettings.get(SettingKeys.fxActive)}\nWeatherEffects.useFX = ${moduleSettings.get(SettingKeys.useFX)}\ngetData: ${JSON.stringify(await this.getData(), null, 2)}\n_______________________________________\n    `;\n\n\n    console.log(output);\n  }\n\n\n  public updateDisplayOptions(options: Partial<DisplayOptions>): void {\n    this._displayOptions = {\n      ...this._displayOptions,\n      ...options\n    }\n\n    // save\n    moduleSettings.set(SettingKeys.displayOptions, this._displayOptions);\n\n    this.render();\n  }\n\n  // updates the current date/time showing in the weather dialog\n  // generates new weather if the date has changed\n  public updateDateTime(currentDate: SimpleCalendar.DateData | null): void {\n    if (!currentDate)\n      return;\n\n    if (this.hasDateChanged(currentDate)) {\n      if (isClientGM()) {\n        if (moduleSettings.get(SettingKeys.storeInSCNotes)) {\n          // if we're using notes from SC (and have a valid note) pull that weather\n          const notes = SimpleCalendar.api.getNotesForDay(currentDate.year, currentDate.month, currentDate.day);\n          let foundWeatherNote = false;\n\n          for (let i=0; i<notes.length; i++) {\n            if (notes[i]) {\n              const note = notes[i] as StoredDocument<JournalEntry>;\n              const flagData = note.getFlag(moduleJson.id, SC_NOTE_WEATHER_FLAG_NAME) as WeatherData;\n      \n              // if it has the flag, it's a prior weather entry - use it\n              if (flagData && flagData.temperature!==undefined && flagData.hexFlowerCell!==undefined) {\n                foundWeatherNote = true;\n\n                this._currentWeather = new WeatherData(\n                  flagData.date, \n                  flagData.season,\n                  flagData.humidity,\n                  flagData.climate,\n                  flagData.hexFlowerCell,\n                  flagData.temperature\n                );\n\n                this.activateWeather(this._currentWeather);\n\n                // should only be one, so we can skip rest of notes;\n                break;\n              } else if (flagData) {\n                log(false, 'Found a weather note for today, but it\\'s corrupt:');\n                log(false, flagData);\n                return;\n              }\n            }\n          }\n\n          if (!foundWeatherNote) {\n            this.generateWeather(currentDate);\n          }      \n        } else {\n          // otherwise generate new weather\n          log(false, 'Generate new weather');\n          \n          this.generateWeather(currentDate);\n        }\n      }\n    } else {\n      // always update because the time has likely changed even if the date didn't\n      // but we don't need to save the time to the db, because every second\n      //    it's getting refreshed \n      this._currentWeather.date = currentDate;\n    }\n\n    this.render();\n  }\n\n  // called from outside, to load the last weather from the settings\n  // also called by player clients when GM updates the settings\n  public setWeather(): void {\n    const weatherData = moduleSettings.get(SettingKeys.lastWeatherData);\n\n    if (weatherData) {\n      log(false, 'Using saved weather data');\n\n      this._currentWeather = weatherData;\n      weatherEffects.activateFX(weatherData);\n    } else if (isClientGM()) {\n      log(false, 'No saved weather data - Generating weather');\n\n      this.generateWeather(null);\n    }\n\n    this.render();\n  }\n\n  // generate weather based on drop-down settings, store locally and update db\n  private generateWeather(currentDate: SimpleCalendar.DateData | null): void {\n    // if we're paused, do nothing (except update the date)\n    if (!this._manualPause) {\n      const season = this.getSeason();\n\n      this._currentWeather = generate(\n        this._currentClimate ?? Climate.Temperate, \n        this._currentHumidity ?? Humidity.Modest, \n        season ?? Season.Spring, \n        currentDate,\n        this._currentWeather || null\n      );\n\n      this.activateWeather(this._currentWeather);\n    } else {\n      this._currentWeather.date = currentDate;\n    }\n  }\n\n  // temperature is avg temperature to use; weatherIndex is the index into the set of manual options\n  private setManualWeather(currentDate: SimpleCalendar.DateData | null, temperature: number, weatherIndex: number): void {\n    const season = this.getSeason();\n\n    const result = createManual(currentDate, temperature, weatherIndex);\n    if (result) {\n      this._currentWeather = result;\n      this.activateWeather(this._currentWeather);\n      this.render();\n    }\n  }\n\n  // temperature is avg temperature to use; weatherIndex is the index into the set of manual options\n  public setSpecificWeather(climate: Climate, humidity: Humidity, hexFlowerCell: number): void {\n    const season = this.getSeason();\n\n    log(false, 'Running weather for ' + weatherDescriptions[climate][humidity][hexFlowerCell]);\n\n    const result = createSpecificWeather(this._currentWeather?.date || null, climate, humidity, hexFlowerCell);\n    if (result) {\n      this._currentWeather = result;\n      this.activateWeather(this._currentWeather);\n      this.render();\n    }\n  }\n\n  // tell us that simple calendar is present\n  public activateCalendar(): void {\n    this._calendarPresent = true;\n\n    this.render();\n  }\n\n  // activate the given weather; save to settings, output to chat, display FX\n  private activateWeather(weatherData: WeatherData): void {\n    if (isClientGM()) {\n      // Output to chat if enabled\n      if (moduleSettings.get(SettingKeys.outputWeatherToChat)) {\n        outputWeather(weatherData);\n      }\n\n      // activate special effects\n      weatherEffects.activateFX(weatherData);\n\n      // if we're saving to the calendar, do that\n      if (moduleSettings.get(SettingKeys.storeInSCNotes)) {\n        void this.saveWeatherToCalendarNote(weatherData);\n      }\n\n      // save \n      moduleSettings.set(SettingKeys.lastWeatherData, this._currentWeather);        \n    }\n  }\n\n  // save the weather to a calendar note\n  private async saveWeatherToCalendarNote(weatherData: WeatherData): Promise<void> {\n    const noteTitle = 'Simple Weather - Daily Weather';\n\n    // is simple calendar present?\n    if (!this._simpleCalendarInstalled || !weatherData?.date) {\n      return;\n    }\n\n    // remove any previous note for the day\n    const notes = SimpleCalendar.api.getNotesForDay(weatherData.date.year, weatherData.date.month, weatherData.date.day);\n    for (let i=0; i<notes.length; i++) {\n      if (notes[i]) {\n        const note = notes[i] as StoredDocument<JournalEntry>;\n        const flagData = note.getFlag(moduleJson.id, SC_NOTE_WEATHER_FLAG_NAME) as WeatherData;\n\n        // if it has the flag, it's a prior weather entry - delete it\n        if (flagData) {\n          await SimpleCalendar.api.removeNote((notes[i] as StoredDocument<JournalEntry>).id);\n        }\n      }\n    }\n\n    // add a new one\n    const noteContent = `Todays weather: ${weatherData.getTemperature(moduleSettings.get(SettingKeys.useCelsius))} -  ${weatherData.getDescription() }`;\n    const theDate = { year: weatherData.date.year, month: weatherData.date.month, day: weatherData.date.day};\n\n    // create the note and store the weather detail as a flag\n    const newNote = await SimpleCalendar.api.addNote(noteTitle, noteContent, theDate, theDate, true);\n    await newNote?.setFlag(moduleJson.id, SC_NOTE_WEATHER_FLAG_NAME, weatherData);\n  }\n\n  // has the date part changed\n  private hasDateChanged(currentDate: SimpleCalendar.DateData): boolean {\n    const previous = this._currentWeather?.date;\n\n    if ((!previous && currentDate) || (previous && !currentDate))\n      return true;\n    if (!previous && !currentDate) \n      return false;\n\n    if (this.isDateTimeValid(currentDate)) {\n      if (currentDate.day !== (previous as SimpleCalendar.DateData).day\n          || currentDate.month !== (previous as SimpleCalendar.DateData).month\n          || currentDate.year !== (previous as SimpleCalendar.DateData).year) {\n        return true;\n      }\n    } \n    \n    // if either matches or it's invalid (so we don't want to go around updating things)\n    return false;\n  }\n\n  private isDateTimeValid(date: SimpleCalendar.DateData): boolean {\n    if (this.isDefined(date.second) && this.isDefined(date.minute) && this.isDefined(date.day) &&\n    this.isDefined(date.month) && this.isDefined(date.year)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private isDefined(value: unknown) {\n    return value !== undefined && value !== null;\n  }\n\n  // access the current selections\n  public getSeason(): Season | null {\n    if (this._currentSeasonSync) {\n      // if the season selector is set to \"sync\", then pull it off the date instead\n      return this._currentWeather.simpleCalendarSeason;\n    } else {\n      return this._currentSeason;\n    }\n  }\n\n  private onWeatherRegenerateClick = (event): void => {\n    event.preventDefault();\n\n    this.regenerateWeather();\n  };\n\n  // just output the current weather to the chat again\n  private onChatRepost = (event): void => {\n    event.preventDefault();\n\n    if (isClientGM()) {\n      outputWeather(this._currentWeather);\n    }\n  };\n\n  public regenerateWeather() {\n    if (isClientGM()) {\n      this.generateWeather(this._currentWeather?.date || null);\n      moduleSettings.set(SettingKeys.lastWeatherData, this._currentWeather);        \n      this.render();\n    }\n  }\n\n  private onSeasonSelectChange = (event): void => {\n    // save the value - we don't regenerate because we might be changing other settings, too, and don't want to trigger a bunch of chat messages\n    const target = event.originalEvent?.target as HTMLSelectElement;\n    if (target.value === 'sync') {\n      this._currentSeasonSync = true;\n      this._currentSeason = Number(this._currentWeather.simpleCalendarSeason);\n    } else {\n      this._currentSeasonSync = false;\n      this._currentSeason = Number(target.value);\n    }\n\n    moduleSettings.set(SettingKeys.seasonSync, this._currentSeasonSync);\n    moduleSettings.set(SettingKeys.season, this._currentSeason);\n\n    // render to update the icon\n    this.render();\n  };\n\n  private onClimateSelectChange = (event): void => {\n    // save the value - we don't regenerate because we might be changing other settings, too, and don't want to trigger a bunch of chat messages\n    const target = event.originalEvent?.target as HTMLSelectElement;\n    this._currentClimate = Number(target.value)\n    moduleSettings.set(SettingKeys.climate, this._currentClimate);\n\n    // set biome to blank because we adjusted manually\n    jQuery(document).find('#swr-biome-selection').val('');\n    this._currentBiome = '';\n    moduleSettings.set(SettingKeys.biome, '');\n  };\n\n  private onHumiditySelectChange = (event): void => {\n    // save the value - we don't regenerate because we might be changing other settings, too, and don't want to trigger a bunch of chat messages\n    const target = event.originalEvent?.target as HTMLSelectElement;\n    this._currentHumidity = Number(target.value);\n    moduleSettings.set(SettingKeys.humidity, this._currentHumidity);\n\n    // set biome to blank because we adjusted manually\n    jQuery(document).find('#swr-biome-selection').val('');\n    this._currentBiome = '';\n    moduleSettings.set(SettingKeys.biome, '');\n  };\n\n  private onBiomeSelectChange = (event): void => {\n    const target = event.originalEvent?.target as HTMLSelectElement;\n\n    // reset the climate and humidity selects (unless we pickee the blank)\n    if (!target.value)\n      return;\n\n    const biomeMapping = biomeMappings[target.value];\n    if (biomeMapping) {\n      // save the value - we don't regenerate because we might be changing other settings, too, and don't want to trigger a bunch of chat messages\n      this._currentBiome = target.value\n      moduleSettings.set(SettingKeys.biome, this._currentBiome);\n\n      // update the other selects\n      const climate = document.getElementById('swr-climate-selection') as HTMLSelectElement | null;\n      if (climate) {\n        climate.value = String(biomeMapping.climate);\n        this._currentClimate = biomeMapping.climate;\n        moduleSettings.set(SettingKeys.climate, biomeMapping.climate);\n      }\n      \n      const humidity = document.getElementById('swr-humidity-selection') as HTMLSelectElement | null;\n      if (humidity) {\n        humidity.value = String(biomeMapping.humidity);\n        this._currentHumidity = biomeMapping.humidity;\n        moduleSettings.set(SettingKeys.humidity, biomeMapping.humidity);\n      }\n    }\n  };\n\n  private onManualPauseChange = (event): void => {\n    this.manualPauseToggle();\n  };\n\n  public manualPauseToggle() {\n    if (isClientGM()) {\n      this._manualPause = !this._manualPause;\n      moduleSettings.set(SettingKeys.manualPause, this._manualPause);\n\n      // if we're turning it on, hide the weather bars\n      if (this._manualPause) {\n        this.updateDisplayOptions({\n          ...this._displayOptions,\n          biomeBar: false,\n          seasonBar: false,\n        })\n      }\n\n      this.render();\n    }\n  }\n\n  private onToggleSeasonBar = (): void => {\n    this._displayOptions.seasonBar = !this._displayOptions.seasonBar;\n\n    this.updateDisplayOptions(this._displayOptions);\n  }\n\n  private onToggleBiomeBar = (): void => {\n    this._displayOptions.biomeBar = !this._displayOptions.biomeBar;\n\n    this.updateDisplayOptions(this._displayOptions);\n  }\n\n  private onToggleManualBar = (): void => {\n    this._displayOptions.manualBar = !this._displayOptions.manualBar;\n\n    this.updateDisplayOptions(this._displayOptions);\n  }\n\n  private onToggleFX = (): void => {\n    this.toggleFX();\n  }\n\n  public toggleFX() {\n    if (isClientGM()) {\n      weatherEffects.fxActive = !weatherEffects.fxActive;\n      this.render();\n    }\n  }\n\n  private onManualTempInput = (event: KeyboardEvent): void => {\n    const btn = document.getElementById('swr-submit-weather') as HTMLButtonElement;\n\n    btn.disabled = !this.isTempValid();\n  }\n\n  private isTempValid(): boolean {\n    const input = document.getElementById('swr-manual-temperature') as HTMLInputElement;\n    const inputValue = input?.value;\n\n    // can only be a number\n    return (/^-?[0-9]+$/.test(inputValue));\n  }\n\n  private onSubmitWeatherClick = (): void => {\n    // confirm temp is valid, though the input filter above should prevent this\n    const input = document.getElementById('swr-manual-temperature') as HTMLInputElement;\n    let temp = Number(input?.value);\n\n    const select = document.getElementById('swr-manual-weather-selection') as HTMLSelectElement;\n\n    if (isNaN(temp) || !select.value) {\n      log(false, 'Attempt to submit invalid temperature or no selection');\n      return;\n    }\n\n    if (moduleSettings.get(SettingKeys.useCelsius))\n      temp = Math.round((temp*9/5)+32);\n\n    this.setManualWeather(this._currentWeather?.date || null, temp, Number(select.value));\n  }\n\n  // get the class to apply to get the proper icon by season\n  private currentSeasonClass = function(): string { \n    switch (this.getSeason()) {\n      case Season.Fall: \n        return 'fa-leaf fall';\n      \n      case Season.Winter: \n        return 'fa-snowflake winter';\n      \n      case Season.Spring: \n        return 'fa-seedling spring';\n      \n      case Season.Summer: \n        return 'fa-sun summer';\n    }\n\n    return '';\n  }\n\n  // override this function to handle the compact case\n  override _injectHTML(html: JQuery<HTMLElement>) {\n    if (this._attachedMode) {\n\n      if (!this._attachmodeHidden) {\n        // turn off any existing calendar panels\n        const existingPanels = $(`#${SC_ID_FOR_WINDOW_WRAPPER} .window-content`).find(`.${SC_CLASS_FOR_TAB_WRAPPER}.${SC_CLASS_FOR_TAB_EXTENDED}`);\n        existingPanels.addClass(SC_CLASS_FOR_TAB_CLOSED).removeClass(SC_CLASS_FOR_TAB_EXTENDED);\n\n        // if it's there we'll replace, otherwise we'll append\n        if ($('#swr-fsc-container').length === 0) {\n          // attach to the calendar\n          const siblingPanels = $(`#${SC_ID_FOR_WINDOW_WRAPPER} .window-content`).find(`.${SC_CLASS_FOR_TAB_WRAPPER}.${SC_CLASS_FOR_TAB_CLOSED}`);\n          siblingPanels.last().parent().append(html);\n        } else {\n          $('#swr-fsc-container').replaceWith(html);\n        }\n      } else {\n        // hide it\n        $('#swr-fsc-container').remove();\n      }  \n    } else {\n      super._injectHTML(html);\n    }\n  }\n}\n\nexport {\n  weatherApplication,\n  WeatherApplication,\n  updateWeatherApplication\n}","import { getGame } from '@/utils/game';\nimport { weatherApplication } from '@/applications/WeatherApplication';\nimport moduleJson from '@module';\n\nexport enum KeyBindingKeys {\n  toggleMainApp = 'toggleMainApp',   // open/close window\n  regenerate = 'regenerate',    // regenerate weather\n  manualPause = 'manualPause',   // turn on manual pause\n  pauseFX = 'pauseFX',    // pause weather effects\n}\n\nexport class KeyBindings {\n  public static register() {\n    const keybindings = [\n      {\n        bindingId: KeyBindingKeys.toggleMainApp,\n        name: \"sweath.keybindings.toggle\",\n        hint: \"sweath.keybindings.toggleHelp\",\n        onDown: weatherApplication.toggleWindow.bind(weatherApplication),\n        editable: [],\n      },\n      {\n        bindingId: KeyBindingKeys.regenerate,\n        name: \"sweath.keybindings.regenerate\",\n        hint: \"sweath.keybindings.regenerateHelp\",\n        onDown: weatherApplication.regenerateWeather.bind(weatherApplication),\n        editable: [],\n      },\n      {\n        bindingId: KeyBindingKeys.manualPause,\n        name: \"sweath.keybindings.manualPause\",\n        hint: \"sweath.keybindings.manualPauseHelp\",\n        onDown: weatherApplication.manualPauseToggle.bind(weatherApplication),\n        editable: [],\n      },\n      {\n        bindingId: KeyBindingKeys.pauseFX,\n        name: \"sweath.keybindings.pauseFX\",\n        hint: \"sweath.keybindings.pauseFXHelp\",\n        onDown: weatherApplication.toggleFX.bind(weatherApplication),\n        editable: [],\n      },\n    ];\n\n    for (let i=0; i<keybindings.length; i++) {\n      const binding = keybindings[i];\n\n      getGame().keybindings.register(moduleJson.id, binding.bindingId, {\n        name: binding.name,\n        hint: binding.hint,\n        onDown: binding.onDown,\n        editable: binding.editable,\n        precedence: CONST.KEYBINDING_PRECEDENCE.NORMAL,\n      });\n    }\n  }\n}","import '@/../styles/simple-weather.scss';\nimport '@/../styles/menu-icon.scss';\n\nimport { moduleSettings, ModuleSettings, SettingKeys, updateModuleSettings } from '@/settings/ModuleSettings';\nimport { VersionUtils } from '@/utils/versionUtils';\nimport { getGame, isClientGM } from '@/utils/game';\nimport { allowSeasonSync, Climate, Humidity, initializeLocalizedText as initializeLocalizedClimateText } from '@/weather/climateData';\nimport { initializeLocalizedText as initializeLocalizedWeatherText } from '@/weather/weatherMap';\nimport { updateWeatherApplication, weatherApplication, WeatherApplication } from '@/applications/WeatherApplication';\nimport { updateWeatherEffects, WeatherEffects } from '@/weather/WeatherEffects';\nimport { KeyBindings } from '@/settings/KeyBindings';\nimport moduleJson from '@module';\n\n// track which modules we have\nlet simpleCalendarInstalled = false;\n\n// look for #swr-fsc-compact-open; what is the class on the parent div that wraps it?\nconst SC_CLASS_FOR_COMPACT_BUTTON_WRAPPER = 'fsc-pj';  // no dot in the front\nconst SC_MINIMUM_VERSION = '2.4.0';\nconst SC_PREFERRED_VERSION = '2.4.17';\n\n// also see instructions in WeatherApplication.ts for adjusting constants\n\n\n// how do we decide what mode we're in and whether its visible or not?\n// 1. look to the attachment setting - this controls whether we're in attached mode or not; \n//      if it's turned on but simple calendar can't be found, you're out of luck...\n//     a. we assume it's not compact mode until we see otherwise (by presence of div.SC_CLASS_FOR_COMPACT_BUTTON_WRAPPER)\n// 2. if we're not in attached mode, we:\n//     a.  load the settings from last time to determine the location and visibility\n//     b.  add the button to the journal notes to turn it on\n// 3. if we are in attached mode, always starts hidden; we then wait for the calendar window\n//      to be registered and we attach the button to it\n\n/**\n* Register module in Developer Mode module (https://github.com/League-of-Foundry-Developers/foundryvtt-devMode)\n* No need to spam the console more than it already is, we hide them with  a flag.\n*/\n\n// note: for the logs to actually work, you have to activate it in the UI under the config for the developer mode module\nHooks.once('devModeReady', async ({ registerPackageDebugFlag: registerPackageDebugFlag }: DevModeApi) => {\n  registerPackageDebugFlag('simple-weather', 'boolean');\n  // CONFIG.debug.hooks = true;\n});\n\nHooks.once('init', async () => {\n  // initialize settings first, so other things can use them\n  updateModuleSettings(new ModuleSettings());\n  updateWeatherEffects(new WeatherEffects());  // has to go first so we can activate any existing FX\n  updateWeatherApplication(new WeatherApplication());\n\n  // register keybindings\n  KeyBindings.register();\n\n  // expose the api\n  const module = getGame().modules.get(moduleJson.id);\n  if (module) {\n    module.api = {\n      runWeather: function(climate: Climate, humidity: Humidity, hexFlowerCell: number): void { \n        weatherApplication.setSpecificWeather(climate, humidity, hexFlowerCell); \n      },\n\n      debugOutput: function(): void {\n        weatherApplication.debugOutput();\n      }\n    }\n  }\n});\n\nHooks.once('ready', async () => {\n  checkDependencies();\n\n  // if we don't have simple calendar installed, we're ready to go \n  //    (otherwise wait for it to call the renderMainApp hook)\n  if (!simpleCalendarInstalled) {\n    weatherApplication.ready();\n  }  \n});\n\nHooks.once('i18nInit', async () => {\n  initializeLocalizedClimateText();\n  initializeLocalizedWeatherText();\n\n  // rerender weather\n  if (weatherApplication)\n    weatherApplication.render();\n});\n\n// on non-GMs, we need to update whenever the GM changes the weather\nHooks.on('updateSetting', async (setting: Setting) => {\n  if (!isClientGM() && setting.key === 'simple-weather.' + SettingKeys.lastWeatherData) \n    weatherApplication.setWeather();\n});\n\n// add the button to re-open the app \nHooks.on('getSceneControlButtons', (controls: SceneControl[]) => {\n  // if in attach mode, don't need it\n  if (weatherApplication.attachedMode)\n    return;\n\n  if (isClientGM() || moduleSettings.get(SettingKeys.dialogDisplay)) {\n    // find the journal notes \n    const noteControls = controls.find((c) => {\n        return c.name === \"notes\";\n    });\n\n    // add our own button\n    if (noteControls && noteControls.tools) {\n      noteControls.tools.push({ \n          name: \"simple-weather\",\n          title: \"sweath.labels.openButton\",\n          icon: \"fas swr-icon\",\n          button: true,\n          onClick: () => {   \n            if (weatherApplication)\n              weatherApplication.showWindow(); \n          }\n      });\n    }\n}\n})\n\n// make sure we have a compatible version of simple-calendar installed\nfunction checkDependencies() {\n  const module = getGame().modules.get('foundryvtt-simple-calendar');\n\n  const scVersion = module?.version;\n\n  // if not present, just display a warning if we're in attached mode\n  if (!module || !module?.active || !scVersion) {\n    if (moduleSettings.get(SettingKeys.attachToCalendar)) {\n      ui.notifications?.warn(`Simple Weather is set to \"Attached Mode\" in settings but Simple Calendar is not installed.  This will keep it from displaying at all.  You should turn off that setting if this isn't intended.`);\n    }\n\n    simpleCalendarInstalled = false; \n    return;\n  }\n\n  const meetsMinimumVersion = (scVersion===SC_MINIMUM_VERSION || VersionUtils.isMoreRecent(scVersion, SC_MINIMUM_VERSION));\n\n  if (!meetsMinimumVersion) {\n    simpleCalendarInstalled = false; \n    ui.notifications?.error(`Simple Calendar found, but version prior to v${SC_MINIMUM_VERSION}. Make sure the latest version of Simple Calendar is installed.`);\n    ui.notifications?.error('Version found: ' + scVersion);\n  } else if (scVersion && (scVersion!==SC_PREFERRED_VERSION)) {\n    simpleCalendarInstalled = true; \n    ui.notifications?.error(`This version of Simple Weather only fully supports Simple Calendar v${SC_PREFERRED_VERSION}. \"Attached mode\" is unlikely to work properly.`);\n    ui.notifications?.error('Version found: ' + scVersion);\n  } else {\n    simpleCalendarInstalled = true; \n  }\n}\n\nHooks.once(SimpleCalendar.Hooks.Init, async () => {\n  // it's possible this gets called but the version # is too low - just ignore in that case\n  if (simpleCalendarInstalled) {\n    weatherApplication.simpleCalendarInstalled();\n    \n    // set the date and time\n    if (moduleSettings.get(SettingKeys.dialogDisplay) || isClientGM()) {\n      // tell the application we're using the calendar\n      weatherApplication.activateCalendar();\n\n      weatherApplication.updateDateTime(SimpleCalendar.api.timestampToDate(SimpleCalendar.api.timestamp()));   // this is really for the very 1st load; after that this date should match what was saved in settings\n    }\n\n    // modify the drop-downs\n    allowSeasonSync();\n\n    // check the setting to see if we should be in sync mode (because if we did initial render before getting here, \n    //    it will have cleared it)\n    weatherApplication.ready();\n\n    // add the datetime change hook - we don't use SimpleCalendar.Hooks.DateTimeChange \n    //    because it doesn't call the hook on player clients\n    Hooks.on('updateWorldTime', (timestamp) => {\n      weatherApplication.updateDateTime(SimpleCalendar.api.timestampToDate(timestamp));\n    });\n  } else {\n    weatherApplication.ready();\n  }\n  \n  // check the setting to see if we want to dock\n  if (weatherApplication.attachedMode) {\n    // can set this either way, but it does nothing when not in compact mode (but we only need to set it once)\n    SimpleCalendar.api.addSidebarButton(\"Simple Weather\", \"fa-cloud-sun\", \"\", false, () => weatherApplication.toggleAttachModeHidden());\n\n    // we also need to watch for when the calendar is rendered because in compact mode we\n    //    have to inject the button \n    Hooks.on('renderMainApp', (_application: Application, html: JQuery<HTMLElement>) => {\n      // if SC_CLASS_FOR_COMPACT_BUTTON_WRAPPER div exists then it's in compact mode\n      // in compact mode, there's no api to add a button, so we monkeypatch one in\n      const compactMode = html.find(`.${SC_CLASS_FOR_COMPACT_BUTTON_WRAPPER}`).length>0;\n      if (compactMode) {\n        weatherApplication.setCompactMode(true);\n\n        // if it's already there, no need to do anything (it doesn't change)\n        if (html.find('#swr-fsc-compact-open').length === 0) {\n          const newButton = `\n          <div id=\"swr-fsc-compact-open\" style=\"margin-left: 8px; cursor: pointer; \">\n            <div data-tooltip=\"Simple Weather\" style=\"color:var(--comapct-header-control-grey);\">    \n              <span class=\"fa-solid fa-cloud-sun\"></span>\n            </div>\n          </div>\n          `;\n\n          // add the button   \n          // note: how to find the new class when new SC release comes out?\n          //   it's the div that wraps the small buttons in the top left in compact mode\n          html.find(`.${SC_CLASS_FOR_COMPACT_BUTTON_WRAPPER}`).append(newButton);\n\n          html.find('#swr-fsc-compact-open').on('click',() => {\n            weatherApplication.toggleAttachModeHidden();\n          });\n        }\n      } else {\n        weatherApplication.setCompactMode(false);\n      }  \n    });\n  }\n});\n\n"],"names":["getGame","isClientGM","_b","_a","localize","stringId","messagePrefix","log","force","args","isDebugging","e","Season","Season2","Humidity","Humidity2","Climate","Climate2","biomeSelections","climateSelections","humiditySelections","seasonSelections","initializeLocalizedText","allowSeasonSync","biomeMappings","FXMStyleTypes","FXMStyleTypes2","availableEffects","joinEffects","effect1","effect2","output","manualSelections","localizeClimates","localizeHumidities","climateArray","humidityArray","c","climate","h","humidity","i","weatherDescriptions","descriptionOrder","manualOptions","val","Direction","moveProbabilities","getDirection","season","rand","direction","accumulator","startingCells","nextCell","weatherTemperatures","weatherOptions","descriptionCells","Icons","WeatherData","date","hexFlowerCell","temperature","useCelsius","icon","seasons","CustomMessageSettingsApplication","object","options","climates","humidities","d","moduleJson","currentText","moduleSettings","SettingKeys","_event","formData","chatMessages","updateModuleSettings","settings","ModuleSettings","setting","loaded","value","settingID","settingKey","settingConfig","VersionUtils","versionList","current","check","a","b","diff","regExStrip0","segmentsA","segmentsB","l","WindowDrag","moveEvent","parent","mouseUpCallback","rect","event","generate","today","yesterday","weatherData","getDefaultStart","plusMinus","createManual","weatherIndex","temp","createSpecificWeather","outputWeather","messageRecipients","user","chatOut","customText","startingSpot","weatherEffects","updateWeatherEffects","effects","WeatherEffects","fxVersion","_c","_d","active","effectOptions","name","effectName","weatherApplication","updateWeatherApplication","weatherApp","SC_CLASS_FOR_TAB_EXTENDED","SC_CLASS_FOR_TAB_CLOSED","SC_CLASS_FOR_TAB_WRAPPER","SC_ID_FOR_WINDOW_WRAPPER","SC_NOTE_WEATHER_FLAG_NAME","WeatherApplication","box","width","element","position","target","biomeMapping","btn","input","select","_e","_f","newPosition","mode","html","observer","mutations","mutation","currentDate","notes","foundWeatherNote","flagData","result","noteTitle","noteContent","theDate","newNote","previous","inputValue","KeyBindings","keybindings","binding","simpleCalendarInstalled","SC_CLASS_FOR_COMPACT_BUTTON_WRAPPER","SC_MINIMUM_VERSION","SC_PREFERRED_VERSION","registerPackageDebugFlag","module","checkDependencies","initializeLocalizedClimateText","initializeLocalizedWeatherText","controls","noteControls","scVersion","timestamp","_application","newButton"],"mappings":"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I,EAAI,EAC1B,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAC1B,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAC1B,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAC1B,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAC1B,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAC1B,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAC1B,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAC1B,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAC1B,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAC1B,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAC1B,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAC1B,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAC1B,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAC1B,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAC1B,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAC1B,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAC1B,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAC1B,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAC1B,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAC1B,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAC1B,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAE1B,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAC1B,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAC1B,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAC1B,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAC1B,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAC1B,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAE1B,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAC1B,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,EAAI,EAC1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"}