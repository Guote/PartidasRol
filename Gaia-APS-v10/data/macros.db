{"_id":"21weQHTapjRNlChg","name":"Combate","type":"script","author":"efyrn4Js5CqfguvB","img":"icons/svg/combat.svg","scope":"global","command":"function round5(x) {\n    return Math.round(x / 5) * 5;\n}\n\nfunction cuenta(ATK, DEF, TA, BDMG) {\n    if (DEF > ATK) {\n        return (DEF - ATK) / 2;\n    }\n    return (BDMG * (ATK - (DEF + TA * 10))) / 100;\n}\n\nfunction onSubmit() {\n    var ATK = parseInt(document.getElementById(\"ATK\").value);\n    var DEF = parseInt(document.getElementById(\"DEF\").value);\n    var TA = parseInt(document.getElementById(\"TA\").value);\n    var BDMG = parseInt(document.getElementById(\"BDMG\").value);\n\n    let final = '<div>HA: ' + ATK + ', HD: ' + DEF+ ', TA: ' + TA + ', Daño Base: ' + BDMG + '</div>'\n    if (DEF > ATK) {\n        final = final + '<h2>Bono al contraataque: <span style=\"color:#ff1515\">' + round5(cuenta(ATK, DEF, TA, BDMG)) + '</span></h2>';\n    } else {\n        final = final + '<h2>Daño final: <span style=\"color:#ff1515\">' + round5(cuenta(ATK, DEF, TA, BDMG)) + '</span></h2>';\n    }\n\n    ChatMessage.create({ content: final, whisper: game.collections.get(\"User\").filter((u) => u.isGM).map((u) => game.data.userId) })\n}\n\nlet d = new Dialog({\n    title: \"Calcular daño final\",\n    content: `\n    <div> \n        Ataque: <input type=\"number\" id=\"ATK\"/><br />\n        Defensa: <input type=\"number\" id=\"DEF\"/><br />\n        Tipo de Armadura: <input type=\"number\" id=\"TA\" value=\"0\"/><br />\n        Daño base: <input type=\"number\" id=\"BDMG\" value=\"0\" /><br />\n    </div>`,\n    buttons: {\n        aceptar: {\n            label: \"Aceptar\",\n            callback: () => onSubmit()\n        }\n    },\nrender: () => $('#ATK').focus()\n});\n\nd.render(true)","folder":"Ri9hZtL7zyuumwkV","sort":100000,"flags":{},"ownership":{"default":0,"efyrn4Js5CqfguvB":3},"_stats":{"systemId":"animabf-guote","systemVersion":"1.16.0","coreVersion":"10.303","createdTime":null,"modifiedTime":1695332035451,"lastModifiedBy":"efyrn4Js5CqfguvB"}}
{"folder":"GaivoXF6EoFyryGU","name":"Descansar","type":"script","author":"efyrn4Js5CqfguvB","img":"icons/svg/sleep.svg","scope":"global","command":"let myContent = `\n    Días descansando <input id=\"resting\" type=\"number\" value=\"1\" />\n`;\n\nnew Dialog({\n  title: \"Descanso\",\n  content: myContent,\n  buttons: {\n    button1: {\n      label: \"Descansar\",\n      callback: (html) => myCallback(html),\n      icon: `<i class=\"fas fa-check\"></i>`,\n    },\n  },\n}).render(true);\n\nfunction myCallback(html) {\n  let restingDays = parseInt(html.find(\"input#resting\").val());\n\n  let actor = _token.actor;\n  let hp = actor.system.characteristics.secondaries.lifePoints;\n  let fatigue = actor.system.characteristics.secondaries.fatigue;\n  //let penFisico = actor.system.general.modifiers.modFisico.final\n  let ki = actor.system.domine.kiAccumulation.generic;\n  let zeon = actor.system.mystic.zeon;\n  let cv = actor.system.psychic.psychicPoints;\n\n  let regHp =\n    Math.min(restingDays *\n      Math.floor(\n        (actor.system.characteristics.primaries.constitution.value ?? 5 * 4) / 5\n      ) * 5,\n      hp.max - hp.value\n    );\n  let regFatigue =\n    Math.min(fatigue.max, fatigue.max - fatigue.value);\n  let regKi = Math.min(ki.max, ki.max - ki.value);\n  let dailyCosts = !actor.system.mystic.spellMaintenances.length\n    ? 0\n    : restingDays *actor.system.mystic.spellMaintenances.reduce(\n        (accumulator, currentValue) =>\n          accumulator + currentValue.system.cost.value,\n        0\n      );\n  let regZeon =\n    Math.min(\n      restingDays *actor.system.mystic.zeonRegeneration.final.value,\n      zeon.max - zeon.value\n    );\n  let regCv = Math.min(cv.max, cv.max - cv.value);\n\n  let newHp = hp.value + regHp;\n  let newFatigue = fatigue.value + regFatigue;\n  let newKi = ki.value + regKi;\n  let newZeon = zeon.value + regZeon;\n  let newCv = cv.value + regCv;\n\n  console.log(`\ndescansa${restingDays > 1 ? `${restingDays} días` : ``}: \n| Vida: ${newHp} (+${regHp})\n| Cansancio: ${newFatigue} (+${regFatigue})\n| Ki: ${newKi} (+${regHp})\n| Zeon: ${newZeon} (+${regZeon})\n| CV: ${newCv} (+${regCv})`);\n\n  actor.update({\n    data: {\n      characteristics: {\n        secondaries: {\n          lifePoints: { value: newHp },\n          fatigue: { value: newFatigue },\n        },\n      },\n      mystic: {\n        zeon: { value: newZeon },\n      },\n      domine: { kiAccumulation: { generic: { value: newKi } } },\n      psychic: {\n        psychicPoints: { value: newCv },\n      },\n    },\n  });\n\n  ChatMessage.create({\n    flavor: `\n        ${actor.name} descansa${restingDays > 1 ? `${restingDays} días` : ``}: \n      | Vida: ${newHp} (+${regHp})\n      | Cansancio: ${newFatigue} (+${regFatigue})\n      | Ki: ${newKi} (+${regKi})\n      | Zeon: ${newZeon} (+${regZeon})\n      | CV: ${newCv} (+${regCv})`,\n    whisper: game.users.filter((u) => u.isGM).map((u) => u._id),\n  });\n}","sort":100000,"ownership":{"default":2,"efyrn4Js5CqfguvB":3},"flags":{"combat-utility-belt":{"macroTrigger":""}},"_stats":{"systemId":"animabf-guote","systemVersion":"1.16.0","coreVersion":"10.303","createdTime":1695383583734,"modifiedTime":1695804958866,"lastModifiedBy":"efyrn4Js5CqfguvB"},"_id":"2RZMfs0PCeu2Uhw4"}
{"folder":"S8Ht1aTB2GSXNfVJ","name":"applyFatigue","type":"script","author":"efyrn4Js5CqfguvB","img":"systems/animabf-guote/assets/icons/game-icons.net/ffffff/lorc/oppression.svg","scope":"global","command":"let effectLabel = \"Cansancio\";\nlet actors = game.actors.filter(\n  (act) =>\n    Object.values(act.getEmbeddedCollection(\"ActiveEffect\"))[1].filter(\n      (eff) => eff.label === \"Cansancio\" && eff.disabled === false\n    ).length\n);\nconsole.log(\"actors cansaitos\", actors);\nfatigueMod = {\n  [0]: -80,\n  [1]: -80,\n  [2]: -40,\n  [3]: -20,\n};\n\nlet cansancio;\nlet mod;\nfor (actor of actors) {\n  cansancio = actor.system.characteristics.secondaries.fatigue.value;\n  newMod = cansancio > 3 ? 0 : fatigueMod[cansancio];\n  penFisicoActual = actor.system.general.modifiers.modFisico.malus.value;\n  console.log(actor, \"cansancio\", cansancio,\"nuevoMod\", newMod, \"actual\", penFisicoActual)\n  if (newMod < penFisicoActual) {\n    actor.update({\n      system: {\n        general: { modifiers: { modFisico: { malus: { value: newMod } } } },\n      },\n    });\n  }\n}","sort":0,"ownership":{"default":0,"efyrn4Js5CqfguvB":3},"flags":{"combat-utility-belt":{"macroTrigger":""}},"_stats":{"systemId":"animabf-guote","systemVersion":"1.16.0","coreVersion":"10.303","createdTime":1695331599439,"modifiedTime":1695335335503,"lastModifiedBy":"efyrn4Js5CqfguvB"},"_id":"87LDGoCsTzSm7ZJE"}
{"_id":"F3Fid0ws8VE4w318","name":"Ataque","type":"script","author":"efyrn4Js5CqfguvB","img":"icons/svg/sword.svg","scope":"global","command":"let actors = canvas.tokens.controlled.map((token) => {\n  return token.actor;\n});\nlet nombre;\nlet ataque;\nlet content = `\n  <form class=\"flexcol\">\n        <div class=\"form-group\">\n          <label for=\"modificador\">Modificadores</label>\n          <input type=\"Number\" id=\"modificador\" name=\"modificador\" placeholder=\"Modificador total\">\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"exampleSelect\">¿Arma usada?</label>\n          <select name=\"exampleSelect\">\n`;\n/* <div class=\"form-group\">\n          <label for=\"Cansancio\">Puntos de cansancio</label>\n          <input type=\"Number\" name=\"Cansancio\" placeholder=\"Cansancio gastado\">\n        </div> */\nfor (let actor of actors) {\n  nombre = actor.name;\n  ataque = actor.system.combat.attack.value;\n  console.log(actor.system.combat.weapons);\n  for (let weapon of actor.system.combat.weapons) {\n    console.log(weapon?.name || \"-\");\n    console.log(weapon?.data.attack.value || 0);\n    content =\n      content +\n      `<option value='{\n    \"name\":\"${weapon?.name || \"-\"}\",\n    \"atk\":\"${weapon?.system.attack.final.value || 0}\",\n    \"dmg\":\"${weapon?.system.damage.final.value || 0}\",\n    \"crit\":\"${weapon?.system.critic.primary.value || \"-\"}/${\n        weapon?.system.critic.secondary.value || \"-\"\n      }\",\n    \"special\":\"${weapon?.system.special.value}\"}'>${weapon?.name || \"-\"} </option>\n`;\n  }\n}\ncontent =\n  content +\n  `</select>\n        </div>\n        <div class=\"form-group\">\n          <textarea name=\"exampleText\" placeholder=\"Comentarios\"></textarea>\n        </div>\n      </form>`;\n\nconsole.log(content);\n\nlet d = new Dialog({\n  title: \"Ataque\",\n  content: content,\n  buttons: {\n    no: {\n      icon: '<i class=\"fas fa-times\"></i>',\n      label: \"Cancelar\",\n    },\n    yes: {\n      icon: '<i class=\"fas fa-check\"></i>',\n      label: \"Sí\",\n      callback: (html) => {\n        let mod = html.find('[name=\"modificador\"]').val();\n        /* let cans = html.find('[name=\"Cansancio\"]').val(); */\n        let selectedWeapon = JSON.parse(\n          html.find('[name=\"exampleSelect\"]').val()\n        );\n        let text = html.find('[name=\"exampleText\"]').val();\n        console.log(game);\n        const roll = new ABFFoundryRoll(\n          `1d100xa + ${selectedWeapon.atk} + ${mod | 0}` /* + ${cans | 0}*15 */\n        );\n        roll.roll();\n\n        let weaponDetails = `${selectedWeapon.name} | Daño: ${selectedWeapon.dmg} ${selectedWeapon.crit}\n              ${selectedWeapon.special} | ${text}`;\n\n        roll.toMessage({\n          flavor: `${nombre} ataca`,\n        });\n\n        ChatMessage.create({\n          flavor: `${weaponDetails}`,\n          whisper: game.collections\n            .get(\"User\")\n            .filter((u) => u.isGM)\n            .map((u) => game.data.userId),\n        });\n      },\n    },\n  },\n  default: \"yes\",\n  render: () => $(\"#modificador\").focus(),\n}).render(true);","folder":"Ri9hZtL7zyuumwkV","sort":200000,"flags":{"combat-utility-belt":{"macroTrigger":""}},"ownership":{"default":2,"efyrn4Js5CqfguvB":3},"_stats":{"systemId":"animabf-guote","systemVersion":"1.16.0","coreVersion":"10.303","createdTime":null,"modifiedTime":1695332036479,"lastModifiedBy":"efyrn4Js5CqfguvB"}}
{"name":"Mark Dead","type":"script","author":"efyrn4Js5CqfguvB","img":"icons/svg/bones.svg","scope":"global","command":"/**\n*  This macro will mark the selected tokens as dead.\n*  If all the selected tokens are dead, they will be marked\n   as alive instead.\n*/\n\nfor (let e of canvas.tokens.controlled) {\n\tlet hasAlive = !e.document.getFlag(\"healthEstimate\", \"dead\")\n\te.document.setFlag(\"healthEstimate\", \"dead\", hasAlive)\n}","folder":"lVLZRwJ3hoj6OFc9","sort":150000,"flags":{"core":{"sourceId":"Macro.bCMlVEb7wx14ACIB"}},"_id":"H5n5sPmj01MSQTtv","ownership":{"default":0,"efyrn4Js5CqfguvB":3},"_stats":{"systemId":"animabf-guote","systemVersion":"1.16.0","coreVersion":"10.303","createdTime":null,"modifiedTime":1695388109119,"lastModifiedBy":"efyrn4Js5CqfguvB"}}
{"_id":"HlOvvgMFxDGQG7xF","name":"Defensa","type":"script","author":"efyrn4Js5CqfguvB","img":"icons/svg/shield.svg","scope":"global","command":"let actors = canvas.tokens.controlled.map(token => {return token.actor});\nlet parada;\nlet esquiva;\nlet nombre;\n  for(let actor of actors){\n    parada = actor.data.data.combat.block.final.value\n    esquiva = actor.data.data.combat.dodge.final.value\n    nombre = actor.data.name\n  }\n\nlet d = new Dialog({\n    title: 'Defensas',\n    content: `\n      <form class=\"flexcol\">\n        <div class=\"form-group\">\n          <label for=\"exampleInput\">Modificadores</label>\n          <input type=\"Number\" id=\"modificador\" name=\"exampleInput\" placeholder=\"Modificador total\">\n        </div>\n        <div class=\"form-group\">\n          <textarea name=\"exampleText\" placeholder=\"Comentarios\"></textarea>\n        </div>\n      </form>\n    `,\n    /* <div class=\"form-group\">\n          <label for=\"Cansancio\">Puntos de cansancio</label>\n          <input type=\"Number\" name=\"Cansancio\" placeholder=\"Cansancio gastado\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"exampleSelect\">Defensa</label>\n          <select name=\"exampleSelect\">\n            <option value=\"0\">1ª Defensa</option>\n            <option value=\"30\">2ª Defensa</option>\n            <option value=\"50\">3ª Defensa</option>\n            <option value=\"70\">4ª Defensa</option>\n            <option value=\"90\">5ª Defensa</option>\n          </select>\n        </div> */\n    buttons: {\n      no: {\n        icon: '<i class=\"fas fa-times\"></i>',\n        label: 'Cancelar'\n      },\n      yes: {\n        icon: '<i class=\"fas fa-check\"></i>',\n        label: 'Sí',\n        callback: (html) => {\n          let input = html.find('[name=\"exampleInput\"]').val();\n          let input2 = html.find('[name=\"Cansancio\"]').val();\n          let select = html.find('[name=\"exampleSelect\"]').val();\n          let text = html.find('[name=\"exampleText\"]').val();\n\n          console.log(game);\n          const roll = new ABFFoundryRoll(`1d100xa + ${Math.max(parada,esquiva)} + ${input|0}`);\n          roll.roll();\n          let ta = actors[0].data.data.combat.totalArmor.at\n          roll.toMessage({\n            flavor: `${nombre} defiende`,\n          });\n\n          ChatMessage.create({\n            flavor: `\n            FIL: ${ta.cut.value} \n            CON: ${ta.impact.value} \n            PEN: ${ta.thrust.value} \n            CAL: ${ta.heat.value} \n            ELE: ${ta.electricity.value} \n            FRI: ${ta.cold.value} \n            ENE: ${ta.energy.value} \n            | ` + text,\n            whisper: game.collections\n              .get(\"User\")\n              .filter((u) => u.isGM)\n              .map((u) => game.data.userId),\n          });\n        }\n      },\n    },\n    default: 'yes',\nrender: () => $('#modificador').focus()\n  }).render(true);","folder":"Ri9hZtL7zyuumwkV","sort":150000,"flags":{"combat-utility-belt":{"macroTrigger":""}},"ownership":{"default":2,"efyrn4Js5CqfguvB":3},"_stats":{"systemId":"animabf-guote","systemVersion":"1.16.0","coreVersion":"10.303","createdTime":null,"modifiedTime":1695332037830,"lastModifiedBy":"efyrn4Js5CqfguvB"}}
{"_id":"KKuKt4KmY8Z8QCDc","name":"d100","type":"script","author":"efyrn4Js5CqfguvB","img":"icons/svg/dice-target.svg","scope":"global","command":"let d = new Dialog( {\n  title: 'Lanzar dados',\n  content: `\n    <form>\n    <input type=\"text\" id=\"mod\" name=\"baseinput\" placeholder=\"Número\"> \n    </form>\n    `,\n  buttons: {\n    no: {\n      label: 'Cancelar'\n         },\n    yes: {\n      label: 'Lanzar',\n      callback: (html) => {\n      const roll = new ABFFoundryRoll(\"1d100xa +\"+html.find('[name=\"baseinput\"]')[0].value);\n      roll.toMessage();\n                         }\n          }\n            },\n  default: 'yes',\n  close: () => {},\n  render: () => $('#modificador').focus()\n}).render(true);","folder":"Ri9hZtL7zyuumwkV","sort":125000,"flags":{"combat-utility-belt":{"macroTrigger":""}},"ownership":{"default":3,"efyrn4Js5CqfguvB":3},"_stats":{"systemId":"animabf-guote","systemVersion":"1.16.0","coreVersion":"10.303","createdTime":null,"modifiedTime":1695332039082,"lastModifiedBy":"efyrn4Js5CqfguvB"}}
{"folder":"GaivoXF6EoFyryGU","name":"Acumular Zeon","type":"script","author":"efyrn4Js5CqfguvB","img":"icons/svg/aura.svg","scope":"global","command":"let zeonACT = token.actor.system.mystic.act.main.final.value;\nlet zeonBaseTotal = token.actor.system.mystic.zeon.max;\nlet zeonBaseCurr = token.actor.system.mystic.zeon.value;\nlet zeonAcum = token.actor.system.mystic.zeon.accumulated.value;\n//Check the Acumulation isn't null or it will give errors\nif (zeonAcum == null) {\n  zeonAcum = 0;\n}\n\nasync function updateAcumulation(mode, acumBonus) {\n  if (acumBonus) {\n    zeonACT = zeonACT + acumBonus;\n  }\n  let updateZeon = 0;\n  var chatNotification = \"<b>\" + token.name + \"</b>\";\n\n  if (mode == 0) {\n    chatNotification = chatNotification + \" ha acumulado de forma plena \";\n    //Decrease current Zeon zeonBase\n    let updateZeonBase = zeonBaseCurr - zeonACT;\n    if (updateZeonBase < 0) {\n      updateZeonBase = 0;\n    }\n    token.actor.update({ \"system.mystic.zeon.value\": updateZeonBase });\n\n    //Increase current accumulation\n    updateZeon = zeonAcum + zeonACT;\n    token.actor.update({ \"system.mystic.zeon.accumulated.value\": updateZeon });\n\n    chatNotification =\n      chatNotification +\n      \"<b>\" +\n      zeonACT +\n      \"</b> puntos de zeon este turno y tiene acumulado \";\n  } else {\n    chatNotification = chatNotification + \" ha acumulado de forma plena \";\n    //Decrease current Zeon zeonBase\n    let updateZeonBase = zeonBaseCurr - Math.round(zeonACT / 2);\n    if (updateZeonBase < 0) {\n      updateZeonBase = 0;\n    }\n    token.actor.update({ \"system.mystic.zeon.value\": updateZeonBase });\n\n    //Increase current accumulation\n    updateZeon = zeonAcum + Math.round(zeonACT / 2);\n    token.actor.update({ \"system.mystic.zeon.accumulated.value\": updateZeon });\n\n    chatNotification =\n      chatNotification +\n      \"<b>\" +\n      Math.round(zeonACT / 2) +\n      \"</b> puntos de zeon este turno y tiene acumulado \";\n  }\n  chatNotification =\n    chatNotification + \"<b>\" + updateZeon + \"</b> puntos de zeon\";\n\n  ChatMessage.create({\n    user: game.user._id,\n    speaker: ChatMessage.getSpeaker({ token: actor }),\n    content: chatNotification,\n  });\n}\n\nlet dialogContent = `\n                    <div>\n                        <center><h3>Acumulación de zeón</h3></center>\n                    </div>\n                    <div>\n                        <center><i>La Acumulación Parcial te permite acumular zeon de forma pasiva mientras realizas otras acciones, al coste de reducir la acumulación a la mitad. La Acumulación Plena te permite acumular todo el zeon que te correspondería, pero te inhibe de realizar acciones activas este turno fuera de lanzar conjuros.</i></center>\n                    </div>\n                    <div>\n                        <center>\n                        <h2>Zeon acumulado: ${zeonAcum}</h2>\n                        Zeon máximo: ${zeonBaseTotal}, Zeon actual: ${zeonBaseCurr}<br>\n                        </center>\n                    </div>\n                    <div class=\"flexrow flex-center\">\n                        <div class=\"flexrow\">\n                            <center>\n                                <h2>ACT Plena</h2> ${zeonACT} <br>\n                            </center>\n                        </div>\n                        <div class=\"flexrow\">\n                            <center>\n                                <h2>ACT Parcial</h2> ${Math.round(\n                                  zeonACT / 2\n                                )} <br>\n                            </center>\n                        </div>\n                    </div>\n                    <center> Modificador de acumulación <input id=\"acumBonus\" type=\"number\" value=\"0\" /> </center>\n                    <br>\n                    `;\nlet stayOpen = false;\nlet d = new Dialog({\n  title: \"Acumulación de Zeon\",\n  content: dialogContent,\n  buttons: {\n    done: {\n      label: \"Acum. Plena\",\n      callback: (html) => {\n        stayOpen = false;\n        const acumBonus = parseInt(html.find(\"input#acumBonus\").val());\n        updateAcumulation(0, acumBonus);\n      },\n    },\n    show: {\n      label: \"Acum. Parcial\",\n      callback: (html) => {\n        stayOpen = false;\n        const acumBonus = parseInt(html.find(\"input#acumBonus\").val());\n        updateAcumulation(1, acumBonus);\n      },\n    },\n  },\n  default: \"done\",\n  close: () => {\n    if (stayOpen) {\n      stayOpen = false;\n      d.render(true);\n    }\n  },\n}).render(true);","sort":0,"ownership":{"default":2,"efyrn4Js5CqfguvB":3},"flags":{"combat-utility-belt":{"macroTrigger":""}},"_stats":{"systemId":"animabf-guote","systemVersion":"1.16.0","coreVersion":"10.303","createdTime":1695393618938,"modifiedTime":1695804958866,"lastModifiedBy":"efyrn4Js5CqfguvB"},"_id":"KbRaxWnq5D0L3nbn"}
{"name":"Abrir Ficha","type":"script","img":"_APS%20images/macroOpenSheet.PNG","command":"const mainCharacter = {\n    ['Ameba']: 'Ruuna',\n    ['Andrés']: 'Raener',\n    ['Noa']: 'Aemi',\n    ['Elva']: 'Noche',\n    ['David']: 'Shephard',    \n}\n\nlet currentUser = game.user.name\nlet ownedActor = game.actors.find(actor => actor.name === mainCharacter[currentUser])._id\n\nHotbar.toggleDocumentSheet(`Actor.${ownedActor}`)","author":"efyrn4Js5CqfguvB","scope":"global","folder":"GaivoXF6EoFyryGU","sort":50000,"ownership":{"default":2,"efyrn4Js5CqfguvB":3},"flags":{"combat-utility-belt":{"macroTrigger":""}},"_stats":{"systemId":"animabf-guote","systemVersion":"1.16.0","coreVersion":"10.303","createdTime":1695803947309,"modifiedTime":1695806118301,"lastModifiedBy":"efyrn4Js5CqfguvB"},"_id":"N1MwmLq8J7GCTa0c"}
{"name":"Acumular Ki","type":"script","author":"efyrn4Js5CqfguvB","img":"icons/svg/aura.svg","scope":"global","command":"async function updateAcumulation(mode,agiChecked,conChecked,dexChecked,strChecked,powChecked,wilChecked) {\n    const tokenAcum = token.actor.data.data.domine.kiAccumulation;\n    var genericUpdate = 0;\n    \n    var chatNotification = `<i>${token.name} </i>`;\n    if(mode == 0){\n        \n        chatNotification = chatNotification + \"<i>ha acumulado de forma plena (</i>\";\n        \n        if(agiChecked){\n            let update = tokenAcum.agility.accumulated.value + tokenAcum.agility.final.value;\n            token.actor.update({\"data.domine.kiAccumulation.agility.accumulated.value\": update});\n            \n            genericUpdate = genericUpdate + tokenAcum.agility.final.value;\n            \n            chatNotification = chatNotification + `<i>${tokenAcum.agility.final.value} AGI </i>`;\n        }\n        \n        if(conChecked){\n            let update = tokenAcum.constitution.accumulated.value +  tokenAcum.constitution.final.value;\n            token.actor.update({\"data.domine.kiAccumulation.constitution.accumulated.value\": update});\n            \n            genericUpdate = genericUpdate + tokenAcum.constitution.final.value;\n            \n            chatNotification = chatNotification + `<i>${tokenAcum.constitution.final.value} CON </i>`;\n        }\n        if(dexChecked){\n            let update = tokenAcum.dexterity.accumulated.value +  tokenAcum.dexterity.final.value;\n            token.actor.update({\"data.domine.kiAccumulation.dexterity.accumulated.value\": update});\n            \n            genericUpdate = genericUpdate + tokenAcum.dexterity.final.value;\n            \n            chatNotification = chatNotification + `<i>${tokenAcum.dexterity.final.value} DES </i>`;\n        }\n        \n        if(strChecked){\n            let update = tokenAcum.strength.accumulated.value +  tokenAcum.strength.final.value;\n            token.actor.update({\"data.domine.kiAccumulation.strength.accumulated.value\": update});\n            \n            genericUpdate = genericUpdate + tokenAcum.strength.final.value;\n            \n            chatNotification = chatNotification + `<i>${tokenAcum.strength.final.value} FUE </i>`;\n        }\n        \n        if(powChecked){\n            let update = tokenAcum.power.accumulated.value +  tokenAcum.power.final.value;\n            token.actor.update({\"data.domine.kiAccumulation.power.accumulated.value\": update});\n            \n            genericUpdate = genericUpdate + tokenAcum.power.final.value;\n            \n            chatNotification = chatNotification + `<i>${tokenAcum.power.final.value} POD </i>`;\n        }\n        \n        if(wilChecked){\n            let update = tokenAcum.willPower.accumulated.value +  tokenAcum.willPower.final.value;\n            token.actor.update({\"data.domine.kiAccumulation.willPower.accumulated.value\": update});\n            \n            genericUpdate = genericUpdate + tokenAcum.willPower.final.value;\n            \n            chatNotification = chatNotification + `<i>${tokenAcum.willPower.final.value} VOL </i>`;\n        }\n        \n        genericUpdate = genericUpdate + tokenAcum.generic.value;\n        if(genericUpdate >= tokenAcum.generic.max){\n            genericUpdate = tokenAcum.generic.max;\n        }\n        token.actor.update({\"data.domine.kiAccumulation.generic.value\": genericUpdate});\n        \n    } else {\n        \n        chatNotification = chatNotification + \"<i>ha acumulado de forma parcial (</i>\";\n        \n        if(agiChecked){\n            let update = tokenAcum.agility.accumulated.value + Math.round(tokenAcum.agility.final.value/2);\n            token.actor.update({\"data.domine.kiAccumulation.agility.accumulated.value\": update});\n            \n            genericUpdate = genericUpdate + Math.round(tokenAcum.agility.final.value/2);\n            \n            chatNotification = chatNotification + `<i>${Math.round(tokenAcum.agility.final.value/2)} AGI </i>`;\n        }\n        if(conChecked){\n            let update = tokenAcum.constitution.accumulated.value + Math.round(tokenAcum.constitution.final.value/2);\n            token.actor.update({\"data.domine.kiAccumulation.constitution.accumulated.value\": update});\n            \n            genericUpdate = genericUpdate + Math.round(tokenAcum.constitution.final.value/2);\n            \n            chatNotification = chatNotification + `<i>${Math.round(tokenAcum.constitution.final.value/2)} CON </i>`;\n        }\n        if(dexChecked){\n            let update = tokenAcum.dexterity.accumulated.value + Math.round(tokenAcum.dexterity.final.value/2);\n            token.actor.update({\"data.domine.kiAccumulation.dexterity.accumulated.value\": update});\n            \n            genericUpdate = genericUpdate + Math.round(tokenAcum.dexterity.final.value/2);\n            \n            chatNotification = chatNotification + `<i>${Math.round(tokenAcum.dexterity.final.value/2)} DES </i>`;\n        }\n        if(strChecked){\n            let update = tokenAcum.strength.accumulated.value +  Math.round(tokenAcum.strength.final.value/2);\n            token.actor.update({\"data.domine.kiAccumulation.strength.accumulated.value\": update});\n            \n            genericUpdate = genericUpdate + Math.round(tokenAcum.strength.final.value/2);\n            \n            chatNotification = chatNotification + `<i>${Math.round(tokenAcum.strength.final.value/2)} FUE </i>`;\n        }\n        if(powChecked){\n            let update = tokenAcum.power.accumulated.value + Math.round(tokenAcum.power.final.value/2);\n            token.actor.update({\"data.domine.kiAccumulation.power.accumulated.value\": update});\n            \n            genericUpdate = genericUpdate + Math.round(tokenAcum.power.final.value/2);\n            \n            chatNotification = chatNotification + `<i>${Math.round(tokenAcum.power.final.value/2)} POD </i>`;\n        }\n        if(wilChecked){\n            let update = tokenAcum.willPower.accumulated.value + Math.round(tokenAcum.willPower.final.value/2);\n            token.actor.update({\"data.domine.kiAccumulation.willPower.accumulated.value\": update});\n            \n            genericUpdate = genericUpdate + Math.round(tokenAcum.willPower.final.value/2);\n            \n            chatNotification = chatNotification + `<i>${Math.round(tokenAcum.willPower.final.value/2)} VOL </i>`;\n        }\n        \n        genericUpdate = genericUpdate + tokenAcum.generic.value;\n        if(genericUpdate >= tokenAcum.generic.max){\n            genericUpdate = tokenAcum.generic.max;\n        }\n        token.actor.update({\"data.domine.kiAccumulation.generic.value\": genericUpdate});\n    }\n    chatNotification = chatNotification + \"<i>) puntos de ki</i>\";\n    ChatMessage.create({content: chatNotification});\n}\n\nlet agiAcum = token.actor.data.data.domine.kiAccumulation.agility.final.value;\nlet conAcum = token.actor.data.data.domine.kiAccumulation.constitution.final.value;\nlet dexAcum = token.actor.data.data.domine.kiAccumulation.dexterity.final.value;\nlet powAcum = token.actor.data.data.domine.kiAccumulation.power.final.value;\nlet strAcum = token.actor.data.data.domine.kiAccumulation.strength.final.value;\nlet wilAcum = token.actor.data.data.domine.kiAccumulation.willPower.final.value;\n\nlet dialogContent = `\n                    <div>\n                        <center><h3>Escoge los campos a acumular</h3></center>\n                    </div>\n                    <div>\n                        <center><i>La Acumulación Parcial te permite acumular ki de forma pasiva mientras realizas otras acciones, al coste de reducir la acumulación a la mitad (Redondeado hacia arriba). La Acumulación Plena te permite acumular todo el ki que te correspondería, pero te inhibe de realizar acciones activas este turno</i></center>\n                    </div>\n                    <div class=\"flexrow flex-center\">\n                        <div class=\"flexcol\">\n                            <center>\n                                <input id=\"AGIEnable\" type=\"checkbox\"/> \n                                <h3>AGI</h3> ${agiAcum} <br> <p style=\"color:#B22C2C\";>V</p> ${Math.round(agiAcum/2)}\n                            </center>\n                        </div>\n                        <div class=\"flexcol\">\n                            <center>\n                                <input id=\"CONEnable\" type=\"checkbox\"/> \n                                <h3>CON</h3> ${conAcum} <br> <p style=\"color:#B22C2C\";>V</p> ${Math.round(conAcum/2)}\n                            </center>\n                        </div>\n                        <div class=\"flexcol\">\n                            <center>\n                                <input id=\"DEXEnable\" type=\"checkbox\"/> \n                                <h3>DES</h3> ${dexAcum} <br> <p style=\"color:#B22C2C\";>V</p> ${Math.round(dexAcum/2)}\n                            </center>\n                        </div>\n                        <div class=\"flexcol\">\n                            <center>\n                                <input id=\"POWEnable\" type=\"checkbox\"/> \n                                <h3>POD</h3> ${powAcum} <br> <p style=\"color:#B22C2C\";>V</p> ${Math.round(powAcum/2)}\n                            </center>\n                        </div>\n                        <div class=\"flexcol\">\n                            <center>\n                                <input id=\"STREnable\" type=\"checkbox\"/> \n                                <h3>FUE</h3> ${strAcum} <br> <p style=\"color:#B22C2C\";>V</p> ${Math.round(strAcum/2)}\n                            </center>\n                        </div>\n                        <div class=\"flexcol\">\n                            <center>\n                                <input id=\"WILEnable\" type=\"checkbox\"/> \n                                <h3>VOL</h3> ${wilAcum} <br> <p style=\"color:#B22C2C\";>V</p> ${Math.round(wilAcum/2)}\n                            </center>\n                        </div>\n                    </div>\n                    <br>\n                    `;\nlet stayOpen = false;\nlet d = new Dialog({\n    title: \"Ki Accumulation\",\n    content: dialogContent,\n    buttons: {\n        done: {\n            label: \"Acum. Plena\",\n            callback: (html) => {\n                \n                const agiChecked = html[0].querySelector(\"#AGIEnable\").checked;\n                const conChecked = html[0].querySelector(\"#CONEnable\").checked;\n                const dexChecked = html[0].querySelector(\"#DEXEnable\").checked;\n                const strChecked = html[0].querySelector(\"#STREnable\").checked;\n                const powChecked = html[0].querySelector(\"#POWEnable\").checked;\n                const wilChecked = html[0].querySelector(\"#WILEnable\").checked;\n                \n                if(!agiChecked && !conChecked && !dexChecked && !strChecked && !powChecked && !wilChecked){\n                    stayOpen = true;\n                    throw new Error(\"SELECCIONA AL MENOS UN CAMPO A ACUMULAR\");\n                } else {\n                    stayOpen = false;\n                    updateAcumulation(0,agiChecked,conChecked,dexChecked,strChecked,powChecked,wilChecked);\n                }\n            }\n        },\n        show: {\n            label: \"Acum. Parcial\",\n            callback: (html) => {\n                \n                const agiChecked = html[0].querySelector(\"#AGIEnable\").checked;\n                const conChecked = html[0].querySelector(\"#CONEnable\").checked;\n                const dexChecked = html[0].querySelector(\"#DEXEnable\").checked;\n                const strChecked = html[0].querySelector(\"#STREnable\").checked;\n                const powChecked = html[0].querySelector(\"#POWEnable\").checked;\n                const wilChecked = html[0].querySelector(\"#WILEnable\").checked;\n                \n                if(!agiChecked && !conChecked && !dexChecked && !strChecked && !powChecked && !wilChecked){\n                    stayOpen = true;\n                    throw new Error(\"SELECCIONA AL MENOS UN CAMPO A ACUMULAR\");\n                } else {\n                    stayOpen = false;\n                    updateAcumulation(1,agiChecked,conChecked,dexChecked,strChecked,powChecked,wilChecked);\n                    \n                }\n            }\n        }\n    },\n    default: \"done\",\n    close: () => {\n        if(stayOpen) {\n            stayOpen = false;\n            d.render(true);\n        }\n        \n    }\n}).render(true);","folder":"GaivoXF6EoFyryGU","sort":200000,"ownership":{"default":2,"efyrn4Js5CqfguvB":3},"flags":{"combat-utility-belt":{"macroTrigger":""}},"_stats":{"systemId":"animabf-guote","systemVersion":"1.16.0","coreVersion":"10.303","createdTime":1695383215728,"modifiedTime":1695804958867,"lastModifiedBy":"efyrn4Js5CqfguvB"},"_id":"QguIvnlK86i6CQdp"}
{"name":"Entre la vida y la muerte","type":"script","author":"efyrn4Js5CqfguvB","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":"Ri9hZtL7zyuumwkV","sort":112500,"flags":{"scene-packer":{"hash":"5fb828561f58b29362f7aecb748eb09325b225d2"}},"_id":"RsKjfZGwBwvU6D9M","ownership":{"default":0,"efyrn4Js5CqfguvB":3},"_stats":{"systemId":"animabf-guote","systemVersion":"1.16.0","coreVersion":"10.303","createdTime":null,"modifiedTime":1695332040352,"lastModifiedBy":"efyrn4Js5CqfguvB"}}
{"_id":"RxakkM2azQFC044I","name":"Potencial Psíquico","type":"script","author":"efyrn4Js5CqfguvB","img":"icons/svg/aura.svg","scope":"global","command":"let actors = canvas.tokens.controlled.map(token => {return token.actor});\n\nlet d = new Dialog({\n    title: 'Potencial psíquico',\n    content: `\n      <form class=\"flexcol\">\n        <div class=\"form-group\">\n          <label for=\"exampleInput\">Modificadores</label>\n          <input type=\"Number\" id=\"modificador\" name=\"exampleInput\" placeholder=\"Modificador total\">\n        </div>\n        <div class=\"form-group\">\n          <textarea name=\"exampleText\" placeholder=\"Comentarios\"></textarea>\n        </div>\n      </form>\n    `,\n    buttons: {\n      no: {\n        icon: '<i class=\"fas fa-times\"></i>',\n        label: 'Cancelar'\n      },\n      yes: {\n        icon: '<i class=\"fas fa-check\"></i>',\n        label: 'Sí',\n        callback: (html) => {\n          let input = html.find('[name=\"exampleInput\"]').val();\n          let text = html.find('[name=\"exampleText\"]').val();\n\n          console.log(game);\n          const roll = new ABFFoundryRoll(`1d100xa + ${actors[0].system.psychic.psychicPotential.final.value} + ${input|0}`);\n          roll.roll();\n          roll.toMessage({\n            flavor: `Potencial psíquico\n            | ` + text,\n          });\n        }\n      },\n    },\n    default: 'yes',\nrender: () => $('#modificador').focus()\n  }).render(true);","folder":"Ri9hZtL7zyuumwkV","sort":106250,"flags":{"combat-utility-belt":{"macroTrigger":""}},"ownership":{"default":3,"efyrn4Js5CqfguvB":3},"_stats":{"systemId":"animabf-guote","systemVersion":"1.16.0","coreVersion":"10.303","createdTime":null,"modifiedTime":1695399232499,"lastModifiedBy":"efyrn4Js5CqfguvB"}}
{"_id":"ff5qjAoYNMnq4SGA","name":"Tokenize Token","type":"script","author":"efyrn4Js5CqfguvB","img":"_Recursos/NPC/z.Tokenizer/zTokenFrame.png","scope":"global","command":"window.testUpdate = [];\nlet token = canvas.tokens.controlled[0]\n  let newTokenName = `${token.data.name}_${token.id}`;\n  window.testUpdate = [{\n    _id: token.id,\n    type: \"npc\",\n    img: `tokenizer/npc-images/${newTokenName}.Token.webp`,\n  }];\n\n  let tokenizerOptions = {\n    name: `${newTokenName}`,\n    avatarFilename: token.data.img,\n    tokenFilename: token.data.img\n  };\n  window.Tokenizer.launch(tokenizerOptions, () => {\n    canvas.scene.updateEmbeddedDocuments(\"Token\", window.testUpdate);\n  });","folder":"lVLZRwJ3hoj6OFc9","sort":100000,"flags":{"combat-utility-belt":{"macroTrigger":""}},"ownership":{"default":0,"efyrn4Js5CqfguvB":3},"_stats":{"systemId":"animabf-guote","systemVersion":"1.16.0","coreVersion":"10.303","createdTime":null,"modifiedTime":1695332049131,"lastModifiedBy":"efyrn4Js5CqfguvB"}}
{"folder":"S8Ht1aTB2GSXNfVJ","name":"delete token's Active Effects","type":"script","author":"efyrn4Js5CqfguvB","img":"icons/svg/dice-target.svg","scope":"global","command":"_token.actor.deleteEmbeddedDocuments(\"ActiveEffect\", _token.actor.collections.effects.map(e => e.id));","sort":0,"ownership":{"default":0,"efyrn4Js5CqfguvB":3},"flags":{"combat-utility-belt":{"macroTrigger":""}},"_stats":{"systemId":"animabf-guote","systemVersion":"1.16.0","coreVersion":"10.303","createdTime":1695333096192,"modifiedTime":1695333099394,"lastModifiedBy":"efyrn4Js5CqfguvB"},"_id":"iIzA2bvkolR4crYV"}
{"name":"deleteLastChatMessages","type":"script","author":"efyrn4Js5CqfguvB","img":"icons/svg/book.svg","scope":"global","command":"let currentMessage\nfor (let i = 1; i < 2; i++) {\n\tcurrentMessage = game.messages.contents[game.messages.contents.length - i];\n\t/* \n\tif (currentMessage.flags.core?.initiativeRoll) { currentMessage.delete() };\n\tif (currentMessage.flags?.['koboldworks-turn-announcer']?.turnAnnounce || currentMessage.flags?.['koboldworks-turn-announcer']?.roundCycling) { \n\t        currentMessage.delete()};\n\tif (currentMessage.flags['monks-combat-details']?.roundmarker) { break };\n\t */\n\t currentMessage.delete()\n\n//game.messages.contents[game.messages.contents.length - 1].delete()\n}","folder":"lVLZRwJ3hoj6OFc9","sort":200000,"ownership":{"default":0,"efyrn4Js5CqfguvB":3},"flags":{"combat-utility-belt":{"macroTrigger":""}},"_stats":{"systemId":"animabf-guote","systemVersion":"1.16.0","coreVersion":"10.303","createdTime":1695232204177,"modifiedTime":1695913302017,"lastModifiedBy":"efyrn4Js5CqfguvB"},"_id":"iwPqUoAq6lLmnoP5"}
{"folder":"lVLZRwJ3hoj6OFc9","name":"removeActiveEffects","type":"script","author":"efyrn4Js5CqfguvB","img":"icons/svg/dice-target.svg","scope":"global","command":"(async () => {\n  let effectsToDelete = _token.actor.effects\n    .filter((e) => e.sourceName === \"None\")\n    .map((e) => {\n      return e.id;\n    }); // documents api expects array of ids\n  await token.actor.deleteEmbeddedDocuments(\"ActiveEffect\", effectsToDelete);\n})();","sort":0,"ownership":{"default":0,"efyrn4Js5CqfguvB":3},"flags":{"combat-utility-belt":{"macroTrigger":""}},"_stats":{"systemId":"animabf-guote","systemVersion":"1.16.0","coreVersion":"10.303","createdTime":1695399094291,"modifiedTime":1695399165567,"lastModifiedBy":"efyrn4Js5CqfguvB"},"_id":"jOLw6HqXSbruAIVC"}
{"name":"Don't Mark Dead","type":"script","author":"efyrn4Js5CqfguvB","img":"icons/svg/aura.svg","scope":"global","command":"/**\n*  This macro will make this NPC show as Unconscious (or whatever is the first stage).\n*  This is meant for people that use the \"NPCs die immediately\" setting but still want some NPCs to not be shown as dead.\n*  Use it again to toggle it.\n*/\n\nfor (let e of canvas.tokens.controlled) {\n\tlet hasAlive = !e.document.getFlag(\"healthEstimate\", \"treatAsPC\")\n\te.document.setFlag(\"healthEstimate\", \"treatAsPC\", hasAlive)\n}","folder":"lVLZRwJ3hoj6OFc9","sort":125000,"flags":{"core":{"sourceId":"Macro.bCMlVEb7wx14ACIB"},"advanced-macros":{"runAsGM":false}},"_id":"lZXcsalQJWIzTbXP","ownership":{"default":0,"oPuS5iW18dRDcW4r":3,"efyrn4Js5CqfguvB":3},"_stats":{"systemId":"animabf-guote","systemVersion":"1.16.0","coreVersion":"10.303","createdTime":null,"modifiedTime":1695388112701,"lastModifiedBy":"efyrn4Js5CqfguvB"}}
{"_id":"mHELxrp90LbAOCAG","name":"Raener Devorador","type":"script","author":"efyrn4Js5CqfguvB","img":"icons/creatures/tentacles/tentacles-octopus-black-pink.webp","scope":"global","command":"let raener = game.actors.find((a) => a.name === \"Raener\");\nlet raenerPresenciaDoble = raener.system.general.presence.base.value * 2;\n\nlet target = _token.actor;\nlet rf =\n  target.system.characteristics.secondaries.resistances.physical.base.value;\n\nlet d = new Dialog({\n  title: \"RF contra Devorador de Existencia (Raener)\",\n  content: `\n      <form class=\"flexcol\">\n        <div class=\"form-group\">\n          <label for=\"mod\">Modificador a la RF</label>\n          <input type=\"Number\" id=\"modificador\" name=\"mod\" placeholder=\"Modificador total\">\n        </div>\n        <div class=\"form-group\">\n          <textarea name=\"comments\" placeholder=\"Comentarios\"></textarea>\n        </div>\n      </form>\n    `,\n  buttons: {\n    no: {\n      icon: '<i class=\"fas fa-times\"></i>',\n      label: \"Cancelar\",\n    },\n    yes: {\n      icon: '<i class=\"fas fa-check\"></i>',\n      label: \"Sí\",\n      callback: (html) => {\n        let mod = html.find('[name=\"mod\"]').val();\n        let comments = html.find('[name=\"comments\"]').val();\n\n        console.log(game);\n        const roll = new ABFFoundryRoll(`1d100 + ${rf} + ${mod | 0}`);\n        roll.roll();\n        roll.toMessage({\n          flavor: `Devorador de Existencia: RF contra ${raenerPresenciaDoble}`,\n        });\n\n        // Mensaje para el GM con info extra\n        let resultado = raenerPresenciaDoble - roll._total;\n        let damageHP = Math.max(0, Math.floor(resultado / 2));\n        let damageKi = Math.floor(damageHP / 5);\n\n        const newLifePoints =\n          target.system.characteristics.secondaries.lifePoints.value - damageHP;\n        const newKiPoints = Math.min(\n          raener.system.domine.kiAccumulation.generic.value + damageKi,\n          raener.system.domine.kiAccumulation.generic.max\n        );\n\n        target.update({\n          system: {\n            characteristics: {\n              secondaries: { lifePoints: { value: newLifePoints } },\n            },\n          },\n        });\n        raener.update({\n          system: {\n            domine: { kiAccumulation: { generic: { value: newKiPoints } } },\n          },\n        });\n\n        ChatMessage.create({\n          flavor: `\n            Resultado: ${resultado} \n            | Vida: ${damageHP} \n            | Ki: ${damageKi} \n            | Daño aplicado sobre ${target.name} \n            ${comments ? \"| \" + comments : \"\"}`,\n          whisper: game.users.filter((u) => u.isGM).map((u) => u._id),\n        });\n      },\n    },\n  },\n  default: \"yes\",\n  render: () => $(\"#modificador\").focus(),\n}).render(true);","folder":"S8Ht1aTB2GSXNfVJ","sort":100000,"flags":{"scene-packer":{"hash":"187ed7ad0b359a4355e4e009d82170a8f86c5d2f"},"combat-utility-belt":{"macroTrigger":""}},"ownership":{"default":0,"efyrn4Js5CqfguvB":3},"_stats":{"systemId":"animabf-guote","systemVersion":"1.16.0","coreVersion":"10.303","createdTime":null,"modifiedTime":1695340525296,"lastModifiedBy":"efyrn4Js5CqfguvB"}}
