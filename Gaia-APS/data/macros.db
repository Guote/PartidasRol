{"_id":"21weQHTapjRNlChg","name":"Combate","type":"script","author":"efyrn4Js5CqfguvB","img":"icons/svg/combat.svg","scope":"global","command":"function round5(x) {\n    return Math.round(x / 5) * 5;\n}\n\nfunction cuenta(ATK, DEF, TA, BDMG) {\n    if (DEF > ATK) {\n        return (DEF - ATK) / 2;\n    }\n    return (BDMG * (ATK - (DEF + TA * 10))) / 100;\n}\n\nfunction onSubmit() {\n    var ATK = parseInt(document.getElementById(\"ATK\").value);\n    var DEF = parseInt(document.getElementById(\"DEF\").value);\n    var TA = parseInt(document.getElementById(\"TA\").value);\n    var BDMG = parseInt(document.getElementById(\"BDMG\").value);\n\n    let final = '<div>HA: ' + ATK + ', HD: ' + DEF+ ', TA: ' + TA + ', Daño Base: ' + BDMG + '</div>'\n    if (DEF > ATK) {\n        final = final + '<h2>Bono al contraataque: <span style=\"color:#ff1515\">' + round5(cuenta(ATK, DEF, TA, BDMG)) + '</span></h2>';\n    } else {\n        final = final + '<h2>Daño final: <span style=\"color:#ff1515\">' + round5(cuenta(ATK, DEF, TA, BDMG)) + '</span></h2>';\n    }\n\n    ChatMessage.create({ content: final, whisper: game.collections.get(\"User\").filter((u) => u.isGM).map((u) => game.data.userId) })\n}\n\nlet d = new Dialog({\n    title: \"Calcular daño final\",\n    content: `\n    <div> \n        Ataque: <input type=\"number\" id=\"ATK\"/><br />\n        Defensa: <input type=\"number\" id=\"DEF\"/><br />\n        Tipo de Armadura: <input type=\"number\" id=\"TA\" value=\"0\"/><br />\n        Daño base: <input type=\"number\" id=\"BDMG\" value=\"0\" /><br />\n    </div>`,\n    buttons: {\n        aceptar: {\n            label: \"Aceptar\",\n            callback: () => onSubmit()\n        }\n    },\nrender: () => $('#ATK').focus()\n});\n\nd.render(true)","folder":null,"sort":0,"permission":{"default":0,"efyrn4Js5CqfguvB":3},"flags":{}}
{"_id":"F3Fid0ws8VE4w318","name":"Ataque","type":"script","author":"efyrn4Js5CqfguvB","img":"icons/svg/sword.svg","scope":"global","command":"let actors = canvas.tokens.controlled.map((token) => {\n  return token.actor;\n});\nlet nombre;\nlet ataque;\nlet content = `\n  <form class=\"flexcol\">\n        <div class=\"form-group\">\n          <label for=\"modificador\">Modificadores</label>\n          <input type=\"Number\" id=\"modificador\" name=\"modificador\" placeholder=\"Modificador total\">\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"exampleSelect\">¿Arma usada?</label>\n          <select name=\"exampleSelect\">\n`;\n/* <div class=\"form-group\">\n          <label for=\"Cansancio\">Puntos de cansancio</label>\n          <input type=\"Number\" name=\"Cansancio\" placeholder=\"Cansancio gastado\">\n        </div> */\nfor (let actor of actors) {\n  nombre = actor.data.name;\n  ataque = actor.data.data.combat.attack.value;\n  console.log(actor.data.data.combat.weapons);\n  for (let weapon of actor.data.data.combat.weapons) {\n    console.log(weapon?.name || \"-\");\n    console.log(weapon?.data.attack.value || 0);\n    content =\n      content +\n      `<option value='{\n    \"name\":\"${weapon?.name || \"-\"}\",\n    \"atk\":\"${weapon?.data.attack.final.value || 0}\",\n    \"dmg\":\"${weapon?.data.damage.final.value || 0}\",\n    \"crit\":\"${weapon?.data.critic.primary.value || \"-\"}/${\n        weapon?.data.critic.secondary.value || \"-\"\n      }\",\n    \"special\":\"${weapon?.data.special.value}\"}'>${weapon?.name || \"-\"} </option>\n`;\n  }\n}\ncontent =\n  content +\n  `</select>\n        </div>\n        <div class=\"form-group\">\n          <textarea name=\"exampleText\" placeholder=\"Comentarios\"></textarea>\n        </div>\n      </form>`;\n\nconsole.log(content);\n\nlet d = new Dialog({\n  title: \"Ataque\",\n  content: content,\n  buttons: {\n    no: {\n      icon: '<i class=\"fas fa-times\"></i>',\n      label: \"Cancelar\",\n    },\n    yes: {\n      icon: '<i class=\"fas fa-check\"></i>',\n      label: \"Sí\",\n      callback: (html) => {\n        let mod = html.find('[name=\"modificador\"]').val();\n        /* let cans = html.find('[name=\"Cansancio\"]').val(); */\n        let selectedWeapon = JSON.parse(\n          html.find('[name=\"exampleSelect\"]').val()\n        );\n        let text = html.find('[name=\"exampleText\"]').val();\n        console.log(game);\n        const roll = new ABFFoundryRoll(\n          `1d100xa + ${selectedWeapon.atk} + ${mod | 0}` /* + ${cans | 0}*15 */\n        );\n        roll.roll();\n\n        let weaponDetails = `${selectedWeapon.name} | Daño: ${selectedWeapon.dmg} ${selectedWeapon.crit}\n              ${selectedWeapon.special} | ${text}`;\n\n        roll.toMessage({\n          flavor: `${nombre} ataca`,\n        });\n\n        ChatMessage.create({\n          flavor: `${weaponDetails}`,\n          whisper: game.collections\n            .get(\"User\")\n            .filter((u) => u.isGM)\n            .map((u) => game.data.userId),\n        });\n      },\n    },\n  },\n  default: \"yes\",\n  render: () => $(\"#modificador\").focus(),\n}).render(true);","folder":null,"sort":0,"permission":{"default":2,"efyrn4Js5CqfguvB":3},"flags":{"combat-utility-belt":{"macroTrigger":""}}}
{"name":"Mark Dead","type":"script","author":"efyrn4Js5CqfguvB","img":"icons/svg/bones.svg","scope":"global","command":"/**\n*  This macro will mark the selected tokens as dead.\n*  If all the selected tokens are dead, they will be marked\n   as alive instead.\n*/\n\nfor (let e of canvas.tokens.controlled) {\n\tlet hasAlive = !e.document.getFlag(\"healthEstimate\", \"dead\")\n\te.document.setFlag(\"healthEstimate\", \"dead\", hasAlive)\n}","folder":null,"sort":0,"permission":{"default":0,"efyrn4Js5CqfguvB":3},"flags":{"core":{"sourceId":"Macro.bCMlVEb7wx14ACIB"}},"_id":"H5n5sPmj01MSQTtv"}
{"_id":"HlOvvgMFxDGQG7xF","name":"Defensa","type":"script","author":"efyrn4Js5CqfguvB","img":"icons/svg/shield.svg","scope":"global","command":"let actors = canvas.tokens.controlled.map(token => {return token.actor});\nlet parada;\nlet esquiva;\nlet nombre;\n  for(let actor of actors){\n    parada = actor.data.data.combat.block.final.value\n    esquiva = actor.data.data.combat.dodge.final.value\n    nombre = actor.data.name\n  }\n\nlet d = new Dialog({\n    title: 'Defensas',\n    content: `\n      <form class=\"flexcol\">\n        <div class=\"form-group\">\n          <label for=\"exampleInput\">Modificadores</label>\n          <input type=\"Number\" id=\"modificador\" name=\"exampleInput\" placeholder=\"Modificador total\">\n        </div>\n        <div class=\"form-group\">\n          <textarea name=\"exampleText\" placeholder=\"Comentarios\"></textarea>\n        </div>\n      </form>\n    `,\n    /* <div class=\"form-group\">\n          <label for=\"Cansancio\">Puntos de cansancio</label>\n          <input type=\"Number\" name=\"Cansancio\" placeholder=\"Cansancio gastado\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"exampleSelect\">Defensa</label>\n          <select name=\"exampleSelect\">\n            <option value=\"0\">1ª Defensa</option>\n            <option value=\"30\">2ª Defensa</option>\n            <option value=\"50\">3ª Defensa</option>\n            <option value=\"70\">4ª Defensa</option>\n            <option value=\"90\">5ª Defensa</option>\n          </select>\n        </div> */\n    buttons: {\n      no: {\n        icon: '<i class=\"fas fa-times\"></i>',\n        label: 'Cancelar'\n      },\n      yes: {\n        icon: '<i class=\"fas fa-check\"></i>',\n        label: 'Sí',\n        callback: (html) => {\n          let input = html.find('[name=\"exampleInput\"]').val();\n          let input2 = html.find('[name=\"Cansancio\"]').val();\n          let select = html.find('[name=\"exampleSelect\"]').val();\n          let text = html.find('[name=\"exampleText\"]').val();\n\n          console.log(game);\n          const roll = new ABFFoundryRoll(`1d100xa + ${Math.max(parada,esquiva)} + ${input|0}`);\n          roll.roll();\n          let ta = actors[0].data.data.combat.totalArmor.at\n          roll.toMessage({\n            flavor: `${nombre} defiende`,\n          });\n\n          ChatMessage.create({\n            flavor: `\n            FIL: ${ta.cut.value} \n            CON: ${ta.impact.value} \n            PEN: ${ta.thrust.value} \n            CAL: ${ta.heat.value} \n            ELE: ${ta.electricity.value} \n            FRI: ${ta.cold.value} \n            ENE: ${ta.energy.value} \n            | ` + text,\n            whisper: game.collections\n              .get(\"User\")\n              .filter((u) => u.isGM)\n              .map((u) => game.data.userId),\n          });\n        }\n      },\n    },\n    default: 'yes',\nrender: () => $('#modificador').focus()\n  }).render(true);","folder":null,"sort":0,"permission":{"default":2,"efyrn4Js5CqfguvB":3},"flags":{"combat-utility-belt":{"macroTrigger":""}}}
{"_id":"KKuKt4KmY8Z8QCDc","name":"d100","type":"script","author":"efyrn4Js5CqfguvB","img":"icons/svg/dice-target.svg","scope":"global","command":"let d = new Dialog( {\n  title: 'Lanzar dados',\n  content: `\n    <form>\n    <input type=\"text\" id=\"mod\" name=\"baseinput\" placeholder=\"Número\"> \n    </form>\n    `,\n  buttons: {\n    no: {\n      label: 'Cancelar'\n         },\n    yes: {\n      label: 'Lanzar',\n      callback: (html) => {\n      const roll = new ABFFoundryRoll(\"1d100xa +\"+html.find('[name=\"baseinput\"]')[0].value);\n      roll.toMessage();\n                         }\n          }\n            },\n  default: 'yes',\n  close: () => {},\n  render: () => $('#modificador').focus()\n}).render(true);","folder":null,"sort":0,"permission":{"default":3,"efyrn4Js5CqfguvB":3},"flags":{"combat-utility-belt":{"macroTrigger":""}}}
{"name":"Entre la vida y la muerte","type":"script","author":"efyrn4Js5CqfguvB","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"permission":{"default":0,"efyrn4Js5CqfguvB":3},"flags":{"scene-packer":{"hash":"5fb828561f58b29362f7aecb748eb09325b225d2"}},"_id":"RsKjfZGwBwvU6D9M"}
{"_id":"RxakkM2azQFC044I","name":"Potencial Psíquico","type":"script","author":"efyrn4Js5CqfguvB","img":"icons/svg/aura.svg","scope":"global","command":"let actors = canvas.tokens.controlled.map(token => {return token.actor});\n\nlet d = new Dialog({\n    title: 'Potencial psíquico',\n    content: `\n      <form class=\"flexcol\">\n        <div class=\"form-group\">\n          <label for=\"exampleInput\">Modificadores</label>\n          <input type=\"Number\" id=\"modificador\" name=\"exampleInput\" placeholder=\"Modificador total\">\n        </div>\n        <div class=\"form-group\">\n          <textarea name=\"exampleText\" placeholder=\"Comentarios\"></textarea>\n        </div>\n      </form>\n    `,\n    buttons: {\n      no: {\n        icon: '<i class=\"fas fa-times\"></i>',\n        label: 'Cancelar'\n      },\n      yes: {\n        icon: '<i class=\"fas fa-check\"></i>',\n        label: 'Sí',\n        callback: (html) => {\n          let input = html.find('[name=\"exampleInput\"]').val();\n          let text = html.find('[name=\"exampleText\"]').val();\n\n          console.log(game);\n          const roll = new ABFFoundryRoll(`1d100xa + ${actors[0].data.data.psychic.psychicPotential.final.value} + ${input|0}`);\n          roll.roll();\n          roll.toMessage({\n            flavor: `Potencial psíquico\n            | ` + text,\n          });\n        }\n      },\n    },\n    default: 'yes',\nrender: () => $('#modificador').focus()\n  }).render(true);","folder":null,"sort":0,"permission":{"default":3,"efyrn4Js5CqfguvB":3},"flags":{"combat-utility-belt":{"macroTrigger":""}}}
{"name":"Mark Dead","type":"script","author":"efyrn4Js5CqfguvB","img":"icons/svg/bones.svg","scope":"global","command":"/**\n*  This macro will mark the selected tokens as dead.\n*  If all the selected tokens are dead, they will be marked\n   as alive instead.\n*/\n\nfor (let e of canvas.tokens.controlled) {\n\tlet hasAlive = !e.document.getFlag(\"healthEstimate\", \"dead\")\n\te.document.setFlag(\"healthEstimate\", \"dead\", hasAlive)\n}","folder":null,"sort":0,"permission":{"default":0,"efyrn4Js5CqfguvB":3},"flags":{"core":{"sourceId":"Macro.bCMlVEb7wx14ACIB"}},"_id":"TrVYplweolzHJEDB"}
{"name":"Don't Mark Dead","type":"script","author":"efyrn4Js5CqfguvB","img":"icons/svg/aura.svg","scope":"global","command":"/**\n*  This macro will make this NPC show as Unconscious (or whatever is the first stage).\n*  This is meant for people that use the \"NPCs die immediately\" setting but still want some NPCs to not be shown as dead.\n*  Use it again to toggle it.\n*/\n\nfor (let e of canvas.tokens.controlled) {\n\tlet hasAlive = !e.document.getFlag(\"healthEstimate\", \"treatAsPC\")\n\te.document.setFlag(\"healthEstimate\", \"treatAsPC\", hasAlive)\n}","folder":null,"sort":0,"permission":{"default":0,"oPuS5iW18dRDcW4r":3,"efyrn4Js5CqfguvB":3},"flags":{"core":{"sourceId":"Macro.bCMlVEb7wx14ACIB"},"advanced-macros":{"runAsGM":false}},"_id":"lZXcsalQJWIzTbXP"}
{"_id":"mHELxrp90LbAOCAG","name":"Raener Devorador","type":"script","author":"efyrn4Js5CqfguvB","img":"icons/svg/dice-target.svg","scope":"global","command":"let actor = _token.actor\nlet raener = game.actors.find(actor => actor.data.name==='Raener')\nlet raenerPresenciaDoble = raener.data.data.general.presence.base.value*2\n\nlet rf = actor.data.data.characteristics.secondaries.resistances.physical.base.value\n\nlet d = new Dialog({\n    title: 'RF contra Devorador de Existencia (Raener)',\n    content: `\n      <form class=\"flexcol\">\n        <div class=\"form-group\">\n          <label for=\"mod\">Modificador a la RF</label>\n          <input type=\"Number\" id=\"modificador\" name=\"mod\" placeholder=\"Modificador total\">\n        </div>\n        <div class=\"form-group\">\n          <textarea name=\"comments\" placeholder=\"Comentarios\"></textarea>\n        </div>\n      </form>\n    `,\n    buttons: {\n      no: {\n        icon: '<i class=\"fas fa-times\"></i>',\n        label: 'Cancelar'\n      },\n      yes: {\n        icon: '<i class=\"fas fa-check\"></i>',\n        label: 'Sí',\n        callback: (html) => {\n          let mod = html.find('[name=\"mod\"]').val();\n          let comments = html.find('[name=\"comments\"]').val();\n\n          console.log(game);\n          const roll = new ABFFoundryRoll(`1d100 + ${rf} + ${mod|0}`);\n          roll.roll();\n          roll.toMessage({\n              flavor: `RF contra ${raenerPresenciaDoble}`\n          });\n\n        // Mensaje para el GM con info extra\n        let resultado = raenerPresenciaDoble - roll._total\n        let damageHP = Math.max(0,Math.floor(resultado/2))\n        let damageKi = Math.floor(damageHP/5)\n        \n        const newLifePoints = _token.actor.data.data.characteristics.secondaries.lifePoints.value - damageHP;\n        \n        _token.actor.update({\n            data: {\n                characteristics: {\n                    secondaries: { lifePoints: { value: newLifePoints } }\n                }\n            }\n        })\n        \n          ChatMessage.create({\n            flavor: `\n            Resultado: ${resultado} \n            | Vida: ${damageHP} \n            | Ki: ${damageKi} \n            | Daño aplicado sobre ${actor.data.name} \n            ${comments ? \"| \" + comments : \"\"}`,\n            whisper: game.collections\n              .get(\"User\")\n              .filter((u) => u.isGM)\n              .map((u) => game.data.userId),\n          });\n        }\n      },\n    },\n    default: 'yes',\nrender: () => $('#modificador').focus()\n  }).render(true);","folder":null,"sort":0,"permission":{"default":0,"efyrn4Js5CqfguvB":3},"flags":{"scene-packer":{"hash":"187ed7ad0b359a4355e4e009d82170a8f86c5d2f"},"combat-utility-belt":{"macroTrigger":""}}}
{"_id":"nrJ0mm75nZnFZ8Xp","name":"testpotencial","type":"script","author":"efyrn4Js5CqfguvB","img":"icons/svg/dice-target.svg","scope":"global","command":"let actors = canvas.tokens.controlled.map(token => {return token.actor});\n\nlet proyActor = actors[0].data.data.psychic.psychic\n\nlet proy = new Dialog({\n    title: 'Proyección psíquica',\n    content: `\n      <form class=\"flexcol\">\n        <div class=\"form-group\">\n          <label for=\"exampleInput\">Proyección</label>\n          <input type=\"Number\" id=\"proyecc\" name=\"Proyección\" value=\"150\">\n          <input type=\"Number\" id=\"modificador\" name=\"Mod\" placeholder=\"Modificador total\">\n        </div>\n        <div class=\"form-group\">\n          <textarea name=\"exampleText\" placeholder=\"Comentarios\"></textarea>\n        </div>\n      </form>\n    `,\n    buttons: {\n      no: {\n        icon: '<i class=\"fas fa-times\"></i>',\n        label: 'Cancelar'\n      },\n      yes: {\n        icon: '<i class=\"fas fa-check\"></i>',\n        label: 'Sí',\n        callback: (html) => {\n          let proyecc = html.find('[name=\"Proyección\"]').val();\n          let mod = html.find('[name=\"Mod\"]').val();\n          let text = html.find('[name=\"exampleText\"]').val();\n\n          console.log(game);\n          const roll = new ABFFoundryRoll(`1d100xa + ${proyecc|0} + ${mod|0}`);\n          roll.roll();\n          roll.toMessage({\n            flavor: `Proyección psíquica\n            | ` + text,\n          });\n        }\n      },\n    },\n    default: 'yes',\nrender: () => $('#modificador').focus()\n  }).render(true);\n\nlet d = new Dialog({\n    title: 'Potencial psíquico',\n    content: `\n      <form class=\"flexcol\">\n        <div class=\"form-group\">\n          <label for=\"exampleInput\">Potencial</label>\n          <input type=\"Number\" id=\"potencial\" name=\"Potencial\" value=\"100\">\n          <input type=\"Number\" id=\"modificador\" name=\"exampleInput\" placeholder=\"Modificador total\">\n        </div>\n        <div class=\"form-group\">\n          <textarea name=\"exampleText\" placeholder=\"Comentarios\"></textarea>\n        </div>\n      </form>\n    `,\n    buttons: {\n      no: {\n        icon: '<i class=\"fas fa-times\"></i>',\n        label: 'Cancelar'\n      },\n      yes: {\n        icon: '<i class=\"fas fa-check\"></i>',\n        label: 'Sí',\n        callback: (html) => {\n          let pot = html.find('[name=\"Potencial\"]').val();\n          let mod = html.find('[name=\"mod\"]').val();\n          let text = html.find('[name=\"exampleText\"]').val();\n\n          console.log(game);\n          const roll = new ABFFoundryRoll(`1d100xa + ${pot|0} + ${mod|0}`);\n          roll.roll();\n          roll.toMessage({\n            flavor: `Potencial psíquico\n            | ` + text,\n          });\n        }\n      },\n    },\n    default: 'yes',\nrender: () => $('#modificador').focus()\n  }).render(true);","folder":null,"sort":0,"permission":{"default":0,"efyrn4Js5CqfguvB":3},"flags":{"scene-packer":{"hash":"4e77b34d802edd229c9555d6365219e694bc9b5f"},"combat-utility-belt":{"macroTrigger":""}}}
