{"name":"Setup Token Move Tile","type":"script","author":"NoP0yFyEU0MJHD4O","img":"icons/svg/dice-target.svg","scope":"global","command":"//This macro will setup a Tile to be used with the Token Move Tile Macro\n//Please be aware that it will erase any current trigger actions\n\nlet macro = game.macros.contents.find(m => m.name == 'Token Move Tile');\nif(!macro) ui.notifications.error('Could not find the Token Move Tile macro, please import it first');\n\nif(!canvas.background.controlled.length) ui.notifications.error('No currently selected Tile');\n\nfor(let tile of canvas.background.controlled){\ntile.document.update({'flags.monks-active-tiles': {\"active\":true,\"restriction\":\"all\",\"controlled\":\"all\",\"trigger\":\"enter\",\"pertoken\":false,\"minrequired\":0,\"chance\":100,\"actions\":[{\"action\":\"movement\",\"data\":{\"snap\":true},\"id\":\"VMklI1OeHk1uLCQu\"},{\"action\":\"runmacro\",\"data\":{\"macroid\": macro.id ,\"args\":\"\",\"runasgm\":\"unknown\"},\"id\":\"MgzPETdGOOROIzpY\"},{\"action\":\"anchor\",\"data\":{\"tag\":\"MoveX\",\"stop\":true},\"id\":\"pJOpt2BgyvSBA5YB\"},{\"action\":\"alter\",\"data\":{\"entity\":{\"id\":\"tile\",\"name\":\"This Tile\"},\"attribute\":\"x\",\"value\":\"{{value.movetile}}\",\"chatMessage\":false,\"rollmode\":\"roll\"},\"id\":\"1Ip7FePYYXvKMh7a\"},{\"action\":\"anchor\",\"data\":{\"tag\":\"MoveY\",\"stop\":true},\"id\":\"oLmonh1fLNIE87un\"},{\"action\":\"alter\",\"data\":{\"entity\":{\"id\":\"tile\",\"name\":\"This Tile\"},\"attribute\":\"y\",\"value\":\"{{value.movetile}}\",\"chatMessage\":false,\"rollmode\":\"roll\"},\"id\":\"0otzDBcwP6xZY9L0\"}]}});\n}\n\nui.notifications.info('Tiles have been setup');","folder":null,"sort":0,"permission":{"default":0,"NoP0yFyEU0MJHD4O":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.EYCPn3mGwh8eNXoW"}},"_id":"1PIrWkJ3TuQsKiZz"}
{"name":"Multiple Anchors based on DC","type":"script","author":"NoP0yFyEU0MJHD4O","img":"icons/svg/dice-target.svg","scope":"global","command":"let results = arguments[0].value.tokenresults;\n\nlet goto = [];\ngoto.push({ tokens: await Promise.all(results.filter(r => r.roll.total < 10).map(async (t) => { return await fromUuid(t.uuid); })), tag: 'anchor-below-10' });\ngoto.push({ tokens: await Promise.all(results.filter(r => r.roll.total >= 10 && r.roll.total < 15).map(async (t) => { return await fromUuid(t.uuid); })), tag: 'anchor-10-15' });\ngoto.push({ tokens: await Promise.all(results.filter(r => r.roll.total >= 15 && r.roll.total < 20).map(async (t) => { return await fromUuid(t.uuid); })), tag: 'anchor-15-20' });\ngoto.push({ tokens: await Promise.all(results.filter(r => r.roll.total >= 20).map(async (t) => { return await fromUuid(t.uuid); })), tag: 'anchor-above-20' });\n\ngoto = goto.filter(g => g.tokens.length > 0);\n\nreturn {goto: goto};","folder":null,"sort":0,"permission":{"default":0,"NoP0yFyEU0MJHD4O":3},"flags":{"core":{"sourceId":"Macro.trh5rGVpgaOsw3kY"}},"_id":"AZaycYFGRNM6rhxS"}
{"name":"Token Move Tile","type":"script","author":"NoP0yFyEU0MJHD4O","img":"icons/svg/dice-target.svg","scope":"global","command":"//Use this Macro to allow Tokens to move a Tile around the screen.  Good for interactive puzzles or boulders.\nlet pt = arguments[0].pt;\nlet tile = arguments[0].tile;\n\nlet midTile = { x: tile.data.x + (tile.data.width / 2), y: tile.data.y + (tile.data.height / 2)};\n\nlet tileX1 = tile.data.x;\nlet tileY1 = tile.data.y;\nlet tileX2 = tile.data.x + tile.data.width;\nlet tileY2 = tile.data.y + tile.data.height;\n\nconst tokenRay = new Ray({ x: midTile.x, y: midTile.y }, { x: pt.x, y: pt.y });\ntokenRay.B = tokenRay.project(canvas.scene.data.size);\n\nlet wallRay;\nlet result = {continue: false};\nlet checkSize = canvas.scene.data.size - 10;\nif (tokenRay.intersectSegment([tileX1, tileY1, tileX2, tileY1])) {\n   wallRay = new Ray({ x: midTile.x, y: tileY2 }, { x: midTile.x, y: tileY2 + checkSize });\n   result = {goto : 'MoveY', movetile: tile.y + canvas.scene.data.size};\n} else if (tokenRay.intersectSegment([tileX2, tileY1, tileX2, tileY2])) {\n   wallRay = new Ray({ x: tileX1, y: midTile.y}, { x: tileX1 - checkSize, y: midTile.y });\n   result = {goto : 'MoveX', movetile: tile.x - canvas.scene.data.size};\n} else if (tokenRay.intersectSegment([tileX1, tileY2, tileX2, tileY2])) {\n   wallRay = new Ray({ x: midTile.x, y: tileY1 }, { x: midTile.x, y: tileY1 - checkSize });\n   result = {goto : 'MoveY', movetile: tile.y - canvas.scene.data.size};\n} else if (tokenRay.intersectSegment([tileX1, tileY1, tileX1, tileY2])) {\n   wallRay = new Ray({ x: tileX2, y: midTile.y}, { x: tileX2 + checkSize, y: midTile.y });\n   result = {goto : 'MoveX', movetile: tile.x + canvas.scene.data.size};\n}\n\nif(wallRay && canvas.walls.checkCollision(wallRay))\n   result = {continue: false};\n\nreturn result;","folder":null,"sort":0,"permission":{"default":0,"NoP0yFyEU0MJHD4O":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.cAVAvcm7WE13JA1G"}},"_id":"QP1kJaktR4h1CXgL"}
{"name":"Teleport to a Random Location","type":"script","author":"NoP0yFyEU0MJHD4O","img":"icons/svg/dice-target.svg","scope":"global","command":"const locations = [\n{x: 200, y: 200},\n{x: 300, y: 200},\n{x: 300, y: 300},\n{x: 200, y: 300}\n];\n\nconst idx = Math.floor(Math.random() * locations.length);\nconst location = locations[idx];\n\nreturn {location: location};","folder":null,"sort":0,"permission":{"default":0,"NoP0yFyEU0MJHD4O":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.6Lt26idDC65oA776"}},"_id":"UBWrfsfeuSfC7Ybh"}
{"name":"Redirect Based on Trigger Method","type":"script","author":"NoP0yFyEU0MJHD4O","img":"icons/svg/dice-target.svg","scope":"global","command":"switch(arguments[0].method) {\n    case 'enter': return { goto: '_enter' };\n    case 'exit': return { goto: '_exit' };\n    case 'click': return { goto: '_click' };\n}","folder":null,"sort":0,"permission":{"default":0,"NoP0yFyEU0MJHD4O":3},"flags":{"core":{"sourceId":"Macro.VszVFPkIwH2OeGIN"}},"_id":"YJmBxFu7fefVkFxS"}
{"name":"Generate Macro from Tile","type":"script","author":"NoP0yFyEU0MJHD4O","img":"icons/svg/dice-target.svg","scope":"global","command":"if(!canvas.background.controlled.length) ui.notifications.error('No currently selected Tile');\n\nfor(let tile of canvas.background.controlled){\n    let tileData = JSON.stringify(tile.document.data.flags[\"monks-active-tiles\"] || {});\n    delete tileData.history;\n    let macroCmd = `\nif(!canvas.background.controlled.length) ui.notifications.error('No currently selected Tile');\n\nfor(let tile of canvas.background.controlled){\n    tile.document.update({'flags.monks-active-tiles': ${tileData}});\n}\n\nui.notifications.info('Tiles have been setup');\n`;\n    const macro = await Macro.create({ name: \"Setup Active Tile\", type: \"script\", scope: \"global\", command: macroCmd });\n    macro.sheet.render(true);\n}","folder":null,"sort":0,"permission":{"default":0,"NoP0yFyEU0MJHD4O":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.EbYpYt23z3Wk0rTY"}},"_id":"dSBcFapNEorDltBh"}
{"name":"Activate all Tiles","type":"script","author":"NoP0yFyEU0MJHD4O","img":"icons/svg/dice-target.svg","scope":"global","command":"/*\nSo if you forget to set the Tile to active while you're creating them\nor if you want to reset the scene you can use this macro to re-activate\nall the Active Tiles.\n*/\nfor(let tile of canvas.scene.tiles){\n  if(tile.data.flags['monks-active-tiles'] && !tile.data.flags['monks-active-tiles'].active){\n    await tile.setFlag('monks-active-tiles', 'active', true);\n  }\n}","folder":null,"sort":0,"permission":{"default":0,"NoP0yFyEU0MJHD4O":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.sxbiqFyIjwSEgMmp"}},"_id":"eEJTeKvdduCBlk4W"}
