var __defProp=Object.defineProperty;var __getOwnPropNames=Object.getOwnPropertyNames;var __name=(target,value)=>__defProp(target,"name",{value,configurable:!0});var __esm=(fn,res)=>function(){return fn&&(res=(0,fn[__getOwnPropNames(fn)[0]])(fn=0)),res};function wrapNumber(num,min,max){let range=max-min+1,t=(num-min+1)%range-1;return(t<0?range+t:t)+min}var init_math=__esm({"src/helpers/math.mjs"(){"use strict";__name(wrapNumber,"wrapNumber")}});var quench_exports={};var init_quench=__esm({"src/modules/quench.mjs"(){"use strict";init_math();quench.registerBatch("koboldworks-turn-announcer.helpers",__name(async function({describe,it,expect,before,after}={}){describe("wrapNumber",__name(function(){it("wrap 5 [0 \u2013 4] = 0",function(){expect(wrapNumber(5,0,4)).to.equal(0)}),it("wrap 6 [2 \u2013 4] = 3",function(){expect(wrapNumber(6,2,4)).to.equal(3)}),it("wrap -1 [0 \u2013 4] = 4",function(){expect(wrapNumber(-1,0,4)).to.equal(4)}),it("wrap -2 [0 \u2013 4] = 3",function(){expect(wrapNumber(-2,0,4)).to.equal(3)}),it("wrap -2 [2 \u2013 4] = 4",function(){expect(wrapNumber(-2,2,4)).to.equal(4)}),it("wrap -102 [0 \u2013 10] = 8",function(){expect(wrapNumber(-102,0,10)).to.equal(8)}),it("wrap 103 [0 \u2013 10] = 4",function(){expect(wrapNumber(103,0,10)).to.equal(4)})},"testWrapNumber"))},"testHelpers"),{displayName:game.i18n.localize("Koboldworks.TurnAnnouncer.Tests.Helpers")})}});init_math();var getPermissionLevels=__name(()=>{switch(game.release?.generation??8){default:case 10:return CONST.DOCUMENT_OWNERSHIP_LEVELS;case 9:return CONST.DOCUMENT_PERMISSION_LEVELS;case 8:return CONST.ENTITY_PERMISSIONS.OBSERVER}},"getPermissionLevels"),getDocData=__name(doc=>doc?game.release?.generation>=10?doc:doc.data:void 0,"getDocData"),getProtoToken=__name(actor=>actor?game.release?.generation>=10?actor.prototypeToken.img:actor.data.token.img:void 0,"getProtoToken"),getDefaultPermission=__name(thing=>thing?(game.release?.generation>=10?thing.ownership:thing.data.permission).default:void 0,"getDefaultPermission"),getUsers=__name((thing,testPerm)=>thing?Object.entries(game.release?.generation>=10?thing.ownership:thing.data.permission).filter(([_,level])=>level>=testPerm).map(([uid,_])=>uid):[],"getUsers");var CFG={module:"koboldworks-turn-announcer",SETTING:{missedKey:"missedTurn",hidePortrait:"hidePortrait",obfuscateNPCs:"obfuscateNPCs",roundCycling:"roundCycling",compact:"compact",turnLabel:"turnLabel",roundLabel:"roundLabel"}},turn_template_file=`modules/${CFG.module}/template/turn-announcer.hbs`,round_template_file=`modules/${CFG.module}/template/round-cycling.hbs`,turnTemplate,roundTemplate;Hooks.once("init",()=>{getTemplate(turn_template_file).then(t=>turnTemplate=t),getTemplate(round_template_file).then(t=>roundTemplate=t)});var lastCombatant={combatant:null,get tokenId(){return this.combatant?.token?.id},spoke:!1};function hideContent(content){content&&(content.replaceChildren(),content.style.display="none")}__name(hideContent,"hideContent");function compressTurnAnnounceMessage(cm,html,main){game.settings.get(CFG.module,CFG.SETTING.compact)&&main.classList.add("compact")}__name(compressTurnAnnounceMessage,"compressTurnAnnounceMessage");function compressRoundCyclingMessage(cm,html,main){if(!main)return;main.classList.add("koboldworks","round-cycling");let header=html.querySelector(".message-header");if(!header)return;header.querySelector(".message-sender")?.remove();let content=html.querySelector(".message-content");if(!content)return;let msg=content.querySelector(".round-message");header.prepend(msg);let icon=document.createElement("i");icon.classList.add("fas","fa-hourglass-start"),msg?.prepend(icon," ");let data=content.querySelector(".round-cycling");data?.dataset&&(main.dataset.combatId=data.dataset.combatId,main.dataset.round=data.dataset.round),hideContent(content)}__name(compressRoundCyclingMessage,"compressRoundCyclingMessage");function compressMissedTurnMessage(cm,html,main){main.classList.add("koboldworks","missed-turn-announcer");let content=html.querySelector(".message-content > .turn-announcer"),header=main.querySelector(".message-header");if(!header)return;header.classList.remove("message-header");let wh=header.querySelector(".whisper-to");wh&&(main.title=wh.textContent,wh.remove()),header.querySelectorAll(".message-sender,.message-timestamp")?.forEach(el=>el.style.display="none");let msgb=document.createElement("div");msgb.classList.add("missed-token");let missedIcon=content.querySelector(".missed-turn-icon"),missedText=content.querySelector(".missed-turn-text"),missedCombatant=content.querySelector(".missed-combatant"),missedName=document.createElement("span");missedName.classList.add("missed-turn-name"),missedName.textContent=missedCombatant?.textContent?.trim()??"...",msgb.append(missedIcon," ",missedName," ",missedText),header.prepend(msgb),content&&hideContent(content)}__name(compressMissedTurnMessage,"compressMissedTurnMessage");function updateLastCombatantFromMsg(cm,flags){lastCombatant.spoke=!1,lastCombatant.combatant=game.combat?.getCombatantByToken(flags.token)??null}__name(updateLastCombatantFromMsg,"updateLastCombatantFromMsg");function chatMessageEvent(cm,[html],_options){let isGM=game.user.isGM,cmd=getDocData(cm),flags=cmd.flags?.[CFG.module];if(!flags){isGM&&cmd.speaker?.token===lastCombatant.tokenId&&(lastCombatant.spoke=!0);return}let main=html.closest("[data-message-id]");if(html?.classList.add("turn-announcer","koboldworks"),flags.missedTurn?compressMissedTurnMessage(cm,html,main):flags.turnAnnounce||flags.token?(updateLastCombatantFromMsg(cm,flags),compressTurnAnnounceMessage(cm,html,main)):flags.roundCycling&&compressRoundCyclingMessage(cm,html,main),main?.querySelector(".whisper-to")?.remove(),isGM&&cm.getFlag(CFG.module,"obfuscated")){let combatId=cm.getFlag(CFG.module,"combat"),combatantId=cm.getFlag(CFG.module,"combatant"),combat=game.combats.get(combatId),combatant=combat?.combatants.get(combatantId);if(combatant?.token){let name=html.querySelector(".actor .name-box .name");name&&(name.textContent=combatant.token.name),html.classList.add("obfuscated")}}}__name(chatMessageEvent,"chatMessageEvent");var lastReported={};function missedTurn(data,context){if(data.last?.spoke||data.last==null)return;let preUpdate=context._turnAnnouncer;if(preUpdate?.combat===game.combats.active.id&&(preUpdate.roundShift<0||preUpdate.turnShift<0&&preUpdate.roundShift<=0))return;let{last,combat,combatant}=data;if(lastReported.combat!==void 0&&combat.id!==lastReported.combat||last.token?.id===combatant?.token?.id||lastReported.id===last.token?.id)return;lastReported={id:last.token?.id,combat:combat.id};let mt=game.i18n.localize("Koboldworks.TurnAnnouncer.MissedTurn"),scene=combat.scene,actor=last.actor?.id,token=last.token?.id,alias=last.name;return actor===void 0||token===void 0?void 0:{content:`<div class="koboldworks turn-announcer"><span class='missed-turn-icon'><i class="fas fa-exclamation-triangle"></i></span><span class='missed-combatant'>${data.last.combatant.name}</span> <span class='missed-turn-text'>${mt}</span></div>`,rollMode:"selfroll",whisper:[...game.users.filter(u=>u.isGM)],speaker:{scene,actor,token,alias},flags:{[CFG.module]:{missedTurn:!0,token,actor,combatant:last.combatant.id}},user:game.user.id}}__name(missedTurn,"missedTurn");function generateCards(info,context){let msgs=[];if(game.settings.get(CFG.module,CFG.SETTING.missedKey)){let msg=missedTurn(info,context);msg&&msgs.push(msg)}if(getDocData(info.combatant).defeated||info.last?.combatant!=null&&info.last.combatant.id===info.combatant.id)return msgs;let speaker=info.obfuscated?{user:game.user.id}:ChatMessage.getSpeaker({token:info.token?.document,actor:info.actor}),minPerm=getPermissionLevels().OBSERVER,defaultVisible=info.hidden?!1:getDefaultPermission>=minPerm,cardData={content:turnTemplate(info,{allowProtoMethodsByDefault:!0,allowProtoPropertiesByDefault:!0}),speaker,rollMode:defaultVisible?"publicroll":"gmroll",whisper:defaultVisible?[]:getUsers(info.actor,minPerm),flags:{[CFG.module]:{turnAnnounce:!0,token:info.token?.id,round:info.round,turn:info.turn,combat:info.combat.id,combatant:info.combatant.id,obfuscated:info.obfuscated}}};return ChatMessage.applyRollMode(cardData,info.hidden?"gmroll":"publicroll"),msgs.push(cardData),msgs}__name(generateCards,"generateCards");function generateRoundCyclingCard(combat){let speaker=ChatMessage.getSpeaker("GM"),override=game.settings.get(CFG.module,CFG.SETTING.roundLabel),data={combat};return override?data.message=override.replace("{round}",combat.round):data.message=game.i18n.format("Koboldworks.TurnAnnouncer.RoundCycling",{round:combat.round}),{content:roundTemplate(data,{allowProtoMethodsByDefault:!0,allowProtoPropertiesByDefault:!0}),speaker,rollMode:"publicroll",flags:{[CFG.module]:{roundCycling:!0,round:combat.round,combat:combat.id}}}}__name(generateRoundCyclingCard,"generateRoundCyclingCard");function announceRoundCycling(combat,context){if(!(combat.__turnAnnouncerLastRoundCycle>=combat.round)&&!(context._turnAnnouncer.roundShift<=0))return combat.__turnAnnouncerLastRoundCycle=combat.round,generateRoundCyclingCard(combat)}__name(announceRoundCycling,"announceRoundCycling");function announceTurn(combat,context){let combatant=getDocData(combat.combatant)?.defeated??!1?null:combat.combatant,tokenDoc=combatant?.token;if(!tokenDoc)return;let previous={combatant:lastCombatant.combatant,get defeated(){return getDocData(this.combatant)?.defeated},get token(){return this.combatant?.token},spoke:getDocData(lastCombatant.combatant)?.defeated?!1:lastCombatant.spoke};if(lastCombatant.combatant=combatant,lastCombatant.spoke=!1,!combat.started)return;let info={actor:combatant.actor,combatant,combat,last:previous,token:tokenDoc.object,tokenDoc,get round(){return this.combat?.round},get turn(){return this.combat?.turn},user:combatant.players[0]??game.user,get player(){return this.user?.name},name:null,label:null,get hidden(){return this.combatant?.hidden??!1},get visible(){return this.combatant?.visible??!1},obfuscated:!1};info.name=info.token?.name??combatant.name;let getTokenImage=__name(td=>game.release.generation>=10?td.texture.src:td.img,"getTokenImage");info.portrait=getTokenImage(tokenDoc)??getTokenImage(getProtoToken(info.actor));let obfuscateType=game.settings.get(CFG.module,CFG.SETTING.obfuscateNPCs),hasVisibleName=__name(()=>info.token?[30,50].includes(getDocData(tokenDoc).displayName):!0,"hasVisibleName"),obfuscate={get all(){return!1},get owned(){return!info.actor.hasPlayerOwner},get token(){return!hasVisibleName()},get any(){return!(info.actor?.hasPlayerOwner||hasVisibleName())}};info.obfuscated=obfuscate[obfuscateType]??!1,info.obfuscated&&(info.name=game.i18n.localize("Koboldworks.TurnAnnouncer.UnidentifiedTurn"));let label=`<span class='name'>${info.name}</span>`,override=game.settings.get(CFG.module,CFG.SETTING.turnLabel);return override?info.label=override.replace("{name}",label):info.label=game.i18n.format("Koboldworks.TurnAnnouncer.Turn",{name:label}),(!info.portrait||game.settings.get(CFG.module,CFG.SETTING.hidePortrait))&&(info.hidePortrait=!0),generateCards(info,context)}__name(announceTurn,"announceTurn");function processTurn(combat,_update,context,userId){if(game.user.id!==userId)return;let msgs=[];if(game.settings.get(CFG.module,CFG.SETTING.roundCycling)){let roundMsg=announceRoundCycling(combat,context);roundMsg&&msgs.push(roundMsg)}let turnMsgs=announceTurn(combat,context);turnMsgs?.length&&msgs.push(...turnMsgs),msgs.length&&ChatMessage.create(msgs)}__name(processTurn,"processTurn");Hooks.once("init",()=>{game.settings.register(CFG.module,CFG.SETTING.turnLabel,{name:"Koboldworks.TurnAnnouncer.TurnCardLabel",hint:"Koboldworks.TurnAnnouncer.TurnCardHint",type:String,config:!0,scope:"world",default:""}),game.settings.register(CFG.module,CFG.SETTING.roundLabel,{name:"Koboldworks.TurnAnnouncer.RoundCardLabel",hint:"Koboldworks.TurnAnnouncer.RoundCardHint",type:String,config:!0,scope:"world",default:""}),game.settings.register(CFG.module,CFG.SETTING.obfuscateNPCs,{name:"Koboldworks.TurnAnnouncer.ObfuscateNPCsLabel",hint:"Koboldworks.TurnAnnouncer.ObfuscateNPCsHint",type:String,config:!0,scope:"world",choices:{all:"Koboldworks.TurnAnnouncer.ObfuscateNPCsVisibility.All",owned:"Koboldworks.TurnAnnouncer.ObfuscateNPCsVisibility.Owned",token:"Koboldworks.TurnAnnouncer.ObfuscateNPCsVisibility.Token",any:"Koboldworks.TurnAnnouncer.ObfuscateNPCsVisibility.Any"},default:"all"}),game.settings.register(CFG.module,CFG.SETTING.roundCycling,{name:"Koboldworks.TurnAnnouncer.RoundCyclingLabel",hint:"Koboldworks.TurnAnnouncer.RoundCyclingHint",type:Boolean,config:!0,scope:"world",default:!0}),game.settings.register(CFG.module,CFG.SETTING.missedKey,{name:"Koboldworks.TurnAnnouncer.MissedTurnLabel",hint:"Koboldworks.TurnAnnouncer.MissedTurnHint",type:Boolean,config:!0,scope:"world",default:!1,onChange:value=>value?Hooks.on("renderChatMessage",chatMessageEvent):Hooks.off("renderChatMessage",chatMessageEvent)}),game.settings.register(CFG.module,CFG.SETTING.hidePortrait,{name:"Koboldworks.TurnAnnouncer.HidePortraitLabel",hint:"Koboldworks.TurnAnnouncer.HidePortraitHint",type:Boolean,config:!0,scope:"world",default:!1}),game.settings.register(CFG.module,CFG.SETTING.compact,{name:"Koboldworks.TurnAnnouncer.CompactLabel",hint:"Koboldworks.TurnAnnouncer.CompactHint",type:Boolean,config:!0,scope:"world",default:!0})});Hooks.on("preUpdateCombat",__name(function(combat,updateData,context){let roundDelta=updateData.round!==void 0?updateData.round-combat.round:0,turnCount=combat.turns.length,roundAdjust=roundDelta*turnCount,forward=roundDelta>=0,turnDelta=updateData.turn!==void 0?updateData.turn-combat.turn:0,turnDeltaWrapped=roundDelta==0?turnDelta:wrapNumber(roundAdjust+turnDelta,forward?0:-(turnCount-1),forward?turnCount-1:0);context._turnAnnouncer={turnShift:turnDeltaWrapped,roundShift:roundDelta,combat:combat.id}},"preUpdateCombat"));Hooks.on("updateCombat",processTurn);Hooks.on("renderChatMessage",chatMessageEvent);Hooks.once("ready",()=>{lastCombatant.combatant=game.combat?.combatant??null});Hooks.once("init",()=>{game.modules.get("quench")?.active&&Hooks.on("quenchReady",()=>Promise.resolve().then(()=>(init_quench(),quench_exports)))});
//# sourceMappingURL=turn-announcer.mjs.map
