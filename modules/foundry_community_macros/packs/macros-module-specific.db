{"name":"GM Secret Skill Check","type":"script","author":"wCsoNxA9I9elUaGF","img":"icons/svg/dice-target.svg","scope":"global","command":"// Makes an always-secret roll with a skill using the selected token, or the configured character if none are selected\n// Make a roll with a dialog to choose the skill\ngame.PF2EToolbox.secretSkillRoll()\n\n// Roll acrobatics\n// game.PF2EToolbox.secretSkillRoll('acr')\n\n// Roll perception\n// game.PF2EToolbox.secretSkillRoll('perception')\n\n// Show available skills for the selected token\n// game.PF2EToolbox.secretSkillRoll('give me the skills!')","folder":null,"sort":0,"permission":{"default":0,"y5gmtwxmW3A5ZuOP":3,"wCsoNxA9I9elUaGF":3},"flags":{"core":{"sourceId":"Macro.bQXO69vLFyR0P0H2"}},"_id":"LdTxiPkq4EiMTneI"}
{"name":"Hex","type":"script","author":"wCsoNxA9I9elUaGF","img":"icons/svg/dice-target.svg","scope":"global","command":"//Needs Midi-QoL and timesup modules\n//The cursing part of this macro doesn't work when the target is a token with a linked actor sheet (meaning, it should work agains 95% of NPCs, doesn't work for PvP)\n//A workaround is asking for your GM to click the spell/feature, since he has the permission to update any actor sheet\n//You need to create a new feature for the player to be used to change the Hex curse from one target to the next\n//This macro should be called by the OnUse on the Hex spell, the OnUse on this new feature and Bonus Damage Macros on the player\n//You need to use the Hex spell to \"start\" the curse and the new feature to change it to a new target, damage bonus is automatic\n// Hex onUse macro\nif (args[0].hitTargets.length === 0) return;\nif (args[0].tag === \"OnUse\") {\n    let targetUuid = args[0].targets[0].uuid;\n\tlet target = args[0].targets[0];\n\tlet tactor = target?.actor;\n    let actor = await MidiQOL.MQfromActorUuid(args[0].actorUuid); // actor who cast the spell\n    if (!actor || !targetUuid) {\n      console.error(\"Hex: no token/target selected\");\n      return;\n    }\n \n\tnew Dialog({\n\t\ttitle: 'Choose which ability the target will have disadvantage:',\n\t\tcontent: `\n\t\t  <form class=\"flexcol\">\n\t\t\t<div class=\"form-group\">\n\t\t\t  <select id=\"stat\">\n\t\t\t\t<option value=\"str\">Strength</option>\n\t\t\t\t<option value=\"dex\">Dexterity</option>\n\t\t\t\t<option value=\"con\">Constitution</option>\n\t\t\t\t<option value=\"int\">Intelligence</option>\n\t\t\t\t<option value=\"wis\">Wisdom</option>\n\t\t\t\t<option value=\"cha\">Charisma</option>\n\t\t\t  </select>\n\t\t\t</div>\n\t\t  </form>\n\t\t`,\n\t\tbuttons: {\n\t\t\tyes: {\n\t\t\t\ticon: '<i class=\"fas fa-bolt\"></i>',\n\t\t\t\tlabel: 'Select',\n\t\t\t\tcallback: async (html) => {\n\t\t\t\t\tlet stat = html.find('#stat').val();\n\t\t\t\t\t// Getting Hex effect from actor\n\t\t\t\t\tlet effect = actor.effects.find(i => i.data.label === \"Hex\" && i.data.changes[0].key === \"flags.midi-qol.Hexcurse\");\n\t\t\t\t\tif (effect == null){ //If Hex (from caster) is not active on caster\n\t\t\t\t\t\tif (args[0].item.type !== \"spell\") {\n\t\t\t\t\t\t\tui.notifications.warn(\"You don't have an active Hex to curse a new target.\");\n\t\t\t\t\t\t\treturn{};\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Define duration based on spell level\n\t\t\t\t\t\tlet seconds = (args[0].spellLevel >= 5) ? 86400 :\n\t\t\t\t\t\t\t\t\t   (args[0].spellLevel >= 3) ? 28800 : 3600;\n\t\t\t\t\t\t// Define effect on caster\n\t\t\t\t\t\tconst effectData = {\n\t\t\t\t\t\t  changes: [\n\t\t\t\t\t\t\t{key: \"flags.midi-qol.Hexcurse\", mode: 5, value: targetUuid, priority: 20}, // who is marked\n\t\t\t\t\t\t\t// {key: \"flags.dnd5e.DamageBonusMacro\", mode: 0, value: `ItemMacro.${args[0].item.name}`, priority: 20} // macro to apply the damage\n\t\t\t\t\t\t  ],\n\t\t\t\t\t\t  origin: args[0].itemUuid, //flag the effect as associated to the spell being cast\n\t\t\t\t\t\t  disabled: false,\n\t\t\t\t\t\t  duration: {startTime: game.time.worldTime, seconds: seconds},\n\t\t\t\t\t\t  icon: args[0].item.img,\n\t\t\t\t\t\t  label: args[0].item.name\n\t\t\t\t\t\t}\n\t\t\t\t\t\tawait actor.createEmbeddedDocuments(\"ActiveEffect\", [effectData]);\n\t\t\t\t\t\t// Define effect on target\n\t\t\t\t\t\tconst teffectData = {\n\t\t\t\t\t\t  changes: [{key: `flags.midi-qol.disadvantage.ability.check.${stat}`, mode: 5,value: true, priority: 50}],\n\t\t\t\t\t\t  origin: args[0].itemUuid, //flag the effect as associated to the spell being cast\n\t\t\t\t\t\t  disabled: false,\n\t\t\t\t\t\t  duration: {startTime: game.time.worldTime, seconds: seconds},\n\t\t\t\t\t\t  icon: args[0].item.img,\n\t\t\t\t\t\t  label: args[0].item.name\n\t\t\t\t\t\t}\n\t\t\t\t\t\tawait tactor.createEmbeddedDocuments(\"ActiveEffect\", [teffectData]);\n\t\t\t\t\t\t// Update concentration duration\n\t\t\t\t\t\tlet effectcon = actor.effects.find(i => i.data.label === \"Concentrating\");\n\t\t\t\t\t\tlet duration = effectcon.data.duration;\n\t\t\t\t\t\tduration.seconds = seconds;\n\t\t\t\t\t\tawait effectcon.update({duration});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Clear effect on last target if 0 HP or stop\n\t\t\t\t\t\tlet oldtarget;\n\t\t\t\t\t\ttry{\n\t\t\t\t\t\t\toldtarget = await fromUuid(effect.data.changes[0].value)\n\t\t\t\t\t\t} catch(err) {\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (oldtarget != null && oldtarget != undefined){\n\t\t\t\t\t\t\tif (oldtarget.actor.data.data.attributes.hp.value > 0) {\n\t\t\t\t\t\t\t\tui.notifications.warn(\"You can only curse a new creature after the current one drops to 0 HP.\");\n\t\t\t\t\t\t\t\treturn{};\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tlet toldeffect = oldtarget.actor.effects.find(i => i.data.label === \"Hex\" && i.data.origin.includes(actor.id));\n\t\t\t\t\t\t\t\ttoldeffect.delete();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Update link (copied from changelog on midiqol documentation, I didn't really understand what this is doing but it is working (as of testing)\n\t\t\t\t\t\tlet cd = getProperty(actor.data, \"flags.midi-qol.concentration-data\");\n\t\t\t\t\t\tlet targets = duplicate(cd.targets || [])\n\t\t\t\t\t\ttargets[targets.findIndex(i => i.tokenUuid === effect.data.changes[0].value)] = {tokenUuid: targetUuid, actorUuid: tactor.uuid}\n\t\t\t\t\t\ttargets.push({\"actorUuid\": args[0].actorUuid, \"tokenUuid\": args[0].tokenUuid});\n\t\t\t\t\t\tactor.setFlag(\"midi-qol\", \"concentration-data.targets\", targets);\n\t\t\t\t\t\t// Update targetUuid on actor effect\n\t\t\t\t\t\tlet changes = effect.data.changes;\n\t\t\t\t\t\tchanges[0] = {key: \"flags.midi-qol.Hexcurse\", mode: 5, value: targetUuid, priority: 20} //who is marked\n\t\t\t\t\t\tawait effect.update({changes});\n\t\t\t\t\t\t// Define effect on target\n\t\t\t\t\t\tconst teffectData = {\n\t\t\t\t\t\t  changes: [{key: `flags.midi-qol.disadvantage.ability.check.${stat}`, mode: 5,value: true, priority: 50}],\n\t\t\t\t\t\t  origin: effect.data.origin, //flag the effect as associated to the original spell that was cast\n\t\t\t\t\t\t  disabled: false,\n\t\t\t\t\t\t  duration: {startTime: game.time.worldTime, seconds: effect.data.duration.seconds - (game.time.worldTime - effect.data.duration.startTime) },\n\t\t\t\t\t\t  icon: effect.data.icon,\n\t\t\t\t\t\t  label: effect.data.label\n\t\t\t\t\t\t}\n\t\t\t\t\t\tawait tactor.createEmbeddedDocuments(\"ActiveEffect\", [teffectData]);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t}\n\t}).render(true);\n} else if (args[0].tag === \"DamageBonus\") {\n    // only attacks\n    if (![\"mwak\",\"rwak\",\"msak\",\"rsak\"].includes(args[0].item.data.actionType)) return {};\n    let targetUuid = args[0].hitTargets[0].uuid;\n    // only on the marked target\n    if (targetUuid !== getProperty(args[0].actor.flags, \"midi-qol.Hexcurse\")) return {};\n    //let damageType = args[0].item.data.damage.parts[0][1];\n    const diceMult = args[0].isCritical ? 2: 1;\n    return {damageRoll: `${diceMult}d6[Necrotic]`, flavor: \"Hex Damage\"}\n}","folder":null,"sort":0,"permission":{"default":0,"wCsoNxA9I9elUaGF":3},"flags":{"core":{"sourceId":"Macro.CqvhNwcmatk8AoTX"}},"_id":"NlQFDKeyqCjgT6gu"}
{"name":"Pearl of Power","type":"script","author":"wCsoNxA9I9elUaGF","img":"icons/svg/dice-target.svg","scope":"global","command":"// Macro made on Foundry 0.8.9, Dnd5e System 1.5.6\n// This macro needs modules Midi-QOL 0.8.96, DAE 0.8.75 and Dnd5e-helpers 3.0.4\n// Create a macro called <Pearl of Power> (without <>)\n// Pearl of Power has to call this macro on midiqol option \"On Use Macros\", after Active Effects\nif (args[0] == \"on\"){\n\treturn{};\n} else if (args[0] == \"off\"){\n\t// Execute when effect is lost\n\tlet actor = await MidiQOL.MQfromActorUuid(args[2].actorUuid); // actor who lost the effect\n\t// Deleting the extra spell slot of 3rd level\n\tlet actor_data = duplicate(actor.data._source);\n\tactor_data.data.spells.spell3.override = null;\n\tactor_data.data.spells.spell3.value = 0;\n\tactor.update(actor_data);\n\t// Deleting the Hook on update actor\n\tHooks.off(`updateActor`, args[1]);\n} else {\n\t// Execute when using the Pearl of Power\n\tlet ator = args[0].actor;\n\tlet act = game.actors.get(args[0].actor._id);\n\tlet item = args[0].item;\n\tlet spellx;\n\t// Check pact magic and spell levels that have used slots\n\tfor (let i = 0; i < 10; i++)\n\t{\n\t\tlet spells = (i==0) ? ator.data.spells[\"pact\"] : ator.data.spells[\"spell\" + i];\n\t\tif (spells.max > 0 && spells.value < spells.max)\n\t\t{\n\t\t\tif (i == 0)\n\t\t\t{\n\t\t\t\tspellx = `<option value=\"0\">Pact slot</option>`;\n\t\t\t} else if (i == 1)\n\t\t\t{\n\t\t\t\tspellx = `<option value=\"1\">1st Level</option>`;\n\t\t\t} else if (i == 2)\n\t\t\t{\n\t\t\t\tspellx = spellx + `<option value=\"2\">2nd Level</option>`;\n\t\t\t} else if (i == 3)\n\t\t\t{\n\t\t\t\tspellx = spellx + `<option value=\"3\">3rd Level</option>`;\n\t\t\t} else \n\t\t\t{\n\t\t\t\tspellx = spellx + `<option value=\"` + i + `\">` + i + `th Level</option>`;\n\t\t\t}\n\t\t};\n\t\tif (!spellx){\n\t\t\tui.notifications.warn(\"You don't have spent spell slots.\");\n\t\t\treturn{};\n\t\t}\n\t};\n\tlet d = new Dialog({\n\t\ttitle: 'Pearl of Power: Usage Configuration',\n\t\tcontent: `\n\t  <form style=\"font-size:13px\" class=\"dnd5e\" id=\"ability-use-form\">\n\t\t<p>Which spell slot to recover with Pearl of Power.</p>\n\t\t<p class=\"notes\"></p>\n\t\t<div class=\"form-group\">\n\t\t  <label>Spell Slot Level</label>\n\t\t\t<select id=\"spellSlots\" name=\"level\">`+ spellx + `\n\t\t\t</select>\n\t\t</div>\n\t</form>\n\t  `,\n\t\tbuttons: {\n\t\t\tyes: {\n\t\t\t\ticon: '<i class=\"fas fa-dice-d20\"></i>',\n\t\t\t\tlabel: 'Use Feature',\n\t\t\t\tcallback: async (html) =>\n\t\t\t\t{\n\t\t\t\t\tlet level = html.find('[name=\"level\"]').val();\n\t\t\t\t\tlet actor_data = duplicate(act.data._source);\n\t\t\t\t\tlet sourcespells = actor_data.data.spells;\n\t\t\t\t\tlet spells = ator.data.spells;\n\t\t\t\t\t//Pact spell slot\n\t\t\t\t\tif (level == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Pact spell slot of 4th level or greater\n\t\t\t\t\t\tif (spells.pact.level > 3)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// If actor already has 3rd level spells (not pact), just add one slot\n\t\t\t\t\t\t\tif (spells.spell3.max > 0){\n\t\t\t\t\t\t\t\tsourcespells.spell3.value += 1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsourcespells.spell3.value += 1;\n\t\t\t\t\t\t\t\tsourcespells.spell3.override = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Pact spell of 3rd level of lesser, just add one slot\n\t\t\t\t\t\t\tsourcespells.pact.value += 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t// If regular spell slot\n\t\t\t\t\t} else if (level < 3)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Of 1st or 2nd level, just add a slot of the corresponding level\n\t\t\t\t\t\tsourcespells[`spell${level}`].value += 1;\n\t\t\t\t\t} else\n\t\t\t\t\t{\n\t\t\t\t\t\t// If 3rd level or greater than add a 3rd level slot\n\t\t\t\t\t\tsourcespells[`spell3`].value += 1;\n\t\t\t\t\t}\n\t\t\t\t\tawait act.update(actor_data);\n\t\t\t\t\t// If we had to override a spell slot of 3rd level (meaning pact spell of 4th or 5th level and no regular 3rd level spell slot)\n\t\t\t\t\tif (sourcespells.spell3.override = 1){\n\t\t\t\t\t\t// Create a hook when actor is updated checking for the actor, all 3rd level slots spent, an override on 3rd level spells and for the Pearl of Power effect, then delete the effect\n\t\t\t\t\t\tconst myhook = Hooks.on(`updateActor`, (actorroll, data, options, usedID) => {\n\t\t\t\t\t\t\tif(actorroll.data._id == `${act.data._id}` && actorroll.data._source.data.spells.spell3.value == 0 && actorroll.data._source.data.spells.spell3.override == 1){\n\t\t\t\t\t\t\t\tlet efeito = actorroll.effects.find(i => i.data.label === \"Pearl of Power\");\n\t\t\t\t\t\t\t\tif (efeito){\n\t\t\t\t\t\t\t\t\tefeito.delete();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\t// Define effect on user of Pearl of Power, storing the Hook index to later delete it\n\t\t\t\t\t\tconst effectData = {\n\t\t\t\t\t\t  changes: [{key: \"macro.execute\", mode: 1, value: `\"Pearl of Power\" ${myhook}`, priority: 0}],\n\t\t\t\t\t\t  origin: args[0].itemUuid,\n\t\t\t\t\t\t  disabled: false,\n\t\t\t\t\t\t  duration: {startTime: game.time.worldTime},\n\t\t\t\t\t\t  icon: args[0].item.img,\n\t\t\t\t\t\t  label: args[0].item.name,\n\t\t\t\t\t\t  flags: {\"dnd5e-helpers\" : {\"rest-effect\" : \"Short Rest\"}}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tawait act.createEmbeddedDocuments(\"ActiveEffect\", [effectData]);\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\tdefault: 'yes',\n\t\tclose: () =>\n\t\t{\n\t\t}\n\t}).render(true);\n};","folder":null,"sort":0,"permission":{"default":0,"wCsoNxA9I9elUaGF":3},"flags":{"core":{"sourceId":"Macro.BZFI2A5mS0KH9xXE"}},"_id":"bTjzKYZIPnYkRHcb"}
