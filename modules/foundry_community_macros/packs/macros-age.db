{"name":"First Aid","permission":{"default":0,"y5gmtwxmW3A5ZuOP":3},"type":"script","flags":{"core":{"sourceId":"Macro.SpRKDGoFFi288Fhj"}},"scope":"global","command":"/* This macro is specific to the AGE System (unoffical) game system.\n *\n * In AGE system games such as Modern AGE, The Expanse, etc., when a\n * character is reduced to 0 health they're not yet dead - it's more\n * like they've run out of luck. At that point any further damage\n * applied may be \"bought off\" by taking the injured condition if\n * they've not yet taken that condition, or the wounded condition\n * if they have already taken the injured condition. When taking\n * either injured or wounded, the character accounts for 1d6 points\n * of damage. Once wounded, any further damage will result in taking\n * the dying condition, at which point they will being to lose CON\n * points (1/round on their turn) until they reach -3, or until\n * someone successfully administers First Aid to stabalize them.\n * \n * Use this macro if a character successfully applies First Aid\n * to a dying character to stabalize them and remove the dying\n * condition.\n * \n * This macro requires that the game system be \"age-system\" so that\n * the actor will have the appropriate structure.\n * \n * Author: schlosrat\n */\n\nif (game.system.id === 'age-system') {\n   // Responses based on the current conditions and situation\n   let flavor1 = \"Moaning: Uhhhhmmmmmnnnn\";\n   let flavor2 = \"Uhhhh, what happened?\";\n   let flavor3 = \"Did I miss anything?\";\n   let flavor4 = \"I'm feeling much better now!\";\n   let flavor5 = \"Knock it off! I don't need any more damn bandages!\";\n\n   // Get the speaker for the message\n   // const this_speaker = ChatMessage.getSpeaker();\n\n   let ageSystemActor = null;\n   if (speaker.token) ageSystemActor = game.actors.tokens[speaker.token];\n   if (!ageSystemActor ) ageSystemActor = game.actors.get(speaker.actor);\n   if (ageSystemActor ) {\n      let rollData = {};\n      rollData.injured = actor .data.data.conditions.injured;\n      rollData.wounded = actor .data.data.conditions.wounded;\n      rollData.unconscious = ageSystemActor .data.data.conditions.unconscious;\n      rollData.dying = ageSystemActor .data.data.conditions.dying;\n      rollData.consv = ageSystemActor .data.data.abilities.cons.value;\n\n      // Revise token chat if ancestry/origin === Belter\n      if (ageSystemActor.data.data.ancestry === 'Belter') {\n         flavor2 = \"Uhhhh, keting ta go ere?\";\n         flavor3 = \"ta du mi miss wating?\";\n         flavor4 = \"Mi du sensa xÃ©lixup mogut xitim!\";\n         flavor5 = \"Setop im! mi na du mowteng mo kaka felota xep!!\";\n      }\n\n      // If the dying condition is currently set\n      if (rollData.dying) {\n         ageSystemActor.update({\"data.conditions.dying\": false});\n         if (rollData.consv > -3) {\n            ageSystemActor.update({\"data.conditions.unconscious\": false});\n            ageSystemActor.update({\"data.conditions.helpless\": false});\n            ChatMessage.create({speaker: speaker, content: flavor2});\n         } else {\n            ChatMessage.create({speaker: speaker, content: flavor1});\n         }\n      } else if (rollData.unconscious) {\n         ChatMessage.create({speaker: speaker, content: flavor1});\n      } else {\n         ChatMessage.create({speaker: speaker, content: flavor5});\n      }\n   }\n}","author":"y5gmtwxmW3A5ZuOP","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"4OBMDhKaZfS5xME5"}
